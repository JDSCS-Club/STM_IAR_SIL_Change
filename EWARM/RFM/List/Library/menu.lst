###############################################################################
#
# IAR ANSI C/C++ Compiler V9.30.1.335/W64 for ARM         20/Sep/2022  23:37:24
# Copyright 1999-2022 IAR Systems AB.
#
#    Cpu mode                     =  thumb
#    Endian                       =  little
#    Source file                  =
#        C:\D\Git_Hub\STM_IAR_SIL_Change\Library\menu.c
#    Command line                 =
#        -f C:\D\Git_Hub\STM_IAR_SIL_Change\EWARM\RFM\Obj\Library\menu.o.rsp
#        (C:\D\Git_Hub\STM_IAR_SIL_Change\Library\menu.c -D USE_HAL_DRIVER -D
#        STM32F407xx -lC C:\D\Git_Hub\STM_IAR_SIL_Change\EWARM\RFM\List\Library
#        -o C:\D\Git_Hub\STM_IAR_SIL_Change\EWARM\RFM\Obj\Library --no_cse
#        --no_unroll --no_inline --no_code_motion --no_tbaa --no_clustering
#        --no_scheduling --debug --endian=little --cpu=Cortex-M4 -e
#        --fpu=VFPv4_sp --dlib_config "C:\Program Files\IAR Systems\Embedded
#        Workbench 9.1\arm\inc\c\DLib_Config_Full.h" -I
#        C:\D\Git_Hub\STM_IAR_SIL_Change\EWARM/../USB_DEVICE/App\ -I
#        C:\D\Git_Hub\STM_IAR_SIL_Change\EWARM/../USB_DEVICE/Target\ -I
#        C:\D\Git_Hub\STM_IAR_SIL_Change\EWARM/../Core/Inc\ -I
#        C:\D\Git_Hub\STM_IAR_SIL_Change\EWARM/../Drivers/STM32F4xx_HAL_Driver/Inc\
#        -I
#        C:\D\Git_Hub\STM_IAR_SIL_Change\EWARM/../Drivers/STM32F4xx_HAL_Driver/Inc/Legacy\
#        -I
#        C:\D\Git_Hub\STM_IAR_SIL_Change\EWARM/../Middlewares/ST/STM32_USB_Device_Library/Core/Inc\
#        -I
#        C:\D\Git_Hub\STM_IAR_SIL_Change\EWARM/../Middlewares/ST/STM32_USB_Device_Library/Class/CDC/Inc\
#        -I
#        C:\D\Git_Hub\STM_IAR_SIL_Change\EWARM/../Drivers/CMSIS/Device/ST/STM32F4xx/Include\
#        -I C:\D\Git_Hub\STM_IAR_SIL_Change\EWARM/../Drivers/CMSIS/Include\ -I
#        C:\D\Git_Hub\STM_IAR_SIL_Change\EWARM/../Drivers/radio\ -I
#        C:\D\Git_Hub\STM_IAR_SIL_Change\EWARM/../Drivers/radio/Si446x\ -I
#        C:\D\Git_Hub\STM_IAR_SIL_Change\EWARM/../Drivers/display\ -I
#        C:\D\Git_Hub\STM_IAR_SIL_Change\EWARM/../Library\ -I
#        C:\D\Git_Hub\STM_IAR_SIL_Change\EWARM\..\Drivers\display\fonts\ -I
#        C:\D\Git_Hub\STM_IAR_SIL_Change\EWARM\..\Drivers\STM32F4xx_HAL_Driver\Src\
#        -On --use_c++_inline -I "C:\Program Files\IAR Systems\Embedded
#        Workbench 9.1\arm\CMSIS\Core\Include\\") --dependencies=n
#        C:\D\Git_Hub\STM_IAR_SIL_Change\EWARM\RFM\Obj\Library\menu.o.d
#    Locale                       =  C
#    List file                    =
#        C:\D\Git_Hub\STM_IAR_SIL_Change\EWARM\RFM\List\Library\menu.lst
#    Object file                  =
#        C:\D\Git_Hub\STM_IAR_SIL_Change\EWARM\RFM\Obj\Library\menu.o
#    Runtime model:                  
#      __CPP_Runtime              =  1
#      __SystemLibrary            =  DLib
#      __dlib_file_descriptor     =  1
#      __dlib_full_locale_support =  1
#      __dlib_version             =  6
#      __iar_require _Printf      =  flags,widths
#
###############################################################################

C:\D\Git_Hub\STM_IAR_SIL_Change\Library\menu.c
      1          
      2          #include "main.h"

  # warning unrecognized compiler
    ^
"C:\D\Git_Hub\STM_IAR_SIL_Change\Drivers\radio\compiler_defs.h",744  Warning[Pa183]: 
          #warning directive: unrecognized compiler
      3          
      4          #include <stdio.h>
      5          #include <string.h>
      6          #include <math.h>
      7          #include <stdlib.h>
      8          #include <stdarg.h>
      9          #include <stdbool.h>
     10          
     11          #include "QBuf.h"
     12          
     13          #include "Adafruit_SSD1306.h"		//  LCD Display
     14          
     15          #include "RFMProtocol.h"			//  SendStat()

  typedef unsigned char       BYTE;
                              ^
"C:\D\Git_Hub\STM_IAR_SIL_Change\Library\typedef.h",73  Warning[Pe301]: typedef
          name has already been declared (with same type)

  typedef unsigned short      WORD;
                              ^
"C:\D\Git_Hub\STM_IAR_SIL_Change\Library\typedef.h",77  Warning[Pe301]: typedef
          name has already been declared (with same type)

  typedef unsigned char 		BIT;
                        		^
"C:\D\Git_Hub\STM_IAR_SIL_Change\Library\typedef.h",83  Warning[Pe301]: typedef
          name has already been declared (with same type)

  typedef unsigned char 		U8;
                        		^
"C:\D\Git_Hub\STM_IAR_SIL_Change\Library\typedef.h",84  Warning[Pe301]: typedef
          name has already been declared (with same type)

  typedef unsigned int 		U16;
                       		^
"C:\D\Git_Hub\STM_IAR_SIL_Change\Library\typedef.h",85  Warning[Pe301]: typedef
          name has already been declared (with same type)

  typedef unsigned long 		U32;
                        		^
"C:\D\Git_Hub\STM_IAR_SIL_Change\Library\typedef.h",86  Warning[Pe301]: typedef
          name has already been declared (with same type)

  typedef signed char 		S8;
                      		^
"C:\D\Git_Hub\STM_IAR_SIL_Change\Library\typedef.h",88  Warning[Pe301]: typedef
          name has already been declared (with same type)

  typedef signed int 			S16;
                     			^
"C:\D\Git_Hub\STM_IAR_SIL_Change\Library\typedef.h",89  Warning[Pe301]: typedef
          name has already been declared (with same type)

  typedef signed long 		S32;
                      		^
"C:\D\Git_Hub\STM_IAR_SIL_Change\Library\typedef.h",90  Warning[Pe301]: typedef
          name has already been declared (with same type)

  	};
  	 ^
"C:\D\Git_Hub\STM_IAR_SIL_Change\Library\RFMProtocol.h",304  Warning[Pe040]: 
          expected an identifier

  	};
  	 ^
"C:\D\Git_Hub\STM_IAR_SIL_Change\Library\RFMProtocol.h",322  Warning[Pe040]: 
          expected an identifier

  	};
  	 ^
"C:\D\Git_Hub\STM_IAR_SIL_Change\Library\RFMProtocol.h",468  Warning[Pe040]: 
          expected an identifier

  	};
  	 ^
"C:\D\Git_Hub\STM_IAR_SIL_Change\Library\RFMProtocol.h",506  Warning[Pe040]: 
          expected an identifier

  	};
  	 ^
"C:\D\Git_Hub\STM_IAR_SIL_Change\Library\RFMProtocol.h",511  Warning[Pe040]: 
          expected an identifier

  	};
  	 ^
"C:\D\Git_Hub\STM_IAR_SIL_Change\Library\RFMProtocol.h",533  Warning[Pe040]: 
          expected an identifier

  	};
  	 ^
"C:\D\Git_Hub\STM_IAR_SIL_Change\Library\RFMProtocol.h",559  Warning[Pe040]: 
          expected an identifier

  	};
  	 ^
"C:\D\Git_Hub\STM_IAR_SIL_Change\Library\RFMProtocol.h",567  Warning[Pe040]: 
          expected an identifier
     16          
     17          #include "audio.h"					//  g_bufAudioRFRx
     18          
     19          #include "adc.h"					//  Adc_Power()
     20          
     21          #include "version.h"				//  APP_VER
     22          
     23          #include "cli.h"
     24          
     25          #include "menu.h"
     26          
     27          #include "rfm.h"
     28          
     29          #include "radio.h"					//	pRadioConfiguration
     30          
     31          #include "ProcPkt.h"				//	g_flagRspID
     32          
     33          #include "cli.h"
     34          
     35          //========================================================================
     36          //	Menu LightCtrl
     37          

   \                                 In section .data, align 4
     38          char *_sLightCtrl[] = {
   \                     _sLightCtrl:
   \        0x0   0x....'....        DC32 ?_0, ?_1

   \              0x....'....
     39          	"1. 조명소등",		//  조명소등
     40          	"2. 조명점등"		//  조명점등
     41          };
     42          

   \                                 In section .data, align 4
     43          Menu_t	g_MenuLightCtrl = {
   \                     g_MenuLightCtrl:
   \        0x0   0x....'....        DC32 _sLightCtrl, 2, 0, ProcMenuLightCtrl

   \              0x0000'0002  

   \              0x0000'0000  

   \              0x....'....
     44          	_sLightCtrl,
     45          	sizeof(_sLightCtrl)/sizeof(char *),		//	Item Count
     46          	0,						// 	curr Idx
     47          	ProcMenuLightCtrl		//	Callback Function
     48          };
     49          
     50          //========================================================================
     51          //	Main Version Info
     52          
     53          #if defined(USE_RFT_MENU_DEV_VER)
     54          

   \                                 In section .data, align 4
     55          char _sVerList[16][20] = {
   \                     _sVerList:
   \        0x0   0x52 0x46          DC8 "RFM v1.1.0.370"

   \              0x4D 0x20    

   \              0x76 0x31    

   \              0x2E 0x31    

   \              0x2E 0x30    

   \              0x2E 0x33    

   \              0x37 0x30    

   \              0x00
   \        0xF                      DS8 5
   \       0x14   0x30 0x31          DC8 "01:    --- "

   \              0x3A 0x20    

   \              0x20 0x20    

   \              0x20 0x2D    

   \              0x2D 0x2D    

   \              0x20 0x00
   \       0x20                      DS8 8
   \       0x28   0x30 0x32          DC8 "02:    --- "

   \              0x3A 0x20    

   \              0x20 0x20    

   \              0x20 0x2D    

   \              0x2D 0x2D    

   \              0x20 0x00
   \       0x34                      DS8 8
   \       0x3C   0x30 0x33          DC8 "03:    --- "

   \              0x3A 0x20    

   \              0x20 0x20    

   \              0x20 0x2D    

   \              0x2D 0x2D    

   \              0x20 0x00
   \       0x48                      DS8 8
   \       0x50   0x30 0x34          DC8 "04:    --- "

   \              0x3A 0x20    

   \              0x20 0x20    

   \              0x20 0x2D    

   \              0x2D 0x2D    

   \              0x20 0x00
   \       0x5C                      DS8 8
   \       0x64   0x30 0x35          DC8 "05:    --- "

   \              0x3A 0x20    

   \              0x20 0x20    

   \              0x20 0x2D    

   \              0x2D 0x2D    

   \              0x20 0x00
   \       0x70                      DS8 8
   \       0x78   0x30 0x36          DC8 "06:    --- "

   \              0x3A 0x20    

   \              0x20 0x20    

   \              0x20 0x2D    

   \              0x2D 0x2D    

   \              0x20 0x00
   \       0x84                      DS8 8
   \       0x8C   0x30 0x37          DC8 "07:    --- "

   \              0x3A 0x20    

   \              0x20 0x20    

   \              0x20 0x2D    

   \              0x2D 0x2D    

   \              0x20 0x00
   \       0x98                      DS8 8
   \       0xA0   0x30 0x38          DC8 "08:    --- "

   \              0x3A 0x20    

   \              0x20 0x20    

   \              0x20 0x2D    

   \              0x2D 0x2D    

   \              0x20 0x00
   \       0xAC                      DS8 8
   \       0xB4   0x30 0x39          DC8 "09:    --- "

   \              0x3A 0x20    

   \              0x20 0x20    

   \              0x20 0x2D    

   \              0x2D 0x2D    

   \              0x20 0x00
   \       0xC0                      DS8 8
   \       0xC8   0x31 0x30          DC8 "10:    --- "

   \              0x3A 0x20    

   \              0x20 0x20    

   \              0x20 0x2D    

   \              0x2D 0x2D    

   \              0x20 0x00
   \       0xD4                      DS8 8
   \       0xDC   0x31 0x31          DC8 "11:    --- "

   \              0x3A 0x20    

   \              0x20 0x20    

   \              0x20 0x2D    

   \              0x2D 0x2D    

   \              0x20 0x00
   \       0xE8                      DS8 8
   \       0xF0   0x31 0x32          DC8 "12:    --- "

   \              0x3A 0x20    

   \              0x20 0x20    

   \              0x20 0x2D    

   \              0x2D 0x2D    

   \              0x20 0x00
   \       0xFC                      DS8 8
   \      0x104   0x31 0x33          DC8 "13:    --- "

   \              0x3A 0x20    

   \              0x20 0x20    

   \              0x20 0x2D    

   \              0x2D 0x2D    

   \              0x20 0x00
   \      0x110                      DS8 8
   \      0x118   0x31 0x34          DC8 "14:    --- "

   \              0x3A 0x20    

   \              0x20 0x20    

   \              0x20 0x2D    

   \              0x2D 0x2D    

   \              0x20 0x00
   \      0x124                      DS8 8
   \      0x12C   0x31 0x35          DC8 "15:    --- "

   \              0x3A 0x20    

   \              0x20 0x20    

   \              0x20 0x2D    

   \              0x2D 0x2D    

   \              0x20 0x00
   \      0x138                      DS8 8
     56          	"RFM v" APP_VER,		//  Self Device Version
     57          //	"01:v1.1.X.X",
     58          	"01:    --- ",	//	"01:v1.1.X.X",
     59          	"02:    --- ",	//
     60          	"03:    --- ",	//
     61          	"04:    --- ",	//
     62          	"05:    --- ",	//
     63          	"06:    --- ",	//
     64          	"07:    --- ",	//
     65          	"08:    --- ",	//
     66          	"09:    --- ",	//
     67          	"10:    --- ",	//
     68          	"11:    --- ",	//
     69          	"12:    --- ",	//
     70          	"13:    --- ",	//
     71          	"14:    --- ",	//
     72          	"15:    --- ",	//
     73          };
     74          

   \                                 In section .data, align 4
     75          char *_psVerList[] = {
   \                     _psVerList:
   \        0x0   0x....'....        DC32 _sVerList, _sVerList + 0x14, _sVerList + 0x28, _sVerList + 0x3c

   \              0x....'....  

   \              0x....'....  

   \              0x....'....
   \       0x10   0x....'....        DC32 _sVerList + 0x50, _sVerList + 0x64, _sVerList + 0x78

   \              0x....'....  

   \              0x....'....
   \       0x1C   0x....'....        DC32 _sVerList + 0x8c, _sVerList + 0xa0, _sVerList + 0xb4

   \              0x....'....  

   \              0x....'....
   \       0x28   0x....'....        DC32 _sVerList + 0xc8, _sVerList + 0xdc, _sVerList + 0xf0

   \              0x....'....  

   \              0x....'....
   \       0x34   0x....'....        DC32 _sVerList + 0x104, _sVerList + 0x118, _sVerList + 0x12c

   \              0x....'....  

   \              0x....'....
     76          	_sVerList[0],	_sVerList[1],	_sVerList[2],	_sVerList[3],
     77          	_sVerList[4],	_sVerList[5],	_sVerList[6],	_sVerList[7],
     78          	_sVerList[8],	_sVerList[9],	_sVerList[10],	_sVerList[11],
     79          	_sVerList[12],	_sVerList[13],	_sVerList[14],	_sVerList[15],
     80          };
     81          
     82          

   \                                 In section .data, align 4
     83          Menu_t	g_MenuVerList = {
   \                     g_MenuVerList:
   \        0x0   0x....'....        DC32 _psVerList, 16, 0, ProcMenuVer

   \              0x0000'0010  

   \              0x0000'0000  

   \              0x....'....
     84          	_psVerList,
     85          	sizeof(_psVerList)/sizeof(char *),		//	Item Count
     86          	0,						// 	curr Idx
     87          	ProcMenuVer				//	Callback Function
     88          };
     89          
     90          #endif	//	defined(USE_RFT_MENU_DEV_VER)
     91          //========================================================================
     92          
     93          //========================================================================
     94          //	Menu TrainSet	-	편성설정메뉴 ( 100 ~ 119 )
     95          

   \                                 In section .data, align 4
     96          char *_sTrainSet[] = {
   \                     _sTrainSet:
   \        0x0   0x....'....        DC32 ?_2, ?_3, ?_4, ?_5, ?_6, ?_7, ?_8, ?_9, ?_10, ?_11, ?_12, ?_13

   \              0x....'....  

   \              0x....'....  

   \              0x....'....  

   \              0x....'....  

   \              0x....'....  

   \              0x....'....  

   \              0x....'....  

   \              0x....'....  

   \              0x....'....  

   \              0x....'....  

   \              0x....'....
   \       0x30   0x....'....        DC32 ?_14, ?_15, ?_16

   \              0x....'....  

   \              0x....'....
     97          	" 401 편성",
     98          	" 402 편성",
     99          	" 403 편성",
    100          	" 404 편성",
    101          	" 405 편성",
    102          	" 406 편성",
    103          	" 407 편성",
    104          	" 408 편성",
    105          	" 409 편성",
    106          	" 410 편성",
    107          	" 411 편성",
    108          	" 412 편성",
    109          	" 413 편성",
    110          	" 414 편성",
    111          	" 415 편성",
    112          	//" 300 편성",
    113          	//" 300 편성",
    114          	//" 300 편성",
    115          	//" 300 편성",
    116          	//" 300 편성",
    117          };
    118          

   \                                 In section .data, align 4
    119          Menu_t	g_MenuTrainSet = {
   \                     g_MenuTrainSet:
   \        0x0   0x....'....        DC32 _sTrainSet, 15, 0, ProcMenuTrainSet

   \              0x0000'000F  

   \              0x0000'0000  

   \              0x....'....
    120          	_sTrainSet,
    121          	sizeof(_sTrainSet)/sizeof(char *),		//	Item Count
    122          	0,						// 	curr Idx
    123          	ProcMenuTrainSet		//	Callback Function
    124          };
    125          
    126          //========================================================================
    127          //	Menu RFTID
    128          
    129          #if defined(USE_RFT_MENU_RFTID)

   \                                 In section .data, align 4
    130          char *_sRFTIDList[] = {
   \                     _sRFTIDList:
   \        0x0   0x....'....        DC32 ?_17, ?_18

   \              0x....'....
    131          	" 송신기#1",		//  11
    132          	" 송신기#2",		//  12
    133          };
    134          

   \                                 In section .data, align 4
    135          Menu_t	g_MenuRFTIDList = {
   \                     g_MenuRFTIDList:
   \        0x0   0x....'....        DC32 _sRFTIDList, 2, 0, ProcMenuRFTID

   \              0x0000'0002  

   \              0x0000'0000  

   \              0x....'....
    136          	_sRFTIDList,
    137          	sizeof(_sRFTIDList)/sizeof(char *),		//	Item Count
    138          	0,						// 	curr Idx
    139          	ProcMenuRFTID			//	Callback Function
    140          };
    141          #endif	//	defined(USE_RFT_MENU_RFTID)
    142          
    143          //========================================================================
    144          //	Menu SelfTest - 자가진단
    145          
    146          #if defined(USE_RFT_MENU_SELFTEST)
    147          

   \                                 In section .data, align 4
    148          char _sSelfTestList[15][20] = {
   \                     _sSelfTestList:
   \        0x0   0x30 0x31          DC8 "01 \355\230\270\354\260\250 : --"

   \              0x20 0xED    

   \              0x98 0xB8    

   \              0xEC 0xB0    

   \              0xA8 0x20    

   \              0x3A 0x20    

   \              0x2D 0x2D    

   \              0x00
   \        0xF                      DS8 5
   \       0x14   0x30 0x32          DC8 "02 \355\230\270\354\260\250 : --"

   \              0x20 0xED    

   \              0x98 0xB8    

   \              0xEC 0xB0    

   \              0xA8 0x20    

   \              0x3A 0x20    

   \              0x2D 0x2D    

   \              0x00
   \       0x23                      DS8 5
   \       0x28   0x30 0x33          DC8 "03 \355\230\270\354\260\250 : --"

   \              0x20 0xED    

   \              0x98 0xB8    

   \              0xEC 0xB0    

   \              0xA8 0x20    

   \              0x3A 0x20    

   \              0x2D 0x2D    

   \              0x00
   \       0x37                      DS8 5
   \       0x3C   0x30 0x34          DC8 "04 \355\230\270\354\260\250 : --"

   \              0x20 0xED    

   \              0x98 0xB8    

   \              0xEC 0xB0    

   \              0xA8 0x20    

   \              0x3A 0x20    

   \              0x2D 0x2D    

   \              0x00
   \       0x4B                      DS8 5
   \       0x50   0x30 0x35          DC8 "05 \355\230\270\354\260\250 : --"

   \              0x20 0xED    

   \              0x98 0xB8    

   \              0xEC 0xB0    

   \              0xA8 0x20    

   \              0x3A 0x20    

   \              0x2D 0x2D    

   \              0x00
   \       0x5F                      DS8 5
   \       0x64   0x30 0x36          DC8 "06 \355\230\270\354\260\250 : --"

   \              0x20 0xED    

   \              0x98 0xB8    

   \              0xEC 0xB0    

   \              0xA8 0x20    

   \              0x3A 0x20    

   \              0x2D 0x2D    

   \              0x00
   \       0x73                      DS8 5
   \       0x78   0x30 0x37          DC8 "07 \355\230\270\354\260\250 : --"

   \              0x20 0xED    

   \              0x98 0xB8    

   \              0xEC 0xB0    

   \              0xA8 0x20    

   \              0x3A 0x20    

   \              0x2D 0x2D    

   \              0x00
   \       0x87                      DS8 5
   \       0x8C   0x30 0x38          DC8 "08 \355\230\270\354\260\250 : --"

   \              0x20 0xED    

   \              0x98 0xB8    

   \              0xEC 0xB0    

   \              0xA8 0x20    

   \              0x3A 0x20    

   \              0x2D 0x2D    

   \              0x00
   \       0x9B                      DS8 5
   \       0xA0   0x30 0x39          DC8 "09 \355\230\270\354\260\250 : --"

   \              0x20 0xED    

   \              0x98 0xB8    

   \              0xEC 0xB0    

   \              0xA8 0x20    

   \              0x3A 0x20    

   \              0x2D 0x2D    

   \              0x00
   \       0xAF                      DS8 5
   \       0xB4   0x31 0x30          DC8 "10 \355\230\270\354\260\250 : --"

   \              0x20 0xED    

   \              0x98 0xB8    

   \              0xEC 0xB0    

   \              0xA8 0x20    

   \              0x3A 0x20    

   \              0x2D 0x2D    

   \              0x00
   \       0xC3                      DS8 5
   \       0xC8                      DS8 100
    149          		"01 호차 : --",	//
    150          		"02 호차 : --",	//
    151          		"03 호차 : --",	//
    152          		"04 호차 : --",	//
    153          		"05 호차 : --",	//
    154          		"06 호차 : --",	//
    155          		"07 호차 : --",
    156          		"08 호차 : --",
    157          		"09 호차 : --",
    158          		"10 호차 : --",
    159          };
    160          

   \                                 In section .data, align 4
    161          char *_sSelfTestList_OK[] = {
   \                     _sSelfTestList_OK:
   \        0x0   0x....'....        DC32 _sSelfTestList, _sSelfTestList + 0x14, _sSelfTestList + 0x28

   \              0x....'....  

   \              0x....'....
   \        0xC   0x....'....        DC32 _sSelfTestList + 0x3c, _sSelfTestList + 0x50

   \              0x....'....
   \       0x14   0x....'....        DC32 _sSelfTestList + 0x64, _sSelfTestList + 0x78

   \              0x....'....
   \       0x1C   0x....'....        DC32 _sSelfTestList + 0x8c, _sSelfTestList + 0xa0

   \              0x....'....
   \       0x24   0x....'....        DC32 _sSelfTestList + 0xb4
    162          	_sSelfTestList[0],
    163          	_sSelfTestList[1],
    164          	_sSelfTestList[2],
    165          	_sSelfTestList[3],
    166          	_sSelfTestList[4],
    167          	_sSelfTestList[5],
    168          	_sSelfTestList[6],
    169          	_sSelfTestList[7],
    170          	_sSelfTestList[8],
    171          	_sSelfTestList[9],
    172          
    173          };
    174          
    175          

   \                                 In section .data, align 4
    176          Menu_t	g_MenuSelfTestList_OK = {
   \                     g_MenuSelfTestList_OK:
   \        0x0   0x....'....        DC32 _sSelfTestList_OK, 10, 0, ProcMenuSelfTest

   \              0x0000'000A  

   \              0x0000'0000  

   \              0x....'....
    177          	_sSelfTestList_OK,
    178          	sizeof(_sSelfTestList_OK)/sizeof(char *),		//	Item Count
    179          	0,						// 	curr Idx
    180          	ProcMenuSelfTest		//	Callback Function
    181          };
    182          
    183          
    184          #endif	//	defined(USE_RFT_MENU_SELFTEST)
    185          
    186          //========================================================================
    187          //	Menu Diag - 진단
    188          
    189          #if defined(USE_RFT_MENU_DIAG)

   \                                 In section .data, align 4
    190          char *_sDiagList[] = {
   \                     _sDiagList:
   \        0x0   0x....'....        DC32 ?_19, ?_20, ?_21

   \              0x....'....  

   \              0x....'....
    191          	" AudioLoop:Off",	//  Loopback Off
    192          	" AudioLoop:On",	//  Loopback On
    193          	" AudioSine:On",	//  Sine Wave On
    194          };
    195          

   \                                 In section .data, align 4
    196          Menu_t	g_MenuDiagList = {
   \                     g_MenuDiagList:
   \        0x0   0x....'....        DC32 _sDiagList, 3, 0, ProcMenuDiag

   \              0x0000'0003  

   \              0x0000'0000  

   \              0x....'....
    197          	_sDiagList,
    198          	sizeof(_sDiagList)/sizeof(char *),		//	Item Count
    199          	0,						// 	curr Idx
    200          	ProcMenuDiag		//	Callback Function
    201          };
    202          #endif	//	defined(USE_RFT_MENU_DIAG)
    203          
    204          //========================================================================
    205          //	Menu Setting
    206          
    207          #if defined(USE_RFT_MENU_SETTING)

   \                                 In section .data, align 4
    208          char *_sSettingList[] = {
   \                     _sSettingList:
   \        0x0   0x....'....        DC32 ?_22, ?_23, ?_24, ?_25

   \              0x....'....  

   \              0x....'....  

   \              0x....'....
    209          	" Mic Vol",		//	Mic Volume
    210          	" Spk Vol",		//	Spk Volume
    211          	" RF Tx Pwr",	//	RF Tx Power
    212          	" RF Mode",		//	RF Mode
    213          };
    214          

   \                                 In section .data, align 4
    215          Menu_t	g_MenuSettingList = {
   \                     g_MenuSettingList:
   \        0x0   0x....'....        DC32 _sSettingList, 4, 0, ProcMenuSetting

   \              0x0000'0004  

   \              0x0000'0000  

   \              0x....'....
    216          	_sSettingList,
    217          	sizeof(_sSettingList)/sizeof(char *),		//	Item Count
    218          	0,						// 	curr Idx
    219          	ProcMenuSetting		//	Callback Function
    220          };
    221          

   \                                 In section .data, align 4
    222          char *_sSetMicList[] = { " Mic : 0",
   \                     _sSetMicList:
   \        0x0   0x....'....        DC32 ?_26, ?_27, ?_28, ?_29, ?_30, ?_31, ?_32, ?_33, ?_34, ?_35

   \              0x....'....  

   \              0x....'....  

   \              0x....'....  

   \              0x....'....  

   \              0x....'....  

   \              0x....'....  

   \              0x....'....  

   \              0x....'....  

   \              0x....'....
    223          						" Mic : 1",
    224          						" Mic : 2",
    225          						" Mic : 3",
    226          						" Mic : 4",
    227          						" Mic : 5",
    228          						" Mic : 6",
    229          						" Mic : 7",
    230          						" Mic : 8",
    231          						" Mic : 9",
    232          						};
    233          

   \                                 In section .data, align 4
    234          Menu_t	g_MenuSetMicList = {
   \                     g_MenuSetMicList:
   \        0x0   0x....'....        DC32 _sSetMicList, 10, 0, ProcMenuSetMic

   \              0x0000'000A  

   \              0x0000'0000  

   \              0x....'....
    235          	_sSetMicList,
    236          	sizeof(_sSetMicList)/sizeof(char *),		//	Item Count
    237          	0,						// 	curr Idx
    238          	ProcMenuSetMic			//	Callback Function
    239          };
    240          

   \                                 In section .data, align 4
    241          char *_sSetSpkList[] = { " Spk : 0",
   \                     _sSetSpkList:
   \        0x0   0x....'....        DC32 ?_36, ?_37, ?_38, ?_39

   \              0x....'....  

   \              0x....'....  

   \              0x....'....
    242          						" Spk : 1",
    243          						" Spk : 2",
    244          						" Spk : 3",
    245          						};
    246          

   \                                 In section .data, align 4
    247          Menu_t	g_MenuSetSpkList = {
   \                     g_MenuSetSpkList:
   \        0x0   0x....'....        DC32 _sSetSpkList, 4, 0, ProcMenuSetSpk

   \              0x0000'0004  

   \              0x0000'0000  

   \              0x....'....
    248          	_sSetSpkList,
    249          	sizeof(_sSetSpkList)/sizeof(char *),		//	Item Count
    250          	0,						// 	curr Idx
    251          	ProcMenuSetSpk			//	Callback Function
    252          };
    253          
    254          //	[0(-38dBm)~7(0dBm)~12(5dBm)~22(10dBm)~40(15dBm)~127(20dBm)]",

   \                                 In section .data, align 4
    255          char *_sSetTxPwrList[] = { 	" Pwr : -38 dBm",	//	0
   \                     _sSetTxPwrList:
   \        0x0   0x....'....        DC32 ?_40, ?_41, ?_42, ?_43, ?_44, ?_45, ?_46, ?_47

   \              0x....'....  

   \              0x....'....  

   \              0x....'....  

   \              0x....'....  

   \              0x....'....  

   \              0x....'....  

   \              0x....'....
    256          							" Pwr : -20 dBm",	//	1
    257          							" Pwr : -5 dBm",	//	4
    258          							" Pwr : 0 dBm",		//	7
    259          							" Pwr : 5 dBm",		//	12
    260          							" Pwr : 10 dBm",	//	22
    261          							" Pwr : 15 dBm",	//	40
    262          							" Pwr : 20 dBm",	//	127
    263          						};
    264          

   \                                 In section .data, align 4
    265          Menu_t	g_MenuSetTxPwrList = {
   \                     g_MenuSetTxPwrList:
   \        0x0   0x....'....        DC32 _sSetTxPwrList, 8, 0, ProcMenuSetTxPwr

   \              0x0000'0008  

   \              0x0000'0000  

   \              0x....'....
    266          	_sSetTxPwrList,
    267          	sizeof(_sSetTxPwrList)/sizeof(char *),		//	Item Count
    268          	0,							// 	curr Idx
    269          	ProcMenuSetTxPwr			//	Callback Function
    270          };
    271          
    272          
    273          //	[RFMode : 1(1채널중계) / 2(2채널그룹)]",

   \                                 In section .data, align 4
    274          char *_sSetRFMode[] = { 	" RFMode 1",	//	1
   \                     _sSetRFMode:
   \        0x0   0x....'....        DC32 ?_48, ?_49

   \              0x....'....
    275          							" RFMode 2",	//	2
    276          						};
    277          

   \                                 In section .data, align 4
    278          Menu_t	g_MenuSetRFModeList = {
   \                     g_MenuSetRFModeList:
   \        0x0   0x....'....        DC32 _sSetRFMode, 2, 0, ProcMenuSetRFMode

   \              0x0000'0002  

   \              0x0000'0000  

   \              0x....'....
    279          	_sSetRFMode,
    280          	sizeof(_sSetRFMode)/sizeof(char *),		//	Item Count
    281          	0,							// 	curr Idx
    282          	ProcMenuSetRFMode			//	Callback Function
    283          };
    284          
    285          #endif	//	defined(USE_RFT_MENU_SETTING)
    286          
    287          //========================================================================
    288          //	Menu Command
    289          
    290          #if defined(USE_RFT_MENU_CMD)

   \                                 In section .data, align 4
    291          char *_sCmdList[] = {
   \                     _sCmdList:
   \        0x0   0x....'....        DC32 ?_50, ?_51, ?_52, ?_53, ?_54, ?_55

   \              0x....'....  

   \              0x....'....  

   \              0x....'....  

   \              0x....'....  

   \              0x....'....
    292          	" Reset", //  Reset
    293          	//DEL	" DFU Mode",		//  DFU Mode
    294          	" TS Set",
    295          	" Car Set",
    296          	" RFMode Set",
    297          	" Upgrade ReTry", //  Upgrade Re-Try
    298          	" Upgrade",		  //  Upgrade
    299          };
    300          

   \                                 In section .data, align 4
    301          Menu_t	g_MenuCmdList = {
   \                     g_MenuCmdList:
   \        0x0   0x....'....        DC32 _sCmdList, 6, 0, ProcMenuCmd

   \              0x0000'0006  

   \              0x0000'0000  

   \              0x....'....
    302          	_sCmdList,
    303          	sizeof(_sCmdList)/sizeof(char *),		//	Item Count
    304          	0,						// 	curr Idx
    305          	ProcMenuCmd				//	Callback Function
    306          };
    307          #endif	//	defined(USE_RFT_MENU_CMD)
    308          
    309          //	호차 설정

   \                                 In section .data, align 4
    310          char *_sSetCmdCarList[] = {	" Car : 1",
   \                     _sSetCmdCarList:
   \        0x0   0x....'....        DC32 ?_56, ?_57, ?_58, ?_59, ?_60, ?_61, ?_62, ?_63, ?_64, ?_65

   \              0x....'....  

   \              0x....'....  

   \              0x....'....  

   \              0x....'....  

   \              0x....'....  

   \              0x....'....  

   \              0x....'....  

   \              0x....'....  

   \              0x....'....
    311          							" Car : 2",
    312          							" Car : 3",
    313          							" Car : 4",
    314          							" Car : 5",
    315          							" Car : 6",
    316          							" Car : 7",
    317          							" Car : 8",
    318          							" Car : 9",
    319          							" Car : 10",
    320          						};
    321          

   \                                 In section .data, align 4
    322          Menu_t	g_MenuSetCmdCarList = {
   \                     g_MenuSetCmdCarList:
   \        0x0   0x....'....        DC32 _sSetCmdCarList, 10, 0, ProcMenuSetCmdCar

   \              0x0000'000A  

   \              0x0000'0000  

   \              0x....'....
    323          	_sSetCmdCarList,
    324          	sizeof(_sSetCmdCarList)/sizeof(char *),		//	Item Count
    325          	0,						// 	curr Idx
    326          	ProcMenuSetCmdCar		//	Callback Function
    327          };
    328          
    329          //	편성 설정

   \                                 In section .data, align 4
    330          Menu_t	g_MenuSetCmdTSList = {
   \                     g_MenuSetCmdTSList:
   \        0x0   0x....'....        DC32 _sTrainSet, 15, 0, ProcMenuSetCmdTS

   \              0x0000'000F  

   \              0x0000'0000  

   \              0x....'....
    331          	_sTrainSet,								//	편성 : 100, 편성 : 101, ...
    332          	sizeof(_sTrainSet)/sizeof(char *),		//	Item Count
    333          	0,						// 	curr Idx
    334          	ProcMenuSetCmdTS		//	Callback Function
    335          };
    336          
    337          //	RFMode 설정

   \                                 In section .data, align 4
    338          char *_sSetCmdRFModeList[] = {	" RFMode 1",
   \                     _sSetCmdRFModeList:
   \        0x0   0x....'....        DC32 ?_48, ?_49

   \              0x....'....
    339          								" RFMode 2",
    340          								};
    341          

   \                                 In section .data, align 4
    342          Menu_t	g_MenuSetCmdRFModeList = {
   \                     g_MenuSetCmdRFModeList:
   \        0x0   0x....'....        DC32 _sSetCmdRFModeList, 2, 0, ProcMenuSetCmdRFMode

   \              0x0000'0002  

   \              0x0000'0000  

   \              0x....'....
    343          	_sSetCmdRFModeList,
    344          	sizeof(_sSetCmdRFModeList)/sizeof(char *),		//	Item Count
    345          	0,						// 	curr Idx
    346          	ProcMenuSetCmdRFMode		//	Callback Function
    347          };
    348          
    349          //========================================================================
    350          //	Main Menu
    351          
    352          enum eMenuIdx
    353          {
    354          	eMenuIdxCtlLight = 0,	//	조명제어
    355          	eMenuIdxSWVer,			//	S/W버전
    356          	eMenuIdxTrainSet,		//	편성설정
    357          #if defined(USE_RFT_MENU_RFTID)
    358          	eMenuIdxRFTID,			//	송신기 ID
    359          #endif
    360          #if defined(USE_RFT_MENU_SELFTEST)
    361          	eMenuIdxSelfTest,		//	자가 진단
    362          #endif
    363          #if defined(USE_RFT_MENU_DIAG)
    364          	eMenuIdxDiag,			//	진단
    365          #endif
    366          #if defined(USE_RFT_MENU_SETTING)
    367          	eMenuIdxSetting,		//	설정
    368          #endif
    369          #if defined(USE_RFT_MENU_STAT)
    370          	eMenuIdxStat,			//	상태정보
    371          #endif
    372          #if defined(USE_RFT_MENU_CMD)
    373          	eMenuIdxCmd,			//	명령전송
    374          #endif
    375          };
    376          
    377          //========================================================================

   \                                 In section .bss, align 4
    378          int	g_bEnMenuMaint	= 	0;	//	MainMenu Maintenace Menu활성화.
   \                     g_bEnMenuMaint:
   \        0x0                      DS8 4
    379          

   \                                 In section .text, align 2, keep-with-next
    380          int 	IsMenuMaint			( void )			//	MainMenu Maintenace Menu활성화.
    381          {
    382          	return g_bEnMenuMaint;
   \                     IsMenuMaint: (+1)
   \        0x0   0x.... 0x....      LDR.W    R0,??DataTable27
   \        0x4   0x6800             LDR      R0,[R0, #+0]
   \        0x6   0x4770             BX       LR
    383          }
    384          
    385          //========================================================================

   \                                 In section .text, align 2, keep-with-next
    386          void EnableMenuMaint( int bEnable )
    387          //========================================================================
    388          {
   \                     EnableMenuMaint: (+1)
   \        0x0   0xB510             PUSH     {R4,LR}
   \        0x2   0x0004             MOVS     R4,R0
    389          	g_bEnMenuMaint = bEnable;
   \        0x4   0x.... 0x....      LDR.W    R0,??DataTable27
   \        0x8   0x6004             STR      R4,[R0, #+0]
    390          
    391          	if ( bEnable )
   \        0xA   0x2C00             CMP      R4,#+0
   \        0xC   0xD005             BEQ.N    ??EnableMenuMaint_0
    392          	{
    393          		//	LCD [Menu Maint.]
    394          		LCDPrintfXY( 10, 13, "[Maint. Menu]" );
   \        0xE   0x.... 0x....      LDR.W    R2,??DataTable27_1
   \       0x12   0x210D             MOVS     R1,#+13
   \       0x14   0x200A             MOVS     R0,#+10
   \       0x16   0x.... 0x....      BL       LCDPrintfXY
    395          	}
    396          }
   \                     ??EnableMenuMaint_0: (+1)
   \       0x1A   0xBD10             POP      {R4,PC}
    397          
    398          //========================================================================
    399          //	Main Menu - Base 기본메뉴

   \                                 In section .data, align 4
    400          char *_sMainMenuBase[] = {
   \                     _sMainMenuBase:
   \        0x0   0x....'....        DC32 ?_66, ?_67

   \              0x....'....
    401          	"1. 조명제어",
    402          	"2. S/W 버전",
    403          };
    404          

   \                                 In section .data, align 4
    405          Menu_t	g_MenuMainBase = {
   \                     g_MenuMainBase:
   \        0x0   0x....'....        DC32 _sMainMenuBase, 2, 0, ProcMenuMain

   \              0x0000'0002  

   \              0x0000'0000  

   \              0x....'....
    406          	_sMainMenuBase,
    407          	sizeof(_sMainMenuBase)/sizeof(char *),		//	Item Count
    408          	0,					// 	curr Idx
    409          	ProcMenuMain		//	Callback Function
    410          };
    411          
    412          //========================================================================
    413          //	Main Menu -	Maintenance Menu 활성화.

   \                                 In section .data, align 4
    414          char *_sMainMenuMaint[] = {
   \                     _sMainMenuMaint:
   \        0x0   0x....'....        DC32 ?_66, ?_67, ?_68, ?_69, ?_70, ?_71, ?_72, ?_73, ?_74

   \              0x....'....  

   \              0x....'....  

   \              0x....'....  

   \              0x....'....  

   \              0x....'....  

   \              0x....'....  

   \              0x....'....  

   \              0x....'....
    415          	"1. 조명제어",
    416          	"2. S/W 버전",
    417          	"3. 편성설정",
    418          #if defined(USE_RFT_MENU_RFTID)
    419          	"4. 송신기ID",			//	송신기 ID
    420          #endif
    421          #if defined(USE_RFT_MENU_SELFTEST)
    422          	"5. 자가진단",
    423          #endif	//	defined(USE_RFT_MENU_SELFTEST)
    424          #if defined(USE_RFT_MENU_DIAG)
    425          	"6. 진    단",
    426          #endif	//	defined(USE_RFT_MENU_DIAG)
    427          #if defined(USE_RFT_MENU_SETTING)
    428          	"7. 설    정",
    429          #endif	//	defined(USE_RFT_MENU_SETTING)
    430          #if defined(USE_RFT_MENU_STAT)
    431          	"8. 상태정보",
    432          #endif	//	defined(USE_RFT_MENU_STAT)
    433          #if defined(USE_RFT_MENU_CMD)
    434          	"9. 명령전송",
    435          #endif	//	defined(USE_RFT_MENU_CMD)
    436          };
    437          

   \                                 In section .data, align 4
    438          Menu_t	g_MenuMainMaint = {
   \                     g_MenuMainMaint:
   \        0x0   0x....'....        DC32 _sMainMenuMaint, 9, 0, ProcMenuMain

   \              0x0000'0009  

   \              0x0000'0000  

   \              0x....'....
    439          	_sMainMenuMaint,
    440          	sizeof(_sMainMenuMaint)/sizeof(char *),		//	Item Count
    441          	0,					// 	curr Idx
    442          	ProcMenuMain		//	Callback Function
    443          };
    444          
    445          //========================================================================
    446          
    447          //========================================================================

   \                                 In section .bss, align 4
    448          Menu_t	*g_pActiveMenu	=	NULL;
   \                     g_pActiveMenu:
   \        0x0                      DS8 4
    449          //========================================================================
    450          

   \                                 In section .bss, align 4
    451          static int _bEnDispStat = 0;
   \                     _bEnDispStat:
   \        0x0                      DS8 4
    452          
    453          //========================================================================

   \                                 In section .text, align 2, keep-with-next
    454          void	SetActiveMenu( Menu_t *pActiveMenu )
    455          //========================================================================
    456          {
    457          	g_pActiveMenu = pActiveMenu;
   \                     SetActiveMenu: (+1)
   \        0x0   0x.... 0x....      LDR.W    R1,??DataTable27_2
   \        0x4   0x6008             STR      R0,[R1, #+0]
    458          }
   \        0x6   0x4770             BX       LR
    459          
    460          //========================================================================

   \                                 In section .text, align 2, keep-with-next
    461          Menu_t	*GetActiveMenu( void )
    462          //========================================================================
    463          {
    464          	return g_pActiveMenu;
   \                     GetActiveMenu: (+1)
   \        0x0   0x.... 0x....      LDR.W    R0,??DataTable27_2
   \        0x4   0x6800             LDR      R0,[R0, #+0]
   \        0x6   0x4770             BX       LR
    465          }
    466          
    467          //========================================================================

   \                                 In section .text, align 2, keep-with-next
    468          void	UpdateLCDMain( void )
    469          //========================================================================
    470          {
   \                     UpdateLCDMain: (+1)
   \        0x0   0xB580             PUSH     {R7,LR}
   \        0x2   0xB088             SUB      SP,SP,#+32
    471          
    472          
    473          	char sBuf[30];
    474          
    475          	sprintf( sBuf, "편성 : %d", 400 + g_idxTrainSet);
   \        0x4   0x.... 0x....      LDR.W    R0,??DataTable27_3
   \        0x8   0x6802             LDR      R2,[R0, #+0]
   \        0xA   0xF512 0x72C8      ADDS     R2,R2,#+400
   \        0xE   0x.... 0x....      LDR.W    R1,??DataTable27_4
   \       0x12   0x4668             MOV      R0,SP
   \       0x14   0x.... 0x....      BL       sprintf
    476          
    477          //	LCDPrintf( "편성 : 100" );
    478          	LCDPrintfXY( 20, 13, sBuf );
   \       0x18   0x466A             MOV      R2,SP
   \       0x1A   0x210D             MOVS     R1,#+13
   \       0x1C   0x2014             MOVS     R0,#+20
   \       0x1E   0x.... 0x....      BL       LCDPrintfXY
    479          }
   \       0x22   0xB009             ADD      SP,SP,#+36
   \       0x24   0xBD00             POP      {PC}
    480          
    481          //========================================================================

   \                                 In section .text, align 2, keep-with-next
    482          void	UpdateLCDMenu( void )
    483          //========================================================================
    484          {
   \                     UpdateLCDMenu: (+1)
   \        0x0   0xB570             PUSH     {R4-R6,LR}
    485          	if ( GetActiveMenu() == NULL )
   \        0x2   0x.... 0x....      BL       GetActiveMenu
   \        0x6   0x2800             CMP      R0,#+0
   \        0x8   0xD102             BNE.N    ??UpdateLCDMenu_0
    486          	{
    487          		UpdateLCDMain();
   \        0xA   0x.... 0x....      BL       UpdateLCDMain
    488          		return;
   \        0xE   0xE016             B.N      ??UpdateLCDMenu_1
    489          	}
    490          
    491          	char	**sMenu;
    492          	int		*pIdxMenu, *pCntMenu;
                 	   		            ^
Warning[Pe550]: variable "pCntMenu" was set but never used
    493          
    494          	sMenu		=	g_pActiveMenu->sItem;
   \                     ??UpdateLCDMenu_0: (+1)
   \       0x10   0x.... 0x....      LDR.W    R0,??DataTable27_2
   \       0x14   0x6801             LDR      R1,[R0, #+0]
   \       0x16   0x680C             LDR      R4,[R1, #+0]
    495          	pIdxMenu	=	&g_pActiveMenu->currIdx;
   \       0x18   0x6801             LDR      R1,[R0, #+0]
   \       0x1A   0xF111 0x0508      ADDS     R5,R1,#+8
    496          	pCntMenu	=	&g_pActiveMenu->cntItem;
   \       0x1E   0x6800             LDR      R0,[R0, #+0]
   \       0x20   0x1D06             ADDS     R6,R0,#+4
    497          
    498          
    499          
    500          	//  Main화면 Clear
    501          	LCDClearMain();
   \       0x22   0x.... 0x....      BL       LCDClearMain
    502          
    503          #if defined(USE_RFT_MENU_LOOP)
    504          
    505          	LCDMenuUpDown( 3 ); //  3. Up/Down
   \       0x26   0x2003             MOVS     R0,#+3
   \       0x28   0x.... 0x....      BL       LCDMenuUpDown
    506          
    507          #else
    508          
    509          	if ( 0 < *pIdxMenu && *pIdxMenu < *pCntMenu - 1 )	LCDMenuUpDown( 3 ); //  3. Up/Down
    510          	else if ( *pIdxMenu == 0 )							LCDMenuUpDown( 2 ); //  2. Down
    511          	else if ( *pIdxMenu == *pCntMenu - 1 )				LCDMenuUpDown( 1 ); //  1. Up
    512          	else												LCDMenuUpDown( 0 ); //  0. None
    513          
    514          #endif
    515          
    516          	LCDSetCursor( 20, 13 );
   \       0x2C   0x210D             MOVS     R1,#+13
   \       0x2E   0x2014             MOVS     R0,#+20
   \       0x30   0x.... 0x....      BL       LCDSetCursor
    517          	LCDPrintf( sMenu[*pIdxMenu] );
   \       0x34   0x6828             LDR      R0,[R5, #+0]
   \       0x36   0xF854 0x0020      LDR      R0,[R4, R0, LSL #+2]
   \       0x3A   0x.... 0x....      BL       LCDPrintf
    518          }
   \                     ??UpdateLCDMenu_1: (+1)
   \       0x3E   0xBD70             POP      {R4-R6,PC}
    519          
    520          //========================================================================

   \                                 In section .text, align 2, keep-with-next
    521          void	UpdateLCDMonitor( int nTick )
    522          //========================================================================
    523          {
   \                     UpdateLCDMonitor: (+1)
   \        0x0   0xB530             PUSH     {R4,R5,LR}
   \        0x2   0xB099             SUB      SP,SP,#+100
   \        0x4   0x0004             MOVS     R4,R0
    524          	static int oldTick = 0;
    525          
    526          	if ( nTick - oldTick > 1000 )
   \        0x6   0x.... 0x....      LDR.W    R5,??DataTable27_5
   \        0xA   0x6828             LDR      R0,[R5, #+0]
   \        0xC   0x1A20             SUBS     R0,R4,R0
   \        0xE   0xF240 0x31E9      MOVW     R1,#+1001
   \       0x12   0x4288             CMP      R0,R1
   \       0x14   0xDB17             BLT.N    ??UpdateLCDMonitor_0
    527          	{
    528          		if( _bEnDispStat )
   \       0x16   0x.... 0x....      LDR.W    R0,??DataTable27_6
   \       0x1A   0x6800             LDR      R0,[R0, #+0]
   \       0x1C   0x2800             CMP      R0,#+0
   \       0x1E   0xD011             BEQ.N    ??UpdateLCDMonitor_1
    529          		{
    530          			//	상태정보 현시.
    531          			LCDSetCursor( 5, 13 );
   \       0x20   0x210D             MOVS     R1,#+13
   \       0x22   0x2005             MOVS     R0,#+5
   \       0x24   0x.... 0x....      BL       LCDSetCursor
    532          
    533          			char sBuf[100];
    534          			sprintf(sBuf, "Stat:%04X / %02d", g_flagRspID, g_nRSSI );
   \       0x28   0x.... 0x....      LDR.W    R0,??DataTable27_7
   \       0x2C   0x6803             LDR      R3,[R0, #+0]
   \       0x2E   0x.... 0x....      LDR.W    R0,??DataTable27_8
   \       0x32   0x8802             LDRH     R2,[R0, #+0]
   \       0x34   0x.... 0x....      LDR.W    R1,??DataTable27_9
   \       0x38   0x4668             MOV      R0,SP
   \       0x3A   0x.... 0x....      BL       sprintf
    535          			LCDPrintf( sBuf );
   \       0x3E   0x4668             MOV      R0,SP
   \       0x40   0x.... 0x....      BL       LCDPrintf
    536          		}
    537          		oldTick = nTick;
   \                     ??UpdateLCDMonitor_1: (+1)
   \       0x44   0x602C             STR      R4,[R5, #+0]
    538          	}
    539          }
   \                     ??UpdateLCDMonitor_0: (+1)
   \       0x46   0xB019             ADD      SP,SP,#+100
   \       0x48   0xBD30             POP      {R4,R5,PC}

   \                                 In section .bss, align 4
   \                     `UpdateLCDMonitor::oldTick`:
   \        0x0                      DS8 4
    540          
    541          
    542          //========================================================================

   \                                 In section .text, align 2, keep-with-next
    543          void	ProcBtnUp( void )
    544          //========================================================================
    545          {
   \                     ProcBtnUp: (+1)
   \        0x0   0xB580             PUSH     {R7,LR}
    546          	if ( GetActiveMenu() == NULL ) return;
   \        0x2   0x.... 0x....      BL       GetActiveMenu
   \        0x6   0x2800             CMP      R0,#+0
   \        0x8   0xD011             BEQ.N    ??ProcBtnUp_0
    547          
    548          	//	Menu : Up Key Press
    549          
    550          	g_pActiveMenu->currIdx--;
   \                     ??ProcBtnUp_1: (+1)
   \        0xA   0x.... 0x....      LDR.W    R0,??DataTable27_2
   \        0xE   0x6801             LDR      R1,[R0, #+0]
   \       0x10   0x6889             LDR      R1,[R1, #+8]
   \       0x12   0x1E49             SUBS     R1,R1,#+1
   \       0x14   0x6802             LDR      R2,[R0, #+0]
   \       0x16   0x6091             STR      R1,[R2, #+8]
    551          
    552          	if ( g_pActiveMenu->currIdx < 0 )
   \       0x18   0x6801             LDR      R1,[R0, #+0]
   \       0x1A   0x6889             LDR      R1,[R1, #+8]
   \       0x1C   0x2900             CMP      R1,#+0
   \       0x1E   0xD504             BPL.N    ??ProcBtnUp_2
    553          	{
    554          #if defined(USE_RFT_MENU_LOOP)
    555          
    556          		//	Menu Up/Down Loop
    557          		g_pActiveMenu->currIdx = g_pActiveMenu->cntItem  - 1;
   \       0x20   0x6801             LDR      R1,[R0, #+0]
   \       0x22   0x6849             LDR      R1,[R1, #+4]
   \       0x24   0x1E49             SUBS     R1,R1,#+1
   \       0x26   0x6800             LDR      R0,[R0, #+0]
   \       0x28   0x6081             STR      R1,[R0, #+8]
    558          
    559          #else
    560          
    561          		//	Menu Up/Down Limit
    562          		g_pActiveMenu->currIdx = 0;
    563          
    564          #endif
    565          	}
    566          
    567          
    568          	UpdateLCDMenu();   //  메뉴화면 Update
   \                     ??ProcBtnUp_2: (+1)
   \       0x2A   0x.... 0x....      BL       UpdateLCDMenu
    569          }
   \                     ??ProcBtnUp_0: (+1)
   \       0x2E   0xBD01             POP      {R0,PC}
    570          
    571          //========================================================================

   \                                 In section .text, align 2, keep-with-next
    572          void	ProcBtnDown( void )
    573          //========================================================================
    574          {
   \                     ProcBtnDown: (+1)
   \        0x0   0xB580             PUSH     {R7,LR}
    575          	if ( GetActiveMenu() == NULL ) return;
   \        0x2   0x.... 0x....      BL       GetActiveMenu
   \        0x6   0x2800             CMP      R0,#+0
   \        0x8   0xD011             BEQ.N    ??ProcBtnDown_0
    576          
    577          	//	Menu : Down Key Press
    578          	g_pActiveMenu->currIdx++;
   \                     ??ProcBtnDown_1: (+1)
   \        0xA   0x.... 0x....      LDR.W    R0,??DataTable27_2
   \        0xE   0x6801             LDR      R1,[R0, #+0]
   \       0x10   0x6889             LDR      R1,[R1, #+8]
   \       0x12   0x1C49             ADDS     R1,R1,#+1
   \       0x14   0x6802             LDR      R2,[R0, #+0]
   \       0x16   0x6091             STR      R1,[R2, #+8]
    579          
    580          	if ( g_pActiveMenu->currIdx >= g_pActiveMenu->cntItem )
   \       0x18   0x6801             LDR      R1,[R0, #+0]
   \       0x1A   0x6889             LDR      R1,[R1, #+8]
   \       0x1C   0x6802             LDR      R2,[R0, #+0]
   \       0x1E   0x6852             LDR      R2,[R2, #+4]
   \       0x20   0x4291             CMP      R1,R2
   \       0x22   0xDB02             BLT.N    ??ProcBtnDown_2
    581          	{
    582          #if defined(USE_RFT_MENU_LOOP)
    583          
    584          		//	Menu Up/Down Loop
    585          		g_pActiveMenu->currIdx = 0;
   \       0x24   0x2100             MOVS     R1,#+0
   \       0x26   0x6800             LDR      R0,[R0, #+0]
   \       0x28   0x6081             STR      R1,[R0, #+8]
    586          
    587          #else
    588          
    589          		//	Menu Up/Down Limit
    590          		g_pActiveMenu->currIdx = g_pActiveMenu->cntItem  - 1;
    591          
    592          #endif
    593          	}
    594          
    595          	UpdateLCDMenu();   //  메뉴화면 Update
   \                     ??ProcBtnDown_2: (+1)
   \       0x2A   0x.... 0x....      BL       UpdateLCDMenu
    596          }
   \                     ??ProcBtnDown_0: (+1)
   \       0x2E   0xBD01             POP      {R0,PC}
    597          
    598          //========================================================================

   \                                 In section .text, align 2, keep-with-next
    599          void	ProcBtnMenu( void )
    600          //========================================================================
    601          {
   \                     ProcBtnMenu: (+1)
   \        0x0   0xB580             PUSH     {R7,LR}
    602          	//	Menu
    603          
    604          	if ( GetActiveMenu() == NULL )
   \        0x2   0x.... 0x....      BL       GetActiveMenu
   \        0x6   0x2800             CMP      R0,#+0
   \        0x8   0xD112             BNE.N    ??ProcBtnMenu_0
    605          	{
    606          		//  메뉴모드가 아닌경우 메뉴로 진입.
    607          
    608          		//	Set Main Menu
    609          
    610          		if ( g_bEnMenuMaint )
   \        0xA   0x.... 0x....      LDR.W    R0,??DataTable27
   \        0xE   0x6800             LDR      R0,[R0, #+0]
   \       0x10   0x2800             CMP      R0,#+0
   \       0x12   0xD004             BEQ.N    ??ProcBtnMenu_1
    611          		{
    612          			//	Maintenance 유지보수 메뉴 활성화.
    613          			SetActiveMenu( &g_MenuMainMaint );
   \       0x14   0x.... 0x....      LDR.W    R0,??DataTable27_10
   \       0x18   0x.... 0x....      BL       SetActiveMenu
   \       0x1C   0xE003             B.N      ??ProcBtnMenu_2
    614          		}
    615          		else
    616          		{
    617          			//	Base 기본메뉴.
    618          			SetActiveMenu( &g_MenuMainBase );
   \                     ??ProcBtnMenu_1: (+1)
   \       0x1E   0x.... 0x....      LDR.W    R0,??DataTable27_11
   \       0x22   0x.... 0x....      BL       SetActiveMenu
    619          		}
    620          		GetActiveMenu()->currIdx = 0;	//	메뉴 Index초기화.
   \                     ??ProcBtnMenu_2: (+1)
   \       0x26   0x.... 0x....      BL       GetActiveMenu
   \       0x2A   0x2100             MOVS     R1,#+0
   \       0x2C   0x6081             STR      R1,[R0, #+8]
   \       0x2E   0xE002             B.N      ??ProcBtnMenu_3
    621          	}
    622          	else
    623          	{
    624          		//  메뉴 진입상태 -> 메인화면으로 이동.
    625          
    626          		//	Set Main Menu
    627          		SetActiveMenu( NULL );
   \                     ??ProcBtnMenu_0: (+1)
   \       0x30   0x2000             MOVS     R0,#+0
   \       0x32   0x.... 0x....      BL       SetActiveMenu
    628          	}
    629          
    630          	UpdateLCDMenu();	//	메뉴화면 Update
   \                     ??ProcBtnMenu_3: (+1)
   \       0x36   0x.... 0x....      BL       UpdateLCDMenu
    631          }
   \       0x3A   0xBD01             POP      {R0,PC}
    632          
    633          //========================================================================

   \                                 In section .text, align 2, keep-with-next
    634          void	ProcLightOn ( void )
    635          //========================================================================
    636          {
   \                     ProcLightOn: (+1)
   \        0x0   0xB580             PUSH     {R7,LR}
    637          	LCDSetCursor( 20, 13 );
   \        0x2   0x210D             MOVS     R1,#+13
   \        0x4   0x2014             MOVS     R0,#+20
   \        0x6   0x.... 0x....      BL       LCDSetCursor
    638          	LCDPrintf( "[조명 점등]" );
   \        0xA   0x.... 0x....      LDR.W    R0,??DataTable27_12
   \        0xE   0x.... 0x....      BL       LCDPrintf
    639          
    640          	//========================================================================
    641          	//	숭신기와 가까운 수신기 설정.
    642          	SetChPA( GetChNearRFM() );
   \       0x12   0x.... 0x....      BL       GetChNearRFM
   \       0x16   0x.... 0x....      BL       SetChPA
    643          	//========================================================================
    644          
    645          	SendLightOn();	 //  조명On 명령 전송.
   \       0x1A   0x.... 0x....      BL       SendLightOn
    646          	HAL_Delay( 200 );
   \       0x1E   0x20C8             MOVS     R0,#+200
   \       0x20   0x.... 0x....      BL       HAL_Delay
    647          	SendLightOn();	 //  조명On 명령 전송.
   \       0x24   0x.... 0x....      BL       SendLightOn
    648          	HAL_Delay( 200 );
   \       0x28   0x20C8             MOVS     R0,#+200
   \       0x2A   0x.... 0x....      BL       HAL_Delay
    649          	SendLightOn();	 //  조명On 명령 전송.
   \       0x2E   0x.... 0x....      BL       SendLightOn
    650          	HAL_Delay( 200 );
   \       0x32   0x20C8             MOVS     R0,#+200
   \       0x34   0x.... 0x....      BL       HAL_Delay
    651          	SendLightOn();	 //  조명On 명령 전송.
   \       0x38   0x.... 0x....      BL       SendLightOn
    652          
    653          #if defined(USE_STAT_LIGHT)
    654          	g_nDevFlag |= DevFlagLight;
    655          #endif
    656          }
   \       0x3C   0xBD01             POP      {R0,PC}
    657          
    658          //========================================================================

   \                                 In section .text, align 2, keep-with-next
    659          void	ProcLightOff ( void )
    660          //========================================================================
    661          {
   \                     ProcLightOff: (+1)
   \        0x0   0xB580             PUSH     {R7,LR}
    662          	LCDSetCursor( 20, 13 );
   \        0x2   0x210D             MOVS     R1,#+13
   \        0x4   0x2014             MOVS     R0,#+20
   \        0x6   0x.... 0x....      BL       LCDSetCursor
    663          	LCDPrintf( "[조명 소등]" );
   \        0xA   0x.... 0x....      LDR.W    R0,??DataTable27_13
   \        0xE   0x.... 0x....      BL       LCDPrintf
    664          
    665          	//========================================================================
    666          	//	숭신기와 가까운 수신기 설정.
    667          	SetChPA( GetChNearRFM() );
   \       0x12   0x.... 0x....      BL       GetChNearRFM
   \       0x16   0x.... 0x....      BL       SetChPA
    668          	//========================================================================
    669          
    670          	SendLightOff();	 //  조명Off 명령 전송.
   \       0x1A   0x.... 0x....      BL       SendLightOff
    671          	HAL_Delay( 200 );
   \       0x1E   0x20C8             MOVS     R0,#+200
   \       0x20   0x.... 0x....      BL       HAL_Delay
    672          	SendLightOff();	 //  조명Off 명령 전송.
   \       0x24   0x.... 0x....      BL       SendLightOff
    673          	HAL_Delay( 200 );
   \       0x28   0x20C8             MOVS     R0,#+200
   \       0x2A   0x.... 0x....      BL       HAL_Delay
    674          	SendLightOff();	 //  조명Off 명령 전송.
   \       0x2E   0x.... 0x....      BL       SendLightOff
    675          	HAL_Delay( 200 );
   \       0x32   0x20C8             MOVS     R0,#+200
   \       0x34   0x.... 0x....      BL       HAL_Delay
    676          	SendLightOff();	 //  조명Off 명령 전송.
   \       0x38   0x.... 0x....      BL       SendLightOff
    677          
    678          #if defined(USE_STAT_LIGHT)
    679          	g_nDevFlag &= ~(DevFlagLight);
    680          #endif
    681          }
   \       0x3C   0xBD01             POP      {R0,PC}
    682          
    683          //========================================================================

   \                                 In section .text, align 2, keep-with-next
    684          void	ProcDispVer ( void )
    685          //========================================================================
    686          {
   \                     ProcDispVer: (+1)
   \        0x0   0xB580             PUSH     {R7,LR}
    687          	//  S/W 버전
    688          	LCDSetCursor( 5, 13 );
   \        0x2   0x210D             MOVS     R1,#+13
   \        0x4   0x2005             MOVS     R0,#+5
   \        0x6   0x.... 0x....      BL       LCDSetCursor
    689          	LCDPrintf( "RFM v" APP_VER );
   \        0xA   0x.... 0x....      LDR.W    R0,??DataTable27_14
   \        0xE   0x.... 0x....      BL       LCDPrintf
    690          }
   \       0x12   0xBD01             POP      {R0,PC}
    691          
    692          //========================================================================

   \                                 In section .text, align 2, keep-with-next
    693          void	ProcDispStat ( void )
    694          //========================================================================
    695          {
    696          	//========================================================================
    697          	//	Display Status Enable
    698          	_bEnDispStat		=	1;
   \                     ProcDispStat: (+1)
   \        0x0   0x2001             MOVS     R0,#+1
   \        0x2   0x.... 0x....      LDR.W    R1,??DataTable27_6
   \        0x6   0x6008             STR      R0,[R1, #+0]
    699          }
   \        0x8   0x4770             BX       LR
    700          
    701          //========================================================================

   \                                 In section .text, align 2, keep-with-next
    702          void	ProcMenuTrainSet( int idxItem  )
    703          //========================================================================
    704          {
   \                     ProcMenuTrainSet: (+1)
   \        0x0   0xB510             PUSH     {R4,LR}
   \        0x2   0xB094             SUB      SP,SP,#+80
   \        0x4   0x0004             MOVS     R4,R0
    705          	int sListBuf[20]={1,2,3,4,5,
    706          		   			  6,7,8,9,10,
    707          					  11,12,13,14,15,
    708          					   0, 0, 0, 0, 0};
   \        0x6   0x4668             MOV      R0,SP
   \        0x8   0x.... 0x....      LDR.W    R1,??DataTable27_15
   \        0xC   0x2250             MOVS     R2,#+80
   \        0xE   0x.... 0x....      BL       __aeabi_memcpy4
    709          					   
    710          	LCDSetCursor( 20, 13 );
   \       0x12   0x210D             MOVS     R1,#+13
   \       0x14   0x2014             MOVS     R0,#+20
   \       0x16   0x.... 0x....      BL       LCDSetCursor
    711          	LCDPrintf( "[편성설정]" );
   \       0x1A   0x.... 0x....      LDR.W    R0,??DataTable27_16
   \       0x1E   0x.... 0x....      BL       LCDPrintf
    712          	g_idxTrainSet =sListBuf[idxItem];	//	메뉴 Index값으로 설정.
   \       0x22   0x.... 0x....      LDR.W    R0,??DataTable27_3
   \       0x26   0x4669             MOV      R1,SP
   \       0x28   0xF851 0x1024      LDR      R1,[R1, R4, LSL #+2]
   \       0x2C   0x6001             STR      R1,[R0, #+0]
    713          
    714          	SetTrainSetIdx( g_idxTrainSet );
   \       0x2E   0x6800             LDR      R0,[R0, #+0]
   \       0x30   0x.... 0x....      BL       SetTrainSetIdx
    715          
    716          #if defined(USE_CH_ISO_DEV)		//	장치별로 채널 구분.
    717          	//	각 장치별로 채널 구분.
    718          	//	편성이 변경되어도 채널 고정.
    719          #else
    720          	//	편성별 채널 구분.
    721          	//  Radio Channel 설정.
    722          	pRadioConfiguration->Radio_ChannelNumber = g_idxTrainSet;
    723          #endif
    724          
    725          	//  1초후 Main화면 갱신.
    726          	HAL_Delay( 1000 );
   \       0x34   0xF44F 0x707A      MOV      R0,#+1000
   \       0x38   0x.... 0x....      BL       HAL_Delay
    727          	UpdateLCDMain();
   \       0x3C   0x.... 0x....      BL       UpdateLCDMain
    728          
    729          	//  메뉴 Exit
    730          	SetActiveMenu( NULL );
   \       0x40   0x2000             MOVS     R0,#+0
   \       0x42   0x.... 0x....      BL       SetActiveMenu
    731          }
   \       0x46   0xB014             ADD      SP,SP,#+80
   \       0x48   0xBD10             POP      {R4,PC}
    732          
    733          
    734          //========================================================================

   \                                 In section .text, align 2, keep-with-next
    735          void	ProcMenuVer( int idxItem  )
    736          //========================================================================
    737          {
   \                     ProcMenuVer: (+1)
   \        0x0   0xB510             PUSH     {R4,LR}
   \        0x2   0x0004             MOVS     R4,R0
    738          	//	Upgrade Ok / Cancel
    739          
    740          	//  메뉴 Exit
    741          	SetActiveMenu( NULL );
   \        0x4   0x2000             MOVS     R0,#+0
   \        0x6   0x.... 0x....      BL       SetActiveMenu
    742          
    743          	//	메인화면 갱신.
    744          	UpdateLCDMain();
   \        0xA   0x.... 0x....      BL       UpdateLCDMain
    745          }
   \        0xE   0xBD10             POP      {R4,PC}
    746          
    747          
    748          //========================================================================

   \                                 In section .text, align 2, keep-with-next
    749          void	ProcMenuCmd( int idxItem  )
    750          //========================================================================
    751          {
   \                     ProcMenuCmd: (+1)
   \        0x0   0xB510             PUSH     {R4,LR}
   \        0x2   0x0004             MOVS     R4,R0
    752          	//	하위매뉴진입 : 편성 / 호차 설정.
    753          	switch ( idxItem )
   \        0x4   0x2C01             CMP      R4,#+1
   \        0x6   0xD004             BEQ.N    ??ProcMenuCmd_0
   \        0x8   0xD324             BCC.N    ??ProcMenuCmd_1
   \        0xA   0x2C03             CMP      R4,#+3
   \        0xC   0xD017             BEQ.N    ??ProcMenuCmd_2
   \        0xE   0xD30B             BCC.N    ??ProcMenuCmd_3
   \       0x10   0xE020             B.N      ??ProcMenuCmd_1
    754          	{
    755          	case 1:		//	Train Set
    756          		SetActiveMenu( &g_MenuSetCmdTSList );
   \                     ??ProcMenuCmd_0: (+1)
   \       0x12   0x.... 0x....      LDR.W    R0,??DataTable27_17
   \       0x16   0x.... 0x....      BL       SetActiveMenu
    757          		GetActiveMenu()->currIdx = 0;	//	메뉴 Index초기화.
   \       0x1A   0x.... 0x....      BL       GetActiveMenu
   \       0x1E   0x2100             MOVS     R1,#+0
   \       0x20   0x6081             STR      R1,[R0, #+8]
    758          
    759          		UpdateLCDMenu();
   \       0x22   0x.... 0x....      BL       UpdateLCDMenu
    760          		return;
   \       0x26   0xE038             B.N      ??ProcMenuCmd_4
    761          	case 2:		//	Car Set
    762          		SetActiveMenu( &g_MenuSetCmdCarList );
   \                     ??ProcMenuCmd_3: (+1)
   \       0x28   0x.... 0x....      LDR.W    R0,??DataTable27_18
   \       0x2C   0x.... 0x....      BL       SetActiveMenu
    763          		GetActiveMenu()->currIdx = 0;	//	메뉴 Index초기화.
   \       0x30   0x.... 0x....      BL       GetActiveMenu
   \       0x34   0x2100             MOVS     R1,#+0
   \       0x36   0x6081             STR      R1,[R0, #+8]
    764          
    765          		UpdateLCDMenu();
   \       0x38   0x.... 0x....      BL       UpdateLCDMenu
    766          		return;
   \       0x3C   0xE02D             B.N      ??ProcMenuCmd_4
    767          	case 3:		//	RFMode Set
    768          		SetActiveMenu( &g_MenuSetCmdRFModeList );
   \                     ??ProcMenuCmd_2: (+1)
   \       0x3E   0x.... 0x....      LDR.W    R0,??DataTable27_19
   \       0x42   0x.... 0x....      BL       SetActiveMenu
    769          		GetActiveMenu()->currIdx = 0;	//	메뉴 Index초기화.
   \       0x46   0x.... 0x....      BL       GetActiveMenu
   \       0x4A   0x2100             MOVS     R1,#+0
   \       0x4C   0x6081             STR      R1,[R0, #+8]
    770          
    771          		UpdateLCDMenu();
   \       0x4E   0x.... 0x....      BL       UpdateLCDMenu
    772          		return;
   \       0x52   0xE022             B.N      ??ProcMenuCmd_4
    773          	}
    774          
    775          	LCDSetCursor( 20, 13 );
   \                     ??ProcMenuCmd_1: (+1)
   \       0x54   0x210D             MOVS     R1,#+13
   \       0x56   0x2014             MOVS     R0,#+20
   \       0x58   0x.... 0x....      BL       LCDSetCursor
    776          	LCDPrintf( "[명령전송]" );
   \       0x5C   0x.... 0x....      LDR.W    R0,??DataTable27_20
   \       0x60   0x.... 0x....      BL       LCDPrintf
    777          
    778          	switch( idxItem )
   \       0x64   0x0020             MOVS     R0,R4
   \       0x66   0x2800             CMP      R0,#+0
   \       0x68   0xD004             BEQ.N    ??ProcMenuCmd_5
   \       0x6A   0x2804             CMP      R0,#+4
   \       0x6C   0xD005             BEQ.N    ??ProcMenuCmd_6
   \       0x6E   0x2805             CMP      R0,#+5
   \       0x70   0xD007             BEQ.N    ??ProcMenuCmd_7
   \       0x72   0xE009             B.N      ??ProcMenuCmd_8
    779          	{
    780          	case 0:		SendRFCmdReset();		break;		//	Reset 명령.
   \                     ??ProcMenuCmd_5: (+1)
   \       0x74   0x.... 0x....      BL       SendRFCmdReset
   \       0x78   0xE006             B.N      ??ProcMenuCmd_8
    781          //DEL	case 1:		SendRFCmdDFUMode();		break;		//	DFU Mode 명령.
    782          	case 4:		SendRFCmdUpgrade(1);	break;		//	Upgrade(Re-Try 명령.
   \                     ??ProcMenuCmd_6: (+1)
   \       0x7A   0x2001             MOVS     R0,#+1
   \       0x7C   0x.... 0x....      BL       SendRFCmdUpgrade
   \       0x80   0xE002             B.N      ??ProcMenuCmd_8
    783          	case 5:		SendRFCmdUpgrade(0);	break;		//	Upgrade 명령.
   \                     ??ProcMenuCmd_7: (+1)
   \       0x82   0x2000             MOVS     R0,#+0
   \       0x84   0x.... 0x....      BL       SendRFCmdUpgrade
    784          	}
    785          
    786          	//  1초후 Main화면 갱신.
    787          	HAL_Delay( 1000 );
   \                     ??ProcMenuCmd_8: (+1)
   \       0x88   0xF44F 0x707A      MOV      R0,#+1000
   \       0x8C   0x.... 0x....      BL       HAL_Delay
    788          	UpdateLCDMain();
   \       0x90   0x.... 0x....      BL       UpdateLCDMain
    789          
    790          	//  메뉴 Exit
    791          	SetActiveMenu( NULL );
   \       0x94   0x2000             MOVS     R0,#+0
   \       0x96   0x.... 0x....      BL       SetActiveMenu
    792          }
   \                     ??ProcMenuCmd_4: (+1)
   \       0x9A   0xBD10             POP      {R4,PC}
    793          
    794          
    795          //========================================================================

   \                                 In section .text, align 2, keep-with-next
    796          void	ProcMenuSetCmdTS( int idxItem  )
    797          //========================================================================
    798          {
   \                     ProcMenuSetCmdTS: (+1)
   \        0x0   0xB510             PUSH     {R4,LR}
   \        0x2   0xB094             SUB      SP,SP,#+80
   \        0x4   0x0004             MOVS     R4,R0
    799          
    800          	int sListBuf[20]={1,2,3,4,5,
    801          		   			  6,7,8,9,10,
    802          					  11,12,13,14,15,
    803          					   0, 0, 0, 0, 0};
   \        0x6   0x4668             MOV      R0,SP
   \        0x8   0x.... 0x....      LDR.W    R1,??DataTable27_21
   \        0xC   0x2250             MOVS     R2,#+80
   \        0xE   0x.... 0x....      BL       __aeabi_memcpy4
    804          
    805          
    806          	LCDSetCursor( 20, 13 );
   \       0x12   0x210D             MOVS     R1,#+13
   \       0x14   0x2014             MOVS     R0,#+20
   \       0x16   0x.... 0x....      BL       LCDSetCursor
    807          	LCDPrintf( "[명령전송]" );
   \       0x1A   0x.... 0x....      LDR.W    R0,??DataTable27_20
   \       0x1E   0x.... 0x....      BL       LCDPrintf
    808          
    809          	SendRFCmdTS(sListBuf[idxItem]);		//	편성설정.
   \       0x22   0x4668             MOV      R0,SP
   \       0x24   0xF850 0x0024      LDR      R0,[R0, R4, LSL #+2]
   \       0x28   0x.... 0x....      BL       SendRFCmdTS
    810          
    811          	//  1초후 Main화면 갱신.
    812          	HAL_Delay( 1000 );
   \       0x2C   0xF44F 0x707A      MOV      R0,#+1000
   \       0x30   0x.... 0x....      BL       HAL_Delay
    813          	UpdateLCDMain();
   \       0x34   0x.... 0x....      BL       UpdateLCDMain
    814          
    815          	//  메뉴 Exit
    816          	SetActiveMenu( NULL );
   \       0x38   0x2000             MOVS     R0,#+0
   \       0x3A   0x.... 0x....      BL       SetActiveMenu
    817          }
   \       0x3E   0xB014             ADD      SP,SP,#+80
   \       0x40   0xBD10             POP      {R4,PC}
    818          
    819          //========================================================================

   \                                 In section .text, align 2, keep-with-next
    820          void	ProcMenuSetCmdCar( int idxItem  )
    821          //========================================================================
    822          {
   \                     ProcMenuSetCmdCar: (+1)
   \        0x0   0xB510             PUSH     {R4,LR}
   \        0x2   0x0004             MOVS     R4,R0
    823          	LCDSetCursor( 20, 13 );
   \        0x4   0x210D             MOVS     R1,#+13
   \        0x6   0x2014             MOVS     R0,#+20
   \        0x8   0x.... 0x....      BL       LCDSetCursor
    824          	LCDPrintf( "[명령전송]" );
   \        0xC   0x.... 0x....      LDR.W    R0,??DataTable27_20
   \       0x10   0x.... 0x....      BL       LCDPrintf
    825          
    826          	SendRFCmdCar(idxItem + 1);		//	호차설정.
   \       0x14   0x1C60             ADDS     R0,R4,#+1
   \       0x16   0x.... 0x....      BL       SendRFCmdCar
    827          
    828          	//  1초후 Main화면 갱신.
    829          	HAL_Delay( 1000 );
   \       0x1A   0xF44F 0x707A      MOV      R0,#+1000
   \       0x1E   0x.... 0x....      BL       HAL_Delay
    830          	UpdateLCDMain();
   \       0x22   0x.... 0x....      BL       UpdateLCDMain
    831          
    832          	//  메뉴 Exit
    833          	SetActiveMenu( NULL );
   \       0x26   0x2000             MOVS     R0,#+0
   \       0x28   0x.... 0x....      BL       SetActiveMenu
    834          }
   \       0x2C   0xBD10             POP      {R4,PC}
    835          
    836          //========================================================================

   \                                 In section .text, align 2, keep-with-next
    837          void	ProcMenuSetCmdRFMode( int idxItem  )
    838          //========================================================================
    839          {
   \                     ProcMenuSetCmdRFMode: (+1)
   \        0x0   0xB510             PUSH     {R4,LR}
   \        0x2   0x0004             MOVS     R4,R0
    840          	LCDSetCursor( 20, 13 );
   \        0x4   0x210D             MOVS     R1,#+13
   \        0x6   0x2014             MOVS     R0,#+20
   \        0x8   0x.... 0x....      BL       LCDSetCursor
    841          	LCDPrintf( "[명령전송]" );
   \        0xC   0x.... 0x....      LDR.W    R0,??DataTable27_20
   \       0x10   0x.... 0x....      BL       LCDPrintf
    842          
    843          	SendRFCmdRFMode(idxItem + 1);		//	RF Mode 설정.
   \       0x14   0x1C60             ADDS     R0,R4,#+1
   \       0x16   0x.... 0x....      BL       SendRFCmdRFMode
    844          
    845          	HAL_Delay( 100 );	//	100 msec
   \       0x1A   0x2064             MOVS     R0,#+100
   \       0x1C   0x.... 0x....      BL       HAL_Delay
    846          
    847          	//	RF Mode 설정 후 Reset 명령
    848          	SendRFCmdReset();
   \       0x20   0x.... 0x....      BL       SendRFCmdReset
    849          
    850          	//  1초후 Main화면 갱신.
    851          	HAL_Delay( 1000 );
   \       0x24   0xF44F 0x707A      MOV      R0,#+1000
   \       0x28   0x.... 0x....      BL       HAL_Delay
    852          	UpdateLCDMain();
   \       0x2C   0x.... 0x....      BL       UpdateLCDMain
    853          
    854          	//  메뉴 Exit
    855          	SetActiveMenu( NULL );
   \       0x30   0x2000             MOVS     R0,#+0
   \       0x32   0x.... 0x....      BL       SetActiveMenu
    856          }
   \       0x36   0xBD10             POP      {R4,PC}
    857          
    858          
    859          //========================================================================

   \                                 In section .text, align 2, keep-with-next
    860          void 	ProcMenuMain( int idxItem )
    861          //========================================================================
    862          {
   \                     ProcMenuMain: (+1)
   \        0x0   0xB570             PUSH     {R4-R6,LR}
   \        0x2   0xB094             SUB      SP,SP,#+80
   \        0x4   0x0004             MOVS     R4,R0
    863          
    864          
    865          	int i = 0;
   \        0x6   0x2500             MOVS     R5,#+0
    866          	int sListBuf[20]={1,2,3,4,5,
    867          		   			  6,7,8,9,10,
    868          					  11,12,13,14,15,
    869          					   0, 0, 0, 0, 0};;
   \        0x8   0x4668             MOV      R0,SP
   \        0xA   0x.... 0x....      LDR.W    R1,??DataTable27_22
   \        0xE   0x2250             MOVS     R2,#+80
   \       0x10   0x.... 0x....      BL       __aeabi_memcpy4
    870          
    871          
    872          	switch ( idxItem )
   \       0x14   0x2C00             CMP      R4,#+0
   \       0x16   0xD00C             BEQ.N    ??ProcMenuMain_0
   \       0x18   0x2C02             CMP      R4,#+2
   \       0x1A   0xD028             BEQ.N    ??ProcMenuMain_1
   \       0x1C   0xD314             BCC.N    ??ProcMenuMain_2
   \       0x1E   0x2C04             CMP      R4,#+4
   \       0x20   0xD050             BEQ.N    ??ProcMenuMain_3
   \       0x22   0xD33C             BCC.N    ??ProcMenuMain_4
   \       0x24   0x2C06             CMP      R4,#+6
   \       0x26   0xD063             BEQ.N    ??ProcMenuMain_5
   \       0x28   0xD357             BCC.N    ??ProcMenuMain_6
   \       0x2A   0x2C08             CMP      R4,#+8
   \       0x2C   0xD071             BEQ.N    ??ProcMenuMain_7
   \       0x2E   0xD36A             BCC.N    ??ProcMenuMain_8
   \       0x30   0xE079             B.N      ??ProcMenuMain_9
    873          	{
    874          	case eMenuIdxCtlLight:	//	0:		 //  조명제어
    875          		//	Menu
    876          
    877          		SetActiveMenu( &g_MenuLightCtrl );
   \                     ??ProcMenuMain_0: (+1)
   \       0x32   0x.... 0x....      LDR.W    R0,??DataTable27_23
   \       0x36   0x.... 0x....      BL       SetActiveMenu
    878          		GetActiveMenu()->currIdx = 0;	//	메뉴 Index초기화.
   \       0x3A   0x.... 0x....      BL       GetActiveMenu
   \       0x3E   0x2100             MOVS     R1,#+0
   \       0x40   0x6081             STR      R1,[R0, #+8]
    879          
    880          		UpdateLCDMenu();
   \       0x42   0x.... 0x....      BL       UpdateLCDMenu
    881          
    882          		break;
   \       0x46   0xE06E             B.N      ??ProcMenuMain_9
    883          
    884          	case eMenuIdxSWVer:		//	1:		 //  S/W 버전
    885          		//  메뉴 Exit
    886          
    887          #if defined(USE_RFT_MENU_DEV_VER)
    888          
    889          		if ( IsMenuMaint() )
   \                     ??ProcMenuMain_2: (+1)
   \       0x48   0x.... 0x....      BL       IsMenuMaint
   \       0x4C   0x2800             CMP      R0,#+0
   \       0x4E   0xD008             BEQ.N    ??ProcMenuMain_10
    890          		{
    891          			SetActiveMenu( &g_MenuVerList );	//	버전 List 현시.
   \       0x50   0x.... 0x....      LDR.W    R0,??DataTable27_24
   \       0x54   0x.... 0x....      BL       SetActiveMenu
    892          			GetActiveMenu()->currIdx = 0;		//	메뉴 Index초기화.
   \       0x58   0x.... 0x....      BL       GetActiveMenu
   \       0x5C   0x2100             MOVS     R1,#+0
   \       0x5E   0x6081             STR      R1,[R0, #+8]
   \       0x60   0xE002             B.N      ??ProcMenuMain_11
    893          		}
    894          		else
    895          		{
    896          			SetActiveMenu( NULL );
   \                     ??ProcMenuMain_10: (+1)
   \       0x62   0x2000             MOVS     R0,#+0
   \       0x64   0x.... 0x....      BL       SetActiveMenu
    897          		}
    898          
    899          		ProcDispVer();
   \                     ??ProcMenuMain_11: (+1)
   \       0x68   0x.... 0x....      BL       ProcDispVer
    900          //		UpdateLCDMenu();
    901          #else
    902          		SetActiveMenu( NULL );
    903          		ProcDispVer();
    904          #endif
    905          
    906          		break;
   \       0x6C   0xE05B             B.N      ??ProcMenuMain_9
    907          
    908          	case eMenuIdxTrainSet:	//	2:		 //  편성설정.
    909          
    910          
    911          		for(i = 0;i < 15;i++)
   \                     ??ProcMenuMain_1: (+1)
   \       0x6E   0x2000             MOVS     R0,#+0
   \       0x70   0x0005             MOVS     R5,R0
   \                     ??ProcMenuMain_12: (+1)
   \       0x72   0x2D0F             CMP      R5,#+15
   \       0x74   0xDA09             BGE.N    ??ProcMenuMain_13
    912          		{
    913          			if(g_idxTrainSet  == sListBuf[i]) break;
   \       0x76   0x.... 0x....      LDR.W    R0,??DataTable27_3
   \       0x7A   0x6800             LDR      R0,[R0, #+0]
   \       0x7C   0x4669             MOV      R1,SP
   \       0x7E   0xF851 0x1025      LDR      R1,[R1, R5, LSL #+2]
   \       0x82   0x4288             CMP      R0,R1
   \       0x84   0xD001             BEQ.N    ??ProcMenuMain_13
    914          		}
   \                     ??ProcMenuMain_14: (+1)
   \       0x86   0x1C6D             ADDS     R5,R5,#+1
   \       0x88   0xE7F3             B.N      ??ProcMenuMain_12
    915          
    916          		SetActiveMenu( &g_MenuTrainSet );
   \                     ??ProcMenuMain_13: (+1)
   \       0x8A   0x.... 0x....      LDR.W    R0,??DataTable27_25
   \       0x8E   0x.... 0x....      BL       SetActiveMenu
    917          		GetActiveMenu()->currIdx = i;	//	메뉴 Index초기화.
   \       0x92   0x.... 0x....      BL       GetActiveMenu
   \       0x96   0x6085             STR      R5,[R0, #+8]
    918          
    919          		UpdateLCDMenu();
   \       0x98   0x.... 0x....      BL       UpdateLCDMenu
    920          		break;
   \       0x9C   0xE043             B.N      ??ProcMenuMain_9
    921          
    922          #if defined(USE_RFT_MENU_RFTID)
    923          
    924          	case eMenuIdxRFTID:		//	3:		 //  송신기 ID
    925          
    926          		SetActiveMenu( &g_MenuRFTIDList );
   \                     ??ProcMenuMain_4: (+1)
   \       0x9E   0x.... 0x....      LDR.W    R0,??DataTable27_26
   \       0xA2   0x.... 0x....      BL       SetActiveMenu
    927          		GetActiveMenu()->currIdx = ( ( GetCarNo() + 1 ) % 2 );	//	메뉴 Index초기화.
   \       0xA6   0x.... 0x....      BL       GetActiveMenu
   \       0xAA   0x0006             MOVS     R6,R0
   \       0xAC   0x.... 0x....      BL       GetCarNo
   \       0xB0   0x1C40             ADDS     R0,R0,#+1
   \       0xB2   0x2102             MOVS     R1,#+2
   \       0xB4   0xFB90 0xF2F1      SDIV     R2,R0,R1
   \       0xB8   0xFB01 0x0012      MLS      R0,R1,R2,R0
   \       0xBC   0x60B0             STR      R0,[R6, #+8]
    928          
    929          		UpdateLCDMenu();
   \       0xBE   0x.... 0x....      BL       UpdateLCDMenu
    930          		break;
   \       0xC2   0xE030             B.N      ??ProcMenuMain_9
    931          
    932          #endif	//	defined(USE_RFT_MENU_DIAG)
    933          
    934          #if defined(USE_RFT_MENU_SELFTEST)
    935          
    936          	case eMenuIdxSelfTest:	//	4:		 //  송신기 ID
    937          
    938          
    939          		SetActiveMenu( &g_MenuSelfTestList_OK );
   \                     ??ProcMenuMain_3: (+1)
   \       0xC4   0x.... 0x....      LDR.W    R0,??DataTable27_27
   \       0xC8   0x.... 0x....      BL       SetActiveMenu
    940          		GetActiveMenu()->currIdx = 0;	//	메뉴 Index초기화.
   \       0xCC   0x.... 0x....      BL       GetActiveMenu
   \       0xD0   0x2100             MOVS     R1,#+0
   \       0xD2   0x6081             STR      R1,[R0, #+8]
    941          
    942          		UpdateLCDMenu();
   \       0xD4   0x.... 0x....      BL       UpdateLCDMenu
    943          
    944          		break;
   \       0xD8   0xE025             B.N      ??ProcMenuMain_9
    945          
    946          #endif	//	defined(USE_RFT_MENU_SELFTEST)
    947          
    948          
    949          #if defined(USE_RFT_MENU_DIAG)
    950          
    951          	case eMenuIdxDiag:		//	5:		 //  진단
    952          
    953          		SetActiveMenu( &g_MenuDiagList );
   \                     ??ProcMenuMain_6: (+1)
   \       0xDA   0x.... 0x....      LDR.W    R0,??DataTable27_28
   \       0xDE   0x.... 0x....      BL       SetActiveMenu
    954          		GetActiveMenu()->currIdx = 0;	//	메뉴 Index초기화.
   \       0xE2   0x.... 0x....      BL       GetActiveMenu
   \       0xE6   0x2100             MOVS     R1,#+0
   \       0xE8   0x6081             STR      R1,[R0, #+8]
    955          
    956          		UpdateLCDMenu();
   \       0xEA   0x.... 0x....      BL       UpdateLCDMenu
    957          		break;
   \       0xEE   0xE01A             B.N      ??ProcMenuMain_9
    958          
    959          #endif	//	defined(USE_RFT_MENU_DIAG)
    960          
    961          #if defined(USE_RFT_MENU_SETTING)
    962          
    963          	case eMenuIdxSetting:	//	6:		 //  설정
    964          
    965          		SetActiveMenu( &g_MenuSettingList );
   \                     ??ProcMenuMain_5: (+1)
   \       0xF0   0x.... 0x....      LDR.W    R0,??DataTable27_29
   \       0xF4   0x.... 0x....      BL       SetActiveMenu
    966          		GetActiveMenu()->currIdx = 0;	//	메뉴 Index초기화.
   \       0xF8   0x.... 0x....      BL       GetActiveMenu
   \       0xFC   0x2100             MOVS     R1,#+0
   \       0xFE   0x6081             STR      R1,[R0, #+8]
    967          
    968          		UpdateLCDMenu();
   \      0x100   0x.... 0x....      BL       UpdateLCDMenu
    969          		break;
   \      0x104   0xE00F             B.N      ??ProcMenuMain_9
    970          
    971          #endif	//	defined(USE_RFT_MENU_DIAG)
    972          
    973          #if defined(USE_RFT_MENU_STAT)
    974          
    975          	case eMenuIdxStat:		//	7:		 //  상태정보.
    976          
    977          		SetActiveMenu( NULL );
   \                     ??ProcMenuMain_8: (+1)
   \      0x106   0x2000             MOVS     R0,#+0
   \      0x108   0x.... 0x....      BL       SetActiveMenu
    978          
    979          		ProcDispStat();			//	상태정보 표출.
   \      0x10C   0x.... 0x....      BL       ProcDispStat
    980          		break;
   \      0x110   0xE009             B.N      ??ProcMenuMain_9
    981          
    982          #endif	//	defined(USE_RFT_MENU_STAT)
    983          
    984          
    985          #if defined(USE_RFT_MENU_CMD)
    986          
    987          	case eMenuIdxCmd:		//	8:		 //  명령전송.
    988          
    989          		SetActiveMenu( &g_MenuCmdList );
   \                     ??ProcMenuMain_7: (+1)
   \      0x112   0x.... 0x....      LDR.W    R0,??DataTable27_30
   \      0x116   0x.... 0x....      BL       SetActiveMenu
    990          		GetActiveMenu()->currIdx = 0;	//	메뉴 Index초기화.
   \      0x11A   0x.... 0x....      BL       GetActiveMenu
   \      0x11E   0x2100             MOVS     R1,#+0
   \      0x120   0x6081             STR      R1,[R0, #+8]
    991          
    992          		UpdateLCDMenu();
   \      0x122   0x.... 0x....      BL       UpdateLCDMenu
    993          		break;
    994          
    995          #endif	//	defined(USE_RFT_MENU_CMD)
    996          
    997          #if defined(USE_ENV_TEST)
    998          	case 3:		 //  RF 출력
    999          		//	RF Tx시작.
   1000          		SetLoopRFTx( 1 );
   1001          
   1002          		LCDSetCursor( 5, 13 );
   1003          		LCDPrintf( "[ RF Tx ]" );
   1004          
   1005          		//  메뉴 Exit
   1006          		SetActiveMenu( NULL );
   1007          
   1008          		break;
   1009          #endif	//	defined(USE_ENV_TEST)
   1010          	}
   1011          }
   \                     ??ProcMenuMain_9: (+1)
   \      0x126   0xB014             ADD      SP,SP,#+80
   \      0x128   0xBD70             POP      {R4-R6,PC}
   1012          
   1013          
   1014          //========================================================================

   \                                 In section .text, align 2, keep-with-next
   1015          void 	ProcMenuLightCtrl( int idxItem )
   1016          //========================================================================
   1017          {
   \                     ProcMenuLightCtrl: (+1)
   \        0x0   0xB510             PUSH     {R4,LR}
   \        0x2   0x0004             MOVS     R4,R0
   1018          	LCDMenuUpDown( 0 );
   \        0x4   0x2000             MOVS     R0,#+0
   \        0x6   0x.... 0x....      BL       LCDMenuUpDown
   1019          
   1020          	if ( idxItem == 0 )
   \        0xA   0x2C00             CMP      R4,#+0
   \        0xC   0xD102             BNE.N    ??ProcMenuLightCtrl_0
   1021          	{
   1022          		ProcLightOff();
   \        0xE   0x.... 0x....      BL       ProcLightOff
   \       0x12   0xE001             B.N      ??ProcMenuLightCtrl_1
   1023          	}
   1024          	else
   1025          	{
   1026          		ProcLightOn();
   \                     ??ProcMenuLightCtrl_0: (+1)
   \       0x14   0x.... 0x....      BL       ProcLightOn
   1027          	}
   1028          
   1029          	//  1초후 Main화면 갱신.
   1030          	HAL_Delay( 1000 );
   \                     ??ProcMenuLightCtrl_1: (+1)
   \       0x18   0xF44F 0x707A      MOV      R0,#+1000
   \       0x1C   0x.... 0x....      BL       HAL_Delay
   1031          	UpdateLCDMain();
   \       0x20   0x.... 0x....      BL       UpdateLCDMain
   1032          
   1033          	SetActiveMenu( NULL );
   \       0x24   0x2000             MOVS     R0,#+0
   \       0x26   0x.... 0x....      BL       SetActiveMenu
   1034          }
   \       0x2A   0xBD10             POP      {R4,PC}
   1035          
   1036          //========================================================================

   \                                 In section .text, align 2, keep-with-next
   1037          void 	ProcMenuRFTID( int idxItem )
   1038          //========================================================================
   1039          {
   \                     ProcMenuRFTID: (+1)
   \        0x0   0xB510             PUSH     {R4,LR}
   \        0x2   0x0004             MOVS     R4,R0
   1040          	LCDMenuUpDown( 0 );	//	UpDown Off
   \        0x4   0x2000             MOVS     R0,#+0
   \        0x6   0x.... 0x....      BL       LCDMenuUpDown
   1041          
   1042          	switch( idxItem )
   \        0xA   0x2C00             CMP      R4,#+0
   \        0xC   0xD002             BEQ.N    ??ProcMenuRFTID_0
   \        0xE   0x2C01             CMP      R4,#+1
   \       0x10   0xD008             BEQ.N    ??ProcMenuRFTID_1
   \       0x12   0xE00F             B.N      ??ProcMenuRFTID_2
   1043          	{
   1044          	case 0:	//	송신기 #1
   1045          		SetCarNo( RFTCarNo1 );	//	CarNo ( 11 )
   \                     ??ProcMenuRFTID_0: (+1)
   \       0x14   0x200B             MOVS     R0,#+11
   \       0x16   0x.... 0x....      BL       SetCarNo
   1046          		LCDPrintf( "Set RFT#1" );
   \       0x1A   0x.... 0x....      LDR.W    R0,??DataTable27_31
   \       0x1E   0x.... 0x....      BL       LCDPrintf
   1047          		break;
   \       0x22   0xE00E             B.N      ??ProcMenuRFTID_3
   1048          
   1049          	case 1:	//	송신기 #2
   1050          		SetCarNo( RFTCarNo2 );	//	CarNo ( 12 )
   \                     ??ProcMenuRFTID_1: (+1)
   \       0x24   0x200C             MOVS     R0,#+12
   \       0x26   0x.... 0x....      BL       SetCarNo
   1051          		LCDPrintf( "Set RFT#2" );
   \       0x2A   0x.... 0x....      LDR.W    R0,??DataTable27_32
   \       0x2E   0x.... 0x....      BL       LCDPrintf
   1052          		break;
   \       0x32   0xE006             B.N      ??ProcMenuRFTID_3
   1053          
   1054          	default:
   1055          		printf("%s(%d) - invalid menu(%d)\n", __func__, __LINE__, idxItem);
   \                     ??ProcMenuRFTID_2: (+1)
   \       0x34   0x0023             MOVS     R3,R4
   \       0x36   0xF240 0x421F      MOVW     R2,#+1055
   \       0x3A   0x....             LDR.N    R1,??DataTable27_33
   \       0x3C   0x....             LDR.N    R0,??DataTable27_34
   \       0x3E   0x.... 0x....      BL       printf
   1056          		break;
   1057          	}
   1058          
   1059          	//  1초후 Main화면 갱신.
   1060          	HAL_Delay( 1000 );
   \                     ??ProcMenuRFTID_3: (+1)
   \       0x42   0xF44F 0x707A      MOV      R0,#+1000
   \       0x46   0x.... 0x....      BL       HAL_Delay
   1061          	UpdateLCDMain();
   \       0x4A   0x.... 0x....      BL       UpdateLCDMain
   1062          
   1063          	SetActiveMenu( NULL );
   \       0x4E   0x2000             MOVS     R0,#+0
   \       0x50   0x.... 0x....      BL       SetActiveMenu
   1064          }
   \       0x54   0xBD10             POP      {R4,PC}
   1065          
   1066          //========================================================================

   \                                 In section .text, align 2, keep-with-next
   1067          void 	ProcMenuSelfTest( int idxItem )
   1068          //========================================================================
   1069          {
   \                     ProcMenuSelfTest: (+1)
   \        0x0   0xB510             PUSH     {R4,LR}
   \        0x2   0x0004             MOVS     R4,R0
   1070          	LCDMenuUpDown( 0 );
   \        0x4   0x2000             MOVS     R0,#+0
   \        0x6   0x.... 0x....      BL       LCDMenuUpDown
   1071          
   1072          	//  1초후 Main화면 갱신.
   1073          	HAL_Delay( 1000 );
   \        0xA   0xF44F 0x707A      MOV      R0,#+1000
   \        0xE   0x.... 0x....      BL       HAL_Delay
   1074          
   1075          
   1076          	SetActiveMenu( NULL );
   \       0x12   0x2000             MOVS     R0,#+0
   \       0x14   0x.... 0x....      BL       SetActiveMenu
   1077          
   1078          	UpdateLCDMain();
   \       0x18   0x.... 0x....      BL       UpdateLCDMain
   1079          
   1080          }
   \       0x1C   0xBD10             POP      {R4,PC}
   1081          
   1082          //========================================================================

   \                                 In section .text, align 2, keep-with-next
   1083          void 	ProcMenuDiag( int idxItem )
   1084          //========================================================================
   1085          {
   \                     ProcMenuDiag: (+1)
   \        0x0   0xB510             PUSH     {R4,LR}
   \        0x2   0x0004             MOVS     R4,R0
   1086          	LCDMenuUpDown( 0 );
   \        0x4   0x2000             MOVS     R0,#+0
   \        0x6   0x.... 0x....      BL       LCDMenuUpDown
   1087          
   1088          //	" AudioLoop:Off",	//  Loopback Off
   1089          //	" AudioLoop:On",	//  Loopback On
   1090          //	" AudioSine:On",	//  Sine Wave On
   1091          
   1092          	switch( idxItem )
   \        0xA   0x2C00             CMP      R4,#+0
   \        0xC   0xD003             BEQ.N    ??ProcMenuDiag_0
   \        0xE   0x2C02             CMP      R4,#+2
   \       0x10   0xD01A             BEQ.N    ??ProcMenuDiag_1
   \       0x12   0xD308             BCC.N    ??ProcMenuDiag_2
   \       0x14   0xE029             B.N      ??ProcMenuDiag_3
   1093          	{
   1094          	case 0:	//	Audio Loopback Off
   1095          		HAL_GPIO_WritePin( SPK_ON_GPIO_Port, SPK_ON_Pin, GPIO_PIN_RESET );
   \                     ??ProcMenuDiag_0: (+1)
   \       0x16   0x2200             MOVS     R2,#+0
   \       0x18   0x2120             MOVS     R1,#+32
   \       0x1A   0x....             LDR.N    R0,??DataTable27_35
   \       0x1C   0x.... 0x....      BL       HAL_GPIO_WritePin
   1096          
   1097          		//	Codec Loopback Off
   1098          		AudioStop();
   \       0x20   0x.... 0x....      BL       AudioStop
   1099          
   1100          		break;
   \       0x24   0xE028             B.N      ??ProcMenuDiag_4
   1101          
   1102          	case 1:	//	Audio Loopback On
   1103          		printf( "%s(%d) - sine\n", __func__, __LINE__ );
   \                     ??ProcMenuDiag_2: (+1)
   \       0x26   0xF240 0x424F      MOVW     R2,#+1103
   \       0x2A   0x....             LDR.N    R1,??DataTable27_36
   \       0x2C   0x....             LDR.N    R0,??DataTable27_37
   \       0x2E   0x.... 0x....      BL       printf
   1104          		LCDPrintf( "Audio Loop" );
   \       0x32   0x....             LDR.N    R0,??DataTable27_38
   \       0x34   0x.... 0x....      BL       LCDPrintf
   1105          
   1106          		HAL_GPIO_WritePin( SPK_ON_GPIO_Port, SPK_ON_Pin, GPIO_PIN_SET );
   \       0x38   0x2201             MOVS     R2,#+1
   \       0x3A   0x2120             MOVS     R1,#+32
   \       0x3C   0x....             LDR.N    R0,??DataTable27_35
   \       0x3E   0x.... 0x....      BL       HAL_GPIO_WritePin
   1107          
   1108          		AudioDMALoopback();
   \       0x42   0x.... 0x....      BL       AudioDMALoopback
   1109          		break;
   \       0x46   0xE017             B.N      ??ProcMenuDiag_4
   1110          
   1111          	case 2:	//	Audio Sine Wave On
   1112          		printf( "%s(%d) - sine\n", __func__, __LINE__ );
   \                     ??ProcMenuDiag_1: (+1)
   \       0x48   0xF44F 0x628B      MOV      R2,#+1112
   \       0x4C   0x....             LDR.N    R1,??DataTable27_36
   \       0x4E   0x....             LDR.N    R0,??DataTable27_37
   \       0x50   0x.... 0x....      BL       printf
   1113          		LCDPrintf( "Audio Sine" );
   \       0x54   0x....             LDR.N    R0,??DataTable27_39
   \       0x56   0x.... 0x....      BL       LCDPrintf
   1114          
   1115          		HAL_GPIO_WritePin( SPK_ON_GPIO_Port, SPK_ON_Pin, GPIO_PIN_SET );
   \       0x5A   0x2201             MOVS     R2,#+1
   \       0x5C   0x2120             MOVS     R1,#+32
   \       0x5E   0x....             LDR.N    R0,??DataTable27_35
   \       0x60   0x.... 0x....      BL       HAL_GPIO_WritePin
   1116          
   1117          		AudioPlayDMASine();
   \       0x64   0x.... 0x....      BL       AudioPlayDMASine
   1118          		break;
   \       0x68   0xE006             B.N      ??ProcMenuDiag_4
   1119          
   1120          	default:
   1121          		printf("%s(%d) - invalid menu(%d)\n", __func__, __LINE__, idxItem);
   \                     ??ProcMenuDiag_3: (+1)
   \       0x6A   0x0023             MOVS     R3,R4
   \       0x6C   0xF240 0x4261      MOVW     R2,#+1121
   \       0x70   0x....             LDR.N    R1,??DataTable27_36
   \       0x72   0x....             LDR.N    R0,??DataTable27_34
   \       0x74   0x.... 0x....      BL       printf
   1122          		break;
   1123          	}
   1124          
   1125          	//  1초후 Main화면 갱신.
   1126          //	HAL_Delay( 1000 );
   1127          //	UpdateLCDMain();
   1128          
   1129          //	SetActiveMenu( NULL );
   1130          }
   \                     ??ProcMenuDiag_4: (+1)
   \       0x78   0xBD10             POP      {R4,PC}
   1131          
   1132          
   1133          //========================================================================

   \                                 In section .text, align 2, keep-with-next
   1134          void 	ProcMenuSetting( int idxItem )
   1135          //========================================================================
   1136          {
   \                     ProcMenuSetting: (+1)
   \        0x0   0xB538             PUSH     {R3-R5,LR}
   \        0x2   0x0004             MOVS     R4,R0
   1137          	LCDMenuUpDown( 0 );
   \        0x4   0x2000             MOVS     R0,#+0
   \        0x6   0x.... 0x....      BL       LCDMenuUpDown
   1138          
   1139          //	" Mic Vol",		//	Mic Volume
   1140          //	" Spk Vol",		//	Spk Volume
   1141          //	" RF Tx Pwr",	//	RF Tx Power
   1142          
   1143          	switch( idxItem )
   \        0xA   0x2C00             CMP      R4,#+0
   \        0xC   0xD005             BEQ.N    ??ProcMenuSetting_0
   \        0xE   0x2C02             CMP      R4,#+2
   \       0x10   0xD01B             BEQ.N    ??ProcMenuSetting_1
   \       0x12   0xD30E             BCC.N    ??ProcMenuSetting_2
   \       0x14   0x2C03             CMP      R4,#+3
   \       0x16   0xD022             BEQ.N    ??ProcMenuSetting_3
   \       0x18   0xE02D             B.N      ??ProcMenuSetting_4
   1144          	{
   1145          	case 0:		//	Mic Volume
   1146          		SetActiveMenu( &g_MenuSetMicList );
   \                     ??ProcMenuSetting_0: (+1)
   \       0x1A   0x....             LDR.N    R0,??DataTable27_40
   \       0x1C   0x.... 0x....      BL       SetActiveMenu
   1147          		GetActiveMenu()->currIdx = GetMicVol();	//	메뉴 Index초기화.
                 		                           ^
Warning[Pe223]: function "GetMicVol" declared implicitly
   \       0x20   0x.... 0x....      BL       GetActiveMenu
   \       0x24   0x0005             MOVS     R5,R0
   \       0x26   0x.... 0x....      BL       GetMicVol
   \       0x2A   0x60A8             STR      R0,[R5, #+8]
   1148          
   1149          		UpdateLCDMenu();
   \       0x2C   0x.... 0x....      BL       UpdateLCDMenu
   1150          
   1151          		break;
   \       0x30   0xE028             B.N      ??ProcMenuSetting_5
   1152          
   1153          	case 1:		//	Spk Volume
   1154          		SetActiveMenu( &g_MenuSetSpkList );
   \                     ??ProcMenuSetting_2: (+1)
   \       0x32   0x....             LDR.N    R0,??DataTable27_41
   \       0x34   0x.... 0x....      BL       SetActiveMenu
   1155          		GetActiveMenu()->currIdx = GetSpkVol();	//	메뉴 Index초기화.
   \       0x38   0x.... 0x....      BL       GetActiveMenu
   \       0x3C   0x0005             MOVS     R5,R0
   \       0x3E   0x.... 0x....      BL       GetSpkVol
   \       0x42   0x60A8             STR      R0,[R5, #+8]
   1156          
   1157          		UpdateLCDMenu();
   \       0x44   0x.... 0x....      BL       UpdateLCDMenu
   1158          		break;
   \       0x48   0xE01C             B.N      ??ProcMenuSetting_5
   1159          
   1160          	case 2:		//	RF Tx Power
   1161          		SetActiveMenu( &g_MenuSetTxPwrList );
   \                     ??ProcMenuSetting_1: (+1)
   \       0x4A   0x....             LDR.N    R0,??DataTable27_42
   \       0x4C   0x.... 0x....      BL       SetActiveMenu
   1162          		GetActiveMenu()->currIdx = 7;	//	메뉴 Index초기화.
   \       0x50   0x.... 0x....      BL       GetActiveMenu
   \       0x54   0x2107             MOVS     R1,#+7
   \       0x56   0x6081             STR      R1,[R0, #+8]
   1163          
   1164          		UpdateLCDMenu();
   \       0x58   0x.... 0x....      BL       UpdateLCDMenu
   1165          		break;
   \       0x5C   0xE012             B.N      ??ProcMenuSetting_5
   1166          
   1167          	case 3:		//	RF Mode
   1168          		SetActiveMenu( &g_MenuSetRFModeList );
   \                     ??ProcMenuSetting_3: (+1)
   \       0x5E   0x....             LDR.N    R0,??DataTable27_43
   \       0x60   0x.... 0x....      BL       SetActiveMenu
   1169          		GetActiveMenu()->currIdx = g_nRFMode - 1;	//	메뉴 Index초기화.
   \       0x64   0x.... 0x....      BL       GetActiveMenu
   \       0x68   0x....             LDR.N    R1,??DataTable27_44
   \       0x6A   0x6809             LDR      R1,[R1, #+0]
   \       0x6C   0x1E49             SUBS     R1,R1,#+1
   \       0x6E   0x6081             STR      R1,[R0, #+8]
   1170          
   1171          		UpdateLCDMenu();
   \       0x70   0x.... 0x....      BL       UpdateLCDMenu
   1172          		break;
   \       0x74   0xE006             B.N      ??ProcMenuSetting_5
   1173          
   1174          	default:
   1175          		printf("%s(%d) - invalid menu(%d)\n", __func__, __LINE__, idxItem);
   \                     ??ProcMenuSetting_4: (+1)
   \       0x76   0x0023             MOVS     R3,R4
   \       0x78   0xF240 0x4297      MOVW     R2,#+1175
   \       0x7C   0x....             LDR.N    R1,??DataTable27_45
   \       0x7E   0x....             LDR.N    R0,??DataTable27_34
   \       0x80   0x.... 0x....      BL       printf
   1176          		break;
   1177          	}
   1178          }
   \                     ??ProcMenuSetting_5: (+1)
   \       0x84   0xBD31             POP      {R0,R4,R5,PC}
   1179          
   1180          //========================================================================

   \                                 In section .text, align 2, keep-with-next
   1181          void 	ProcMenuSetMic( int idxItem )
   1182          //========================================================================
   1183          {
   \                     ProcMenuSetMic: (+1)
   \        0x0   0xB510             PUSH     {R4,LR}
   \        0x2   0x0004             MOVS     R4,R0
   1184          	LCDMenuUpDown( 0 );
   \        0x4   0x2000             MOVS     R0,#+0
   \        0x6   0x.... 0x....      BL       LCDMenuUpDown
   1185          
   1186          	//	Mic : 0 ~ 9
   1187          
   1188          	switch( idxItem )
   \        0xA   0x0020             MOVS     R0,R4
   \        0xC   0x2800             CMP      R0,#+0
   \        0xE   0x2809             CMP      R0,#+9
   \       0x10   0xD803             BHI.N    ??ProcMenuSetMic_0
   1189          	{
   1190          	case 0:
   1191          	case 1:
   1192          	case 2:
   1193          	case 3:
   1194          	case 4:
   1195          	case 5:
   1196          	case 6:
   1197          	case 7:
   1198          	case 8:
   1199          	case 9:
   1200          		SetMicVol(idxItem);
                 		^
Warning[Pe223]: function "SetMicVol" declared implicitly
   \                     ??ProcMenuSetMic_1: (+1)
   \       0x12   0x0020             MOVS     R0,R4
   \       0x14   0x.... 0x....      BL       SetMicVol
   1201          		break;
   \       0x18   0xE006             B.N      ??ProcMenuSetMic_2
   1202          	default:
   1203          		printf("%s(%d) - invalid menu(%d)\n", __func__, __LINE__, idxItem);
   \                     ??ProcMenuSetMic_0: (+1)
   \       0x1A   0x0023             MOVS     R3,R4
   \       0x1C   0xF240 0x42B3      MOVW     R2,#+1203
   \       0x20   0x....             LDR.N    R1,??DataTable27_46
   \       0x22   0x....             LDR.N    R0,??DataTable27_34
   \       0x24   0x.... 0x....      BL       printf
   1204          		break;
   1205          	}
   1206          	//  1초후 Main화면 갱신.
   1207          	HAL_Delay( 1000 );
   \                     ??ProcMenuSetMic_2: (+1)
   \       0x28   0xF44F 0x707A      MOV      R0,#+1000
   \       0x2C   0x.... 0x....      BL       HAL_Delay
   1208          	UpdateLCDMain();
   \       0x30   0x.... 0x....      BL       UpdateLCDMain
   1209          
   1210          	SetActiveMenu( NULL );
   \       0x34   0x2000             MOVS     R0,#+0
   \       0x36   0x.... 0x....      BL       SetActiveMenu
   1211          }
   \       0x3A   0xBD10             POP      {R4,PC}
   1212          
   1213          //========================================================================

   \                                 In section .text, align 2, keep-with-next
   1214          void 	ProcMenuSetSpk( int idxItem )
   1215          //========================================================================
   1216          {
   \                     ProcMenuSetSpk: (+1)
   \        0x0   0xB510             PUSH     {R4,LR}
   \        0x2   0x0004             MOVS     R4,R0
   1217          	LCDMenuUpDown( 0 );
   \        0x4   0x2000             MOVS     R0,#+0
   \        0x6   0x.... 0x....      BL       LCDMenuUpDown
   1218          
   1219          	//	Spk : 0 ~ 3
   1220          
   1221          	switch( idxItem )
   \        0xA   0x0020             MOVS     R0,R4
   \        0xC   0x2800             CMP      R0,#+0
   \        0xE   0x2803             CMP      R0,#+3
   \       0x10   0xD803             BHI.N    ??ProcMenuSetSpk_0
   1222          	{
   1223          	case 0:
   1224          	case 1:
   1225          	case 2:
   1226          	case 3:
   1227          		SetSpkVol(idxItem);
   \                     ??ProcMenuSetSpk_1: (+1)
   \       0x12   0x0020             MOVS     R0,R4
   \       0x14   0x.... 0x....      BL       SetSpkVol
   1228          		break;
   \       0x18   0xE006             B.N      ??ProcMenuSetSpk_2
   1229          	default:
   1230          		printf("%s(%d) - invalid menu(%d)\n", __func__, __LINE__, idxItem);
   \                     ??ProcMenuSetSpk_0: (+1)
   \       0x1A   0x0023             MOVS     R3,R4
   \       0x1C   0xF240 0x42CE      MOVW     R2,#+1230
   \       0x20   0x....             LDR.N    R1,??DataTable27_47
   \       0x22   0x....             LDR.N    R0,??DataTable27_34
   \       0x24   0x.... 0x....      BL       printf
   1231          		break;
   1232          	}
   1233          	//  1초후 Main화면 갱신.
   1234          	HAL_Delay( 1000 );
   \                     ??ProcMenuSetSpk_2: (+1)
   \       0x28   0xF44F 0x707A      MOV      R0,#+1000
   \       0x2C   0x.... 0x....      BL       HAL_Delay
   1235          	UpdateLCDMain();
   \       0x30   0x.... 0x....      BL       UpdateLCDMain
   1236          
   1237          	SetActiveMenu( NULL );
   \       0x34   0x2000             MOVS     R0,#+0
   \       0x36   0x.... 0x....      BL       SetActiveMenu
   1238          }
   \       0x3A   0xBD10             POP      {R4,PC}
   1239          
   1240          
   1241          //========================================================================

   \                                 In section .text, align 2, keep-with-next
   1242          void 	ProcMenuSetTxPwr( int idxItem )
   1243          //========================================================================
   1244          {
   \                     ProcMenuSetTxPwr: (+1)
   \        0x0   0xB510             PUSH     {R4,LR}
   \        0x2   0x0004             MOVS     R4,R0
   1245          	LCDMenuUpDown( 0 );
   \        0x4   0x2000             MOVS     R0,#+0
   \        0x6   0x.... 0x....      BL       LCDMenuUpDown
   1246          
   1247          //	char *_sSetTxPwrList[] = { 	" Pwr : -38 dBm",	//	0
   1248          //								" Pwr : -20 dBm",	//	1
   1249          //								" Pwr : -5 dBm",	//	4
   1250          //								" Pwr : 0 dBm",		//	7
   1251          //								" Pwr : 5 dBm",		//	12
   1252          //								" Pwr : 10 dBm",	//	22
   1253          //								" Pwr : 15 dBm",	//	40
   1254          //								" Pwr : 20 dBm",	//	127
   1255          //							};
   1256          
   1257          	switch( idxItem )
   \        0xA   0x2C00             CMP      R4,#+0
   \        0xC   0xD009             BEQ.N    ??ProcMenuSetTxPwr_0
   \        0xE   0x2C02             CMP      R4,#+2
   \       0x10   0xD00F             BEQ.N    ??ProcMenuSetTxPwr_1
   \       0x12   0xD30A             BCC.N    ??ProcMenuSetTxPwr_2
   \       0x14   0x2C04             CMP      R4,#+4
   \       0x16   0xD014             BEQ.N    ??ProcMenuSetTxPwr_3
   \       0x18   0xD30F             BCC.N    ??ProcMenuSetTxPwr_4
   \       0x1A   0x2C06             CMP      R4,#+6
   \       0x1C   0xD019             BEQ.N    ??ProcMenuSetTxPwr_5
   \       0x1E   0xD314             BCC.N    ??ProcMenuSetTxPwr_6
   \       0x20   0xE01B             B.N      ??ProcMenuSetTxPwr_7
   1258          	{
   1259          	case 0:	vRadio_Set_TxPower(0);		break;
   \                     ??ProcMenuSetTxPwr_0: (+1)
   \       0x22   0x2000             MOVS     R0,#+0
   \       0x24   0x.... 0x....      BL       vRadio_Set_TxPower
   \       0x28   0xE01E             B.N      ??ProcMenuSetTxPwr_8
   1260          	case 1:	vRadio_Set_TxPower(1);		break;
   \                     ??ProcMenuSetTxPwr_2: (+1)
   \       0x2A   0x2001             MOVS     R0,#+1
   \       0x2C   0x.... 0x....      BL       vRadio_Set_TxPower
   \       0x30   0xE01A             B.N      ??ProcMenuSetTxPwr_8
   1261          	case 2:	vRadio_Set_TxPower(4);		break;
   \                     ??ProcMenuSetTxPwr_1: (+1)
   \       0x32   0x2004             MOVS     R0,#+4
   \       0x34   0x.... 0x....      BL       vRadio_Set_TxPower
   \       0x38   0xE016             B.N      ??ProcMenuSetTxPwr_8
   1262          	case 3:	vRadio_Set_TxPower(7);		break;
   \                     ??ProcMenuSetTxPwr_4: (+1)
   \       0x3A   0x2007             MOVS     R0,#+7
   \       0x3C   0x.... 0x....      BL       vRadio_Set_TxPower
   \       0x40   0xE012             B.N      ??ProcMenuSetTxPwr_8
   1263          	case 4:	vRadio_Set_TxPower(12);		break;
   \                     ??ProcMenuSetTxPwr_3: (+1)
   \       0x42   0x200C             MOVS     R0,#+12
   \       0x44   0x.... 0x....      BL       vRadio_Set_TxPower
   \       0x48   0xE00E             B.N      ??ProcMenuSetTxPwr_8
   1264          	case 5:	vRadio_Set_TxPower(40);		break;
   \                     ??ProcMenuSetTxPwr_6: (+1)
   \       0x4A   0x2028             MOVS     R0,#+40
   \       0x4C   0x.... 0x....      BL       vRadio_Set_TxPower
   \       0x50   0xE00A             B.N      ??ProcMenuSetTxPwr_8
   1265          	case 6:	vRadio_Set_TxPower(127);	break;
   \                     ??ProcMenuSetTxPwr_5: (+1)
   \       0x52   0x207F             MOVS     R0,#+127
   \       0x54   0x.... 0x....      BL       vRadio_Set_TxPower
   \       0x58   0xE006             B.N      ??ProcMenuSetTxPwr_8
   1266          	default:
   1267          		printf("%s(%d) - invalid menu(%d)\n", __func__, __LINE__, idxItem);
   \                     ??ProcMenuSetTxPwr_7: (+1)
   \       0x5A   0x0023             MOVS     R3,R4
   \       0x5C   0xF240 0x42F3      MOVW     R2,#+1267
   \       0x60   0x....             LDR.N    R1,??DataTable27_48
   \       0x62   0x....             LDR.N    R0,??DataTable27_34
   \       0x64   0x.... 0x....      BL       printf
   1268          		break;
   1269          	}
   1270          	//  1초후 Main화면 갱신.
   1271          	HAL_Delay( 1000 );
   \                     ??ProcMenuSetTxPwr_8: (+1)
   \       0x68   0xF44F 0x707A      MOV      R0,#+1000
   \       0x6C   0x.... 0x....      BL       HAL_Delay
   1272          	UpdateLCDMain();
   \       0x70   0x.... 0x....      BL       UpdateLCDMain
   1273          
   1274          	SetActiveMenu( NULL );
   \       0x74   0x2000             MOVS     R0,#+0
   \       0x76   0x.... 0x....      BL       SetActiveMenu
   1275          }
   \       0x7A   0xBD10             POP      {R4,PC}
   1276          
   1277          
   1278          //========================================================================

   \                                 In section .text, align 2, keep-with-next
   1279          void 	ProcMenuSetRFMode( int idxItem )
   1280          //========================================================================
   1281          {
   \                     ProcMenuSetRFMode: (+1)
   \        0x0   0xB510             PUSH     {R4,LR}
   \        0x2   0x0004             MOVS     R4,R0
   1282          	LCDMenuUpDown( 0 );
   \        0x4   0x2000             MOVS     R0,#+0
   \        0x6   0x.... 0x....      BL       LCDMenuUpDown
   1283          
   1284          	switch( idxItem )
   \        0xA   0x2C00             CMP      R4,#+0
   \        0xC   0xD002             BEQ.N    ??ProcMenuSetRFMode_0
   \        0xE   0x2C01             CMP      R4,#+1
   \       0x10   0xD004             BEQ.N    ??ProcMenuSetRFMode_1
   \       0x12   0xE007             B.N      ??ProcMenuSetRFMode_2
   1285          	{
   1286          	case 0:	SetRFMode(1);		break;
   \                     ??ProcMenuSetRFMode_0: (+1)
   \       0x14   0x2001             MOVS     R0,#+1
   \       0x16   0x.... 0x....      BL       SetRFMode
   \       0x1A   0xE00A             B.N      ??ProcMenuSetRFMode_3
   1287          	case 1:	SetRFMode(2);		break;
   \                     ??ProcMenuSetRFMode_1: (+1)
   \       0x1C   0x2002             MOVS     R0,#+2
   \       0x1E   0x.... 0x....      BL       SetRFMode
   \       0x22   0xE006             B.N      ??ProcMenuSetRFMode_3
   1288          	default:
   1289          		printf("%s(%d) - invalid menu(%d)\n", __func__, __LINE__, idxItem);
   \                     ??ProcMenuSetRFMode_2: (+1)
   \       0x24   0x0023             MOVS     R3,R4
   \       0x26   0xF240 0x5209      MOVW     R2,#+1289
   \       0x2A   0x....             LDR.N    R1,??DataTable27_49
   \       0x2C   0x....             LDR.N    R0,??DataTable27_34
   \       0x2E   0x.... 0x....      BL       printf
   1290          		break;
   1291          	}
   1292          	//  1초후 Main화면 갱신.
   1293          	HAL_Delay( 1000 );
   \                     ??ProcMenuSetRFMode_3: (+1)
   \       0x32   0xF44F 0x707A      MOV      R0,#+1000
   \       0x36   0x.... 0x....      BL       HAL_Delay
   1294          	UpdateLCDMain();
   \       0x3A   0x.... 0x....      BL       UpdateLCDMain
   1295          
   1296          	SetActiveMenu( NULL );
   \       0x3E   0x2000             MOVS     R0,#+0
   \       0x40   0x.... 0x....      BL       SetActiveMenu
   1297          }
   \       0x44   0xBD10             POP      {R4,PC}
   1298          
   1299          //========================================================================

   \                                 In section .text, align 2, keep-with-next
   1300          void	ProcBtnOK( void )
   1301          //========================================================================
   1302          {
   \                     ProcBtnOK: (+1)
   \        0x0   0xB580             PUSH     {R7,LR}
   1303          	if ( GetActiveMenu() == NULL )
   \        0x2   0x.... 0x....      BL       GetActiveMenu
   \        0x6   0x2800             CMP      R0,#+0
   \        0x8   0xD107             BNE.N    ??ProcBtnOK_0
   1304          	{
   1305          		LCDClearMain();
   \        0xA   0x.... 0x....      BL       LCDClearMain
   1306          		//========================================================================
   1307          		//  편성 : XXX
   1308          		UpdateLCDMain();
   \        0xE   0x.... 0x....      BL       UpdateLCDMain
   1309          
   1310          		//========================================================================
   1311          		//	Display Status Disable
   1312          		_bEnDispStat		=	0;
   \       0x12   0x2000             MOVS     R0,#+0
   \       0x14   0x....             LDR.N    R1,??DataTable27_6
   \       0x16   0x6008             STR      R0,[R1, #+0]
   1313          
   1314          		return;
   \       0x18   0xE009             B.N      ??ProcBtnOK_1
   1315          	}
   1316          	else if ( g_pActiveMenu->cbFunc != NULL )
   \                     ??ProcBtnOK_0: (+1)
   \       0x1A   0x....             LDR.N    R1,??DataTable27_2
   \       0x1C   0x6808             LDR      R0,[R1, #+0]
   \       0x1E   0x68C0             LDR      R0,[R0, #+12]
   \       0x20   0x2800             CMP      R0,#+0
   \       0x22   0xD004             BEQ.N    ??ProcBtnOK_2
   1317          	{
   1318          		//	Menu Procedure Function
   1319          		g_pActiveMenu->cbFunc( g_pActiveMenu->currIdx );
   \       0x24   0x6808             LDR      R0,[R1, #+0]
   \       0x26   0x6880             LDR      R0,[R0, #+8]
   \       0x28   0x6809             LDR      R1,[R1, #+0]
   \       0x2A   0x68C9             LDR      R1,[R1, #+12]
   \       0x2C   0x4788             BLX      R1
   1320          	}
   1321          }
   \                     ??ProcBtnOK_2: (+1)
   \                     ??ProcBtnOK_1: (+1)
   \       0x2E   0xBD01             POP      {R0,PC}

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable27:
   \        0x0   0x....'....        DC32     g_bEnMenuMaint

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable27_1:
   \        0x0   0x....'....        DC32     ?_75

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable27_2:
   \        0x0   0x....'....        DC32     g_pActiveMenu

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable27_3:
   \        0x0   0x....'....        DC32     g_idxTrainSet

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable27_4:
   \        0x0   0x....'....        DC32     ?_76

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable27_5:
   \        0x0   0x....'....        DC32     `UpdateLCDMonitor::oldTick`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable27_6:
   \        0x0   0x....'....        DC32     _bEnDispStat

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable27_7:
   \        0x0   0x....'....        DC32     g_nRSSI

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable27_8:
   \        0x0   0x....'....        DC32     g_flagRspID

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable27_9:
   \        0x0   0x....'....        DC32     ?_77

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable27_10:
   \        0x0   0x....'....        DC32     g_MenuMainMaint

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable27_11:
   \        0x0   0x....'....        DC32     g_MenuMainBase

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable27_12:
   \        0x0   0x....'....        DC32     ?_78

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable27_13:
   \        0x0   0x....'....        DC32     ?_79

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable27_14:
   \        0x0   0x....'....        DC32     ?_80

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable27_15:
   \        0x0   0x....'....        DC32     ?_81

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable27_16:
   \        0x0   0x....'....        DC32     ?_82

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable27_17:
   \        0x0   0x....'....        DC32     g_MenuSetCmdTSList

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable27_18:
   \        0x0   0x....'....        DC32     g_MenuSetCmdCarList

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable27_19:
   \        0x0   0x....'....        DC32     g_MenuSetCmdRFModeList

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable27_20:
   \        0x0   0x....'....        DC32     ?_83

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable27_21:
   \        0x0   0x....'....        DC32     ?_84

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable27_22:
   \        0x0   0x....'....        DC32     ?_85

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable27_23:
   \        0x0   0x....'....        DC32     g_MenuLightCtrl

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable27_24:
   \        0x0   0x....'....        DC32     g_MenuVerList

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable27_25:
   \        0x0   0x....'....        DC32     g_MenuTrainSet

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable27_26:
   \        0x0   0x....'....        DC32     g_MenuRFTIDList

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable27_27:
   \        0x0   0x....'....        DC32     g_MenuSelfTestList_OK

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable27_28:
   \        0x0   0x....'....        DC32     g_MenuDiagList

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable27_29:
   \        0x0   0x....'....        DC32     g_MenuSettingList

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable27_30:
   \        0x0   0x....'....        DC32     g_MenuCmdList

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable27_31:
   \        0x0   0x....'....        DC32     ?_86

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable27_32:
   \        0x0   0x....'....        DC32     ?_87

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable27_33:
   \        0x0   0x....'....        DC32     `ProcMenuRFTID::__func__`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable27_34:
   \        0x0   0x....'....        DC32     ?_88

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable27_35:
   \        0x0   0x4002'1000        DC32     0x40021000

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable27_36:
   \        0x0   0x....'....        DC32     `ProcMenuDiag::__func__`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable27_37:
   \        0x0   0x....'....        DC32     ?_89

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable27_38:
   \        0x0   0x....'....        DC32     ?_90

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable27_39:
   \        0x0   0x....'....        DC32     ?_91

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable27_40:
   \        0x0   0x....'....        DC32     g_MenuSetMicList

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable27_41:
   \        0x0   0x....'....        DC32     g_MenuSetSpkList

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable27_42:
   \        0x0   0x....'....        DC32     g_MenuSetTxPwrList

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable27_43:
   \        0x0   0x....'....        DC32     g_MenuSetRFModeList

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable27_44:
   \        0x0   0x....'....        DC32     g_nRFMode

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable27_45:
   \        0x0   0x....'....        DC32     `ProcMenuSetting::__func__`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable27_46:
   \        0x0   0x....'....        DC32     `ProcMenuSetMic::__func__`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable27_47:
   \        0x0   0x....'....        DC32     `ProcMenuSetSpk::__func__`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable27_48:
   \        0x0   0x....'....        DC32     `ProcMenuSetTxPwr::__func__`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable27_49:
   \        0x0   0x....'....        DC32     `ProcMenuSetRFMode::__func__`

   \                                 In section .rodata, align 4
   \                     ?_0:
   \        0x0   0x31 0x2E          DC8 "1. \354\241\260\353\252\205\354\206\214\353\223\261"

   \              0x20 0xEC    

   \              0xA1 0xB0    

   \              0xEB 0xAA    

   \              0x85 0xEC    

   \              0x86 0x8C    

   \              0xEB 0x93    

   \              0xB1 0x00

   \                                 In section .rodata, align 4
   \                     ?_1:
   \        0x0   0x32 0x2E          DC8 "2. \354\241\260\353\252\205\354\240\220\353\223\261"

   \              0x20 0xEC    

   \              0xA1 0xB0    

   \              0xEB 0xAA    

   \              0x85 0xEC    

   \              0xA0 0x90    

   \              0xEB 0x93    

   \              0xB1 0x00

   \                                 In section .rodata, align 4
   \                     ?_2:
   \        0x0   0x20 0x34          DC8 " 401 \355\216\270\354\204\261"

   \              0x30 0x31    

   \              0x20 0xED    

   \              0x8E 0xB8    

   \              0xEC 0x84    

   \              0xB1 0x00

   \                                 In section .rodata, align 4
   \                     ?_3:
   \        0x0   0x20 0x34          DC8 " 402 \355\216\270\354\204\261"

   \              0x30 0x32    

   \              0x20 0xED    

   \              0x8E 0xB8    

   \              0xEC 0x84    

   \              0xB1 0x00

   \                                 In section .rodata, align 4
   \                     ?_4:
   \        0x0   0x20 0x34          DC8 " 403 \355\216\270\354\204\261"

   \              0x30 0x33    

   \              0x20 0xED    

   \              0x8E 0xB8    

   \              0xEC 0x84    

   \              0xB1 0x00

   \                                 In section .rodata, align 4
   \                     ?_5:
   \        0x0   0x20 0x34          DC8 " 404 \355\216\270\354\204\261"

   \              0x30 0x34    

   \              0x20 0xED    

   \              0x8E 0xB8    

   \              0xEC 0x84    

   \              0xB1 0x00

   \                                 In section .rodata, align 4
   \                     ?_6:
   \        0x0   0x20 0x34          DC8 " 405 \355\216\270\354\204\261"

   \              0x30 0x35    

   \              0x20 0xED    

   \              0x8E 0xB8    

   \              0xEC 0x84    

   \              0xB1 0x00

   \                                 In section .rodata, align 4
   \                     ?_7:
   \        0x0   0x20 0x34          DC8 " 406 \355\216\270\354\204\261"

   \              0x30 0x36    

   \              0x20 0xED    

   \              0x8E 0xB8    

   \              0xEC 0x84    

   \              0xB1 0x00

   \                                 In section .rodata, align 4
   \                     ?_8:
   \        0x0   0x20 0x34          DC8 " 407 \355\216\270\354\204\261"

   \              0x30 0x37    

   \              0x20 0xED    

   \              0x8E 0xB8    

   \              0xEC 0x84    

   \              0xB1 0x00

   \                                 In section .rodata, align 4
   \                     ?_9:
   \        0x0   0x20 0x34          DC8 " 408 \355\216\270\354\204\261"

   \              0x30 0x38    

   \              0x20 0xED    

   \              0x8E 0xB8    

   \              0xEC 0x84    

   \              0xB1 0x00

   \                                 In section .rodata, align 4
   \                     ?_10:
   \        0x0   0x20 0x34          DC8 " 409 \355\216\270\354\204\261"

   \              0x30 0x39    

   \              0x20 0xED    

   \              0x8E 0xB8    

   \              0xEC 0x84    

   \              0xB1 0x00

   \                                 In section .rodata, align 4
   \                     ?_11:
   \        0x0   0x20 0x34          DC8 " 410 \355\216\270\354\204\261"

   \              0x31 0x30    

   \              0x20 0xED    

   \              0x8E 0xB8    

   \              0xEC 0x84    

   \              0xB1 0x00

   \                                 In section .rodata, align 4
   \                     ?_12:
   \        0x0   0x20 0x34          DC8 " 411 \355\216\270\354\204\261"

   \              0x31 0x31    

   \              0x20 0xED    

   \              0x8E 0xB8    

   \              0xEC 0x84    

   \              0xB1 0x00

   \                                 In section .rodata, align 4
   \                     ?_13:
   \        0x0   0x20 0x34          DC8 " 412 \355\216\270\354\204\261"

   \              0x31 0x32    

   \              0x20 0xED    

   \              0x8E 0xB8    

   \              0xEC 0x84    

   \              0xB1 0x00

   \                                 In section .rodata, align 4
   \                     ?_14:
   \        0x0   0x20 0x34          DC8 " 413 \355\216\270\354\204\261"

   \              0x31 0x33    

   \              0x20 0xED    

   \              0x8E 0xB8    

   \              0xEC 0x84    

   \              0xB1 0x00

   \                                 In section .rodata, align 4
   \                     ?_15:
   \        0x0   0x20 0x34          DC8 " 414 \355\216\270\354\204\261"

   \              0x31 0x34    

   \              0x20 0xED    

   \              0x8E 0xB8    

   \              0xEC 0x84    

   \              0xB1 0x00

   \                                 In section .rodata, align 4
   \                     ?_16:
   \        0x0   0x20 0x34          DC8 " 415 \355\216\270\354\204\261"

   \              0x31 0x35    

   \              0x20 0xED    

   \              0x8E 0xB8    

   \              0xEC 0x84    

   \              0xB1 0x00

   \                                 In section .rodata, align 4
   \                     ?_17:
   \        0x0   0x20 0xEC          DC8 " \354\206\241\354\213\240\352\270\260#1"

   \              0x86 0xA1    

   \              0xEC 0x8B    

   \              0xA0 0xEA    

   \              0xB8 0xB0    

   \              0x23 0x31    

   \              0x00
   \        0xD                      DS8 3

   \                                 In section .rodata, align 4
   \                     ?_18:
   \        0x0   0x20 0xEC          DC8 " \354\206\241\354\213\240\352\270\260#2"

   \              0x86 0xA1    

   \              0xEC 0x8B    

   \              0xA0 0xEA    

   \              0xB8 0xB0    

   \              0x23 0x32    

   \              0x00
   \        0xD                      DS8 3

   \                                 In section .rodata, align 4
   \                     ?_19:
   \        0x0   0x20 0x41          DC8 " AudioLoop:Off"

   \              0x75 0x64    

   \              0x69 0x6F    

   \              0x4C 0x6F    

   \              0x6F 0x70    

   \              0x3A 0x4F    

   \              0x66 0x66    

   \              0x00
   \        0xF                      DS8 1

   \                                 In section .rodata, align 4
   \                     ?_20:
   \        0x0   0x20 0x41          DC8 " AudioLoop:On"

   \              0x75 0x64    

   \              0x69 0x6F    

   \              0x4C 0x6F    

   \              0x6F 0x70    

   \              0x3A 0x4F    

   \              0x6E 0x00
   \        0xE                      DS8 2

   \                                 In section .rodata, align 4
   \                     ?_21:
   \        0x0   0x20 0x41          DC8 " AudioSine:On"

   \              0x75 0x64    

   \              0x69 0x6F    

   \              0x53 0x69    

   \              0x6E 0x65    

   \              0x3A 0x4F    

   \              0x6E 0x00
   \        0xE                      DS8 2

   \                                 In section .rodata, align 4
   \                     ?_22:
   \        0x0   0x20 0x4D          DC8 " Mic Vol"

   \              0x69 0x63    

   \              0x20 0x56    

   \              0x6F 0x6C    

   \              0x00
   \        0x9                      DS8 3

   \                                 In section .rodata, align 4
   \                     ?_23:
   \        0x0   0x20 0x53          DC8 " Spk Vol"

   \              0x70 0x6B    

   \              0x20 0x56    

   \              0x6F 0x6C    

   \              0x00
   \        0x9                      DS8 3

   \                                 In section .rodata, align 4
   \                     ?_24:
   \        0x0   0x20 0x52          DC8 " RF Tx Pwr"

   \              0x46 0x20    

   \              0x54 0x78    

   \              0x20 0x50    

   \              0x77 0x72    

   \              0x00
   \        0xB                      DS8 1

   \                                 In section .rodata, align 4
   \                     ?_25:
   \        0x0   0x20 0x52          DC8 " RF Mode"

   \              0x46 0x20    

   \              0x4D 0x6F    

   \              0x64 0x65    

   \              0x00
   \        0x9                      DS8 3

   \                                 In section .rodata, align 4
   \                     ?_26:
   \        0x0   0x20 0x4D          DC8 " Mic : 0"

   \              0x69 0x63    

   \              0x20 0x3A    

   \              0x20 0x30    

   \              0x00
   \        0x9                      DS8 3

   \                                 In section .rodata, align 4
   \                     ?_27:
   \        0x0   0x20 0x4D          DC8 " Mic : 1"

   \              0x69 0x63    

   \              0x20 0x3A    

   \              0x20 0x31    

   \              0x00
   \        0x9                      DS8 3

   \                                 In section .rodata, align 4
   \                     ?_28:
   \        0x0   0x20 0x4D          DC8 " Mic : 2"

   \              0x69 0x63    

   \              0x20 0x3A    

   \              0x20 0x32    

   \              0x00
   \        0x9                      DS8 3

   \                                 In section .rodata, align 4
   \                     ?_29:
   \        0x0   0x20 0x4D          DC8 " Mic : 3"

   \              0x69 0x63    

   \              0x20 0x3A    

   \              0x20 0x33    

   \              0x00
   \        0x9                      DS8 3

   \                                 In section .rodata, align 4
   \                     ?_30:
   \        0x0   0x20 0x4D          DC8 " Mic : 4"

   \              0x69 0x63    

   \              0x20 0x3A    

   \              0x20 0x34    

   \              0x00
   \        0x9                      DS8 3

   \                                 In section .rodata, align 4
   \                     ?_31:
   \        0x0   0x20 0x4D          DC8 " Mic : 5"

   \              0x69 0x63    

   \              0x20 0x3A    

   \              0x20 0x35    

   \              0x00
   \        0x9                      DS8 3

   \                                 In section .rodata, align 4
   \                     ?_32:
   \        0x0   0x20 0x4D          DC8 " Mic : 6"

   \              0x69 0x63    

   \              0x20 0x3A    

   \              0x20 0x36    

   \              0x00
   \        0x9                      DS8 3

   \                                 In section .rodata, align 4
   \                     ?_33:
   \        0x0   0x20 0x4D          DC8 " Mic : 7"

   \              0x69 0x63    

   \              0x20 0x3A    

   \              0x20 0x37    

   \              0x00
   \        0x9                      DS8 3

   \                                 In section .rodata, align 4
   \                     ?_34:
   \        0x0   0x20 0x4D          DC8 " Mic : 8"

   \              0x69 0x63    

   \              0x20 0x3A    

   \              0x20 0x38    

   \              0x00
   \        0x9                      DS8 3

   \                                 In section .rodata, align 4
   \                     ?_35:
   \        0x0   0x20 0x4D          DC8 " Mic : 9"

   \              0x69 0x63    

   \              0x20 0x3A    

   \              0x20 0x39    

   \              0x00
   \        0x9                      DS8 3

   \                                 In section .rodata, align 4
   \                     ?_36:
   \        0x0   0x20 0x53          DC8 " Spk : 0"

   \              0x70 0x6B    

   \              0x20 0x3A    

   \              0x20 0x30    

   \              0x00
   \        0x9                      DS8 3

   \                                 In section .rodata, align 4
   \                     ?_37:
   \        0x0   0x20 0x53          DC8 " Spk : 1"

   \              0x70 0x6B    

   \              0x20 0x3A    

   \              0x20 0x31    

   \              0x00
   \        0x9                      DS8 3

   \                                 In section .rodata, align 4
   \                     ?_38:
   \        0x0   0x20 0x53          DC8 " Spk : 2"

   \              0x70 0x6B    

   \              0x20 0x3A    

   \              0x20 0x32    

   \              0x00
   \        0x9                      DS8 3

   \                                 In section .rodata, align 4
   \                     ?_39:
   \        0x0   0x20 0x53          DC8 " Spk : 3"

   \              0x70 0x6B    

   \              0x20 0x3A    

   \              0x20 0x33    

   \              0x00
   \        0x9                      DS8 3

   \                                 In section .rodata, align 4
   \                     ?_40:
   \        0x0   0x20 0x50          DC8 " Pwr : -38 dBm"

   \              0x77 0x72    

   \              0x20 0x3A    

   \              0x20 0x2D    

   \              0x33 0x38    

   \              0x20 0x64    

   \              0x42 0x6D    

   \              0x00
   \        0xF                      DS8 1

   \                                 In section .rodata, align 4
   \                     ?_41:
   \        0x0   0x20 0x50          DC8 " Pwr : -20 dBm"

   \              0x77 0x72    

   \              0x20 0x3A    

   \              0x20 0x2D    

   \              0x32 0x30    

   \              0x20 0x64    

   \              0x42 0x6D    

   \              0x00
   \        0xF                      DS8 1

   \                                 In section .rodata, align 4
   \                     ?_42:
   \        0x0   0x20 0x50          DC8 " Pwr : -5 dBm"

   \              0x77 0x72    

   \              0x20 0x3A    

   \              0x20 0x2D    

   \              0x35 0x20    

   \              0x64 0x42    

   \              0x6D 0x00
   \        0xE                      DS8 2

   \                                 In section .rodata, align 4
   \                     ?_43:
   \        0x0   0x20 0x50          DC8 " Pwr : 0 dBm"

   \              0x77 0x72    

   \              0x20 0x3A    

   \              0x20 0x30    

   \              0x20 0x64    

   \              0x42 0x6D    

   \              0x00
   \        0xD                      DS8 3

   \                                 In section .rodata, align 4
   \                     ?_44:
   \        0x0   0x20 0x50          DC8 " Pwr : 5 dBm"

   \              0x77 0x72    

   \              0x20 0x3A    

   \              0x20 0x35    

   \              0x20 0x64    

   \              0x42 0x6D    

   \              0x00
   \        0xD                      DS8 3

   \                                 In section .rodata, align 4
   \                     ?_45:
   \        0x0   0x20 0x50          DC8 " Pwr : 10 dBm"

   \              0x77 0x72    

   \              0x20 0x3A    

   \              0x20 0x31    

   \              0x30 0x20    

   \              0x64 0x42    

   \              0x6D 0x00
   \        0xE                      DS8 2

   \                                 In section .rodata, align 4
   \                     ?_46:
   \        0x0   0x20 0x50          DC8 " Pwr : 15 dBm"

   \              0x77 0x72    

   \              0x20 0x3A    

   \              0x20 0x31    

   \              0x35 0x20    

   \              0x64 0x42    

   \              0x6D 0x00
   \        0xE                      DS8 2

   \                                 In section .rodata, align 4
   \                     ?_47:
   \        0x0   0x20 0x50          DC8 " Pwr : 20 dBm"

   \              0x77 0x72    

   \              0x20 0x3A    

   \              0x20 0x32    

   \              0x30 0x20    

   \              0x64 0x42    

   \              0x6D 0x00
   \        0xE                      DS8 2

   \                                 In section .rodata, align 4
   \                     ?_48:
   \        0x0   0x20 0x52          DC8 " RFMode 1"

   \              0x46 0x4D    

   \              0x6F 0x64    

   \              0x65 0x20    

   \              0x31 0x00
   \        0xA                      DS8 2

   \                                 In section .rodata, align 4
   \                     ?_49:
   \        0x0   0x20 0x52          DC8 " RFMode 2"

   \              0x46 0x4D    

   \              0x6F 0x64    

   \              0x65 0x20    

   \              0x32 0x00
   \        0xA                      DS8 2

   \                                 In section .rodata, align 4
   \                     ?_50:
   \        0x0   0x20 0x52          DC8 " Reset"

   \              0x65 0x73    

   \              0x65 0x74    

   \              0x00
   \        0x7                      DS8 1

   \                                 In section .rodata, align 4
   \                     ?_51:
   \        0x0   0x20 0x54          DC8 " TS Set"

   \              0x53 0x20    

   \              0x53 0x65    

   \              0x74 0x00

   \                                 In section .rodata, align 4
   \                     ?_52:
   \        0x0   0x20 0x43          DC8 " Car Set"

   \              0x61 0x72    

   \              0x20 0x53    

   \              0x65 0x74    

   \              0x00
   \        0x9                      DS8 3

   \                                 In section .rodata, align 4
   \                     ?_53:
   \        0x0   0x20 0x52          DC8 " RFMode Set"

   \              0x46 0x4D    

   \              0x6F 0x64    

   \              0x65 0x20    

   \              0x53 0x65    

   \              0x74 0x00

   \                                 In section .rodata, align 4
   \                     ?_54:
   \        0x0   0x20 0x55          DC8 " Upgrade ReTry"

   \              0x70 0x67    

   \              0x72 0x61    

   \              0x64 0x65    

   \              0x20 0x52    

   \              0x65 0x54    

   \              0x72 0x79    

   \              0x00
   \        0xF                      DS8 1

   \                                 In section .rodata, align 4
   \                     ?_55:
   \        0x0   0x20 0x55          DC8 " Upgrade"

   \              0x70 0x67    

   \              0x72 0x61    

   \              0x64 0x65    

   \              0x00
   \        0x9                      DS8 3

   \                                 In section .rodata, align 4
   \                     ?_56:
   \        0x0   0x20 0x43          DC8 " Car : 1"

   \              0x61 0x72    

   \              0x20 0x3A    

   \              0x20 0x31    

   \              0x00
   \        0x9                      DS8 3

   \                                 In section .rodata, align 4
   \                     ?_57:
   \        0x0   0x20 0x43          DC8 " Car : 2"

   \              0x61 0x72    

   \              0x20 0x3A    

   \              0x20 0x32    

   \              0x00
   \        0x9                      DS8 3

   \                                 In section .rodata, align 4
   \                     ?_58:
   \        0x0   0x20 0x43          DC8 " Car : 3"

   \              0x61 0x72    

   \              0x20 0x3A    

   \              0x20 0x33    

   \              0x00
   \        0x9                      DS8 3

   \                                 In section .rodata, align 4
   \                     ?_59:
   \        0x0   0x20 0x43          DC8 " Car : 4"

   \              0x61 0x72    

   \              0x20 0x3A    

   \              0x20 0x34    

   \              0x00
   \        0x9                      DS8 3

   \                                 In section .rodata, align 4
   \                     ?_60:
   \        0x0   0x20 0x43          DC8 " Car : 5"

   \              0x61 0x72    

   \              0x20 0x3A    

   \              0x20 0x35    

   \              0x00
   \        0x9                      DS8 3

   \                                 In section .rodata, align 4
   \                     ?_61:
   \        0x0   0x20 0x43          DC8 " Car : 6"

   \              0x61 0x72    

   \              0x20 0x3A    

   \              0x20 0x36    

   \              0x00
   \        0x9                      DS8 3

   \                                 In section .rodata, align 4
   \                     ?_62:
   \        0x0   0x20 0x43          DC8 " Car : 7"

   \              0x61 0x72    

   \              0x20 0x3A    

   \              0x20 0x37    

   \              0x00
   \        0x9                      DS8 3

   \                                 In section .rodata, align 4
   \                     ?_63:
   \        0x0   0x20 0x43          DC8 " Car : 8"

   \              0x61 0x72    

   \              0x20 0x3A    

   \              0x20 0x38    

   \              0x00
   \        0x9                      DS8 3

   \                                 In section .rodata, align 4
   \                     ?_64:
   \        0x0   0x20 0x43          DC8 " Car : 9"

   \              0x61 0x72    

   \              0x20 0x3A    

   \              0x20 0x39    

   \              0x00
   \        0x9                      DS8 3

   \                                 In section .rodata, align 4
   \                     ?_65:
   \        0x0   0x20 0x43          DC8 " Car : 10"

   \              0x61 0x72    

   \              0x20 0x3A    

   \              0x20 0x31    

   \              0x30 0x00
   \        0xA                      DS8 2

   \                                 In section .rodata, align 4
   \                     ?_66:
   \        0x0   0x31 0x2E          DC8 "1. \354\241\260\353\252\205\354\240\234\354\226\264"

   \              0x20 0xEC    

   \              0xA1 0xB0    

   \              0xEB 0xAA    

   \              0x85 0xEC    

   \              0xA0 0x9C    

   \              0xEC 0x96    

   \              0xB4 0x00

   \                                 In section .rodata, align 4
   \                     ?_67:
   \        0x0   0x32 0x2E          DC8 "2. S/W \353\262\204\354\240\204"

   \              0x20 0x53    

   \              0x2F 0x57    

   \              0x20 0xEB    

   \              0xB2 0x84    

   \              0xEC 0xA0    

   \              0x84 0x00
   \        0xE                      DS8 2

   \                                 In section .rodata, align 4
   \                     ?_68:
   \        0x0   0x33 0x2E          DC8 "3. \355\216\270\354\204\261\354\204\244\354\240\225"

   \              0x20 0xED    

   \              0x8E 0xB8    

   \              0xEC 0x84    

   \              0xB1 0xEC    

   \              0x84 0xA4    

   \              0xEC 0xA0    

   \              0x95 0x00

   \                                 In section .rodata, align 4
   \                     ?_69:
   \        0x0   0x34 0x2E          DC8 "4. \354\206\241\354\213\240\352\270\260ID"

   \              0x20 0xEC    

   \              0x86 0xA1    

   \              0xEC 0x8B    

   \              0xA0 0xEA    

   \              0xB8 0xB0    

   \              0x49 0x44    

   \              0x00
   \        0xF                      DS8 1

   \                                 In section .rodata, align 4
   \                     ?_70:
   \        0x0   0x35 0x2E          DC8 "5. \354\236\220\352\260\200\354\247\204\353\213\250"

   \              0x20 0xEC    

   \              0x9E 0x90    

   \              0xEA 0xB0    

   \              0x80 0xEC    

   \              0xA7 0x84    

   \              0xEB 0x8B    

   \              0xA8 0x00

   \                                 In section .rodata, align 4
   \                     ?_71:
   \        0x0   0x36 0x2E          DC8 "6. \354\247\204    \353\213\250"

   \              0x20 0xEC    

   \              0xA7 0x84    

   \              0x20 0x20    

   \              0x20 0x20    

   \              0xEB 0x8B    

   \              0xA8 0x00
   \        0xE                      DS8 2

   \                                 In section .rodata, align 4
   \                     ?_72:
   \        0x0   0x37 0x2E          DC8 "7. \354\204\244    \354\240\225"

   \              0x20 0xEC    

   \              0x84 0xA4    

   \              0x20 0x20    

   \              0x20 0x20    

   \              0xEC 0xA0    

   \              0x95 0x00
   \        0xE                      DS8 2

   \                                 In section .rodata, align 4
   \                     ?_73:
   \        0x0   0x38 0x2E          DC8 "8. \354\203\201\355\203\234\354\240\225\353\263\264"

   \              0x20 0xEC    

   \              0x83 0x81    

   \              0xED 0x83    

   \              0x9C 0xEC    

   \              0xA0 0x95    

   \              0xEB 0xB3    

   \              0xB4 0x00

   \                                 In section .rodata, align 4
   \                     ?_74:
   \        0x0   0x39 0x2E          DC8 "9. \353\252\205\353\240\271\354\240\204\354\206\241"

   \              0x20 0xEB    

   \              0xAA 0x85    

   \              0xEB 0xA0    

   \              0xB9 0xEC    

   \              0xA0 0x84    

   \              0xEC 0x86    

   \              0xA1 0x00

   \                                 In section .rodata, align 4
   \                     ?_75:
   \        0x0   0x5B 0x4D          DC8 "[Maint. Menu]"

   \              0x61 0x69    

   \              0x6E 0x74    

   \              0x2E 0x20    

   \              0x4D 0x65    

   \              0x6E 0x75    

   \              0x5D 0x00
   \        0xE                      DS8 2

   \                                 In section .rodata, align 4
   \                     ?_76:
   \        0x0   0xED 0x8E          DC8 "\355\216\270\354\204\261 : %d"

   \              0xB8 0xEC    

   \              0x84 0xB1    

   \              0x20 0x3A    

   \              0x20 0x25    

   \              0x64 0x00

   \                                 In section .rodata, align 4
   \                     ?_77:
   \        0x0   0x53 0x74          DC8 "Stat:%04X / %02d"

   \              0x61 0x74    

   \              0x3A 0x25    

   \              0x30 0x34    

   \              0x58 0x20    

   \              0x2F 0x20    

   \              0x25 0x30    

   \              0x32 0x64    

   \              0x00
   \       0x11                      DS8 3

   \                                 In section .rodata, align 4
   \                     ?_78:
   \        0x0   0x5B 0xEC          DC8 "[\354\241\260\353\252\205 \354\240\220\353\223\261]"

   \              0xA1 0xB0    

   \              0xEB 0xAA    

   \              0x85 0x20    

   \              0xEC 0xA0    

   \              0x90 0xEB    

   \              0x93 0xB1    

   \              0x5D 0x00

   \                                 In section .rodata, align 4
   \                     ?_79:
   \        0x0   0x5B 0xEC          DC8 "[\354\241\260\353\252\205 \354\206\214\353\223\261]"

   \              0xA1 0xB0    

   \              0xEB 0xAA    

   \              0x85 0x20    

   \              0xEC 0x86    

   \              0x8C 0xEB    

   \              0x93 0xB1    

   \              0x5D 0x00

   \                                 In section .rodata, align 4
   \                     ?_80:
   \        0x0   0x52 0x46          DC8 "RFM v1.1.0.370"

   \              0x4D 0x20    

   \              0x76 0x31    

   \              0x2E 0x31    

   \              0x2E 0x30    

   \              0x2E 0x33    

   \              0x37 0x30    

   \              0x00
   \        0xF                      DS8 1

   \                                 In section .rodata, align 4
   \                     ?_81:
   \        0x0   0x0000'0001        DC32 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 0, 0, 0, 0, 0

   \              0x0000'0002  

   \              0x0000'0003  

   \              0x0000'0004  

   \              0x0000'0005  

   \              0x0000'0006  

   \              0x0000'0007  

   \              0x0000'0008  

   \              0x0000'0009  

   \              0x0000'000A  

   \              0x0000'000B  

   \              0x0000'000C  

   \              0x0000'000D  

   \              0x0000'000E  

   \              0x0000'000F  

   \              0x0000'0000  

   \              0x0000'0000  

   \              0x0000'0000  

   \              0x0000'0000  

   \              0x0000'0000

   \                                 In section .rodata, align 4
   \                     ?_82:
   \        0x0   0x5B 0xED          DC8 "[\355\216\270\354\204\261\354\204\244\354\240\225]"

   \              0x8E 0xB8    

   \              0xEC 0x84    

   \              0xB1 0xEC    

   \              0x84 0xA4    

   \              0xEC 0xA0    

   \              0x95 0x5D    

   \              0x00
   \        0xF                      DS8 1

   \                                 In section .rodata, align 4
   \                     ?_83:
   \        0x0   0x5B 0xEB          DC8 "[\353\252\205\353\240\271\354\240\204\354\206\241]"

   \              0xAA 0x85    

   \              0xEB 0xA0    

   \              0xB9 0xEC    

   \              0xA0 0x84    

   \              0xEC 0x86    

   \              0xA1 0x5D    

   \              0x00
   \        0xF                      DS8 1

   \                                 In section .rodata, align 4
   \                     ?_84:
   \        0x0   0x0000'0001        DC32 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 0, 0, 0, 0, 0

   \              0x0000'0002  

   \              0x0000'0003  

   \              0x0000'0004  

   \              0x0000'0005  

   \              0x0000'0006  

   \              0x0000'0007  

   \              0x0000'0008  

   \              0x0000'0009  

   \              0x0000'000A  

   \              0x0000'000B  

   \              0x0000'000C  

   \              0x0000'000D  

   \              0x0000'000E  

   \              0x0000'000F  

   \              0x0000'0000  

   \              0x0000'0000  

   \              0x0000'0000  

   \              0x0000'0000  

   \              0x0000'0000

   \                                 In section .rodata, align 4
   \                     ?_85:
   \        0x0   0x0000'0001        DC32 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 0, 0, 0, 0, 0

   \              0x0000'0002  

   \              0x0000'0003  

   \              0x0000'0004  

   \              0x0000'0005  

   \              0x0000'0006  

   \              0x0000'0007  

   \              0x0000'0008  

   \              0x0000'0009  

   \              0x0000'000A  

   \              0x0000'000B  

   \              0x0000'000C  

   \              0x0000'000D  

   \              0x0000'000E  

   \              0x0000'000F  

   \              0x0000'0000  

   \              0x0000'0000  

   \              0x0000'0000  

   \              0x0000'0000  

   \              0x0000'0000

   \                                 In section .rodata, align 4
   \                     ?_86:
   \        0x0   0x53 0x65          DC8 "Set RFT#1"

   \              0x74 0x20    

   \              0x52 0x46    

   \              0x54 0x23    

   \              0x31 0x00
   \        0xA                      DS8 2

   \                                 In section .rodata, align 4
   \                     ?_87:
   \        0x0   0x53 0x65          DC8 "Set RFT#2"

   \              0x74 0x20    

   \              0x52 0x46    

   \              0x54 0x23    

   \              0x32 0x00
   \        0xA                      DS8 2

   \                                 In section .rodata, align 4
   \                     ?_88:
   \        0x0   0x25 0x73          DC8 "%s(%d) - invalid menu(%d)\012"

   \              0x28 0x25    

   \              0x64 0x29    

   \              0x20 0x2D    

   \              0x20 0x69    

   \              0x6E 0x76    

   \              0x61 0x6C    

   \              0x69 0x64    

   \              0x20 0x6D    

   \              0x65 0x6E    

   \              0x75 0x28    

   \              0x25 0x64    

   \              0x29 0x0A    

   \              0x00
   \       0x1B                      DS8 1

   \                                 In section .rodata, align 4
   \                     ?_89:
   \        0x0   0x25 0x73          DC8 "%s(%d) - sine\012"

   \              0x28 0x25    

   \              0x64 0x29    

   \              0x20 0x2D    

   \              0x20 0x73    

   \              0x69 0x6E    

   \              0x65 0x0A    

   \              0x00
   \        0xF                      DS8 1

   \                                 In section .rodata, align 4
   \                     ?_90:
   \        0x0   0x41 0x75          DC8 "Audio Loop"

   \              0x64 0x69    

   \              0x6F 0x20    

   \              0x4C 0x6F    

   \              0x6F 0x70    

   \              0x00
   \        0xB                      DS8 1

   \                                 In section .rodata, align 4
   \                     ?_91:
   \        0x0   0x41 0x75          DC8 "Audio Sine"

   \              0x64 0x69    

   \              0x6F 0x20    

   \              0x53 0x69    

   \              0x6E 0x65    

   \              0x00
   \        0xB                      DS8 1
   1322          
   1323          
   1324          //========================================================================
   1325          
   1326          
   1327          //#define	 USE_PTT_KEY_TOGGLE	  1	   //  PTT Toggle Key
   1328          

   Maximum stack usage in bytes:

   .cstack Function
   ------- --------
       8   EnableMenuMaint
         8   -> LCDPrintfXY
       0   GetActiveMenu
       0   IsMenuMaint
       8   ProcBtnDown
         8   -> GetActiveMenu
         8   -> UpdateLCDMenu
       8   ProcBtnMenu
         8   -> GetActiveMenu
         8   -> SetActiveMenu
         8   -> UpdateLCDMenu
       8   ProcBtnOK
         8   -- Indirect call
         8   -> GetActiveMenu
         8   -> LCDClearMain
         8   -> UpdateLCDMain
       8   ProcBtnUp
         8   -> GetActiveMenu
         8   -> UpdateLCDMenu
       0   ProcDispStat
       8   ProcDispVer
         8   -> LCDPrintf
         8   -> LCDSetCursor
       8   ProcLightOff
         8   -> GetChNearRFM
         8   -> HAL_Delay
         8   -> LCDPrintf
         8   -> LCDSetCursor
         8   -> SendLightOff
         8   -> SetChPA
       8   ProcLightOn
         8   -> GetChNearRFM
         8   -> HAL_Delay
         8   -> LCDPrintf
         8   -> LCDSetCursor
         8   -> SendLightOn
         8   -> SetChPA
       8   ProcMenuCmd
         8   -> GetActiveMenu
         8   -> HAL_Delay
         8   -> LCDPrintf
         8   -> LCDSetCursor
         8   -> SendRFCmdReset
         8   -> SendRFCmdUpgrade
         8   -> SetActiveMenu
         8   -> UpdateLCDMain
         8   -> UpdateLCDMenu
       8   ProcMenuDiag
         8   -> AudioDMALoopback
         8   -> AudioPlayDMASine
         8   -> AudioStop
         8   -> HAL_GPIO_WritePin
         8   -> LCDMenuUpDown
         8   -> LCDPrintf
         8   -> printf
       8   ProcMenuLightCtrl
         8   -> HAL_Delay
         8   -> LCDMenuUpDown
         8   -> ProcLightOff
         8   -> ProcLightOn
         8   -> SetActiveMenu
         8   -> UpdateLCDMain
      96   ProcMenuMain
        96   -> GetActiveMenu
        96   -> GetCarNo
        96   -> IsMenuMaint
        96   -> ProcDispStat
        96   -> ProcDispVer
        96   -> SetActiveMenu
        96   -> UpdateLCDMenu
        96   -> __aeabi_memcpy4
       8   ProcMenuRFTID
         8   -> HAL_Delay
         8   -> LCDMenuUpDown
         8   -> LCDPrintf
         8   -> SetActiveMenu
         8   -> SetCarNo
         8   -> UpdateLCDMain
         8   -> printf
       8   ProcMenuSelfTest
         8   -> HAL_Delay
         8   -> LCDMenuUpDown
         8   -> SetActiveMenu
         8   -> UpdateLCDMain
       8   ProcMenuSetCmdCar
         8   -> HAL_Delay
         8   -> LCDPrintf
         8   -> LCDSetCursor
         8   -> SendRFCmdCar
         8   -> SetActiveMenu
         8   -> UpdateLCDMain
       8   ProcMenuSetCmdRFMode
         8   -> HAL_Delay
         8   -> LCDPrintf
         8   -> LCDSetCursor
         8   -> SendRFCmdRFMode
         8   -> SendRFCmdReset
         8   -> SetActiveMenu
         8   -> UpdateLCDMain
      88   ProcMenuSetCmdTS
        88   -> HAL_Delay
        88   -> LCDPrintf
        88   -> LCDSetCursor
        88   -> SendRFCmdTS
        88   -> SetActiveMenu
        88   -> UpdateLCDMain
        88   -> __aeabi_memcpy4
       8   ProcMenuSetMic
         8   -> HAL_Delay
         8   -> LCDMenuUpDown
         8   -> SetActiveMenu
         8   -> SetMicVol
         8   -> UpdateLCDMain
         8   -> printf
       8   ProcMenuSetRFMode
         8   -> HAL_Delay
         8   -> LCDMenuUpDown
         8   -> SetActiveMenu
         8   -> SetRFMode
         8   -> UpdateLCDMain
         8   -> printf
       8   ProcMenuSetSpk
         8   -> HAL_Delay
         8   -> LCDMenuUpDown
         8   -> SetActiveMenu
         8   -> SetSpkVol
         8   -> UpdateLCDMain
         8   -> printf
       8   ProcMenuSetTxPwr
         8   -> HAL_Delay
         8   -> LCDMenuUpDown
         8   -> SetActiveMenu
         8   -> UpdateLCDMain
         8   -> printf
         8   -> vRadio_Set_TxPower
      16   ProcMenuSetting
        16   -> GetActiveMenu
        16   -> GetMicVol
        16   -> GetSpkVol
        16   -> LCDMenuUpDown
        16   -> SetActiveMenu
        16   -> UpdateLCDMenu
        16   -> printf
      88   ProcMenuTrainSet
        88   -> HAL_Delay
        88   -> LCDPrintf
        88   -> LCDSetCursor
        88   -> SetActiveMenu
        88   -> SetTrainSetIdx
        88   -> UpdateLCDMain
        88   -> __aeabi_memcpy4
       8   ProcMenuVer
         8   -> SetActiveMenu
         8   -> UpdateLCDMain
       0   SetActiveMenu
      40   UpdateLCDMain
        40   -> LCDPrintfXY
        40   -> sprintf
      16   UpdateLCDMenu
        16   -> GetActiveMenu
        16   -> LCDClearMain
        16   -> LCDMenuUpDown
        16   -> LCDPrintf
        16   -> LCDSetCursor
        16   -> UpdateLCDMain
     112   UpdateLCDMonitor
       112   -> LCDPrintf
       112   -> LCDSetCursor
       112   -> sprintf


   Section sizes:

   Bytes  Function/Label
   -----  --------------
       4  ??DataTable27
       4  ??DataTable27_1
       4  ??DataTable27_10
       4  ??DataTable27_11
       4  ??DataTable27_12
       4  ??DataTable27_13
       4  ??DataTable27_14
       4  ??DataTable27_15
       4  ??DataTable27_16
       4  ??DataTable27_17
       4  ??DataTable27_18
       4  ??DataTable27_19
       4  ??DataTable27_2
       4  ??DataTable27_20
       4  ??DataTable27_21
       4  ??DataTable27_22
       4  ??DataTable27_23
       4  ??DataTable27_24
       4  ??DataTable27_25
       4  ??DataTable27_26
       4  ??DataTable27_27
       4  ??DataTable27_28
       4  ??DataTable27_29
       4  ??DataTable27_3
       4  ??DataTable27_30
       4  ??DataTable27_31
       4  ??DataTable27_32
       4  ??DataTable27_33
       4  ??DataTable27_34
       4  ??DataTable27_35
       4  ??DataTable27_36
       4  ??DataTable27_37
       4  ??DataTable27_38
       4  ??DataTable27_39
       4  ??DataTable27_4
       4  ??DataTable27_40
       4  ??DataTable27_41
       4  ??DataTable27_42
       4  ??DataTable27_43
       4  ??DataTable27_44
       4  ??DataTable27_45
       4  ??DataTable27_46
       4  ??DataTable27_47
       4  ??DataTable27_48
       4  ??DataTable27_49
       4  ??DataTable27_5
       4  ??DataTable27_6
       4  ??DataTable27_7
       4  ??DataTable27_8
       4  ??DataTable27_9
      16  ?_0
      16  ?_1
      12  ?_10
      12  ?_11
      12  ?_12
      12  ?_13
      12  ?_14
      12  ?_15
      12  ?_16
      16  ?_17
      16  ?_18
      16  ?_19
      12  ?_2
      16  ?_20
      16  ?_21
      12  ?_22
      12  ?_23
      12  ?_24
      12  ?_25
      12  ?_26
      12  ?_27
      12  ?_28
      12  ?_29
      12  ?_3
      12  ?_30
      12  ?_31
      12  ?_32
      12  ?_33
      12  ?_34
      12  ?_35
      12  ?_36
      12  ?_37
      12  ?_38
      12  ?_39
      12  ?_4
      16  ?_40
      16  ?_41
      16  ?_42
      16  ?_43
      16  ?_44
      16  ?_45
      16  ?_46
      16  ?_47
      12  ?_48
      12  ?_49
      12  ?_5
       8  ?_50
       8  ?_51
      12  ?_52
      12  ?_53
      16  ?_54
      12  ?_55
      12  ?_56
      12  ?_57
      12  ?_58
      12  ?_59
      12  ?_6
      12  ?_60
      12  ?_61
      12  ?_62
      12  ?_63
      12  ?_64
      12  ?_65
      16  ?_66
      16  ?_67
      16  ?_68
      16  ?_69
      12  ?_7
      16  ?_70
      16  ?_71
      16  ?_72
      16  ?_73
      16  ?_74
      16  ?_75
      12  ?_76
      20  ?_77
      16  ?_78
      16  ?_79
      12  ?_8
      16  ?_80
      80  ?_81
      16  ?_82
      16  ?_83
      80  ?_84
      80  ?_85
      12  ?_86
      12  ?_87
      28  ?_88
      16  ?_89
      12  ?_9
      12  ?_90
      12  ?_91
      28  EnableMenuMaint
       8  GetActiveMenu
       8  IsMenuMaint
      48  ProcBtnDown
      60  ProcBtnMenu
      48  ProcBtnOK
      48  ProcBtnUp
      10  ProcDispStat
      20  ProcDispVer
      62  ProcLightOff
      62  ProcLightOn
     156  ProcMenuCmd
     122  ProcMenuDiag
      44  ProcMenuLightCtrl
     298  ProcMenuMain
      86  ProcMenuRFTID
      30  ProcMenuSelfTest
      46  ProcMenuSetCmdCar
      56  ProcMenuSetCmdRFMode
      66  ProcMenuSetCmdTS
      60  ProcMenuSetMic
      70  ProcMenuSetRFMode
      60  ProcMenuSetSpk
     124  ProcMenuSetTxPwr
     134  ProcMenuSetting
      74  ProcMenuTrainSet
      16  ProcMenuVer
       8  SetActiveMenu
      38  UpdateLCDMain
      64  UpdateLCDMenu
      74  UpdateLCDMonitor
       4  _bEnDispStat
      64  _psVerList
      24  _sCmdList
      12  _sDiagList
       8  _sLightCtrl
       8  _sMainMenuBase
      36  _sMainMenuMaint
       8  _sRFTIDList
     300  _sSelfTestList
      40  _sSelfTestList_OK
      40  _sSetCmdCarList
       8  _sSetCmdRFModeList
      40  _sSetMicList
       8  _sSetRFMode
      16  _sSetSpkList
      32  _sSetTxPwrList
      16  _sSettingList
      60  _sTrainSet
     320  _sVerList
      16  g_MenuCmdList
      16  g_MenuDiagList
      16  g_MenuLightCtrl
      16  g_MenuMainBase
      16  g_MenuMainMaint
      16  g_MenuRFTIDList
      16  g_MenuSelfTestList_OK
      16  g_MenuSetCmdCarList
      16  g_MenuSetCmdRFModeList
      16  g_MenuSetCmdTSList
      16  g_MenuSetMicList
      16  g_MenuSetRFModeList
      16  g_MenuSetSpkList
      16  g_MenuSetTxPwrList
      16  g_MenuSettingList
      16  g_MenuTrainSet
      16  g_MenuVerList
       4  g_bEnMenuMaint
       4  g_pActiveMenu
       4  oldTick
     120  -- Other

 
    16 bytes in section .bss
 1'312 bytes in section .data
 1'572 bytes in section .rodata
 2'228 bytes in section .text
 
 2'228 bytes of CODE  memory
 1'572 bytes of CONST memory
 1'328 bytes of DATA  memory

Errors: none
Warnings: 21
