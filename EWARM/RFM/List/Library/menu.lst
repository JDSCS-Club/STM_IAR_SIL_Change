###############################################################################
#
#                                                         22/Sep/2022  08:40:13
# IAR ANSI C/C++ Compiler V9.20.3.326/W64 for ARM Functional Safety
# Copyright 1999-2022 IAR Systems AB.
#
#    Cpu mode                     =  thumb
#    Endian                       =  little
#    Source file                  =
#        C:\D\Git_Hub\STM_IAR_SIL_Change\Library\menu.c
#    Command line                 =
#        -f C:\D\Git_Hub\STM_IAR_SIL_Change\EWARM\RFM\Obj\Library\menu.o.rsp
#        (C:\D\Git_Hub\STM_IAR_SIL_Change\Library\menu.c -D USE_HAL_DRIVER -D
#        STM32F407xx -lC C:\D\Git_Hub\STM_IAR_SIL_Change\EWARM\RFM\List\Library
#        -o C:\D\Git_Hub\STM_IAR_SIL_Change\EWARM\RFM\Obj\Library --no_cse
#        --no_unroll --no_inline --no_code_motion --no_tbaa --no_clustering
#        --no_scheduling --debug --endian=little --cpu=Cortex-M4 -e
#        --fpu=VFPv4_sp --dlib_config "C:\Program Files\IAR Systems\Embedded
#        Workbench 9.0 EWARM FS 9.20.3\arm\inc\c\DLib_Config_Full.h" -I
#        C:\D\Git_Hub\STM_IAR_SIL_Change\EWARM/../USB_DEVICE/App\ -I
#        C:\D\Git_Hub\STM_IAR_SIL_Change\EWARM/../USB_DEVICE/Target\ -I
#        C:\D\Git_Hub\STM_IAR_SIL_Change\EWARM/../Core/Inc\ -I
#        C:\D\Git_Hub\STM_IAR_SIL_Change\EWARM/../Drivers/STM32F4xx_HAL_Driver/Inc\
#        -I
#        C:\D\Git_Hub\STM_IAR_SIL_Change\EWARM/../Drivers/STM32F4xx_HAL_Driver/Inc/Legacy\
#        -I
#        C:\D\Git_Hub\STM_IAR_SIL_Change\EWARM/../Middlewares/ST/STM32_USB_Device_Library/Core/Inc\
#        -I
#        C:\D\Git_Hub\STM_IAR_SIL_Change\EWARM/../Middlewares/ST/STM32_USB_Device_Library/Class/CDC/Inc\
#        -I
#        C:\D\Git_Hub\STM_IAR_SIL_Change\EWARM/../Drivers/CMSIS/Device/ST/STM32F4xx/Include\
#        -I C:\D\Git_Hub\STM_IAR_SIL_Change\EWARM/../Drivers/CMSIS/Include\ -I
#        C:\D\Git_Hub\STM_IAR_SIL_Change\EWARM/../Drivers/radio\ -I
#        C:\D\Git_Hub\STM_IAR_SIL_Change\EWARM/../Drivers/radio/Si446x\ -I
#        C:\D\Git_Hub\STM_IAR_SIL_Change\EWARM/../Drivers/display\ -I
#        C:\D\Git_Hub\STM_IAR_SIL_Change\EWARM/../Library\ -I
#        C:\D\Git_Hub\STM_IAR_SIL_Change\EWARM\..\Drivers\display\fonts\ -I
#        C:\D\Git_Hub\STM_IAR_SIL_Change\EWARM\..\Drivers\STM32F4xx_HAL_Driver\Src\
#        -On --use_c++_inline -I "C:\Program Files\IAR Systems\Embedded
#        Workbench 9.0 EWARM FS 9.20.3\arm\CMSIS\Core\Include\\")
#        --dependencies=n
#        C:\D\Git_Hub\STM_IAR_SIL_Change\EWARM\RFM\Obj\Library\menu.o.d
#    Locale                       =  C
#    List file                    =
#        C:\D\Git_Hub\STM_IAR_SIL_Change\EWARM\RFM\List\Library\menu.lst
#    Object file                  =
#        C:\D\Git_Hub\STM_IAR_SIL_Change\EWARM\RFM\Obj\Library\menu.o
#    Runtime model:                  
#      __CPP_Runtime              =  1
#      __SystemLibrary            =  DLib
#      __dlib_file_descriptor     =  1
#      __dlib_full_locale_support =  1
#      __dlib_version             =  6
#      __iar_require _Printf      =  flags,widths
#
###############################################################################

C:\D\Git_Hub\STM_IAR_SIL_Change\Library\menu.c
      1          
      2          
      3          
      4          #include <stdio.h>
      5          #include <string.h>
      6          #include <math.h>
      7          #include <stdlib.h>
      8          //#include <stdarg.h>
      9          #include <stdbool.h>
     10          
     11          #include <stdio.h>			//	printf()
     12          
     13          #include <stdint.h>			//	uint32_t
     14          
     15          #include <string.h>			//	memset()
     16          
     17          #include "typedef.h"			//	uint32_t, ...
     18          #include "compiler_defs.h"		//	U8,

  # warning unrecognized compiler
    ^
"C:\D\Git_Hub\STM_IAR_SIL_Change\Drivers\radio\compiler_defs.h",744  Warning[Pa183]: 
          #warning directive: unrecognized compiler

  typedef unsigned char U8;
                        ^
"C:\D\Git_Hub\STM_IAR_SIL_Change\Drivers\radio\compiler_defs.h",788  Warning[Pe301]: 
          typedef name has already been declared (with same type)

  typedef unsigned int U16;
                       ^
"C:\D\Git_Hub\STM_IAR_SIL_Change\Drivers\radio\compiler_defs.h",789  Warning[Pe301]: 
          typedef name has already been declared (with same type)

  typedef unsigned long U32;
                        ^
"C:\D\Git_Hub\STM_IAR_SIL_Change\Drivers\radio\compiler_defs.h",790  Warning[Pe301]: 
          typedef name has already been declared (with same type)

  typedef signed char S8;
                      ^
"C:\D\Git_Hub\STM_IAR_SIL_Change\Drivers\radio\compiler_defs.h",792  Warning[Pe301]: 
          typedef name has already been declared (with same type)

  typedef signed int S16;
                     ^
"C:\D\Git_Hub\STM_IAR_SIL_Change\Drivers\radio\compiler_defs.h",793  Warning[Pe301]: 
          typedef name has already been declared (with same type)

  typedef signed long S32;
                      ^
"C:\D\Git_Hub\STM_IAR_SIL_Change\Drivers\radio\compiler_defs.h",794  Warning[Pe301]: 
          typedef name has already been declared (with same type)
     19          
     20          
     21          #include "main.h"
     22          
     23          #include "QBuf.h"
     24          
     25          #include "Adafruit_SSD1306.h"		//  LCD Display
     26          
     27          #include "RFMProtocol.h"			//  SendStat()

  	};
  	 ^
"C:\D\Git_Hub\STM_IAR_SIL_Change\Library\RFMProtocol.h",293  Warning[Pe040]: 
          expected an identifier

  	};
  	 ^
"C:\D\Git_Hub\STM_IAR_SIL_Change\Library\RFMProtocol.h",311  Warning[Pe040]: 
          expected an identifier

  	};
  	 ^
"C:\D\Git_Hub\STM_IAR_SIL_Change\Library\RFMProtocol.h",419  Warning[Pe040]: 
          expected an identifier

  	};
  	 ^
"C:\D\Git_Hub\STM_IAR_SIL_Change\Library\RFMProtocol.h",457  Warning[Pe040]: 
          expected an identifier

  	};
  	 ^
"C:\D\Git_Hub\STM_IAR_SIL_Change\Library\RFMProtocol.h",462  Warning[Pe040]: 
          expected an identifier

  	};
  	 ^
"C:\D\Git_Hub\STM_IAR_SIL_Change\Library\RFMProtocol.h",484  Warning[Pe040]: 
          expected an identifier

  	};
  	 ^
"C:\D\Git_Hub\STM_IAR_SIL_Change\Library\RFMProtocol.h",510  Warning[Pe040]: 
          expected an identifier

  	};
  	 ^
"C:\D\Git_Hub\STM_IAR_SIL_Change\Library\RFMProtocol.h",518  Warning[Pe040]: 
          expected an identifier
     28          
     29          #include "audio.h"					//  g_bufAudioRFRx
     30          
     31          #include "adc.h"					//  Adc_Power()
     32          
     33          #include "version.h"				//  APP_VER
     34          
     35          #include "cli.h"
     36          
     37          #include "menu.h"
     38          
     39          #include "rfm.h"
     40          
     41          #include "radio.h"					//	pRadioConfiguration
     42          
     43          #include "ProcPkt.h"				//	g_flagRspID
     44          
     45          #include "cli.h"
     46          
     47          
     48          //========================================================================
     49          //	Menu LightCtrl
     50          

   \                                 In section .data, align 4
     51          char *_sLightCtrl[] = {
   \                     _sLightCtrl:
   \        0x0   0x....'....        DC32 ?_0, ?_1

   \              0x....'....
     52          	"1. 조명소등",		//  조명소등
     53          	"2. 조명점등"		//  조명점등
     54          };
     55          

   \                                 In section .data, align 4
     56          Menu_t	g_MenuLightCtrl = {
   \                     g_MenuLightCtrl:
   \        0x0   0x....'....        DC32 _sLightCtrl
   \        0x4   0x02 0x00          DC8 2, 0
   \        0x6                      DS8 2
   \        0x8   0x....'....        DC32 ProcMenuLightCtrl
     57          	_sLightCtrl,
     58          	sizeof(_sLightCtrl)/sizeof(char *),		//	Item Count
     59          	0,						// 	curr Idx
     60          	ProcMenuLightCtrl		//	Callback Function
     61          };
     62          
     63          //========================================================================
     64          //	Main Version Info
     65          
     66          #if defined(USE_RFT_MENU_DEV_VER)
     67          

   \                                 In section .data, align 4
     68          char _sVerList[16][20] = {
   \                     _sVerList:
   \        0x0   0x52 0x46          DC8 "RFM v1.1.0.274"

   \              0x4D 0x20    

   \              0x76 0x31    

   \              0x2E 0x31    

   \              0x2E 0x30    

   \              0x2E 0x32    

   \              0x37 0x34    

   \              0x00
   \        0xF                      DS8 5
   \       0x14   0x30 0x31          DC8 "01:    --- "

   \              0x3A 0x20    

   \              0x20 0x20    

   \              0x20 0x2D    

   \              0x2D 0x2D    

   \              0x20 0x00
   \       0x20                      DS8 8
   \       0x28   0x30 0x32          DC8 "02:    --- "

   \              0x3A 0x20    

   \              0x20 0x20    

   \              0x20 0x2D    

   \              0x2D 0x2D    

   \              0x20 0x00
   \       0x34                      DS8 8
   \       0x3C   0x30 0x33          DC8 "03:    --- "

   \              0x3A 0x20    

   \              0x20 0x20    

   \              0x20 0x2D    

   \              0x2D 0x2D    

   \              0x20 0x00
   \       0x48                      DS8 8
   \       0x50   0x30 0x34          DC8 "04:    --- "

   \              0x3A 0x20    

   \              0x20 0x20    

   \              0x20 0x2D    

   \              0x2D 0x2D    

   \              0x20 0x00
   \       0x5C                      DS8 8
   \       0x64   0x30 0x35          DC8 "05:    --- "

   \              0x3A 0x20    

   \              0x20 0x20    

   \              0x20 0x2D    

   \              0x2D 0x2D    

   \              0x20 0x00
   \       0x70                      DS8 8
   \       0x78   0x30 0x36          DC8 "06:    --- "

   \              0x3A 0x20    

   \              0x20 0x20    

   \              0x20 0x2D    

   \              0x2D 0x2D    

   \              0x20 0x00
   \       0x84                      DS8 8
   \       0x8C   0x30 0x37          DC8 "07:    --- "

   \              0x3A 0x20    

   \              0x20 0x20    

   \              0x20 0x2D    

   \              0x2D 0x2D    

   \              0x20 0x00
   \       0x98                      DS8 8
   \       0xA0   0x30 0x38          DC8 "08:    --- "

   \              0x3A 0x20    

   \              0x20 0x20    

   \              0x20 0x2D    

   \              0x2D 0x2D    

   \              0x20 0x00
   \       0xAC                      DS8 8
   \       0xB4   0x30 0x39          DC8 "09:    --- "

   \              0x3A 0x20    

   \              0x20 0x20    

   \              0x20 0x2D    

   \              0x2D 0x2D    

   \              0x20 0x00
   \       0xC0                      DS8 8
   \       0xC8   0x31 0x30          DC8 "10:    --- "

   \              0x3A 0x20    

   \              0x20 0x20    

   \              0x20 0x2D    

   \              0x2D 0x2D    

   \              0x20 0x00
   \       0xD4                      DS8 8
   \       0xDC   0x31 0x31          DC8 "11:    --- "

   \              0x3A 0x20    

   \              0x20 0x20    

   \              0x20 0x2D    

   \              0x2D 0x2D    

   \              0x20 0x00
   \       0xE8                      DS8 8
   \       0xF0   0x31 0x32          DC8 "12:    --- "

   \              0x3A 0x20    

   \              0x20 0x20    

   \              0x20 0x2D    

   \              0x2D 0x2D    

   \              0x20 0x00
   \       0xFC                      DS8 8
   \      0x104   0x31 0x33          DC8 "13:    --- "

   \              0x3A 0x20    

   \              0x20 0x20    

   \              0x20 0x2D    

   \              0x2D 0x2D    

   \              0x20 0x00
   \      0x110                      DS8 8
   \      0x118   0x31 0x34          DC8 "14:    --- "

   \              0x3A 0x20    

   \              0x20 0x20    

   \              0x20 0x2D    

   \              0x2D 0x2D    

   \              0x20 0x00
   \      0x124                      DS8 8
   \      0x12C   0x31 0x35          DC8 "15:    --- "

   \              0x3A 0x20    

   \              0x20 0x20    

   \              0x20 0x2D    

   \              0x2D 0x2D    

   \              0x20 0x00
   \      0x138                      DS8 8
     69          	"RFM v" APP_VER,		//  Self Device Version
     70          //	"01:v1.1.X.X",
     71          	"01:    --- ",	//	"01:v1.1.X.X",
     72          	"02:    --- ",	//
     73          	"03:    --- ",	//
     74          	"04:    --- ",	//
     75          	"05:    --- ",	//
     76          	"06:    --- ",	//
     77          	"07:    --- ",	//
     78          	"08:    --- ",	//
     79          	"09:    --- ",	//
     80          	"10:    --- ",	//
     81          	"11:    --- ",	//
     82          	"12:    --- ",	//
     83          	"13:    --- ",	//
     84          	"14:    --- ",	//
     85          	"15:    --- ",	//
     86          };
     87          

   \                                 In section .data, align 4
     88          char *_psVerList[] = {
   \                     _psVerList:
   \        0x0   0x....'....        DC32 _sVerList, _sVerList + 0x14, _sVerList + 0x28, _sVerList + 0x3c

   \              0x....'....  

   \              0x....'....  

   \              0x....'....
   \       0x10   0x....'....        DC32 _sVerList + 0x50, _sVerList + 0x64, _sVerList + 0x78

   \              0x....'....  

   \              0x....'....
   \       0x1C   0x....'....        DC32 _sVerList + 0x8c, _sVerList + 0xa0, _sVerList + 0xb4

   \              0x....'....  

   \              0x....'....
   \       0x28   0x....'....        DC32 _sVerList + 0xc8, _sVerList + 0xdc, _sVerList + 0xf0

   \              0x....'....  

   \              0x....'....
   \       0x34   0x....'....        DC32 _sVerList + 0x104, _sVerList + 0x118, _sVerList + 0x12c

   \              0x....'....  

   \              0x....'....
     89          	_sVerList[0],	_sVerList[1],	_sVerList[2],	_sVerList[3],
     90          	_sVerList[4],	_sVerList[5],	_sVerList[6],	_sVerList[7],
     91          	_sVerList[8],	_sVerList[9],	_sVerList[10],	_sVerList[11],
     92          	_sVerList[12],	_sVerList[13],	_sVerList[14],	_sVerList[15],
     93          };
     94          
     95          

   \                                 In section .data, align 4
     96          Menu_t	g_MenuVerList = {
   \                     g_MenuVerList:
   \        0x0   0x....'....        DC32 _psVerList
   \        0x4   0x10 0x00          DC8 16, 0
   \        0x6                      DS8 2
   \        0x8   0x....'....        DC32 ProcMenuVer
     97          	_psVerList,
     98          	sizeof(_psVerList)/sizeof(char *),		//	Item Count
     99          	0,						// 	curr Idx
    100          	ProcMenuVer				//	Callback Function
    101          };
    102          
    103          #endif	//	defined(USE_RFT_MENU_DEV_VER)
    104          //========================================================================
    105          
    106          //========================================================================
    107          //	Menu TrainSet	-	편성설정메뉴 ( 100 ~ 119 )
    108          

   \                                 In section .data, align 4
    109          char *_sTrainSet[] = {
   \                     _sTrainSet:
   \        0x0   0x....'....        DC32 ?_2, ?_3, ?_4, ?_5, ?_6, ?_7, ?_8, ?_9, ?_10, ?_11, ?_12, ?_13

   \              0x....'....  

   \              0x....'....  

   \              0x....'....  

   \              0x....'....  

   \              0x....'....  

   \              0x....'....  

   \              0x....'....  

   \              0x....'....  

   \              0x....'....  

   \              0x....'....  

   \              0x....'....
   \       0x30   0x....'....        DC32 ?_14, ?_15, ?_16, ?_17, ?_18, ?_19, ?_20, ?_21

   \              0x....'....  

   \              0x....'....  

   \              0x....'....  

   \              0x....'....  

   \              0x....'....  

   \              0x....'....  

   \              0x....'....
    110          	" 100 편성",
    111          	" 101 편성",
    112          	" 102 편성",
    113          	" 103 편성",
    114          	" 104 편성",
    115          	" 105 편성",
    116          	" 106 편성",
    117          	" 107 편성",
    118          	" 108 편성",
    119          	" 109 편성",
    120          	" 110 편성",
    121          	" 111 편성",
    122          	" 112 편성",
    123          	" 113 편성",
    124          	" 114 편성",
    125          	" 115 편성",
    126          	" 116 편성",
    127          	" 117 편성",
    128          	" 118 편성",
    129          	" 119 편성",
    130          };
    131          

   \                                 In section .data, align 4
    132          Menu_t	g_MenuTrainSet = {
   \                     g_MenuTrainSet:
   \        0x0   0x....'....        DC32 _sTrainSet
   \        0x4   0x14 0x00          DC8 20, 0
   \        0x6                      DS8 2
   \        0x8   0x....'....        DC32 ProcMenuTrainSet
    133          	_sTrainSet,
    134          	sizeof(_sTrainSet)/sizeof(char *),		//	Item Count
    135          	0,						// 	curr Idx
    136          	ProcMenuTrainSet		//	Callback Function
    137          };
    138          
    139          //========================================================================
    140          //	Menu RFTID
    141          
    142          #if defined(USE_RFT_MENU_RFTID)

   \                                 In section .data, align 4
    143          char *_sRFTIDList[] = {
   \                     _sRFTIDList:
   \        0x0   0x....'....        DC32 ?_22, ?_23

   \              0x....'....
    144          	" 송신기#1",		//  11
    145          	" 송신기#2",		//  12
    146          };
    147          

   \                                 In section .data, align 4
    148          Menu_t	g_MenuRFTIDList = {
   \                     g_MenuRFTIDList:
   \        0x0   0x....'....        DC32 _sRFTIDList
   \        0x4   0x02 0x00          DC8 2, 0
   \        0x6                      DS8 2
   \        0x8   0x....'....        DC32 ProcMenuRFTID
    149          	_sRFTIDList,
    150          	sizeof(_sRFTIDList)/sizeof(char *),		//	Item Count
    151          	0,						// 	curr Idx
    152          	ProcMenuRFTID			//	Callback Function
    153          };
    154          #endif	//	defined(USE_RFT_MENU_RFTID)
    155          
    156          //========================================================================
    157          //	Menu SelfTest - 자가진단
    158          
    159          #if defined(USE_RFT_MENU_SELFTEST)

   \                                 In section .data, align 4
    160          char *_sSelfTestList[] = {
   \                     _sSelfTestList:
   \        0x0   0x....'....        DC32 ?_24, ?_25, ?_26, ?_27, ?_28, ?_29

   \              0x....'....  

   \              0x....'....  

   \              0x....'....  

   \              0x....'....  

   \              0x....'....
    161          	" 1 호차 : OK",	//
    162          	" 2 호차 : OK",	//
    163          	" 3 호차 : OK",	//
    164          	" 4 호차 : N/A",	//
    165          	" 5 호차 : N/A",	//
    166          	" 6 호차 : OK",	//
    167          };
    168          

   \                                 In section .data, align 4
    169          Menu_t	g_MenuSelfTestList = {
   \                     g_MenuSelfTestList:
   \        0x0   0x....'....        DC32 _sSelfTestList
   \        0x4   0x06 0x00          DC8 6, 0
   \        0x6                      DS8 2
   \        0x8   0x....'....        DC32 ProcMenuSelfTest
    170          	_sSelfTestList,
    171          	sizeof(_sSelfTestList)/sizeof(char *),		//	Item Count
    172          	0,						// 	curr Idx
    173          	ProcMenuSelfTest		//	Callback Function
    174          };
    175          #endif	//	defined(USE_RFT_MENU_SELFTEST)
    176          
    177          //========================================================================
    178          //	Menu Diag - 진단
    179          
    180          #if defined(USE_RFT_MENU_DIAG)

   \                                 In section .data, align 4
    181          char *_sDiagList[] = {
   \                     _sDiagList:
   \        0x0   0x....'....        DC32 ?_30, ?_31, ?_32

   \              0x....'....  

   \              0x....'....
    182          	" AudioLoop:Off",	//  Loopback Off
    183          	" AudioLoop:On",	//  Loopback On
    184          	" AudioSine:On",	//  Sine Wave On
    185          };
    186          

   \                                 In section .data, align 4
    187          Menu_t	g_MenuDiagList = {
   \                     g_MenuDiagList:
   \        0x0   0x....'....        DC32 _sDiagList
   \        0x4   0x03 0x00          DC8 3, 0
   \        0x6                      DS8 2
   \        0x8   0x....'....        DC32 ProcMenuDiag
    188          	_sDiagList,
    189          	sizeof(_sDiagList)/sizeof(char *),		//	Item Count
    190          	0,						// 	curr Idx
    191          	ProcMenuDiag		//	Callback Function
    192          };
    193          #endif	//	defined(USE_RFT_MENU_DIAG)
    194          
    195          //========================================================================
    196          //	Menu Setting
    197          
    198          #if defined(USE_RFT_MENU_SETTING)

   \                                 In section .data, align 4
    199          char *_sSettingList[] = {
   \                     _sSettingList:
   \        0x0   0x....'....        DC32 ?_33, ?_34, ?_35

   \              0x....'....  

   \              0x....'....
    200          	" Mic Vol",		//	Mic Volume
    201          	" Spk Vol",		//	Spk Volume
    202          	" RF Tx Pwr",	//	RF Tx Power
    203          };
    204          

   \                                 In section .data, align 4
    205          Menu_t	g_MenuSettingList = {
   \                     g_MenuSettingList:
   \        0x0   0x....'....        DC32 _sSettingList
   \        0x4   0x03 0x00          DC8 3, 0
   \        0x6                      DS8 2
   \        0x8   0x....'....        DC32 ProcMenuSetting
    206          	_sSettingList,
    207          	sizeof(_sSettingList)/sizeof(char *),		//	Item Count
    208          	0,						// 	curr Idx
    209          	ProcMenuSetting		//	Callback Function
    210          };
    211          

   \                                 In section .data, align 4
    212          char *_sSetMicList[] = { " Mic : 0",
   \                     _sSetMicList:
   \        0x0   0x....'....        DC32 ?_36, ?_37, ?_38, ?_39, ?_40, ?_41, ?_42, ?_43, ?_44, ?_45

   \              0x....'....  

   \              0x....'....  

   \              0x....'....  

   \              0x....'....  

   \              0x....'....  

   \              0x....'....  

   \              0x....'....  

   \              0x....'....  

   \              0x....'....
    213          						" Mic : 1",
    214          						" Mic : 2",
    215          						" Mic : 3",
    216          						" Mic : 4",
    217          						" Mic : 5",
    218          						" Mic : 6",
    219          						" Mic : 7",
    220          						" Mic : 8",
    221          						" Mic : 9",
    222          						};
    223          

   \                                 In section .data, align 4
    224          Menu_t	g_MenuSetMicList = {
   \                     g_MenuSetMicList:
   \        0x0   0x....'....        DC32 _sSetMicList
   \        0x4   0x0A 0x00          DC8 10, 0
   \        0x6                      DS8 2
   \        0x8   0x....'....        DC32 ProcMenuSetMic
    225          	_sSetMicList,
    226          	sizeof(_sSetMicList)/sizeof(char *),		//	Item Count
    227          	0,						// 	curr Idx
    228          	ProcMenuSetMic			//	Callback Function
    229          };
    230          

   \                                 In section .data, align 4
    231          char *_sSetSpkList[] = { " Spk : 0",
   \                     _sSetSpkList:
   \        0x0   0x....'....        DC32 ?_46, ?_47, ?_48, ?_49

   \              0x....'....  

   \              0x....'....  

   \              0x....'....
    232          						" Spk : 1",
    233          						" Spk : 2",
    234          						" Spk : 3",
    235          						};
    236          

   \                                 In section .data, align 4
    237          Menu_t	g_MenuSetSpkList = {
   \                     g_MenuSetSpkList:
   \        0x0   0x....'....        DC32 _sSetSpkList
   \        0x4   0x04 0x00          DC8 4, 0
   \        0x6                      DS8 2
   \        0x8   0x....'....        DC32 ProcMenuSetSpk
    238          	_sSetSpkList,
    239          	sizeof(_sSetSpkList)/sizeof(char *),		//	Item Count
    240          	0,						// 	curr Idx
    241          	ProcMenuSetSpk			//	Callback Function
    242          };
    243          
    244          //	[0(-38dBm)~7(0dBm)~12(5dBm)~22(10dBm)~40(15dBm)~127(20dBm)]",

   \                                 In section .data, align 4
    245          char *_sSetTxPwrList[] = { 	" Pwr : -38 dBm",	//	0
   \                     _sSetTxPwrList:
   \        0x0   0x....'....        DC32 ?_50, ?_51, ?_52, ?_53, ?_54, ?_55, ?_56, ?_57

   \              0x....'....  

   \              0x....'....  

   \              0x....'....  

   \              0x....'....  

   \              0x....'....  

   \              0x....'....  

   \              0x....'....
    246          							" Pwr : -20 dBm",	//	1
    247          							" Pwr : -5 dBm",	//	4
    248          							" Pwr : 0 dBm",		//	7
    249          							" Pwr : 5 dBm",		//	12
    250          							" Pwr : 10 dBm",	//	22
    251          							" Pwr : 15 dBm",	//	40
    252          							" Pwr : 20 dBm",	//	127
    253          						};
    254          

   \                                 In section .data, align 4
    255          Menu_t	g_MenuSetTxPwrList = {
   \                     g_MenuSetTxPwrList:
   \        0x0   0x....'....        DC32 _sSetTxPwrList
   \        0x4   0x08 0x00          DC8 8, 0
   \        0x6                      DS8 2
   \        0x8   0x....'....        DC32 ProcMenuSetTxPwr
    256          	_sSetTxPwrList,
    257          	sizeof(_sSetTxPwrList)/sizeof(char *),		//	Item Count
    258          	0,							// 	curr Idx
    259          	ProcMenuSetTxPwr			//	Callback Function
    260          };
    261          
    262          
    263          #endif	//	defined(USE_RFT_MENU_SETTING)
    264          
    265          //========================================================================
    266          //	Menu Command
    267          
    268          #if defined(USE_RFT_MENU_CMD)

   \                                 In section .data, align 4
    269          char *_sCmdList[] = {
   \                     _sCmdList:
   \        0x0   0x....'....        DC32 ?_58, ?_59, ?_60, ?_61

   \              0x....'....  

   \              0x....'....  

   \              0x....'....
    270          	" Reset",			//  Reset
    271          	" DFU Mode",		//  DFU Mode
    272          	" Upgrade ReTry",	//  Upgrade Re-Try
    273          	" Upgrade",			//  Upgrade
    274          };
    275          

   \                                 In section .data, align 4
    276          Menu_t	g_MenuCmdList = {
   \                     g_MenuCmdList:
   \        0x0   0x....'....        DC32 _sCmdList
   \        0x4   0x04 0x00          DC8 4, 0
   \        0x6                      DS8 2
   \        0x8   0x....'....        DC32 ProcMenuCmd
    277          	_sCmdList,
    278          	sizeof(_sCmdList)/sizeof(char *),		//	Item Count
    279          	0,						// 	curr Idx
    280          	ProcMenuCmd				//	Callback Function
    281          };
    282          #endif	//	defined(USE_RFT_MENU_CMD)
    283          
    284          //========================================================================
    285          //	Main Menu
    286          
    287          enum eMenuIdx
    288          {
    289          	eMenuIdxCtlLight = 0,	//	조명제어
    290          	eMenuIdxSWVer,			//	S/W버전
    291          	eMenuIdxTrainSet,		//	편성설정
    292          #if defined(USE_RFT_MENU_RFTID)
    293          	eMenuIdxRFTID,			//	송신기 ID
    294          #endif
    295          #if defined(USE_RFT_MENU_SELFTEST)
    296          	eMenuIdxSelfTest,		//	자가 진단
    297          #endif
    298          #if defined(USE_RFT_MENU_DIAG)
    299          	eMenuIdxDiag,			//	진단
    300          #endif
    301          #if defined(USE_RFT_MENU_SETTING)
    302          	eMenuIdxSetting,		//	설정
    303          #endif
    304          #if defined(USE_RFT_MENU_STAT)
    305          	eMenuIdxStat,			//	상태정보
    306          #endif
    307          #if defined(USE_RFT_MENU_CMD)
    308          	eMenuIdxCmd,			//	명령전송
    309          #endif
    310          };
    311          
    312          //========================================================================

   \                                 In section .bss, align 1
    313          uint8_t	g_bEnMenuMaint	= 	0;	//	MainMenu Maintenace Menu활성화.
   \                     g_bEnMenuMaint:
   \        0x0                      DS8 1
    314          

   \                                 In section .text, align 2, keep-with-next
    315          uint8_t 	IsMenuMaint			( void )			//	MainMenu Maintenace Menu활성화.
    316          {
    317          	return (uint8_t)g_bEnMenuMaint;
   \                     IsMenuMaint: (+1)
   \        0x0   0x.... 0x....      LDR.W    R0,??DataTable23
   \        0x4   0x7800             LDRB     R0,[R0, #+0]
   \        0x6   0x4770             BX       LR
    318          }
    319          
    320          //========================================================================

   \                                 In section .text, align 2, keep-with-next
    321          void EnableMenuMaint( uint8_t bEnable )
    322          //========================================================================
    323          {
   \                     EnableMenuMaint: (+1)
   \        0x0   0xB510             PUSH     {R4,LR}
   \        0x2   0x0004             MOVS     R4,R0
    324          	g_bEnMenuMaint = bEnable;
   \        0x4   0x.... 0x....      LDR.W    R0,??DataTable23
   \        0x8   0x7004             STRB     R4,[R0, #+0]
    325          
    326          	if ( bEnable != 0 )
   \        0xA   0x0020             MOVS     R0,R4
   \        0xC   0xB2C0             UXTB     R0,R0
   \        0xE   0x2800             CMP      R0,#+0
   \       0x10   0xD005             BEQ.N    ??EnableMenuMaint_0
    327          	{
    328          		//	LCD [Menu Maint.]
    329          		LCDPrintfXY( 10, 13, "[Maint. Menu]" );
   \       0x12   0x.... 0x....      LDR.W    R2,??DataTable23_1
   \       0x16   0x210D             MOVS     R1,#+13
   \       0x18   0x200A             MOVS     R0,#+10
   \       0x1A   0x.... 0x....      BL       LCDPrintfXY
    330          	}
    331          }
   \                     ??EnableMenuMaint_0: (+1)
   \       0x1E   0xBD10             POP      {R4,PC}
    332          
    333          //========================================================================
    334          //	Main Menu - Base 기본메뉴

   \                                 In section .data, align 4
    335          char *_sMainMenuBase[] = {
   \                     _sMainMenuBase:
   \        0x0   0x....'....        DC32 ?_62, ?_63

   \              0x....'....
    336          	"1. 조명제어",
    337          	"2. S/W 버전",
    338          };
    339          

   \                                 In section .data, align 4
    340          Menu_t	g_MenuMainBase = {
   \                     g_MenuMainBase:
   \        0x0   0x....'....        DC32 _sMainMenuBase
   \        0x4   0x02 0x00          DC8 2, 0
   \        0x6                      DS8 2
   \        0x8   0x....'....        DC32 ProcMenuMain
    341          	_sMainMenuBase,
    342          	sizeof(_sMainMenuBase)/sizeof(char *),		//	Item Count
    343          	0,					// 	curr Idx
    344          	ProcMenuMain		//	Callback Function
    345          };
    346          
    347          //========================================================================
    348          //	Main Menu -	Maintenance Menu 활성화.

   \                                 In section .data, align 4
    349          char *_sMainMenuMaint[] = {
   \                     _sMainMenuMaint:
   \        0x0   0x....'....        DC32 ?_62, ?_63, ?_64, ?_65, ?_66, ?_67, ?_68, ?_69, ?_70

   \              0x....'....  

   \              0x....'....  

   \              0x....'....  

   \              0x....'....  

   \              0x....'....  

   \              0x....'....  

   \              0x....'....  

   \              0x....'....
    350          	"1. 조명제어",
    351          	"2. S/W 버전",
    352          	"3. 편성설정",
    353          #if defined(USE_RFT_MENU_RFTID)
    354          	"4. 송신기ID",			//	송신기 ID
    355          #endif
    356          #if defined(USE_RFT_MENU_SELFTEST)
    357          	"5. 자가진단",
    358          #endif	//	defined(USE_RFT_MENU_SELFTEST)
    359          #if defined(USE_RFT_MENU_DIAG)
    360          	"6. 진    단",
    361          #endif	//	defined(USE_RFT_MENU_DIAG)
    362          #if defined(USE_RFT_MENU_SETTING)
    363          	"7. 설    정",
    364          #endif	//	defined(USE_RFT_MENU_SETTING)
    365          #if defined(USE_RFT_MENU_STAT)
    366          	"8. 상태정보",
    367          #endif	//	defined(USE_RFT_MENU_STAT)
    368          #if defined(USE_RFT_MENU_CMD)
    369          	"9. 명령전송",
    370          #endif	//	defined(USE_RFT_MENU_CMD)
    371          };
    372          

   \                                 In section .data, align 4
    373          Menu_t	g_MenuMainMaint = {
   \                     g_MenuMainMaint:
   \        0x0   0x....'....        DC32 _sMainMenuMaint
   \        0x4   0x09 0x00          DC8 9, 0
   \        0x6                      DS8 2
   \        0x8   0x....'....        DC32 ProcMenuMain
    374          	_sMainMenuMaint,
    375          	sizeof(_sMainMenuMaint)/sizeof(char *),		//	Item Count
    376          	0,					// 	curr Idx
    377          	ProcMenuMain		//	Callback Function
    378          };
    379          
    380          //========================================================================
    381          
    382          //========================================================================

   \                                 In section .bss, align 4
    383          Menu_t	*g_pActiveMenu	=	NULL;
   \                     g_pActiveMenu:
   \        0x0                      DS8 4
    384          //========================================================================
    385          

   \                                 In section .bss, align 1
    386          static uint8_t _bEnDispStat = 0;
   \                     _bEnDispStat:
   \        0x0                      DS8 1
    387          
    388          //========================================================================

   \                                 In section .text, align 2, keep-with-next
    389          void	SetActiveMenu( Menu_t *pActiveMenu )
    390          //========================================================================
    391          {
    392          	g_pActiveMenu = pActiveMenu;
   \                     SetActiveMenu: (+1)
   \        0x0   0x.... 0x....      LDR.W    R1,??DataTable23_2
   \        0x4   0x6008             STR      R0,[R1, #+0]
    393          }
   \        0x6   0x4770             BX       LR
    394          
    395          //========================================================================

   \                                 In section .text, align 2, keep-with-next
    396          Menu_t	*GetActiveMenu( void )
    397          //========================================================================
    398          {
    399          	return g_pActiveMenu;
   \                     GetActiveMenu: (+1)
   \        0x0   0x.... 0x....      LDR.W    R0,??DataTable23_2
   \        0x4   0x6800             LDR      R0,[R0, #+0]
   \        0x6   0x4770             BX       LR
    400          }
    401          
    402          //========================================================================

   \                                 In section .text, align 2, keep-with-next
    403          void	UpdateLCDMain( void )
    404          //========================================================================
    405          {
   \                     UpdateLCDMain: (+1)
   \        0x0   0xB580             PUSH     {R7,LR}
   \        0x2   0xB088             SUB      SP,SP,#+32
    406          	S8 sBuf[30];
    407          
    408          	sprintf( sBuf, "편성 : %d", 100 + g_idxTrainSet );
                 	         ^
Warning[Pe167]: argument of type "S8 *" is incompatible with parameter of type
          "char *"
   \        0x4   0x.... 0x....      LDR.W    R0,??DataTable23_3
   \        0x8   0x7802             LDRB     R2,[R0, #+0]
   \        0xA   0x3264             ADDS     R2,R2,#+100
   \        0xC   0x.... 0x....      LDR.W    R1,??DataTable23_4
   \       0x10   0x4668             MOV      R0,SP
   \       0x12   0x.... 0x....      BL       sprintf
    409          
    410          //	LCDPrintf( "편성 : 100" );
    411          	LCDPrintfXY( 20, 13, sBuf );
                 	                     ^
Warning[Pe167]: argument of type "S8 *" is incompatible with parameter of type
          "char *"
   \       0x16   0x466A             MOV      R2,SP
   \       0x18   0x210D             MOVS     R1,#+13
   \       0x1A   0x2014             MOVS     R0,#+20
   \       0x1C   0x.... 0x....      BL       LCDPrintfXY
    412          }
   \       0x20   0xB009             ADD      SP,SP,#+36
   \       0x22   0xBD00             POP      {PC}
    413          
    414          //========================================================================

   \                                 In section .text, align 2, keep-with-next
    415          void	UpdateLCDMenu( void )
    416          //========================================================================
    417          {
   \                     UpdateLCDMenu: (+1)
   \        0x0   0xB570             PUSH     {R4-R6,LR}
    418          	if ( GetActiveMenu() == NULL )
   \        0x2   0x.... 0x....      BL       GetActiveMenu
   \        0x6   0x2800             CMP      R0,#+0
   \        0x8   0xD102             BNE.N    ??UpdateLCDMenu_0
    419          	{
    420          		UpdateLCDMain();
   \        0xA   0x.... 0x....      BL       UpdateLCDMain
    421          		return;
   \        0xE   0xE016             B.N      ??UpdateLCDMenu_1
    422          	}
    423          
    424          	S8	**sMenu;
    425          	int8_t		*pIdxMenu, *pCntMenu;
    426          
    427          	sMenu		=	g_pActiveMenu->sItem;
                 	     		^
Warning[Pe513]: a value of type "char **" cannot be assigned to an entity of
          type "S8 **"
   \                     ??UpdateLCDMenu_0: (+1)
   \       0x10   0x.... 0x....      LDR.W    R0,??DataTable23_2
   \       0x14   0x6801             LDR      R1,[R0, #+0]
   \       0x16   0x680C             LDR      R4,[R1, #+0]
    428          	pIdxMenu	=	&g_pActiveMenu->currIdx;
                 	        	^
Warning[Pe513]: a value of type "uint8_t *" cannot be assigned to an entity of
          type "int8_t *"
   \       0x18   0x6801             LDR      R1,[R0, #+0]
   \       0x1A   0x1D4D             ADDS     R5,R1,#+5
    429          	pCntMenu	=	&g_pActiveMenu->cntItem;
                 	        	^
Warning[Pe513]: a value of type "uint8_t *" cannot be assigned to an entity of
          type "int8_t *"
   \       0x1C   0x6800             LDR      R0,[R0, #+0]
   \       0x1E   0x1D06             ADDS     R6,R0,#+4
    430          
    431          	//  Main화면 Clear
    432          	LCDClearMain();
   \       0x20   0x.... 0x....      BL       LCDClearMain
    433          
    434          #if defined(USE_RFT_MENU_LOOP)
    435          
    436          	LCDMenuUpDown( 3 ); //  3. Up/Down
   \       0x24   0x2003             MOVS     R0,#+3
   \       0x26   0x.... 0x....      BL       LCDMenuUpDown
    437          
    438          #else
    439          
    440          	if ( 0 < *pIdxMenu && *pIdxMenu < *pCntMenu - 1 )	LCDMenuUpDown( 3 ); //  3. Up/Down
    441          	else if ( *pIdxMenu == 0 )							LCDMenuUpDown( 2 ); //  2. Down
    442          	else if ( *pIdxMenu == *pCntMenu - 1 )				LCDMenuUpDown( 1 ); //  1. Up
    443          	else												LCDMenuUpDown( 0 ); //  0. None
    444          
    445          #endif
    446          
    447          	LCDSetCursor( 20, 13 );
   \       0x2A   0x210D             MOVS     R1,#+13
   \       0x2C   0x2014             MOVS     R0,#+20
   \       0x2E   0x.... 0x....      BL       LCDSetCursor
    448          	LCDPrintf( sMenu[*pIdxMenu] );
                 	           ^
Warning[Pe167]: argument of type "S8 *" is incompatible with parameter of type
          "char *"

  	int8_t		*pIdxMenu, *pCntMenu;
  	      		            ^
"C:\D\Git_Hub\STM_IAR_SIL_Change\Library\menu.c",425  Warning[Pe550]: variable
          "pCntMenu" was set but never used
   \       0x32   0xF995 0x0000      LDRSB    R0,[R5, #+0]
   \       0x36   0xF854 0x0020      LDR      R0,[R4, R0, LSL #+2]
   \       0x3A   0x.... 0x....      BL       LCDPrintf
    449          }
   \                     ??UpdateLCDMenu_1: (+1)
   \       0x3E   0xBD70             POP      {R4-R6,PC}
    450          
    451          //========================================================================

   \                                 In section .text, align 2, keep-with-next
    452          void	UpdateLCDMonitor( uint8_t nTick )
    453          //========================================================================
    454          {
   \                     UpdateLCDMonitor: (+1)
   \        0x0   0xB530             PUSH     {R4,R5,LR}
   \        0x2   0xB099             SUB      SP,SP,#+100
   \        0x4   0x0004             MOVS     R4,R0
    455          	static uint8_t oldTick = 0;
    456          
    457          	if ( (nTick - oldTick) > 1000 )
   \        0x6   0x.... 0x....      LDR.W    R5,??DataTable23_5
   \        0xA   0x0021             MOVS     R1,R4
   \        0xC   0xB2C9             UXTB     R1,R1
   \        0xE   0x7828             LDRB     R0,[R5, #+0]
   \       0x10   0x1A09             SUBS     R1,R1,R0
   \       0x12   0xF240 0x30E9      MOVW     R0,#+1001
   \       0x16   0x4281             CMP      R1,R0
   \       0x18   0xDB17             BLT.N    ??UpdateLCDMonitor_0
    458          	{
    459          		if( _bEnDispStat != 0 )
   \       0x1A   0x.... 0x....      LDR.W    R0,??DataTable23_6
   \       0x1E   0x7800             LDRB     R0,[R0, #+0]
   \       0x20   0x2800             CMP      R0,#+0
   \       0x22   0xD011             BEQ.N    ??UpdateLCDMonitor_1
    460          		{
    461          			//	상태정보 현시.
    462          			LCDSetCursor( 5, 13 );
   \       0x24   0x210D             MOVS     R1,#+13
   \       0x26   0x2005             MOVS     R0,#+5
   \       0x28   0x.... 0x....      BL       LCDSetCursor
    463          
    464          			S8 sBuf[100];
    465          			sprintf(sBuf, "Stat:%04X / %02d", g_flagRspID, g_nRSSI );
                 			        ^
Warning[Pe167]: argument of type "S8 *" is incompatible with parameter of type
          "char *"
   \       0x2C   0x.... 0x....      LDR.W    R0,??DataTable23_7
   \       0x30   0x7803             LDRB     R3,[R0, #+0]
   \       0x32   0x.... 0x....      LDR.W    R0,??DataTable23_8
   \       0x36   0x8802             LDRH     R2,[R0, #+0]
   \       0x38   0x.... 0x....      LDR.W    R1,??DataTable23_9
   \       0x3C   0x4668             MOV      R0,SP
   \       0x3E   0x.... 0x....      BL       sprintf
    466          			LCDPrintf( sBuf );
                 			           ^
Warning[Pe167]: argument of type "S8 *" is incompatible with parameter of type
          "char *"
   \       0x42   0x4668             MOV      R0,SP
   \       0x44   0x.... 0x....      BL       LCDPrintf
    467          		}
    468          		oldTick = nTick;
   \                     ??UpdateLCDMonitor_1: (+1)
   \       0x48   0x702C             STRB     R4,[R5, #+0]
    469          	}
    470          }
   \                     ??UpdateLCDMonitor_0: (+1)
   \       0x4A   0xB019             ADD      SP,SP,#+100
   \       0x4C   0xBD30             POP      {R4,R5,PC}

   \                                 In section .bss, align 1
   \                     `UpdateLCDMonitor::oldTick`:
   \        0x0                      DS8 1
    471          
    472          
    473          //========================================================================

   \                                 In section .text, align 2, keep-with-next
    474          void	ProcBtnUp( void )
    475          //========================================================================
    476          {
   \                     ProcBtnUp: (+1)
   \        0x0   0xB580             PUSH     {R7,LR}
    477          	if ( GetActiveMenu() == NULL )
   \        0x2   0x.... 0x....      BL       GetActiveMenu
   \        0x6   0x2800             CMP      R0,#+0
   \        0x8   0xD008             BEQ.N    ??ProcBtnUp_0
    478          	{
    479          		return;
    480          	}
    481          
    482          	//	Menu : Up Key Press
    483          
    484          	g_pActiveMenu->currIdx--;
   \                     ??ProcBtnUp_1: (+1)
   \        0xA   0x.... 0x....      LDR.W    R0,??DataTable23_2
   \        0xE   0x6801             LDR      R1,[R0, #+0]
   \       0x10   0x7949             LDRB     R1,[R1, #+5]
   \       0x12   0x1E49             SUBS     R1,R1,#+1
   \       0x14   0x6800             LDR      R0,[R0, #+0]
   \       0x16   0x7141             STRB     R1,[R0, #+5]
    485          
    486          	if ( g_pActiveMenu->currIdx < 0 )
                 	                            ^
Warning[Pe186]: pointless comparison of unsigned integer with zero
    487          	{
    488          #if defined(USE_RFT_MENU_LOOP)
    489          
    490          		//	Menu Up/Down Loop
    491          		g_pActiveMenu->currIdx = g_pActiveMenu->cntItem  - 1;
    492          
    493          #else
    494          
    495          		//	Menu Up/Down Limit
    496          		g_pActiveMenu->currIdx = 0;
    497          
    498          #endif
    499          	}
    500          
    501          
    502          	UpdateLCDMenu();   //  메뉴화면 Update
   \       0x18   0x.... 0x....      BL       UpdateLCDMenu
    503          }
   \                     ??ProcBtnUp_0: (+1)
   \       0x1C   0xBD01             POP      {R0,PC}
    504          
    505          //========================================================================

   \                                 In section .text, align 2, keep-with-next
    506          void	ProcBtnDown( void )
    507          //========================================================================
    508          {
   \                     ProcBtnDown: (+1)
   \        0x0   0xB580             PUSH     {R7,LR}
    509          	if ( GetActiveMenu() == NULL )
   \        0x2   0x.... 0x....      BL       GetActiveMenu
   \        0x6   0x2800             CMP      R0,#+0
   \        0x8   0xD011             BEQ.N    ??ProcBtnDown_0
    510          	{
    511          		return;
    512          	}
    513          
    514          	//	Menu : Down Key Press
    515          	g_pActiveMenu->currIdx++;
   \                     ??ProcBtnDown_1: (+1)
   \        0xA   0x.... 0x....      LDR.W    R0,??DataTable23_2
   \        0xE   0x6801             LDR      R1,[R0, #+0]
   \       0x10   0x7949             LDRB     R1,[R1, #+5]
   \       0x12   0x1C49             ADDS     R1,R1,#+1
   \       0x14   0x6802             LDR      R2,[R0, #+0]
   \       0x16   0x7151             STRB     R1,[R2, #+5]
    516          
    517          	if ( g_pActiveMenu->currIdx >= g_pActiveMenu->cntItem )
   \       0x18   0x6801             LDR      R1,[R0, #+0]
   \       0x1A   0x7949             LDRB     R1,[R1, #+5]
   \       0x1C   0x6802             LDR      R2,[R0, #+0]
   \       0x1E   0x7912             LDRB     R2,[R2, #+4]
   \       0x20   0x4291             CMP      R1,R2
   \       0x22   0xD302             BCC.N    ??ProcBtnDown_2
    518          	{
    519          #if defined(USE_RFT_MENU_LOOP)
    520          
    521          		//	Menu Up/Down Loop
    522          		g_pActiveMenu->currIdx = 0;
   \       0x24   0x2100             MOVS     R1,#+0
   \       0x26   0x6800             LDR      R0,[R0, #+0]
   \       0x28   0x7141             STRB     R1,[R0, #+5]
    523          
    524          #else
    525          
    526          		//	Menu Up/Down Limit
    527          		g_pActiveMenu->currIdx = g_pActiveMenu->cntItem  - 1;
    528          
    529          #endif
    530          	}
    531          
    532          	UpdateLCDMenu();   //  메뉴화면 Update
   \                     ??ProcBtnDown_2: (+1)
   \       0x2A   0x.... 0x....      BL       UpdateLCDMenu
    533          }
   \                     ??ProcBtnDown_0: (+1)
   \       0x2E   0xBD01             POP      {R0,PC}
    534          
    535          //========================================================================

   \                                 In section .text, align 2, keep-with-next
    536          void	ProcBtnMenu( void )
    537          //========================================================================
    538          {
   \                     ProcBtnMenu: (+1)
   \        0x0   0xB580             PUSH     {R7,LR}
    539          	//	Menu
    540          
    541          	if ( GetActiveMenu() == NULL )
   \        0x2   0x.... 0x....      BL       GetActiveMenu
   \        0x6   0x2800             CMP      R0,#+0
   \        0x8   0xD112             BNE.N    ??ProcBtnMenu_0
    542          	{
    543          		//  메뉴모드가 아닌경우 메뉴로 진입.
    544          
    545          		//	Set Main Menu
    546          
    547          		if ( g_bEnMenuMaint != 0 )
   \        0xA   0x.... 0x....      LDR.W    R0,??DataTable23
   \        0xE   0x7800             LDRB     R0,[R0, #+0]
   \       0x10   0x2800             CMP      R0,#+0
   \       0x12   0xD004             BEQ.N    ??ProcBtnMenu_1
    548          		{
    549          			//	Maintenance 유지보수 메뉴 활성화.
    550          			SetActiveMenu( &g_MenuMainMaint );
   \       0x14   0x.... 0x....      LDR.W    R0,??DataTable23_10
   \       0x18   0x.... 0x....      BL       SetActiveMenu
   \       0x1C   0xE003             B.N      ??ProcBtnMenu_2
    551          		}
    552          		else
    553          		{
    554          			//	Base 기본메뉴.
    555          			SetActiveMenu( &g_MenuMainBase );
   \                     ??ProcBtnMenu_1: (+1)
   \       0x1E   0x.... 0x....      LDR.W    R0,??DataTable23_11
   \       0x22   0x.... 0x....      BL       SetActiveMenu
    556          		}
    557          		GetActiveMenu()->currIdx = 0;	//	메뉴 Index초기화.
   \                     ??ProcBtnMenu_2: (+1)
   \       0x26   0x.... 0x....      BL       GetActiveMenu
   \       0x2A   0x2100             MOVS     R1,#+0
   \       0x2C   0x7141             STRB     R1,[R0, #+5]
   \       0x2E   0xE002             B.N      ??ProcBtnMenu_3
    558          	}
    559          	else
    560          	{
    561          		//  메뉴 진입상태 -> 메인화면으로 이동.
    562          
    563          		//	Set Main Menu
    564          		SetActiveMenu( NULL );
   \                     ??ProcBtnMenu_0: (+1)
   \       0x30   0x2000             MOVS     R0,#+0
   \       0x32   0x.... 0x....      BL       SetActiveMenu
    565          	}
    566          
    567          	UpdateLCDMenu();	//	메뉴화면 Update
   \                     ??ProcBtnMenu_3: (+1)
   \       0x36   0x.... 0x....      BL       UpdateLCDMenu
    568          }
   \       0x3A   0xBD01             POP      {R0,PC}
    569          
    570          //========================================================================

   \                                 In section .text, align 2, keep-with-next
    571          void	ProcLightOn ( void )
    572          //========================================================================
    573          {
   \                     ProcLightOn: (+1)
   \        0x0   0xB580             PUSH     {R7,LR}
    574          	LCDSetCursor( 20, 13 );
   \        0x2   0x210D             MOVS     R1,#+13
   \        0x4   0x2014             MOVS     R0,#+20
   \        0x6   0x.... 0x....      BL       LCDSetCursor
    575          	LCDPrintf( "[조명 점등]" );
   \        0xA   0x.... 0x....      LDR.W    R0,??DataTable23_12
   \        0xE   0x.... 0x....      BL       LCDPrintf
    576          
    577          	//========================================================================
    578          	//	숭신기와 가까운 수신기 설정.
    579          	SetChPA( GetChNearRFM() );
   \       0x12   0x.... 0x....      BL       GetChNearRFM
   \       0x16   0xB2C0             UXTB     R0,R0
   \       0x18   0x.... 0x....      BL       SetChPA
    580          	//========================================================================
    581          
    582          	SendLightOn();	 //  조명On 명령 전송.
   \       0x1C   0x.... 0x....      BL       SendLightOn
    583          	HAL_Delay( (uint32_t)200 );
   \       0x20   0x20C8             MOVS     R0,#+200
   \       0x22   0x.... 0x....      BL       HAL_Delay
    584          	SendLightOn();	 //  조명On 명령 전송.
   \       0x26   0x.... 0x....      BL       SendLightOn
    585          	HAL_Delay( (uint32_t)200 );
   \       0x2A   0x20C8             MOVS     R0,#+200
   \       0x2C   0x.... 0x....      BL       HAL_Delay
    586          	SendLightOn();	 //  조명On 명령 전송.
   \       0x30   0x.... 0x....      BL       SendLightOn
    587          	HAL_Delay( (uint32_t)200 );
   \       0x34   0x20C8             MOVS     R0,#+200
   \       0x36   0x.... 0x....      BL       HAL_Delay
    588          	SendLightOn();	 //  조명On 명령 전송.
   \       0x3A   0x.... 0x....      BL       SendLightOn
    589          
    590          #if defined(USE_STAT_LIGHT)
    591          	g_nDevFlag |= DevFlagLight;
    592          #endif
    593          }
   \       0x3E   0xBD01             POP      {R0,PC}
    594          
    595          //========================================================================

   \                                 In section .text, align 2, keep-with-next
    596          void	ProcLightOff ( void )
    597          //========================================================================
    598          {
   \                     ProcLightOff: (+1)
   \        0x0   0xB580             PUSH     {R7,LR}
    599          	LCDSetCursor( 20, 13 );
   \        0x2   0x210D             MOVS     R1,#+13
   \        0x4   0x2014             MOVS     R0,#+20
   \        0x6   0x.... 0x....      BL       LCDSetCursor
    600          	LCDPrintf( "[조명 소등]" );
   \        0xA   0x.... 0x....      LDR.W    R0,??DataTable23_13
   \        0xE   0x.... 0x....      BL       LCDPrintf
    601          
    602          	//========================================================================
    603          	//	숭신기와 가까운 수신기 설정.
    604          	SetChPA( GetChNearRFM() );
   \       0x12   0x.... 0x....      BL       GetChNearRFM
   \       0x16   0xB2C0             UXTB     R0,R0
   \       0x18   0x.... 0x....      BL       SetChPA
    605          	//========================================================================
    606          
    607          	SendLightOff();	 //  조명Off 명령 전송.
   \       0x1C   0x.... 0x....      BL       SendLightOff
    608          	HAL_Delay( (uint32_t)200 );
   \       0x20   0x20C8             MOVS     R0,#+200
   \       0x22   0x.... 0x....      BL       HAL_Delay
    609          	SendLightOff();	 //  조명Off 명령 전송.
   \       0x26   0x.... 0x....      BL       SendLightOff
    610          	HAL_Delay((uint32_t) 200 );
   \       0x2A   0x20C8             MOVS     R0,#+200
   \       0x2C   0x.... 0x....      BL       HAL_Delay
    611          	SendLightOff();	 //  조명Off 명령 전송.
   \       0x30   0x.... 0x....      BL       SendLightOff
    612          	HAL_Delay((uint32_t) 200 );
   \       0x34   0x20C8             MOVS     R0,#+200
   \       0x36   0x.... 0x....      BL       HAL_Delay
    613          	SendLightOff();	 //  조명Off 명령 전송.
   \       0x3A   0x.... 0x....      BL       SendLightOff
    614          
    615          #if defined(USE_STAT_LIGHT)
    616          	g_nDevFlag &= ~(DevFlagLight);
    617          #endif
    618          }
   \       0x3E   0xBD01             POP      {R0,PC}
    619          
    620          //========================================================================

   \                                 In section .text, align 2, keep-with-next
    621          void	ProcDispVer ( void )
    622          //========================================================================
    623          {
   \                     ProcDispVer: (+1)
   \        0x0   0xB580             PUSH     {R7,LR}
    624          	//  S/W 버전
    625          	LCDSetCursor( 5, 13 );
   \        0x2   0x210D             MOVS     R1,#+13
   \        0x4   0x2005             MOVS     R0,#+5
   \        0x6   0x.... 0x....      BL       LCDSetCursor
    626          	LCDPrintf( "RFM v" APP_VER );
   \        0xA   0x.... 0x....      LDR.W    R0,??DataTable23_14
   \        0xE   0x.... 0x....      BL       LCDPrintf
    627          }
   \       0x12   0xBD01             POP      {R0,PC}
    628          
    629          //========================================================================

   \                                 In section .text, align 2, keep-with-next
    630          void	ProcDispStat ( void )
    631          //========================================================================
    632          {
    633          	//========================================================================
    634          	//	Display Status Enable
    635          	_bEnDispStat		=	1;
   \                     ProcDispStat: (+1)
   \        0x0   0x2001             MOVS     R0,#+1
   \        0x2   0x.... 0x....      LDR.W    R1,??DataTable23_6
   \        0x6   0x7008             STRB     R0,[R1, #+0]
    636          }
   \        0x8   0x4770             BX       LR
    637          
    638          //========================================================================

   \                                 In section .text, align 2, keep-with-next
    639          void	ProcMenuTrainSet( uint8_t idxItem  )
    640          //========================================================================
    641          {
   \                     ProcMenuTrainSet: (+1)
   \        0x0   0xB510             PUSH     {R4,LR}
   \        0x2   0x0004             MOVS     R4,R0
    642          	LCDSetCursor( 20, 13 );
   \        0x4   0x210D             MOVS     R1,#+13
   \        0x6   0x2014             MOVS     R0,#+20
   \        0x8   0x.... 0x....      BL       LCDSetCursor
    643          	LCDPrintf( "[편성설정]" );
   \        0xC   0x.... 0x....      LDR.W    R0,??DataTable23_15
   \       0x10   0x.... 0x....      BL       LCDPrintf
    644          	g_idxTrainSet = idxItem;	//	메뉴 Index값으로 설정.
   \       0x14   0x.... 0x....      LDR.W    R0,??DataTable23_3
   \       0x18   0x7004             STRB     R4,[R0, #+0]
    645          	SetTrainSetIdx((uint8_t) g_idxTrainSet );
   \       0x1A   0x7800             LDRB     R0,[R0, #+0]
   \       0x1C   0x.... 0x....      BL       SetTrainSetIdx
    646          
    647          #if defined(USE_CH_ISO_DEV)		//	장치별로 채널 구분.
    648          	//	각 장치별로 채널 구분.
    649          	//	편성이 변경되어도 채널 고정.
    650          #else
    651          	//	편성별 채널 구분.
    652          	//  Radio Channel 설정.
    653          	pRadioConfiguration->Radio_ChannelNumber = g_idxTrainSet;
    654          #endif
    655          
    656          	//  1초후 Main화면 갱신.
    657          	HAL_Delay( (uint32_t)1000 );
   \       0x20   0xF44F 0x707A      MOV      R0,#+1000
   \       0x24   0x.... 0x....      BL       HAL_Delay
    658          	UpdateLCDMain();
   \       0x28   0x.... 0x....      BL       UpdateLCDMain
    659          
    660          	//  메뉴 Exit
    661          	SetActiveMenu( NULL );
   \       0x2C   0x2000             MOVS     R0,#+0
   \       0x2E   0x.... 0x....      BL       SetActiveMenu
    662          }
   \       0x32   0xBD10             POP      {R4,PC}
    663          
    664          
    665          //========================================================================

   \                                 In section .text, align 2, keep-with-next
    666          void	ProcMenuVer( uint8_t idxItem  )
    667          //========================================================================
    668          {
   \                     ProcMenuVer: (+1)
   \        0x0   0xB510             PUSH     {R4,LR}
   \        0x2   0x0004             MOVS     R4,R0
    669          	//	Upgrade Ok / Cancel
    670          
    671          	//  메뉴 Exit
    672          	SetActiveMenu( NULL );
   \        0x4   0x2000             MOVS     R0,#+0
   \        0x6   0x.... 0x....      BL       SetActiveMenu
    673          
    674          	//	메인화면 갱신.
    675          	UpdateLCDMain();
   \        0xA   0x.... 0x....      BL       UpdateLCDMain
    676          }
   \        0xE   0xBD10             POP      {R4,PC}
    677          
    678          
    679          //========================================================================

   \                                 In section .text, align 2, keep-with-next
    680          void	ProcMenuCmd( uint8_t idxItem  )
    681          //========================================================================
    682          {
   \                     ProcMenuCmd: (+1)
   \        0x0   0xB510             PUSH     {R4,LR}
   \        0x2   0x0004             MOVS     R4,R0
    683          	LCDSetCursor( 20, 13 );
   \        0x4   0x210D             MOVS     R1,#+13
   \        0x6   0x2014             MOVS     R0,#+20
   \        0x8   0x.... 0x....      BL       LCDSetCursor
    684          	LCDPrintf( "[명령전송]" );
   \        0xC   0x.... 0x....      LDR.W    R0,??DataTable23_16
   \       0x10   0x.... 0x....      BL       LCDPrintf
    685          
    686          	switch( idxItem )
   \       0x14   0x0020             MOVS     R0,R4
   \       0x16   0xB2C0             UXTB     R0,R0
   \       0x18   0x2800             CMP      R0,#+0
   \       0x1A   0xD005             BEQ.N    ??ProcMenuCmd_0
   \       0x1C   0x2802             CMP      R0,#+2
   \       0x1E   0xD009             BEQ.N    ??ProcMenuCmd_1
   \       0x20   0xD305             BCC.N    ??ProcMenuCmd_2
   \       0x22   0x2803             CMP      R0,#+3
   \       0x24   0xD00A             BEQ.N    ??ProcMenuCmd_3
   \       0x26   0xE00C             B.N      ??ProcMenuCmd_4
    687          	{
    688          	case 0:		SendRFCmdReset();		break;		//	Reset 명령.
   \                     ??ProcMenuCmd_0: (+1)
   \       0x28   0x.... 0x....      BL       SendRFCmdReset
   \       0x2C   0xE009             B.N      ??ProcMenuCmd_4
    689          	case 1:		SendRFCmdDFUMode();		break;		//	DFU Mode 명령.
   \                     ??ProcMenuCmd_2: (+1)
   \       0x2E   0x.... 0x....      BL       SendRFCmdDFUMode
   \       0x32   0xE006             B.N      ??ProcMenuCmd_4
    690          	case 2:		SendRFCmdUpgrade((uint16_t)1);	break;		//	Upgrade(Re-Try 명령.
   \                     ??ProcMenuCmd_1: (+1)
   \       0x34   0x2001             MOVS     R0,#+1
   \       0x36   0x.... 0x....      BL       SendRFCmdUpgrade
   \       0x3A   0xE002             B.N      ??ProcMenuCmd_4
    691          	case 3:		SendRFCmdUpgrade((uint16_t)0);	break;		//	Upgrade 명령.
   \                     ??ProcMenuCmd_3: (+1)
   \       0x3C   0x2000             MOVS     R0,#+0
   \       0x3E   0x.... 0x....      BL       SendRFCmdUpgrade
    692          	}
    693          
    694          	//  1초후 Main화면 갱신.
    695          	HAL_Delay( (uint32_t)1000 );
   \                     ??ProcMenuCmd_4: (+1)
   \       0x42   0xF44F 0x707A      MOV      R0,#+1000
   \       0x46   0x.... 0x....      BL       HAL_Delay
    696          	UpdateLCDMain();
   \       0x4A   0x.... 0x....      BL       UpdateLCDMain
    697          
    698          	//  메뉴 Exit
    699          	SetActiveMenu( NULL );
   \       0x4E   0x2000             MOVS     R0,#+0
   \       0x50   0x.... 0x....      BL       SetActiveMenu
    700          }
   \       0x54   0xBD10             POP      {R4,PC}
    701          
    702          //========================================================================

   \                                 In section .text, align 2, keep-with-next
    703          void 	ProcMenuMain( uint8_t idxItem )
    704          //========================================================================
    705          {
   \                     ProcMenuMain: (+1)
   \        0x0   0xB538             PUSH     {R3-R5,LR}
   \        0x2   0x0004             MOVS     R4,R0
    706          	uint8_t sReVel = 0;
   \        0x4   0x2500             MOVS     R5,#+0
    707          
    708          	switch ( idxItem )
   \        0x6   0x0020             MOVS     R0,R4
   \        0x8   0xB2C0             UXTB     R0,R0
   \        0xA   0x2800             CMP      R0,#+0
   \        0xC   0xD00C             BEQ.N    ??ProcMenuMain_0
   \        0xE   0x2802             CMP      R0,#+2
   \       0x10   0xD028             BEQ.N    ??ProcMenuMain_1
   \       0x12   0xD314             BCC.N    ??ProcMenuMain_2
   \       0x14   0x2804             CMP      R0,#+4
   \       0x16   0xD047             BEQ.N    ??ProcMenuMain_3
   \       0x18   0xD331             BCC.N    ??ProcMenuMain_4
   \       0x1A   0x2806             CMP      R0,#+6
   \       0x1C   0xD05A             BEQ.N    ??ProcMenuMain_5
   \       0x1E   0xD34E             BCC.N    ??ProcMenuMain_6
   \       0x20   0x2808             CMP      R0,#+8
   \       0x22   0xD068             BEQ.N    ??ProcMenuMain_7
   \       0x24   0xD361             BCC.N    ??ProcMenuMain_8
   \       0x26   0xE070             B.N      ??ProcMenuMain_9
    709          	{
    710          	case eMenuIdxCtlLight:	//	0:		 //  조명제어
    711          		//	Menu
    712          
    713          		SetActiveMenu( &g_MenuLightCtrl );
   \                     ??ProcMenuMain_0: (+1)
   \       0x28   0x.... 0x....      LDR.W    R0,??DataTable23_17
   \       0x2C   0x.... 0x....      BL       SetActiveMenu
    714          		GetActiveMenu()->currIdx = 0;	//	메뉴 Index초기화.
   \       0x30   0x.... 0x....      BL       GetActiveMenu
   \       0x34   0x2100             MOVS     R1,#+0
   \       0x36   0x7141             STRB     R1,[R0, #+5]
    715          
    716          		UpdateLCDMenu();
   \       0x38   0x.... 0x....      BL       UpdateLCDMenu
    717          
    718          		break;
   \       0x3C   0xE065             B.N      ??ProcMenuMain_9
    719          
    720          	case eMenuIdxSWVer:		//	1:		 //  S/W 버전
    721          		//  메뉴 Exit
    722          
    723          #if defined(USE_RFT_MENU_DEV_VER)
    724          
    725          		if ( IsMenuMaint() )
   \                     ??ProcMenuMain_2: (+1)
   \       0x3E   0x.... 0x....      BL       IsMenuMaint
   \       0x42   0x2800             CMP      R0,#+0
   \       0x44   0xD008             BEQ.N    ??ProcMenuMain_10
    726          		{
    727          			SetActiveMenu( &g_MenuVerList );	//	버전 List 현시.
   \       0x46   0x.... 0x....      LDR.W    R0,??DataTable23_18
   \       0x4A   0x.... 0x....      BL       SetActiveMenu
    728          			GetActiveMenu()->currIdx = 0;		//	메뉴 Index초기화.
   \       0x4E   0x.... 0x....      BL       GetActiveMenu
   \       0x52   0x2100             MOVS     R1,#+0
   \       0x54   0x7141             STRB     R1,[R0, #+5]
   \       0x56   0xE002             B.N      ??ProcMenuMain_11
    729          		}
    730          		else
    731          		{
    732          			SetActiveMenu( NULL );
   \                     ??ProcMenuMain_10: (+1)
   \       0x58   0x2000             MOVS     R0,#+0
   \       0x5A   0x.... 0x....      BL       SetActiveMenu
    733          		}
    734          
    735          		ProcDispVer();
   \                     ??ProcMenuMain_11: (+1)
   \       0x5E   0x.... 0x....      BL       ProcDispVer
    736          //		UpdateLCDMenu();
    737          #else
    738          		SetActiveMenu( NULL );
    739          		ProcDispVer();
    740          #endif
    741          
    742          		break;
   \       0x62   0xE052             B.N      ??ProcMenuMain_9
    743          
    744          	case eMenuIdxTrainSet:	//	2:		 //  편성설정.
    745          
    746          		SetActiveMenu( &g_MenuTrainSet );
   \                     ??ProcMenuMain_1: (+1)
   \       0x64   0x.... 0x....      LDR.W    R0,??DataTable23_19
   \       0x68   0x.... 0x....      BL       SetActiveMenu
    747          		GetActiveMenu()->currIdx = (int8_t)g_idxTrainSet;	//	메뉴 Index초기화.
   \       0x6C   0x.... 0x....      BL       GetActiveMenu
   \       0x70   0x.... 0x....      LDR.W    R1,??DataTable23_3
   \       0x74   0x7809             LDRB     R1,[R1, #+0]
   \       0x76   0x7141             STRB     R1,[R0, #+5]
    748          
    749          		UpdateLCDMenu();
   \       0x78   0x.... 0x....      BL       UpdateLCDMenu
    750          		break;
   \       0x7C   0xE045             B.N      ??ProcMenuMain_9
    751          
    752          #if defined(USE_RFT_MENU_RFTID)
    753          
    754          	case eMenuIdxRFTID:		//	3:		 //  송신기 ID
    755          
    756          		SetActiveMenu( &g_MenuRFTIDList );
   \                     ??ProcMenuMain_4: (+1)
   \       0x7E   0x.... 0x....      LDR.W    R0,??DataTable23_20
   \       0x82   0x.... 0x....      BL       SetActiveMenu
    757          
    758          		sReVel = GetCarNo();
   \       0x86   0x.... 0x....      BL       GetCarNo
   \       0x8A   0x0005             MOVS     R5,R0
    759          		GetActiveMenu()->currIdx = (int8_t)( ( (int8_t)sReVel + 1 ) % 2 );	//	메뉴 Index초기화.
   \       0x8C   0x.... 0x....      BL       GetActiveMenu
   \       0x90   0x0029             MOVS     R1,R5
   \       0x92   0xB249             SXTB     R1,R1
   \       0x94   0x1C49             ADDS     R1,R1,#+1
   \       0x96   0x2202             MOVS     R2,#+2
   \       0x98   0xFB91 0xF3F2      SDIV     R3,R1,R2
   \       0x9C   0xFB02 0x1113      MLS      R1,R2,R3,R1
   \       0xA0   0x7141             STRB     R1,[R0, #+5]
    760          
    761          		UpdateLCDMenu();
   \       0xA2   0x.... 0x....      BL       UpdateLCDMenu
    762          		break;
   \       0xA6   0xE030             B.N      ??ProcMenuMain_9
    763          
    764          #endif	//	defined(USE_RFT_MENU_DIAG)
    765          
    766          #if defined(USE_RFT_MENU_RFTID)
    767          
    768          	case eMenuIdxSelfTest:	//	4:		 //  송신기 ID
    769          
    770          		SetActiveMenu( &g_MenuSelfTestList );
   \                     ??ProcMenuMain_3: (+1)
   \       0xA8   0x.... 0x....      LDR.W    R0,??DataTable23_21
   \       0xAC   0x.... 0x....      BL       SetActiveMenu
    771          		GetActiveMenu()->currIdx = (int8_t)0;	//	메뉴 Index초기화.
   \       0xB0   0x.... 0x....      BL       GetActiveMenu
   \       0xB4   0x2100             MOVS     R1,#+0
   \       0xB6   0x7141             STRB     R1,[R0, #+5]
    772          
    773          		UpdateLCDMenu();
   \       0xB8   0x.... 0x....      BL       UpdateLCDMenu
    774          		break;
   \       0xBC   0xE025             B.N      ??ProcMenuMain_9
    775          
    776          #endif	//	defined(USE_RFT_MENU_DIAG)
    777          
    778          
    779          #if defined(USE_RFT_MENU_DIAG)
    780          
    781          	case eMenuIdxDiag:		//	5:		 //  진단
    782          
    783          		SetActiveMenu( &g_MenuDiagList );
   \                     ??ProcMenuMain_6: (+1)
   \       0xBE   0x.... 0x....      LDR.W    R0,??DataTable23_22
   \       0xC2   0x.... 0x....      BL       SetActiveMenu
    784          		GetActiveMenu()->currIdx = (int8_t)0;	//	메뉴 Index초기화.
   \       0xC6   0x.... 0x....      BL       GetActiveMenu
   \       0xCA   0x2100             MOVS     R1,#+0
   \       0xCC   0x7141             STRB     R1,[R0, #+5]
    785          
    786          		UpdateLCDMenu();
   \       0xCE   0x.... 0x....      BL       UpdateLCDMenu
    787          		break;
   \       0xD2   0xE01A             B.N      ??ProcMenuMain_9
    788          
    789          #endif	//	defined(USE_RFT_MENU_DIAG)
    790          
    791          #if defined(USE_RFT_MENU_SETTING)
    792          
    793          	case eMenuIdxSetting:	//	6:		 //  설정
    794          
    795          		SetActiveMenu( &g_MenuSettingList );
   \                     ??ProcMenuMain_5: (+1)
   \       0xD4   0x.... 0x....      LDR.W    R0,??DataTable23_23
   \       0xD8   0x.... 0x....      BL       SetActiveMenu
    796          		GetActiveMenu()->currIdx = (int8_t)0;	//	메뉴 Index초기화.
   \       0xDC   0x.... 0x....      BL       GetActiveMenu
   \       0xE0   0x2100             MOVS     R1,#+0
   \       0xE2   0x7141             STRB     R1,[R0, #+5]
    797          
    798          		UpdateLCDMenu();
   \       0xE4   0x.... 0x....      BL       UpdateLCDMenu
    799          		break;
   \       0xE8   0xE00F             B.N      ??ProcMenuMain_9
    800          
    801          #endif	//	defined(USE_RFT_MENU_DIAG)
    802          
    803          #if defined(USE_RFT_MENU_STAT)
    804          
    805          	case eMenuIdxStat:		//	7:		 //  상태정보.
    806          
    807          		SetActiveMenu( NULL );
   \                     ??ProcMenuMain_8: (+1)
   \       0xEA   0x2000             MOVS     R0,#+0
   \       0xEC   0x.... 0x....      BL       SetActiveMenu
    808          
    809          		ProcDispStat();			//	상태정보 표출.
   \       0xF0   0x.... 0x....      BL       ProcDispStat
    810          		break;
   \       0xF4   0xE009             B.N      ??ProcMenuMain_9
    811          
    812          #endif	//	defined(USE_RFT_MENU_STAT)
    813          
    814          
    815          #if defined(USE_RFT_MENU_CMD)
    816          
    817          	case eMenuIdxCmd:		//	8:		 //  명령전송.
    818          
    819          		SetActiveMenu( &g_MenuCmdList );
   \                     ??ProcMenuMain_7: (+1)
   \       0xF6   0x.... 0x....      LDR.W    R0,??DataTable23_24
   \       0xFA   0x.... 0x....      BL       SetActiveMenu
    820          		GetActiveMenu()->currIdx = (int8_t)0;	//	메뉴 Index초기화.
   \       0xFE   0x.... 0x....      BL       GetActiveMenu
   \      0x102   0x2100             MOVS     R1,#+0
   \      0x104   0x7141             STRB     R1,[R0, #+5]
    821          
    822          		UpdateLCDMenu();
   \      0x106   0x.... 0x....      BL       UpdateLCDMenu
    823          		break;
    824          
    825          #endif	//	defined(USE_RFT_MENU_CMD)
    826          
    827          #if defined(USE_ENV_TEST)
    828          	case 3:		 //  RF 출력
    829          		//	RF Tx시작.
    830          		SetLoopRFTx( 1 );
    831          
    832          		LCDSetCursor( 5, 13 );
    833          		LCDPrintf( "[ RF Tx ]" );
    834          
    835          		//  메뉴 Exit
    836          		SetActiveMenu( NULL );
    837          
    838          		break;
    839          #endif	//	defined(USE_ENV_TEST)
    840          	}
    841          }
   \                     ??ProcMenuMain_9: (+1)
   \      0x10A   0xBD31             POP      {R0,R4,R5,PC}
    842          
    843          
    844          //========================================================================

   \                                 In section .text, align 2, keep-with-next
    845          void 	ProcMenuLightCtrl( uint8_t idxItem )
    846          //========================================================================
    847          {
   \                     ProcMenuLightCtrl: (+1)
   \        0x0   0xB510             PUSH     {R4,LR}
   \        0x2   0x0004             MOVS     R4,R0
    848          	LCDMenuUpDown( 0 );
   \        0x4   0x2000             MOVS     R0,#+0
   \        0x6   0x.... 0x....      BL       LCDMenuUpDown
    849          
    850          	if ( idxItem == 0 )
   \        0xA   0x0020             MOVS     R0,R4
   \        0xC   0xB2C0             UXTB     R0,R0
   \        0xE   0x2800             CMP      R0,#+0
   \       0x10   0xD102             BNE.N    ??ProcMenuLightCtrl_0
    851          	{
    852          		ProcLightOff();
   \       0x12   0x.... 0x....      BL       ProcLightOff
   \       0x16   0xE001             B.N      ??ProcMenuLightCtrl_1
    853          	}
    854          	else
    855          	{
    856          		ProcLightOn();
   \                     ??ProcMenuLightCtrl_0: (+1)
   \       0x18   0x.... 0x....      BL       ProcLightOn
    857          	}
    858          
    859          	//  1초후 Main화면 갱신.
    860          	HAL_Delay( (uint32_t)1000 );
   \                     ??ProcMenuLightCtrl_1: (+1)
   \       0x1C   0xF44F 0x707A      MOV      R0,#+1000
   \       0x20   0x.... 0x....      BL       HAL_Delay
    861          	UpdateLCDMain();
   \       0x24   0x.... 0x....      BL       UpdateLCDMain
    862          
    863          	SetActiveMenu( NULL );
   \       0x28   0x2000             MOVS     R0,#+0
   \       0x2A   0x.... 0x....      BL       SetActiveMenu
    864          }
   \       0x2E   0xBD10             POP      {R4,PC}
    865          
    866          //========================================================================

   \                                 In section .text, align 2, keep-with-next
    867          void 	ProcMenuRFTID( uint8_t idxItem )
    868          //========================================================================
    869          {
   \                     ProcMenuRFTID: (+1)
   \        0x0   0xB510             PUSH     {R4,LR}
   \        0x2   0x0004             MOVS     R4,R0
    870          	LCDMenuUpDown( 0 );	//	UpDown Off
   \        0x4   0x2000             MOVS     R0,#+0
   \        0x6   0x.... 0x....      BL       LCDMenuUpDown
    871          
    872          	switch( idxItem )
   \        0xA   0x0020             MOVS     R0,R4
   \        0xC   0xB2C0             UXTB     R0,R0
   \        0xE   0x2800             CMP      R0,#+0
   \       0x10   0xD002             BEQ.N    ??ProcMenuRFTID_0
   \       0x12   0x2801             CMP      R0,#+1
   \       0x14   0xD007             BEQ.N    ??ProcMenuRFTID_1
   \       0x16   0xE00D             B.N      ??ProcMenuRFTID_2
    873          	{
    874          	case 0:	//	송신기 #1
    875          		SetCarNo((uint8_t) RFTCarNo1 );	//	CarNo ( 11 )
   \                     ??ProcMenuRFTID_0: (+1)
   \       0x18   0x200B             MOVS     R0,#+11
   \       0x1A   0x.... 0x....      BL       SetCarNo
    876          		LCDPrintf( "Set RFT#1" );
   \       0x1E   0x....             LDR.N    R0,??DataTable23_25
   \       0x20   0x.... 0x....      BL       LCDPrintf
    877          		break;
   \       0x24   0xE00E             B.N      ??ProcMenuRFTID_3
    878          
    879          	case 1:	//	송신기 #2
    880          		SetCarNo( (uint8_t) RFTCarNo2 );	//	CarNo ( 12 )
   \                     ??ProcMenuRFTID_1: (+1)
   \       0x26   0x200C             MOVS     R0,#+12
   \       0x28   0x.... 0x....      BL       SetCarNo
    881          		LCDPrintf( "Set RFT#2" );
   \       0x2C   0x....             LDR.N    R0,??DataTable23_26
   \       0x2E   0x.... 0x....      BL       LCDPrintf
    882          		break;
   \       0x32   0xE007             B.N      ??ProcMenuRFTID_3
    883          
    884          	default:
    885          		printf("%s(%d) - invalid menu(%d)\n", __func__, __LINE__, idxItem);
   \                     ??ProcMenuRFTID_2: (+1)
   \       0x34   0x0023             MOVS     R3,R4
   \       0x36   0xB2DB             UXTB     R3,R3
   \       0x38   0xF240 0x3275      MOVW     R2,#+885
   \       0x3C   0x....             LDR.N    R1,??DataTable23_27
   \       0x3E   0x....             LDR.N    R0,??DataTable23_28
   \       0x40   0x.... 0x....      BL       printf
    886          		break;
    887          	}
    888          
    889          	//  1초후 Main화면 갱신.
    890          	HAL_Delay( (uint32_t)1000 );
   \                     ??ProcMenuRFTID_3: (+1)
   \       0x44   0xF44F 0x707A      MOV      R0,#+1000
   \       0x48   0x.... 0x....      BL       HAL_Delay
    891          	UpdateLCDMain();
   \       0x4C   0x.... 0x....      BL       UpdateLCDMain
    892          
    893          	SetActiveMenu( NULL );
   \       0x50   0x2000             MOVS     R0,#+0
   \       0x52   0x.... 0x....      BL       SetActiveMenu
    894          }
   \       0x56   0xBD10             POP      {R4,PC}
    895          
    896          //========================================================================

   \                                 In section .text, align 2, keep-with-next
    897          void 	ProcMenuSelfTest( uint8_t idxItem )
    898          //========================================================================
    899          {
   \                     ProcMenuSelfTest: (+1)
   \        0x0   0xB510             PUSH     {R4,LR}
   \        0x2   0x0004             MOVS     R4,R0
    900          	LCDMenuUpDown( 0 );
   \        0x4   0x2000             MOVS     R0,#+0
   \        0x6   0x.... 0x....      BL       LCDMenuUpDown
    901          
    902          	//  1초후 Main화면 갱신.
    903          	HAL_Delay( (uint32_t)1000 );
   \        0xA   0xF44F 0x707A      MOV      R0,#+1000
   \        0xE   0x.... 0x....      BL       HAL_Delay
    904          	UpdateLCDMain();
   \       0x12   0x.... 0x....      BL       UpdateLCDMain
    905          
    906          	SetActiveMenu( NULL );
   \       0x16   0x2000             MOVS     R0,#+0
   \       0x18   0x.... 0x....      BL       SetActiveMenu
    907          }
   \       0x1C   0xBD10             POP      {R4,PC}
    908          
    909          //========================================================================

   \                                 In section .text, align 2, keep-with-next
    910          void 	ProcMenuDiag( uint8_t idxItem )
    911          //========================================================================
    912          {
   \                     ProcMenuDiag: (+1)
   \        0x0   0xB510             PUSH     {R4,LR}
   \        0x2   0x0004             MOVS     R4,R0
    913          	LCDMenuUpDown( 0 );
   \        0x4   0x2000             MOVS     R0,#+0
   \        0x6   0x.... 0x....      BL       LCDMenuUpDown
    914          
    915          //	" AudioLoop:Off",	//  Loopback Off
    916          //	" AudioLoop:On",	//  Loopback On
    917          //	" AudioSine:On",	//  Sine Wave On
    918          
    919          	switch( idxItem )
   \        0xA   0x0020             MOVS     R0,R4
   \        0xC   0xB2C0             UXTB     R0,R0
   \        0xE   0x2800             CMP      R0,#+0
   \       0x10   0xD003             BEQ.N    ??ProcMenuDiag_0
   \       0x12   0x2802             CMP      R0,#+2
   \       0x14   0xD01A             BEQ.N    ??ProcMenuDiag_1
   \       0x16   0xD308             BCC.N    ??ProcMenuDiag_2
   \       0x18   0xE029             B.N      ??ProcMenuDiag_3
    920          	{
    921          	case 0:	//	Audio Loopback Off
    922          		HAL_GPIO_WritePin( SPK_ON_GPIO_Port, SPK_ON_Pin, GPIO_PIN_RESET );
   \                     ??ProcMenuDiag_0: (+1)
   \       0x1A   0x2200             MOVS     R2,#+0
   \       0x1C   0x2120             MOVS     R1,#+32
   \       0x1E   0x....             LDR.N    R0,??DataTable23_29
   \       0x20   0x.... 0x....      BL       HAL_GPIO_WritePin
    923          
    924          		//	Codec Loopback Off
    925          		AudioStop();
   \       0x24   0x.... 0x....      BL       AudioStop
    926          
    927          		break;
   \       0x28   0xE029             B.N      ??ProcMenuDiag_4
    928          
    929          	case 1:	//	Audio Loopback On
    930          		printf( "%s(%d) - sine\n", __func__, __LINE__ );
   \                     ??ProcMenuDiag_2: (+1)
   \       0x2A   0xF240 0x32A2      MOVW     R2,#+930
   \       0x2E   0x....             LDR.N    R1,??DataTable23_30
   \       0x30   0x....             LDR.N    R0,??DataTable23_31
   \       0x32   0x.... 0x....      BL       printf
    931          		LCDPrintf( "Audio Loop" );
   \       0x36   0x....             LDR.N    R0,??DataTable23_32
   \       0x38   0x.... 0x....      BL       LCDPrintf
    932          
    933          		HAL_GPIO_WritePin( SPK_ON_GPIO_Port, SPK_ON_Pin, GPIO_PIN_SET );
   \       0x3C   0x2201             MOVS     R2,#+1
   \       0x3E   0x2120             MOVS     R1,#+32
   \       0x40   0x....             LDR.N    R0,??DataTable23_29
   \       0x42   0x.... 0x....      BL       HAL_GPIO_WritePin
    934          
    935          		AudioDMALoopback();
   \       0x46   0x.... 0x....      BL       AudioDMALoopback
    936          		break;
   \       0x4A   0xE018             B.N      ??ProcMenuDiag_4
    937          
    938          	case 2:	//	Audio Sine Wave On
    939          		printf( "%s(%d) - sine\n", __func__, __LINE__ );
   \                     ??ProcMenuDiag_1: (+1)
   \       0x4C   0xF240 0x32AB      MOVW     R2,#+939
   \       0x50   0x....             LDR.N    R1,??DataTable23_30
   \       0x52   0x....             LDR.N    R0,??DataTable23_31
   \       0x54   0x.... 0x....      BL       printf
    940          		LCDPrintf( "Audio Sine" );
   \       0x58   0x....             LDR.N    R0,??DataTable23_33
   \       0x5A   0x.... 0x....      BL       LCDPrintf
    941          
    942          		HAL_GPIO_WritePin( SPK_ON_GPIO_Port, SPK_ON_Pin, GPIO_PIN_SET );
   \       0x5E   0x2201             MOVS     R2,#+1
   \       0x60   0x2120             MOVS     R1,#+32
   \       0x62   0x....             LDR.N    R0,??DataTable23_29
   \       0x64   0x.... 0x....      BL       HAL_GPIO_WritePin
    943          
    944          		AudioPlayDMASine();
   \       0x68   0x.... 0x....      BL       AudioPlayDMASine
    945          		break;
   \       0x6C   0xE007             B.N      ??ProcMenuDiag_4
    946          
    947          	default:
    948          		printf("%s(%d) - invalid menu(%d)\n", __func__, __LINE__, idxItem);
   \                     ??ProcMenuDiag_3: (+1)
   \       0x6E   0x0023             MOVS     R3,R4
   \       0x70   0xB2DB             UXTB     R3,R3
   \       0x72   0xF44F 0x726D      MOV      R2,#+948
   \       0x76   0x....             LDR.N    R1,??DataTable23_30
   \       0x78   0x....             LDR.N    R0,??DataTable23_28
   \       0x7A   0x.... 0x....      BL       printf
    949          		break;
    950          	}
    951          
    952          	//  1초후 Main화면 갱신.
    953          //	HAL_Delay( 1000 );
    954          //	UpdateLCDMain();
    955          
    956          //	SetActiveMenu( NULL );
    957          }
   \                     ??ProcMenuDiag_4: (+1)
   \       0x7E   0xBD10             POP      {R4,PC}
    958          
    959          
    960          //========================================================================

   \                                 In section .text, align 2, keep-with-next
    961          void 	ProcMenuSetting( uint8_t idxItem )
    962          //========================================================================
    963          {
   \                     ProcMenuSetting: (+1)
   \        0x0   0xB538             PUSH     {R3-R5,LR}
   \        0x2   0x0004             MOVS     R4,R0
    964          	uint8_t sReVel = 0;
   \        0x4   0x2500             MOVS     R5,#+0
    965          
    966          	LCDMenuUpDown( 0 );
   \        0x6   0x2000             MOVS     R0,#+0
   \        0x8   0x.... 0x....      BL       LCDMenuUpDown
    967          
    968          
    969          
    970          //	" Mic Vol",		//	Mic Volume
    971          //	" Spk Vol",		//	Spk Volume
    972          //	" RF Tx Pwr",	//	RF Tx Power
    973          
    974          	switch( idxItem )
   \        0xC   0x0020             MOVS     R0,R4
   \        0xE   0xB2C0             UXTB     R0,R0
   \       0x10   0x2800             CMP      R0,#+0
   \       0x12   0xD003             BEQ.N    ??ProcMenuSetting_0
   \       0x14   0x2802             CMP      R0,#+2
   \       0x16   0xD019             BEQ.N    ??ProcMenuSetting_1
   \       0x18   0xD30C             BCC.N    ??ProcMenuSetting_2
   \       0x1A   0xE021             B.N      ??ProcMenuSetting_3
    975          	{
    976          	case 0:		//	Mic Volume
    977          		SetActiveMenu( &g_MenuSetMicList );
   \                     ??ProcMenuSetting_0: (+1)
   \       0x1C   0x....             LDR.N    R0,??DataTable23_34
   \       0x1E   0x.... 0x....      BL       SetActiveMenu
    978          
    979          		sReVel =  (uint8_t)GetMicVol();	//	메뉴 Index초기화.
   \       0x22   0x.... 0x....      BL       GetMicVol
   \       0x26   0x0005             MOVS     R5,R0
    980          		GetActiveMenu()->currIdx =(int8_t)sReVel;
   \       0x28   0x.... 0x....      BL       GetActiveMenu
   \       0x2C   0x7145             STRB     R5,[R0, #+5]
    981          
    982          		UpdateLCDMenu();
   \       0x2E   0x.... 0x....      BL       UpdateLCDMenu
    983          
    984          		break;
   \       0x32   0xE01D             B.N      ??ProcMenuSetting_4
    985          
    986          	case 1:		//	Spk Volume
    987          		SetActiveMenu( &g_MenuSetSpkList );
   \                     ??ProcMenuSetting_2: (+1)
   \       0x34   0x....             LDR.N    R0,??DataTable23_35
   \       0x36   0x.... 0x....      BL       SetActiveMenu
    988          
    989          		sReVel =  (uint8_t)GetSpkVol();	//	메뉴 Index초기화.
   \       0x3A   0x.... 0x....      BL       GetSpkVol
   \       0x3E   0x0005             MOVS     R5,R0
    990          
    991          		GetActiveMenu()->currIdx = (int8_t)sReVel;
   \       0x40   0x.... 0x....      BL       GetActiveMenu
   \       0x44   0x7145             STRB     R5,[R0, #+5]
    992          		UpdateLCDMenu();
   \       0x46   0x.... 0x....      BL       UpdateLCDMenu
    993          		break;
   \       0x4A   0xE011             B.N      ??ProcMenuSetting_4
    994          
    995          	case 2:		//	RF Tx Power
    996          		SetActiveMenu( &g_MenuSetTxPwrList );
   \                     ??ProcMenuSetting_1: (+1)
   \       0x4C   0x....             LDR.N    R0,??DataTable23_36
   \       0x4E   0x.... 0x....      BL       SetActiveMenu
    997          
    998          		GetActiveMenu()->currIdx =(int8_t) 7;	//	메뉴 Index초기화.
   \       0x52   0x.... 0x....      BL       GetActiveMenu
   \       0x56   0x2107             MOVS     R1,#+7
   \       0x58   0x7141             STRB     R1,[R0, #+5]
    999          
   1000          		UpdateLCDMenu();
   \       0x5A   0x.... 0x....      BL       UpdateLCDMenu
   1001          		break;
   \       0x5E   0xE007             B.N      ??ProcMenuSetting_4
   1002          
   1003          	default:
   1004          		printf("%s(%d) - invalid menu(%d)\n", __func__, __LINE__, idxItem);
   \                     ??ProcMenuSetting_3: (+1)
   \       0x60   0x0023             MOVS     R3,R4
   \       0x62   0xB2DB             UXTB     R3,R3
   \       0x64   0xF44F 0x727B      MOV      R2,#+1004
   \       0x68   0x....             LDR.N    R1,??DataTable23_37
   \       0x6A   0x....             LDR.N    R0,??DataTable23_28
   \       0x6C   0x.... 0x....      BL       printf
   1005          		break;
   1006          	}
   1007          }
   \                     ??ProcMenuSetting_4: (+1)
   \       0x70   0xBD31             POP      {R0,R4,R5,PC}
   1008          
   1009          //========================================================================

   \                                 In section .text, align 2, keep-with-next
   1010          void 	ProcMenuSetMic( uint8_t idxItem )
   1011          //========================================================================
   1012          {
   \                     ProcMenuSetMic: (+1)
   \        0x0   0xB510             PUSH     {R4,LR}
   \        0x2   0x0004             MOVS     R4,R0
   1013          	LCDMenuUpDown( 0 );
   \        0x4   0x2000             MOVS     R0,#+0
   \        0x6   0x.... 0x....      BL       LCDMenuUpDown
   1014          
   1015          	//	Mic : 0 ~ 9
   1016          
   1017          	switch( idxItem )
   \        0xA   0x0020             MOVS     R0,R4
   \        0xC   0xB2C0             UXTB     R0,R0
   \        0xE   0x2800             CMP      R0,#+0
   \       0x10   0x2809             CMP      R0,#+9
   \       0x12   0xD804             BHI.N    ??ProcMenuSetMic_0
   1018          	{
   1019          	case 0:
   1020          	case 1:
   1021          	case 2:
   1022          	case 3:
   1023          	case 4:
   1024          	case 5:
   1025          	case 6:
   1026          	case 7:
   1027          	case 8:
   1028          	case 9:
   1029          		SetMicVol(idxItem);
   \                     ??ProcMenuSetMic_1: (+1)
   \       0x14   0x0020             MOVS     R0,R4
   \       0x16   0xB2C0             UXTB     R0,R0
   \       0x18   0x.... 0x....      BL       SetMicVol
   1030          		break;
   \       0x1C   0xE007             B.N      ??ProcMenuSetMic_2
   1031          	default:
   1032          		printf("%s(%d) - invalid menu(%d)\n", __func__, __LINE__, idxItem);
   \                     ??ProcMenuSetMic_0: (+1)
   \       0x1E   0x0023             MOVS     R3,R4
   \       0x20   0xB2DB             UXTB     R3,R3
   \       0x22   0xF44F 0x6281      MOV      R2,#+1032
   \       0x26   0x....             LDR.N    R1,??DataTable23_38
   \       0x28   0x....             LDR.N    R0,??DataTable23_28
   \       0x2A   0x.... 0x....      BL       printf
   1033          		break;
   1034          	}
   1035          	//  1초후 Main화면 갱신.
   1036          	HAL_Delay((uint32_t) 1000 );
   \                     ??ProcMenuSetMic_2: (+1)
   \       0x2E   0xF44F 0x707A      MOV      R0,#+1000
   \       0x32   0x.... 0x....      BL       HAL_Delay
   1037          	UpdateLCDMain();
   \       0x36   0x.... 0x....      BL       UpdateLCDMain
   1038          
   1039          	SetActiveMenu( NULL );
   \       0x3A   0x2000             MOVS     R0,#+0
   \       0x3C   0x.... 0x....      BL       SetActiveMenu
   1040          }
   \       0x40   0xBD10             POP      {R4,PC}
   1041          
   1042          //========================================================================

   \                                 In section .text, align 2, keep-with-next
   1043          void 	ProcMenuSetSpk( uint8_t idxItem )
   1044          //========================================================================
   1045          {
   \                     ProcMenuSetSpk: (+1)
   \        0x0   0xB510             PUSH     {R4,LR}
   \        0x2   0x0004             MOVS     R4,R0
   1046          	LCDMenuUpDown( 0 );
   \        0x4   0x2000             MOVS     R0,#+0
   \        0x6   0x.... 0x....      BL       LCDMenuUpDown
   1047          
   1048          	//	Spk : 0 ~ 3
   1049          
   1050          	switch( idxItem )
   \        0xA   0x0020             MOVS     R0,R4
   \        0xC   0xB2C0             UXTB     R0,R0
   \        0xE   0x2800             CMP      R0,#+0
   \       0x10   0x2803             CMP      R0,#+3
   \       0x12   0xD804             BHI.N    ??ProcMenuSetSpk_0
   1051          	{
   1052          	case 0:
   1053          	case 1:
   1054          	case 2:
   1055          	case 3:
   1056          		SetSpkVol(idxItem);
   \                     ??ProcMenuSetSpk_1: (+1)
   \       0x14   0x0020             MOVS     R0,R4
   \       0x16   0xB2C0             UXTB     R0,R0
   \       0x18   0x.... 0x....      BL       SetSpkVol
   1057          		break;
   \       0x1C   0xE007             B.N      ??ProcMenuSetSpk_2
   1058          	default:
   1059          		printf("%s(%d) - invalid menu(%d)\n", __func__, __LINE__, idxItem);
   \                     ??ProcMenuSetSpk_0: (+1)
   \       0x1E   0x0023             MOVS     R3,R4
   \       0x20   0xB2DB             UXTB     R3,R3
   \       0x22   0xF240 0x4223      MOVW     R2,#+1059
   \       0x26   0x....             LDR.N    R1,??DataTable23_39
   \       0x28   0x....             LDR.N    R0,??DataTable23_28
   \       0x2A   0x.... 0x....      BL       printf
   1060          		break;
   1061          	}
   1062          	//  1초후 Main화면 갱신.
   1063          	HAL_Delay( (uint32_t)1000 );
   \                     ??ProcMenuSetSpk_2: (+1)
   \       0x2E   0xF44F 0x707A      MOV      R0,#+1000
   \       0x32   0x.... 0x....      BL       HAL_Delay
   1064          	UpdateLCDMain();
   \       0x36   0x.... 0x....      BL       UpdateLCDMain
   1065          
   1066          	SetActiveMenu( NULL );
   \       0x3A   0x2000             MOVS     R0,#+0
   \       0x3C   0x.... 0x....      BL       SetActiveMenu
   1067          }
   \       0x40   0xBD10             POP      {R4,PC}
   1068          
   1069          
   1070          //========================================================================

   \                                 In section .text, align 2, keep-with-next
   1071          void 	ProcMenuSetTxPwr( uint8_t idxItem )
   1072          //========================================================================
   1073          {
   \                     ProcMenuSetTxPwr: (+1)
   \        0x0   0xB510             PUSH     {R4,LR}
   \        0x2   0x0004             MOVS     R4,R0
   1074          	LCDMenuUpDown( 0 );
   \        0x4   0x2000             MOVS     R0,#+0
   \        0x6   0x.... 0x....      BL       LCDMenuUpDown
   1075          
   1076          //	char *_sSetTxPwrList[] = { 	" Pwr : -38 dBm",	//	0
   1077          //								" Pwr : -20 dBm",	//	1
   1078          //								" Pwr : -5 dBm",	//	4
   1079          //								" Pwr : 0 dBm",		//	7
   1080          //								" Pwr : 5 dBm",		//	12
   1081          //								" Pwr : 10 dBm",	//	22
   1082          //								" Pwr : 15 dBm",	//	40
   1083          //								" Pwr : 20 dBm",	//	127
   1084          //							};
   1085          
   1086          	switch( idxItem )
   \        0xA   0x0020             MOVS     R0,R4
   \        0xC   0xB2C0             UXTB     R0,R0
   \        0xE   0x2800             CMP      R0,#+0
   \       0x10   0xD009             BEQ.N    ??ProcMenuSetTxPwr_0
   \       0x12   0x2802             CMP      R0,#+2
   \       0x14   0xD00F             BEQ.N    ??ProcMenuSetTxPwr_1
   \       0x16   0xD30A             BCC.N    ??ProcMenuSetTxPwr_2
   \       0x18   0x2804             CMP      R0,#+4
   \       0x1A   0xD014             BEQ.N    ??ProcMenuSetTxPwr_3
   \       0x1C   0xD30F             BCC.N    ??ProcMenuSetTxPwr_4
   \       0x1E   0x2806             CMP      R0,#+6
   \       0x20   0xD019             BEQ.N    ??ProcMenuSetTxPwr_5
   \       0x22   0xD314             BCC.N    ??ProcMenuSetTxPwr_6
   \       0x24   0xE01B             B.N      ??ProcMenuSetTxPwr_7
   1087          	{
   1088          	case 0:	vRadio_Set_TxPower((U8)0);		break;
   \                     ??ProcMenuSetTxPwr_0: (+1)
   \       0x26   0x2000             MOVS     R0,#+0
   \       0x28   0x.... 0x....      BL       vRadio_Set_TxPower
   \       0x2C   0xE01F             B.N      ??ProcMenuSetTxPwr_8
   1089          	case 1:	vRadio_Set_TxPower((U8)1);		break;
   \                     ??ProcMenuSetTxPwr_2: (+1)
   \       0x2E   0x2001             MOVS     R0,#+1
   \       0x30   0x.... 0x....      BL       vRadio_Set_TxPower
   \       0x34   0xE01B             B.N      ??ProcMenuSetTxPwr_8
   1090          	case 2:	vRadio_Set_TxPower((U8)4);		break;
   \                     ??ProcMenuSetTxPwr_1: (+1)
   \       0x36   0x2004             MOVS     R0,#+4
   \       0x38   0x.... 0x....      BL       vRadio_Set_TxPower
   \       0x3C   0xE017             B.N      ??ProcMenuSetTxPwr_8
   1091          	case 3:	vRadio_Set_TxPower((U8)7);		break;
   \                     ??ProcMenuSetTxPwr_4: (+1)
   \       0x3E   0x2007             MOVS     R0,#+7
   \       0x40   0x.... 0x....      BL       vRadio_Set_TxPower
   \       0x44   0xE013             B.N      ??ProcMenuSetTxPwr_8
   1092          	case 4:	vRadio_Set_TxPower((U8)12);		break;
   \                     ??ProcMenuSetTxPwr_3: (+1)
   \       0x46   0x200C             MOVS     R0,#+12
   \       0x48   0x.... 0x....      BL       vRadio_Set_TxPower
   \       0x4C   0xE00F             B.N      ??ProcMenuSetTxPwr_8
   1093          	case 5:	vRadio_Set_TxPower((U8)40);		break;
   \                     ??ProcMenuSetTxPwr_6: (+1)
   \       0x4E   0x2028             MOVS     R0,#+40
   \       0x50   0x.... 0x....      BL       vRadio_Set_TxPower
   \       0x54   0xE00B             B.N      ??ProcMenuSetTxPwr_8
   1094          	case 6:	vRadio_Set_TxPower((U8)127);	break;
   \                     ??ProcMenuSetTxPwr_5: (+1)
   \       0x56   0x207F             MOVS     R0,#+127
   \       0x58   0x.... 0x....      BL       vRadio_Set_TxPower
   \       0x5C   0xE007             B.N      ??ProcMenuSetTxPwr_8
   1095          	default:
   1096          		printf("%s(%d) - invalid menu(%d)\n", __func__, __LINE__, idxItem);
   \                     ??ProcMenuSetTxPwr_7: (+1)
   \       0x5E   0x0023             MOVS     R3,R4
   \       0x60   0xB2DB             UXTB     R3,R3
   \       0x62   0xF44F 0x6289      MOV      R2,#+1096
   \       0x66   0x....             LDR.N    R1,??DataTable23_40
   \       0x68   0x....             LDR.N    R0,??DataTable23_28
   \       0x6A   0x.... 0x....      BL       printf
   1097          		break;
   1098          	}
   1099          	//  1초후 Main화면 갱신.
   1100          	HAL_Delay( (uint32_t)1000 );
   \                     ??ProcMenuSetTxPwr_8: (+1)
   \       0x6E   0xF44F 0x707A      MOV      R0,#+1000
   \       0x72   0x.... 0x....      BL       HAL_Delay
   1101          	UpdateLCDMain();
   \       0x76   0x.... 0x....      BL       UpdateLCDMain
   1102          
   1103          	SetActiveMenu( NULL );
   \       0x7A   0x2000             MOVS     R0,#+0
   \       0x7C   0x.... 0x....      BL       SetActiveMenu
   1104          }
   \       0x80   0xBD10             POP      {R4,PC}
   1105          
   1106          
   1107          //========================================================================

   \                                 In section .text, align 2, keep-with-next
   1108          void	ProcBtnOK( void )
   1109          //========================================================================
   1110          {
   \                     ProcBtnOK: (+1)
   \        0x0   0xB580             PUSH     {R7,LR}
   1111          	if ( GetActiveMenu() == NULL )
   \        0x2   0x.... 0x....      BL       GetActiveMenu
   \        0x6   0x2800             CMP      R0,#+0
   \        0x8   0xD107             BNE.N    ??ProcBtnOK_0
   1112          	{
   1113          		LCDClearMain();
   \        0xA   0x.... 0x....      BL       LCDClearMain
   1114          		//========================================================================
   1115          		//  편성 : XXX
   1116          		UpdateLCDMain();
   \        0xE   0x.... 0x....      BL       UpdateLCDMain
   1117          
   1118          		//========================================================================
   1119          		//	Display Status Disable
   1120          		_bEnDispStat		=	0;
   \       0x12   0x2000             MOVS     R0,#+0
   \       0x14   0x....             LDR.N    R1,??DataTable23_6
   \       0x16   0x7008             STRB     R0,[R1, #+0]
   1121          
   1122          		return;
   \       0x18   0xE009             B.N      ??ProcBtnOK_1
   1123          	}
   1124          	else if ( g_pActiveMenu->cbFunc != NULL )
   \                     ??ProcBtnOK_0: (+1)
   \       0x1A   0x....             LDR.N    R1,??DataTable23_2
   \       0x1C   0x6808             LDR      R0,[R1, #+0]
   \       0x1E   0x6880             LDR      R0,[R0, #+8]
   \       0x20   0x2800             CMP      R0,#+0
   \       0x22   0xD004             BEQ.N    ??ProcBtnOK_2
   1125          	{
   1126          		//	Menu Procedure Function
   1127          		g_pActiveMenu->cbFunc( g_pActiveMenu->currIdx );
   \       0x24   0x6808             LDR      R0,[R1, #+0]
   \       0x26   0x7940             LDRB     R0,[R0, #+5]
   \       0x28   0x6809             LDR      R1,[R1, #+0]
   \       0x2A   0x6889             LDR      R1,[R1, #+8]
   \       0x2C   0x4788             BLX      R1
   1128          	}
   1129          }
   \                     ??ProcBtnOK_2: (+1)
   \                     ??ProcBtnOK_1: (+1)
   \       0x2E   0xBD01             POP      {R0,PC}

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable23:
   \        0x0   0x....'....        DC32     g_bEnMenuMaint

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable23_1:
   \        0x0   0x....'....        DC32     ?_71

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable23_2:
   \        0x0   0x....'....        DC32     g_pActiveMenu

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable23_3:
   \        0x0   0x....'....        DC32     g_idxTrainSet

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable23_4:
   \        0x0   0x....'....        DC32     ?_72

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable23_5:
   \        0x0   0x....'....        DC32     `UpdateLCDMonitor::oldTick`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable23_6:
   \        0x0   0x....'....        DC32     _bEnDispStat

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable23_7:
   \        0x0   0x....'....        DC32     g_nRSSI

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable23_8:
   \        0x0   0x....'....        DC32     g_flagRspID

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable23_9:
   \        0x0   0x....'....        DC32     ?_73

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable23_10:
   \        0x0   0x....'....        DC32     g_MenuMainMaint

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable23_11:
   \        0x0   0x....'....        DC32     g_MenuMainBase

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable23_12:
   \        0x0   0x....'....        DC32     ?_74

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable23_13:
   \        0x0   0x....'....        DC32     ?_75

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable23_14:
   \        0x0   0x....'....        DC32     ?_76

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable23_15:
   \        0x0   0x....'....        DC32     ?_77

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable23_16:
   \        0x0   0x....'....        DC32     ?_78

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable23_17:
   \        0x0   0x....'....        DC32     g_MenuLightCtrl

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable23_18:
   \        0x0   0x....'....        DC32     g_MenuVerList

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable23_19:
   \        0x0   0x....'....        DC32     g_MenuTrainSet

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable23_20:
   \        0x0   0x....'....        DC32     g_MenuRFTIDList

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable23_21:
   \        0x0   0x....'....        DC32     g_MenuSelfTestList

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable23_22:
   \        0x0   0x....'....        DC32     g_MenuDiagList

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable23_23:
   \        0x0   0x....'....        DC32     g_MenuSettingList

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable23_24:
   \        0x0   0x....'....        DC32     g_MenuCmdList

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable23_25:
   \        0x0   0x....'....        DC32     ?_79

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable23_26:
   \        0x0   0x....'....        DC32     ?_80

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable23_27:
   \        0x0   0x....'....        DC32     `ProcMenuRFTID::__func__`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable23_28:
   \        0x0   0x....'....        DC32     ?_81

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable23_29:
   \        0x0   0x4002'1000        DC32     0x40021000

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable23_30:
   \        0x0   0x....'....        DC32     `ProcMenuDiag::__func__`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable23_31:
   \        0x0   0x....'....        DC32     ?_82

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable23_32:
   \        0x0   0x....'....        DC32     ?_83

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable23_33:
   \        0x0   0x....'....        DC32     ?_84

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable23_34:
   \        0x0   0x....'....        DC32     g_MenuSetMicList

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable23_35:
   \        0x0   0x....'....        DC32     g_MenuSetSpkList

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable23_36:
   \        0x0   0x....'....        DC32     g_MenuSetTxPwrList

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable23_37:
   \        0x0   0x....'....        DC32     `ProcMenuSetting::__func__`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable23_38:
   \        0x0   0x....'....        DC32     `ProcMenuSetMic::__func__`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable23_39:
   \        0x0   0x....'....        DC32     `ProcMenuSetSpk::__func__`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable23_40:
   \        0x0   0x....'....        DC32     `ProcMenuSetTxPwr::__func__`

   \                                 In section .rodata, align 4
   \                     ?_0:
   \        0x0   0x31 0x2E          DC8 "1. \354\241\260\353\252\205\354\206\214\353\223\261"

   \              0x20 0xEC    

   \              0xA1 0xB0    

   \              0xEB 0xAA    

   \              0x85 0xEC    

   \              0x86 0x8C    

   \              0xEB 0x93    

   \              0xB1 0x00

   \                                 In section .rodata, align 4
   \                     ?_1:
   \        0x0   0x32 0x2E          DC8 "2. \354\241\260\353\252\205\354\240\220\353\223\261"

   \              0x20 0xEC    

   \              0xA1 0xB0    

   \              0xEB 0xAA    

   \              0x85 0xEC    

   \              0xA0 0x90    

   \              0xEB 0x93    

   \              0xB1 0x00

   \                                 In section .rodata, align 4
   \                     ?_2:
   \        0x0   0x20 0x31          DC8 " 100 \355\216\270\354\204\261"

   \              0x30 0x30    

   \              0x20 0xED    

   \              0x8E 0xB8    

   \              0xEC 0x84    

   \              0xB1 0x00

   \                                 In section .rodata, align 4
   \                     ?_3:
   \        0x0   0x20 0x31          DC8 " 101 \355\216\270\354\204\261"

   \              0x30 0x31    

   \              0x20 0xED    

   \              0x8E 0xB8    

   \              0xEC 0x84    

   \              0xB1 0x00

   \                                 In section .rodata, align 4
   \                     ?_4:
   \        0x0   0x20 0x31          DC8 " 102 \355\216\270\354\204\261"

   \              0x30 0x32    

   \              0x20 0xED    

   \              0x8E 0xB8    

   \              0xEC 0x84    

   \              0xB1 0x00

   \                                 In section .rodata, align 4
   \                     ?_5:
   \        0x0   0x20 0x31          DC8 " 103 \355\216\270\354\204\261"

   \              0x30 0x33    

   \              0x20 0xED    

   \              0x8E 0xB8    

   \              0xEC 0x84    

   \              0xB1 0x00

   \                                 In section .rodata, align 4
   \                     ?_6:
   \        0x0   0x20 0x31          DC8 " 104 \355\216\270\354\204\261"

   \              0x30 0x34    

   \              0x20 0xED    

   \              0x8E 0xB8    

   \              0xEC 0x84    

   \              0xB1 0x00

   \                                 In section .rodata, align 4
   \                     ?_7:
   \        0x0   0x20 0x31          DC8 " 105 \355\216\270\354\204\261"

   \              0x30 0x35    

   \              0x20 0xED    

   \              0x8E 0xB8    

   \              0xEC 0x84    

   \              0xB1 0x00

   \                                 In section .rodata, align 4
   \                     ?_8:
   \        0x0   0x20 0x31          DC8 " 106 \355\216\270\354\204\261"

   \              0x30 0x36    

   \              0x20 0xED    

   \              0x8E 0xB8    

   \              0xEC 0x84    

   \              0xB1 0x00

   \                                 In section .rodata, align 4
   \                     ?_9:
   \        0x0   0x20 0x31          DC8 " 107 \355\216\270\354\204\261"

   \              0x30 0x37    

   \              0x20 0xED    

   \              0x8E 0xB8    

   \              0xEC 0x84    

   \              0xB1 0x00

   \                                 In section .rodata, align 4
   \                     ?_10:
   \        0x0   0x20 0x31          DC8 " 108 \355\216\270\354\204\261"

   \              0x30 0x38    

   \              0x20 0xED    

   \              0x8E 0xB8    

   \              0xEC 0x84    

   \              0xB1 0x00

   \                                 In section .rodata, align 4
   \                     ?_11:
   \        0x0   0x20 0x31          DC8 " 109 \355\216\270\354\204\261"

   \              0x30 0x39    

   \              0x20 0xED    

   \              0x8E 0xB8    

   \              0xEC 0x84    

   \              0xB1 0x00

   \                                 In section .rodata, align 4
   \                     ?_12:
   \        0x0   0x20 0x31          DC8 " 110 \355\216\270\354\204\261"

   \              0x31 0x30    

   \              0x20 0xED    

   \              0x8E 0xB8    

   \              0xEC 0x84    

   \              0xB1 0x00

   \                                 In section .rodata, align 4
   \                     ?_13:
   \        0x0   0x20 0x31          DC8 " 111 \355\216\270\354\204\261"

   \              0x31 0x31    

   \              0x20 0xED    

   \              0x8E 0xB8    

   \              0xEC 0x84    

   \              0xB1 0x00

   \                                 In section .rodata, align 4
   \                     ?_14:
   \        0x0   0x20 0x31          DC8 " 112 \355\216\270\354\204\261"

   \              0x31 0x32    

   \              0x20 0xED    

   \              0x8E 0xB8    

   \              0xEC 0x84    

   \              0xB1 0x00

   \                                 In section .rodata, align 4
   \                     ?_15:
   \        0x0   0x20 0x31          DC8 " 113 \355\216\270\354\204\261"

   \              0x31 0x33    

   \              0x20 0xED    

   \              0x8E 0xB8    

   \              0xEC 0x84    

   \              0xB1 0x00

   \                                 In section .rodata, align 4
   \                     ?_16:
   \        0x0   0x20 0x31          DC8 " 114 \355\216\270\354\204\261"

   \              0x31 0x34    

   \              0x20 0xED    

   \              0x8E 0xB8    

   \              0xEC 0x84    

   \              0xB1 0x00

   \                                 In section .rodata, align 4
   \                     ?_17:
   \        0x0   0x20 0x31          DC8 " 115 \355\216\270\354\204\261"

   \              0x31 0x35    

   \              0x20 0xED    

   \              0x8E 0xB8    

   \              0xEC 0x84    

   \              0xB1 0x00

   \                                 In section .rodata, align 4
   \                     ?_18:
   \        0x0   0x20 0x31          DC8 " 116 \355\216\270\354\204\261"

   \              0x31 0x36    

   \              0x20 0xED    

   \              0x8E 0xB8    

   \              0xEC 0x84    

   \              0xB1 0x00

   \                                 In section .rodata, align 4
   \                     ?_19:
   \        0x0   0x20 0x31          DC8 " 117 \355\216\270\354\204\261"

   \              0x31 0x37    

   \              0x20 0xED    

   \              0x8E 0xB8    

   \              0xEC 0x84    

   \              0xB1 0x00

   \                                 In section .rodata, align 4
   \                     ?_20:
   \        0x0   0x20 0x31          DC8 " 118 \355\216\270\354\204\261"

   \              0x31 0x38    

   \              0x20 0xED    

   \              0x8E 0xB8    

   \              0xEC 0x84    

   \              0xB1 0x00

   \                                 In section .rodata, align 4
   \                     ?_21:
   \        0x0   0x20 0x31          DC8 " 119 \355\216\270\354\204\261"

   \              0x31 0x39    

   \              0x20 0xED    

   \              0x8E 0xB8    

   \              0xEC 0x84    

   \              0xB1 0x00

   \                                 In section .rodata, align 4
   \                     ?_22:
   \        0x0   0x20 0xEC          DC8 " \354\206\241\354\213\240\352\270\260#1"

   \              0x86 0xA1    

   \              0xEC 0x8B    

   \              0xA0 0xEA    

   \              0xB8 0xB0    

   \              0x23 0x31    

   \              0x00
   \        0xD                      DS8 3

   \                                 In section .rodata, align 4
   \                     ?_23:
   \        0x0   0x20 0xEC          DC8 " \354\206\241\354\213\240\352\270\260#2"

   \              0x86 0xA1    

   \              0xEC 0x8B    

   \              0xA0 0xEA    

   \              0xB8 0xB0    

   \              0x23 0x32    

   \              0x00
   \        0xD                      DS8 3

   \                                 In section .rodata, align 4
   \                     ?_24:
   \        0x0   0x20 0x31          DC8 " 1 \355\230\270\354\260\250 : OK"

   \              0x20 0xED    

   \              0x98 0xB8    

   \              0xEC 0xB0    

   \              0xA8 0x20    

   \              0x3A 0x20    

   \              0x4F 0x4B    

   \              0x00
   \        0xF                      DS8 1

   \                                 In section .rodata, align 4
   \                     ?_25:
   \        0x0   0x20 0x32          DC8 " 2 \355\230\270\354\260\250 : OK"

   \              0x20 0xED    

   \              0x98 0xB8    

   \              0xEC 0xB0    

   \              0xA8 0x20    

   \              0x3A 0x20    

   \              0x4F 0x4B    

   \              0x00
   \        0xF                      DS8 1

   \                                 In section .rodata, align 4
   \                     ?_26:
   \        0x0   0x20 0x33          DC8 " 3 \355\230\270\354\260\250 : OK"

   \              0x20 0xED    

   \              0x98 0xB8    

   \              0xEC 0xB0    

   \              0xA8 0x20    

   \              0x3A 0x20    

   \              0x4F 0x4B    

   \              0x00
   \        0xF                      DS8 1

   \                                 In section .rodata, align 4
   \                     ?_27:
   \        0x0   0x20 0x34          DC8 " 4 \355\230\270\354\260\250 : N/A"

   \              0x20 0xED    

   \              0x98 0xB8    

   \              0xEC 0xB0    

   \              0xA8 0x20    

   \              0x3A 0x20    

   \              0x4E 0x2F    

   \              0x41 0x00

   \                                 In section .rodata, align 4
   \                     ?_28:
   \        0x0   0x20 0x35          DC8 " 5 \355\230\270\354\260\250 : N/A"

   \              0x20 0xED    

   \              0x98 0xB8    

   \              0xEC 0xB0    

   \              0xA8 0x20    

   \              0x3A 0x20    

   \              0x4E 0x2F    

   \              0x41 0x00

   \                                 In section .rodata, align 4
   \                     ?_29:
   \        0x0   0x20 0x36          DC8 " 6 \355\230\270\354\260\250 : OK"

   \              0x20 0xED    

   \              0x98 0xB8    

   \              0xEC 0xB0    

   \              0xA8 0x20    

   \              0x3A 0x20    

   \              0x4F 0x4B    

   \              0x00
   \        0xF                      DS8 1

   \                                 In section .rodata, align 4
   \                     ?_30:
   \        0x0   0x20 0x41          DC8 " AudioLoop:Off"

   \              0x75 0x64    

   \              0x69 0x6F    

   \              0x4C 0x6F    

   \              0x6F 0x70    

   \              0x3A 0x4F    

   \              0x66 0x66    

   \              0x00
   \        0xF                      DS8 1

   \                                 In section .rodata, align 4
   \                     ?_31:
   \        0x0   0x20 0x41          DC8 " AudioLoop:On"

   \              0x75 0x64    

   \              0x69 0x6F    

   \              0x4C 0x6F    

   \              0x6F 0x70    

   \              0x3A 0x4F    

   \              0x6E 0x00
   \        0xE                      DS8 2

   \                                 In section .rodata, align 4
   \                     ?_32:
   \        0x0   0x20 0x41          DC8 " AudioSine:On"

   \              0x75 0x64    

   \              0x69 0x6F    

   \              0x53 0x69    

   \              0x6E 0x65    

   \              0x3A 0x4F    

   \              0x6E 0x00
   \        0xE                      DS8 2

   \                                 In section .rodata, align 4
   \                     ?_33:
   \        0x0   0x20 0x4D          DC8 " Mic Vol"

   \              0x69 0x63    

   \              0x20 0x56    

   \              0x6F 0x6C    

   \              0x00
   \        0x9                      DS8 3

   \                                 In section .rodata, align 4
   \                     ?_34:
   \        0x0   0x20 0x53          DC8 " Spk Vol"

   \              0x70 0x6B    

   \              0x20 0x56    

   \              0x6F 0x6C    

   \              0x00
   \        0x9                      DS8 3

   \                                 In section .rodata, align 4
   \                     ?_35:
   \        0x0   0x20 0x52          DC8 " RF Tx Pwr"

   \              0x46 0x20    

   \              0x54 0x78    

   \              0x20 0x50    

   \              0x77 0x72    

   \              0x00
   \        0xB                      DS8 1

   \                                 In section .rodata, align 4
   \                     ?_36:
   \        0x0   0x20 0x4D          DC8 " Mic : 0"

   \              0x69 0x63    

   \              0x20 0x3A    

   \              0x20 0x30    

   \              0x00
   \        0x9                      DS8 3

   \                                 In section .rodata, align 4
   \                     ?_37:
   \        0x0   0x20 0x4D          DC8 " Mic : 1"

   \              0x69 0x63    

   \              0x20 0x3A    

   \              0x20 0x31    

   \              0x00
   \        0x9                      DS8 3

   \                                 In section .rodata, align 4
   \                     ?_38:
   \        0x0   0x20 0x4D          DC8 " Mic : 2"

   \              0x69 0x63    

   \              0x20 0x3A    

   \              0x20 0x32    

   \              0x00
   \        0x9                      DS8 3

   \                                 In section .rodata, align 4
   \                     ?_39:
   \        0x0   0x20 0x4D          DC8 " Mic : 3"

   \              0x69 0x63    

   \              0x20 0x3A    

   \              0x20 0x33    

   \              0x00
   \        0x9                      DS8 3

   \                                 In section .rodata, align 4
   \                     ?_40:
   \        0x0   0x20 0x4D          DC8 " Mic : 4"

   \              0x69 0x63    

   \              0x20 0x3A    

   \              0x20 0x34    

   \              0x00
   \        0x9                      DS8 3

   \                                 In section .rodata, align 4
   \                     ?_41:
   \        0x0   0x20 0x4D          DC8 " Mic : 5"

   \              0x69 0x63    

   \              0x20 0x3A    

   \              0x20 0x35    

   \              0x00
   \        0x9                      DS8 3

   \                                 In section .rodata, align 4
   \                     ?_42:
   \        0x0   0x20 0x4D          DC8 " Mic : 6"

   \              0x69 0x63    

   \              0x20 0x3A    

   \              0x20 0x36    

   \              0x00
   \        0x9                      DS8 3

   \                                 In section .rodata, align 4
   \                     ?_43:
   \        0x0   0x20 0x4D          DC8 " Mic : 7"

   \              0x69 0x63    

   \              0x20 0x3A    

   \              0x20 0x37    

   \              0x00
   \        0x9                      DS8 3

   \                                 In section .rodata, align 4
   \                     ?_44:
   \        0x0   0x20 0x4D          DC8 " Mic : 8"

   \              0x69 0x63    

   \              0x20 0x3A    

   \              0x20 0x38    

   \              0x00
   \        0x9                      DS8 3

   \                                 In section .rodata, align 4
   \                     ?_45:
   \        0x0   0x20 0x4D          DC8 " Mic : 9"

   \              0x69 0x63    

   \              0x20 0x3A    

   \              0x20 0x39    

   \              0x00
   \        0x9                      DS8 3

   \                                 In section .rodata, align 4
   \                     ?_46:
   \        0x0   0x20 0x53          DC8 " Spk : 0"

   \              0x70 0x6B    

   \              0x20 0x3A    

   \              0x20 0x30    

   \              0x00
   \        0x9                      DS8 3

   \                                 In section .rodata, align 4
   \                     ?_47:
   \        0x0   0x20 0x53          DC8 " Spk : 1"

   \              0x70 0x6B    

   \              0x20 0x3A    

   \              0x20 0x31    

   \              0x00
   \        0x9                      DS8 3

   \                                 In section .rodata, align 4
   \                     ?_48:
   \        0x0   0x20 0x53          DC8 " Spk : 2"

   \              0x70 0x6B    

   \              0x20 0x3A    

   \              0x20 0x32    

   \              0x00
   \        0x9                      DS8 3

   \                                 In section .rodata, align 4
   \                     ?_49:
   \        0x0   0x20 0x53          DC8 " Spk : 3"

   \              0x70 0x6B    

   \              0x20 0x3A    

   \              0x20 0x33    

   \              0x00
   \        0x9                      DS8 3

   \                                 In section .rodata, align 4
   \                     ?_50:
   \        0x0   0x20 0x50          DC8 " Pwr : -38 dBm"

   \              0x77 0x72    

   \              0x20 0x3A    

   \              0x20 0x2D    

   \              0x33 0x38    

   \              0x20 0x64    

   \              0x42 0x6D    

   \              0x00
   \        0xF                      DS8 1

   \                                 In section .rodata, align 4
   \                     ?_51:
   \        0x0   0x20 0x50          DC8 " Pwr : -20 dBm"

   \              0x77 0x72    

   \              0x20 0x3A    

   \              0x20 0x2D    

   \              0x32 0x30    

   \              0x20 0x64    

   \              0x42 0x6D    

   \              0x00
   \        0xF                      DS8 1

   \                                 In section .rodata, align 4
   \                     ?_52:
   \        0x0   0x20 0x50          DC8 " Pwr : -5 dBm"

   \              0x77 0x72    

   \              0x20 0x3A    

   \              0x20 0x2D    

   \              0x35 0x20    

   \              0x64 0x42    

   \              0x6D 0x00
   \        0xE                      DS8 2

   \                                 In section .rodata, align 4
   \                     ?_53:
   \        0x0   0x20 0x50          DC8 " Pwr : 0 dBm"

   \              0x77 0x72    

   \              0x20 0x3A    

   \              0x20 0x30    

   \              0x20 0x64    

   \              0x42 0x6D    

   \              0x00
   \        0xD                      DS8 3

   \                                 In section .rodata, align 4
   \                     ?_54:
   \        0x0   0x20 0x50          DC8 " Pwr : 5 dBm"

   \              0x77 0x72    

   \              0x20 0x3A    

   \              0x20 0x35    

   \              0x20 0x64    

   \              0x42 0x6D    

   \              0x00
   \        0xD                      DS8 3

   \                                 In section .rodata, align 4
   \                     ?_55:
   \        0x0   0x20 0x50          DC8 " Pwr : 10 dBm"

   \              0x77 0x72    

   \              0x20 0x3A    

   \              0x20 0x31    

   \              0x30 0x20    

   \              0x64 0x42    

   \              0x6D 0x00
   \        0xE                      DS8 2

   \                                 In section .rodata, align 4
   \                     ?_56:
   \        0x0   0x20 0x50          DC8 " Pwr : 15 dBm"

   \              0x77 0x72    

   \              0x20 0x3A    

   \              0x20 0x31    

   \              0x35 0x20    

   \              0x64 0x42    

   \              0x6D 0x00
   \        0xE                      DS8 2

   \                                 In section .rodata, align 4
   \                     ?_57:
   \        0x0   0x20 0x50          DC8 " Pwr : 20 dBm"

   \              0x77 0x72    

   \              0x20 0x3A    

   \              0x20 0x32    

   \              0x30 0x20    

   \              0x64 0x42    

   \              0x6D 0x00
   \        0xE                      DS8 2

   \                                 In section .rodata, align 4
   \                     ?_58:
   \        0x0   0x20 0x52          DC8 " Reset"

   \              0x65 0x73    

   \              0x65 0x74    

   \              0x00
   \        0x7                      DS8 1

   \                                 In section .rodata, align 4
   \                     ?_59:
   \        0x0   0x20 0x44          DC8 " DFU Mode"

   \              0x46 0x55    

   \              0x20 0x4D    

   \              0x6F 0x64    

   \              0x65 0x00
   \        0xA                      DS8 2

   \                                 In section .rodata, align 4
   \                     ?_60:
   \        0x0   0x20 0x55          DC8 " Upgrade ReTry"

   \              0x70 0x67    

   \              0x72 0x61    

   \              0x64 0x65    

   \              0x20 0x52    

   \              0x65 0x54    

   \              0x72 0x79    

   \              0x00
   \        0xF                      DS8 1

   \                                 In section .rodata, align 4
   \                     ?_61:
   \        0x0   0x20 0x55          DC8 " Upgrade"

   \              0x70 0x67    

   \              0x72 0x61    

   \              0x64 0x65    

   \              0x00
   \        0x9                      DS8 3

   \                                 In section .rodata, align 4
   \                     ?_62:
   \        0x0   0x31 0x2E          DC8 "1. \354\241\260\353\252\205\354\240\234\354\226\264"

   \              0x20 0xEC    

   \              0xA1 0xB0    

   \              0xEB 0xAA    

   \              0x85 0xEC    

   \              0xA0 0x9C    

   \              0xEC 0x96    

   \              0xB4 0x00

   \                                 In section .rodata, align 4
   \                     ?_63:
   \        0x0   0x32 0x2E          DC8 "2. S/W \353\262\204\354\240\204"

   \              0x20 0x53    

   \              0x2F 0x57    

   \              0x20 0xEB    

   \              0xB2 0x84    

   \              0xEC 0xA0    

   \              0x84 0x00
   \        0xE                      DS8 2

   \                                 In section .rodata, align 4
   \                     ?_64:
   \        0x0   0x33 0x2E          DC8 "3. \355\216\270\354\204\261\354\204\244\354\240\225"

   \              0x20 0xED    

   \              0x8E 0xB8    

   \              0xEC 0x84    

   \              0xB1 0xEC    

   \              0x84 0xA4    

   \              0xEC 0xA0    

   \              0x95 0x00

   \                                 In section .rodata, align 4
   \                     ?_65:
   \        0x0   0x34 0x2E          DC8 "4. \354\206\241\354\213\240\352\270\260ID"

   \              0x20 0xEC    

   \              0x86 0xA1    

   \              0xEC 0x8B    

   \              0xA0 0xEA    

   \              0xB8 0xB0    

   \              0x49 0x44    

   \              0x00
   \        0xF                      DS8 1

   \                                 In section .rodata, align 4
   \                     ?_66:
   \        0x0   0x35 0x2E          DC8 "5. \354\236\220\352\260\200\354\247\204\353\213\250"

   \              0x20 0xEC    

   \              0x9E 0x90    

   \              0xEA 0xB0    

   \              0x80 0xEC    

   \              0xA7 0x84    

   \              0xEB 0x8B    

   \              0xA8 0x00

   \                                 In section .rodata, align 4
   \                     ?_67:
   \        0x0   0x36 0x2E          DC8 "6. \354\247\204    \353\213\250"

   \              0x20 0xEC    

   \              0xA7 0x84    

   \              0x20 0x20    

   \              0x20 0x20    

   \              0xEB 0x8B    

   \              0xA8 0x00
   \        0xE                      DS8 2

   \                                 In section .rodata, align 4
   \                     ?_68:
   \        0x0   0x37 0x2E          DC8 "7. \354\204\244    \354\240\225"

   \              0x20 0xEC    

   \              0x84 0xA4    

   \              0x20 0x20    

   \              0x20 0x20    

   \              0xEC 0xA0    

   \              0x95 0x00
   \        0xE                      DS8 2

   \                                 In section .rodata, align 4
   \                     ?_69:
   \        0x0   0x38 0x2E          DC8 "8. \354\203\201\355\203\234\354\240\225\353\263\264"

   \              0x20 0xEC    

   \              0x83 0x81    

   \              0xED 0x83    

   \              0x9C 0xEC    

   \              0xA0 0x95    

   \              0xEB 0xB3    

   \              0xB4 0x00

   \                                 In section .rodata, align 4
   \                     ?_70:
   \        0x0   0x39 0x2E          DC8 "9. \353\252\205\353\240\271\354\240\204\354\206\241"

   \              0x20 0xEB    

   \              0xAA 0x85    

   \              0xEB 0xA0    

   \              0xB9 0xEC    

   \              0xA0 0x84    

   \              0xEC 0x86    

   \              0xA1 0x00

   \                                 In section .rodata, align 4
   \                     ?_71:
   \        0x0   0x5B 0x4D          DC8 "[Maint. Menu]"

   \              0x61 0x69    

   \              0x6E 0x74    

   \              0x2E 0x20    

   \              0x4D 0x65    

   \              0x6E 0x75    

   \              0x5D 0x00
   \        0xE                      DS8 2

   \                                 In section .rodata, align 4
   \                     ?_72:
   \        0x0   0xED 0x8E          DC8 "\355\216\270\354\204\261 : %d"

   \              0xB8 0xEC    

   \              0x84 0xB1    

   \              0x20 0x3A    

   \              0x20 0x25    

   \              0x64 0x00

   \                                 In section .rodata, align 4
   \                     ?_73:
   \        0x0   0x53 0x74          DC8 "Stat:%04X / %02d"

   \              0x61 0x74    

   \              0x3A 0x25    

   \              0x30 0x34    

   \              0x58 0x20    

   \              0x2F 0x20    

   \              0x25 0x30    

   \              0x32 0x64    

   \              0x00
   \       0x11                      DS8 3

   \                                 In section .rodata, align 4
   \                     ?_74:
   \        0x0   0x5B 0xEC          DC8 "[\354\241\260\353\252\205 \354\240\220\353\223\261]"

   \              0xA1 0xB0    

   \              0xEB 0xAA    

   \              0x85 0x20    

   \              0xEC 0xA0    

   \              0x90 0xEB    

   \              0x93 0xB1    

   \              0x5D 0x00

   \                                 In section .rodata, align 4
   \                     ?_75:
   \        0x0   0x5B 0xEC          DC8 "[\354\241\260\353\252\205 \354\206\214\353\223\261]"

   \              0xA1 0xB0    

   \              0xEB 0xAA    

   \              0x85 0x20    

   \              0xEC 0x86    

   \              0x8C 0xEB    

   \              0x93 0xB1    

   \              0x5D 0x00

   \                                 In section .rodata, align 4
   \                     ?_76:
   \        0x0   0x52 0x46          DC8 "RFM v1.1.0.274"

   \              0x4D 0x20    

   \              0x76 0x31    

   \              0x2E 0x31    

   \              0x2E 0x30    

   \              0x2E 0x32    

   \              0x37 0x34    

   \              0x00
   \        0xF                      DS8 1

   \                                 In section .rodata, align 4
   \                     ?_77:
   \        0x0   0x5B 0xED          DC8 "[\355\216\270\354\204\261\354\204\244\354\240\225]"

   \              0x8E 0xB8    

   \              0xEC 0x84    

   \              0xB1 0xEC    

   \              0x84 0xA4    

   \              0xEC 0xA0    

   \              0x95 0x5D    

   \              0x00
   \        0xF                      DS8 1

   \                                 In section .rodata, align 4
   \                     ?_78:
   \        0x0   0x5B 0xEB          DC8 "[\353\252\205\353\240\271\354\240\204\354\206\241]"

   \              0xAA 0x85    

   \              0xEB 0xA0    

   \              0xB9 0xEC    

   \              0xA0 0x84    

   \              0xEC 0x86    

   \              0xA1 0x5D    

   \              0x00
   \        0xF                      DS8 1

   \                                 In section .rodata, align 4
   \                     ?_79:
   \        0x0   0x53 0x65          DC8 "Set RFT#1"

   \              0x74 0x20    

   \              0x52 0x46    

   \              0x54 0x23    

   \              0x31 0x00
   \        0xA                      DS8 2

   \                                 In section .rodata, align 4
   \                     ?_80:
   \        0x0   0x53 0x65          DC8 "Set RFT#2"

   \              0x74 0x20    

   \              0x52 0x46    

   \              0x54 0x23    

   \              0x32 0x00
   \        0xA                      DS8 2

   \                                 In section .rodata, align 4
   \                     ?_81:
   \        0x0   0x25 0x73          DC8 "%s(%d) - invalid menu(%d)\012"

   \              0x28 0x25    

   \              0x64 0x29    

   \              0x20 0x2D    

   \              0x20 0x69    

   \              0x6E 0x76    

   \              0x61 0x6C    

   \              0x69 0x64    

   \              0x20 0x6D    

   \              0x65 0x6E    

   \              0x75 0x28    

   \              0x25 0x64    

   \              0x29 0x0A    

   \              0x00
   \       0x1B                      DS8 1

   \                                 In section .rodata, align 4
   \                     ?_82:
   \        0x0   0x25 0x73          DC8 "%s(%d) - sine\012"

   \              0x28 0x25    

   \              0x64 0x29    

   \              0x20 0x2D    

   \              0x20 0x73    

   \              0x69 0x6E    

   \              0x65 0x0A    

   \              0x00
   \        0xF                      DS8 1

   \                                 In section .rodata, align 4
   \                     ?_83:
   \        0x0   0x41 0x75          DC8 "Audio Loop"

   \              0x64 0x69    

   \              0x6F 0x20    

   \              0x4C 0x6F    

   \              0x6F 0x70    

   \              0x00
   \        0xB                      DS8 1

   \                                 In section .rodata, align 4
   \                     ?_84:
   \        0x0   0x41 0x75          DC8 "Audio Sine"

   \              0x64 0x69    

   \              0x6F 0x20    

   \              0x53 0x69    

   \              0x6E 0x65    

   \              0x00
   \        0xB                      DS8 1
   1130          
   1131          
   1132          //========================================================================
   1133          
   1134          
   1135          //#define	 USE_PTT_KEY_TOGGLE	  1	   //  PTT Toggle Key
   1136          

   Maximum stack usage in bytes:

   .cstack Function
   ------- --------
       8   EnableMenuMaint
         8   -> LCDPrintfXY
       0   GetActiveMenu
       0   IsMenuMaint
       8   ProcBtnDown
         8   -> GetActiveMenu
         8   -> UpdateLCDMenu
       8   ProcBtnMenu
         8   -> GetActiveMenu
         8   -> SetActiveMenu
         8   -> UpdateLCDMenu
       8   ProcBtnOK
         8   -- Indirect call
         8   -> GetActiveMenu
         8   -> LCDClearMain
         8   -> UpdateLCDMain
       8   ProcBtnUp
         8   -> GetActiveMenu
         8   -> UpdateLCDMenu
       0   ProcDispStat
       8   ProcDispVer
         8   -> LCDPrintf
         8   -> LCDSetCursor
       8   ProcLightOff
         8   -> GetChNearRFM
         8   -> HAL_Delay
         8   -> LCDPrintf
         8   -> LCDSetCursor
         8   -> SendLightOff
         8   -> SetChPA
       8   ProcLightOn
         8   -> GetChNearRFM
         8   -> HAL_Delay
         8   -> LCDPrintf
         8   -> LCDSetCursor
         8   -> SendLightOn
         8   -> SetChPA
       8   ProcMenuCmd
         8   -> HAL_Delay
         8   -> LCDPrintf
         8   -> LCDSetCursor
         8   -> SendRFCmdDFUMode
         8   -> SendRFCmdReset
         8   -> SendRFCmdUpgrade
         8   -> SetActiveMenu
         8   -> UpdateLCDMain
       8   ProcMenuDiag
         8   -> AudioDMALoopback
         8   -> AudioPlayDMASine
         8   -> AudioStop
         8   -> HAL_GPIO_WritePin
         8   -> LCDMenuUpDown
         8   -> LCDPrintf
         8   -> printf
       8   ProcMenuLightCtrl
         8   -> HAL_Delay
         8   -> LCDMenuUpDown
         8   -> ProcLightOff
         8   -> ProcLightOn
         8   -> SetActiveMenu
         8   -> UpdateLCDMain
      16   ProcMenuMain
        16   -> GetActiveMenu
        16   -> GetCarNo
        16   -> IsMenuMaint
        16   -> ProcDispStat
        16   -> ProcDispVer
        16   -> SetActiveMenu
        16   -> UpdateLCDMenu
       8   ProcMenuRFTID
         8   -> HAL_Delay
         8   -> LCDMenuUpDown
         8   -> LCDPrintf
         8   -> SetActiveMenu
         8   -> SetCarNo
         8   -> UpdateLCDMain
         8   -> printf
       8   ProcMenuSelfTest
         8   -> HAL_Delay
         8   -> LCDMenuUpDown
         8   -> SetActiveMenu
         8   -> UpdateLCDMain
       8   ProcMenuSetMic
         8   -> HAL_Delay
         8   -> LCDMenuUpDown
         8   -> SetActiveMenu
         8   -> SetMicVol
         8   -> UpdateLCDMain
         8   -> printf
       8   ProcMenuSetSpk
         8   -> HAL_Delay
         8   -> LCDMenuUpDown
         8   -> SetActiveMenu
         8   -> SetSpkVol
         8   -> UpdateLCDMain
         8   -> printf
       8   ProcMenuSetTxPwr
         8   -> HAL_Delay
         8   -> LCDMenuUpDown
         8   -> SetActiveMenu
         8   -> UpdateLCDMain
         8   -> printf
         8   -> vRadio_Set_TxPower
      16   ProcMenuSetting
        16   -> GetActiveMenu
        16   -> GetMicVol
        16   -> GetSpkVol
        16   -> LCDMenuUpDown
        16   -> SetActiveMenu
        16   -> UpdateLCDMenu
        16   -> printf
       8   ProcMenuTrainSet
         8   -> HAL_Delay
         8   -> LCDPrintf
         8   -> LCDSetCursor
         8   -> SetActiveMenu
         8   -> SetTrainSetIdx
         8   -> UpdateLCDMain
       8   ProcMenuVer
         8   -> SetActiveMenu
         8   -> UpdateLCDMain
       0   SetActiveMenu
      40   UpdateLCDMain
        40   -> LCDPrintfXY
        40   -> sprintf
      16   UpdateLCDMenu
        16   -> GetActiveMenu
        16   -> LCDClearMain
        16   -> LCDMenuUpDown
        16   -> LCDPrintf
        16   -> LCDSetCursor
        16   -> UpdateLCDMain
     112   UpdateLCDMonitor
       112   -> LCDPrintf
       112   -> LCDSetCursor
       112   -> sprintf


   Section sizes:

   Bytes  Function/Label
   -----  --------------
       4  ??DataTable23
       4  ??DataTable23_1
       4  ??DataTable23_10
       4  ??DataTable23_11
       4  ??DataTable23_12
       4  ??DataTable23_13
       4  ??DataTable23_14
       4  ??DataTable23_15
       4  ??DataTable23_16
       4  ??DataTable23_17
       4  ??DataTable23_18
       4  ??DataTable23_19
       4  ??DataTable23_2
       4  ??DataTable23_20
       4  ??DataTable23_21
       4  ??DataTable23_22
       4  ??DataTable23_23
       4  ??DataTable23_24
       4  ??DataTable23_25
       4  ??DataTable23_26
       4  ??DataTable23_27
       4  ??DataTable23_28
       4  ??DataTable23_29
       4  ??DataTable23_3
       4  ??DataTable23_30
       4  ??DataTable23_31
       4  ??DataTable23_32
       4  ??DataTable23_33
       4  ??DataTable23_34
       4  ??DataTable23_35
       4  ??DataTable23_36
       4  ??DataTable23_37
       4  ??DataTable23_38
       4  ??DataTable23_39
       4  ??DataTable23_4
       4  ??DataTable23_40
       4  ??DataTable23_5
       4  ??DataTable23_6
       4  ??DataTable23_7
       4  ??DataTable23_8
       4  ??DataTable23_9
      16  ?_0
      16  ?_1
      12  ?_10
      12  ?_11
      12  ?_12
      12  ?_13
      12  ?_14
      12  ?_15
      12  ?_16
      12  ?_17
      12  ?_18
      12  ?_19
      12  ?_2
      12  ?_20
      12  ?_21
      16  ?_22
      16  ?_23
      16  ?_24
      16  ?_25
      16  ?_26
      16  ?_27
      16  ?_28
      16  ?_29
      12  ?_3
      16  ?_30
      16  ?_31
      16  ?_32
      12  ?_33
      12  ?_34
      12  ?_35
      12  ?_36
      12  ?_37
      12  ?_38
      12  ?_39
      12  ?_4
      12  ?_40
      12  ?_41
      12  ?_42
      12  ?_43
      12  ?_44
      12  ?_45
      12  ?_46
      12  ?_47
      12  ?_48
      12  ?_49
      12  ?_5
      16  ?_50
      16  ?_51
      16  ?_52
      16  ?_53
      16  ?_54
      16  ?_55
      16  ?_56
      16  ?_57
       8  ?_58
      12  ?_59
      12  ?_6
      16  ?_60
      12  ?_61
      16  ?_62
      16  ?_63
      16  ?_64
      16  ?_65
      16  ?_66
      16  ?_67
      16  ?_68
      16  ?_69
      12  ?_7
      16  ?_70
      16  ?_71
      12  ?_72
      20  ?_73
      16  ?_74
      16  ?_75
      16  ?_76
      16  ?_77
      16  ?_78
      12  ?_79
      12  ?_8
      12  ?_80
      28  ?_81
      16  ?_82
      12  ?_83
      12  ?_84
      12  ?_9
      32  EnableMenuMaint
       8  GetActiveMenu
       8  IsMenuMaint
      48  ProcBtnDown
      60  ProcBtnMenu
      48  ProcBtnOK
      30  ProcBtnUp
      10  ProcDispStat
      20  ProcDispVer
      64  ProcLightOff
      64  ProcLightOn
      86  ProcMenuCmd
     128  ProcMenuDiag
      48  ProcMenuLightCtrl
     268  ProcMenuMain
      88  ProcMenuRFTID
      30  ProcMenuSelfTest
      66  ProcMenuSetMic
      66  ProcMenuSetSpk
     130  ProcMenuSetTxPwr
     114  ProcMenuSetting
      52  ProcMenuTrainSet
      16  ProcMenuVer
       8  SetActiveMenu
      36  UpdateLCDMain
      64  UpdateLCDMenu
      78  UpdateLCDMonitor
       1  _bEnDispStat
      64  _psVerList
      16  _sCmdList
      12  _sDiagList
       8  _sLightCtrl
       8  _sMainMenuBase
      36  _sMainMenuMaint
       8  _sRFTIDList
      24  _sSelfTestList
      40  _sSetMicList
      16  _sSetSpkList
      32  _sSetTxPwrList
      12  _sSettingList
      80  _sTrainSet
     320  _sVerList
      12  g_MenuCmdList
      12  g_MenuDiagList
      12  g_MenuLightCtrl
      12  g_MenuMainBase
      12  g_MenuMainMaint
      12  g_MenuRFTIDList
      12  g_MenuSelfTestList
      12  g_MenuSetMicList
      12  g_MenuSetSpkList
      12  g_MenuSetTxPwrList
      12  g_MenuSettingList
      12  g_MenuTrainSet
      12  g_MenuVerList
       1  g_bEnMenuMaint
       4  g_pActiveMenu
       1  oldTick
     100  -- Other

 
     7 bytes in section .bss
   832 bytes in section .data
 1'292 bytes in section .rodata
 1'834 bytes in section .text
 
 1'834 bytes of CODE  memory
 1'292 bytes of CONST memory
   839 bytes of DATA  memory

Errors: none
Warnings: 25
