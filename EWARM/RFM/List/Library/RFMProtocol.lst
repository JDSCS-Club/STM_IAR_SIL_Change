###############################################################################
#
# IAR ANSI C/C++ Compiler V9.30.1.335/W64 for ARM         15/Sep/2022  19:50:00
# Copyright 1999-2022 IAR Systems AB.
#
#    Cpu mode                 =  thumb
#    Endian                   =  little
#    Source file              =
#        C:\D\JDS_DATA\RFM_IAR_source_220915\Library\RFMProtocol.c
#    Command line             =
#        -f
#        C:\D\JDS_DATA\RFM_IAR_source_220915\EWARM\RFM\Obj\Library\RFMProtocol.o.rsp
#        (C:\D\JDS_DATA\RFM_IAR_source_220915\Library\RFMProtocol.c -D
#        USE_HAL_DRIVER -D STM32F407xx -lC
#        C:\D\JDS_DATA\RFM_IAR_source_220915\EWARM\RFM\List\Library -o
#        C:\D\JDS_DATA\RFM_IAR_source_220915\EWARM\RFM\Obj\Library --no_cse
#        --no_unroll --no_inline --no_code_motion --no_tbaa --no_clustering
#        --no_scheduling --debug --endian=little --cpu=Cortex-M4 -e
#        --fpu=VFPv4_sp --dlib_config "C:\Program Files\IAR Systems\Embedded
#        Workbench 9.1\arm\inc\c\DLib_Config_Full.h" -I
#        C:\D\JDS_DATA\RFM_IAR_source_220915\EWARM/../USB_DEVICE/App\ -I
#        C:\D\JDS_DATA\RFM_IAR_source_220915\EWARM/../USB_DEVICE/Target\ -I
#        C:\D\JDS_DATA\RFM_IAR_source_220915\EWARM/../Core/Inc\ -I
#        C:\D\JDS_DATA\RFM_IAR_source_220915\EWARM/../Drivers/STM32F4xx_HAL_Driver/Inc\
#        -I
#        C:\D\JDS_DATA\RFM_IAR_source_220915\EWARM/../Drivers/STM32F4xx_HAL_Driver/Inc/Legacy\
#        -I
#        C:\D\JDS_DATA\RFM_IAR_source_220915\EWARM/../Middlewares/ST/STM32_USB_Device_Library/Core/Inc\
#        -I
#        C:\D\JDS_DATA\RFM_IAR_source_220915\EWARM/../Middlewares/ST/STM32_USB_Device_Library/Class/CDC/Inc\
#        -I
#        C:\D\JDS_DATA\RFM_IAR_source_220915\EWARM/../Drivers/CMSIS/Device/ST/STM32F4xx/Include\
#        -I C:\D\JDS_DATA\RFM_IAR_source_220915\EWARM/../Drivers/CMSIS/Include\
#        -I C:\D\JDS_DATA\RFM_IAR_source_220915\EWARM/../Drivers/radio\ -I
#        C:\D\JDS_DATA\RFM_IAR_source_220915\EWARM/../Drivers/radio/Si446x\ -I
#        C:\D\JDS_DATA\RFM_IAR_source_220915\EWARM/../Drivers/display\ -I
#        C:\D\JDS_DATA\RFM_IAR_source_220915\EWARM/../Library\ -I
#        C:\D\JDS_DATA\RFM_IAR_source_220915\EWARM\..\Drivers\display\fonts\ -I
#        C:\D\JDS_DATA\RFM_IAR_source_220915\EWARM\..\Drivers\STM32F4xx_HAL_Driver\Src\
#        -On --use_c++_inline -I "C:\Program Files\IAR Systems\Embedded
#        Workbench 9.1\arm\CMSIS\Core\Include\\") --dependencies=n
#        C:\D\JDS_DATA\RFM_IAR_source_220915\EWARM\RFM\Obj\Library\RFMProtocol.o.d
#    Locale                   =  C
#    List file                =
#        C:\D\JDS_DATA\RFM_IAR_source_220915\EWARM\RFM\List\Library\RFMProtocol.lst
#    Object file              =
#        C:\D\JDS_DATA\RFM_IAR_source_220915\EWARM\RFM\Obj\Library\RFMProtocol.o
#    Runtime model:              
#      __CPP_Runtime          =  1
#      __SystemLibrary        =  DLib
#      __dlib_file_descriptor =  1
#      __dlib_version         =  6
#      __iar_require _Printf  =  flags,widths
#
###############################################################################

C:\D\JDS_DATA\RFM_IAR_source_220915\Library\RFMProtocol.c
      1          /*------------------------------------------------------------------------------------------
      2          	Project			: RFM ( RF-Module )
      3          	Description		: RFM Protocol Header
      4          
      5          	Writer			: $Author: zlkit $
      6          	Revision		: $Rev: 1446 $
      7          	Date			: 2020. 02.
      8          	Copyright		: Piranti Corp.
      9          	 
     10          	Revision History 
     11          	1. 2020. 02.	: Created
     12          -------------------------------------------------------------------------------------------*/
     13          
     14          #include <stdio.h>				//	printf()
     15          #include <stdint.h>				//	uint8_t, ...
     16          
     17          #include <string.h>				//	memset()
     18          
     19          #include "typedef.h"			//	char_t, int32_t, ...

  typedef unsigned char       BYTE;
                              ^
"C:\D\JDS_DATA\RFM_IAR_source_220915\Library\typedef.h",73  Warning[Pe301]: 
          typedef name has already been declared (with same type)

  typedef unsigned short      WORD;
                              ^
"C:\D\JDS_DATA\RFM_IAR_source_220915\Library\typedef.h",77  Warning[Pe301]: 
          typedef name has already been declared (with same type)
     20          
     21          #include "RFMProtocol.h"		//	RFM Protocol

  	};
  	 ^
"C:\D\JDS_DATA\RFM_IAR_source_220915\Library\RFMProtocol.h",304  Warning[Pe040]: 
          expected an identifier

  	};
  	 ^
"C:\D\JDS_DATA\RFM_IAR_source_220915\Library\RFMProtocol.h",322  Warning[Pe040]: 
          expected an identifier

  	};
  	 ^
"C:\D\JDS_DATA\RFM_IAR_source_220915\Library\RFMProtocol.h",468  Warning[Pe040]: 
          expected an identifier

  	};
  	 ^
"C:\D\JDS_DATA\RFM_IAR_source_220915\Library\RFMProtocol.h",506  Warning[Pe040]: 
          expected an identifier

  	};
  	 ^
"C:\D\JDS_DATA\RFM_IAR_source_220915\Library\RFMProtocol.h",511  Warning[Pe040]: 
          expected an identifier

  	};
  	 ^
"C:\D\JDS_DATA\RFM_IAR_source_220915\Library\RFMProtocol.h",533  Warning[Pe040]: 
          expected an identifier

  	};
  	 ^
"C:\D\JDS_DATA\RFM_IAR_source_220915\Library\RFMProtocol.h",559  Warning[Pe040]: 
          expected an identifier

  	};
  	 ^
"C:\D\JDS_DATA\RFM_IAR_source_220915\Library\RFMProtocol.h",567  Warning[Pe040]: 
          expected an identifier
     22          
     23          #include "radio.h"				//	vRadio_StartTx_Variable_Packet()

  # warning unrecognized compiler
    ^
"C:\D\JDS_DATA\RFM_IAR_source_220915\Drivers\radio\compiler_defs.h",744  Warning[Pa183]: 
          #warning directive: unrecognized compiler

  typedef unsigned char U8;
                        ^
"C:\D\JDS_DATA\RFM_IAR_source_220915\Drivers\radio\compiler_defs.h",788  Warning[Pe301]: 
          typedef name has already been declared (with same type)

  typedef unsigned int U16;
                       ^
"C:\D\JDS_DATA\RFM_IAR_source_220915\Drivers\radio\compiler_defs.h",789  Warning[Pe301]: 
          typedef name has already been declared (with same type)

  typedef unsigned long U32;
                        ^
"C:\D\JDS_DATA\RFM_IAR_source_220915\Drivers\radio\compiler_defs.h",790  Warning[Pe301]: 
          typedef name has already been declared (with same type)

  typedef signed char S8;
                      ^
"C:\D\JDS_DATA\RFM_IAR_source_220915\Drivers\radio\compiler_defs.h",792  Warning[Pe301]: 
          typedef name has already been declared (with same type)

  typedef signed int S16;
                     ^
"C:\D\JDS_DATA\RFM_IAR_source_220915\Drivers\radio\compiler_defs.h",793  Warning[Pe301]: 
          typedef name has already been declared (with same type)

  typedef signed long S32;
                      ^
"C:\D\JDS_DATA\RFM_IAR_source_220915\Drivers\radio\compiler_defs.h",794  Warning[Pe301]: 
          typedef name has already been declared (with same type)

  typedef bit BIT;
              ^
"C:\D\JDS_DATA\RFM_IAR_source_220915\Drivers\radio\compiler_defs.h",820  Warning[Pe301]: 
          typedef name has already been declared (with same type)
     24          
     25          #include "Adafruit_SSD1306.h"	//	LCDPrintf()
     26          
     27          #include "main.h"				//	FLASH_ON_Pin / GPIO_PIN_SET / ...
     28          
     29          #include "ProcPkt.h"			//	SendPacekt()
     30          
     31          #include "version.h"			//	Version Info
     32          
     33          #include "rfm.h"				//	g_nManHopping
     34          
     35          #include "audio.h"				//	I2S_DMA_LOOP_SIZE
     36          
     37          #include "flash_if.h"			//	FLASH_If_Write()
     38          
     39          #include "eeprom.h"				//	AddrEEPUpgrMGN1
     40          
     41          
     42          //==========================================================================
     43          //	Define
     44          
     45          //==========================================================================

   \                                 In section .data, align 4
     46          extern int ChTx_1 	= 	_ChTx_1;	//	* CH8 : 송신기#1 - (Car No : 11) - 915 + 0.25 * 8
   \                     ChTx_1:
   \        0x0   0x0000'0008        DC32 8

   \                                 In section .data, align 4
     47          extern int ChTx_2 	= 	_ChTx_2;	//	* CH9 : 송신기#2 - (Car No : 12)
   \                     ChTx_2:
   \        0x0   0x0000'000C        DC32 12

   \                                 In section .data, align 4
     48          extern int ChTS1_1 	= 	_ChTS1_1;	//	1호차 수신기 채널
   \                     ChTS1_1:
   \        0x0   0x0000'0015        DC32 21
     49          //==========================================================================
     50          
     51          
     52          //==========================================================================
     53          //	Function
     54          
     55          
     56          //==========================================================================
     57          //		API
     58          //==========================================================================
     59          
     60          
     61          
     62          //==========================================================================
     63          //		Send Packet
     64          //==========================================================================
     65          
     66          //========================================================================

   \                                 In section .text, align 2, keep-with-next
     67          void _MakePktHdr	( RFMPkt *pPkt, int addrSrc, int addrDest, int nLen, int nPktCmd )
     68          //========================================================================
     69          {
   \                     _MakePktHdr: (+1)
   \        0x0   0xE92D 0x41F0      PUSH     {R4-R8,LR}
   \        0x4   0x0004             MOVS     R4,R0
   \        0x6   0x000D             MOVS     R5,R1
   \        0x8   0x0016             MOVS     R6,R2
   \        0xA   0x001F             MOVS     R7,R3
   \        0xC   0xF8DD 0x8018      LDR      R8,[SP, #+24]
     70          #if	defined(USE_HOPPING)
     71          
     72          	if ( nPktCmd == PktStat
     73          		|| nPktCmd == PktStatReq
     74          		|| nPktCmd == PktCmd
     75          		|| nPktCmd == PktUpgr
     76          		|| nPktCmd == PktRouteReq
     77          		|| nPktCmd == PktRouteRsp
     78          		)
   \       0x10   0xF1B8 0x0F01      CMP      R8,#+1
   \       0x14   0xD00E             BEQ.N    ??_MakePktHdr_0
   \       0x16   0xF1B8 0x0F11      CMP      R8,#+17
   \       0x1A   0xD00B             BEQ.N    ??_MakePktHdr_0
   \       0x1C   0xF1B8 0x0F20      CMP      R8,#+32
   \       0x20   0xD008             BEQ.N    ??_MakePktHdr_0
   \       0x22   0xF1B8 0x0F40      CMP      R8,#+64
   \       0x26   0xD005             BEQ.N    ??_MakePktHdr_0
   \       0x28   0xF1B8 0x0F31      CMP      R8,#+49
   \       0x2C   0xD002             BEQ.N    ??_MakePktHdr_0
   \       0x2E   0xF1B8 0x0F32      CMP      R8,#+50
   \       0x32   0xD10C             BNE.N    ??_MakePktHdr_1
     79          	{
     80          		//	상태정보의 경우 Seq / ID : 0x00
     81          		pPkt->hdr.bHdrID		=	HdrID1;		//	Header ID #1
   \                     ??_MakePktHdr_0: (+1)
   \       0x34   0x0020             MOVS     R0,R4
   \       0x36   0x8801             LDRH     R1,[R0, #+0]
   \       0x38   0x0489             LSLS     R1,R1,#+18
   \       0x3A   0x0C89             LSRS     R1,R1,#+18
   \       0x3C   0x8001             STRH     R1,[R0, #+0]
     82          		pPkt->hdr.nSeq			=	0x00;		//	Sequence
   \       0x3E   0x2000             MOVS     R0,#+0
   \       0x40   0x70A0             STRB     R0,[R4, #+2]
     83          		pPkt->hdr.nIDFlag		=	0x00;		//	ID Flag
   \       0x42   0x0020             MOVS     R0,R4
   \       0x44   0x8801             LDRH     R1,[R0, #+0]
   \       0x46   0xF411 0x4140      ANDS     R1,R1,#0xC000
   \       0x4A   0x8001             STRH     R1,[R0, #+0]
   \       0x4C   0xE023             B.N      ??_MakePktHdr_2
     84          	}
     85          	else
     86          	{
     87          		g_nPktSeq++;
   \                     ??_MakePktHdr_1: (+1)
   \       0x4E   0x.... 0x....      LDR.W    R1,??DataTable27
   \       0x52   0x7808             LDRB     R0,[R1, #+0]
   \       0x54   0x1C40             ADDS     R0,R0,#+1
   \       0x56   0x7008             STRB     R0,[R1, #+0]
     88          		if ( g_nPktSeq == 0 )	g_nPktSeq++;
   \       0x58   0x7808             LDRB     R0,[R1, #+0]
   \       0x5A   0x2800             CMP      R0,#+0
   \       0x5C   0xD102             BNE.N    ??_MakePktHdr_3
   \       0x5E   0x7808             LDRB     R0,[R1, #+0]
   \       0x60   0x1C40             ADDS     R0,R0,#+1
   \       0x62   0x7008             STRB     R0,[R1, #+0]
     89          		pPkt->hdr.nSeq			=	g_nPktSeq;			//
   \                     ??_MakePktHdr_3: (+1)
   \       0x64   0x7808             LDRB     R0,[R1, #+0]
   \       0x66   0x70A0             STRB     R0,[R4, #+2]
     90          
     91          		if ( GetDevID() == DevRF900T )
   \       0x68   0x.... 0x....      BL       GetDevID
   \       0x6C   0x2802             CMP      R0,#+2
   \       0x6E   0xD10A             BNE.N    ??_MakePktHdr_4
     92          		{
     93          			//	송신기.
     94          			//		송신기의 송/수신반경과 수신기의 송/수신반경의 차이로 
     95          			//		송신기가 상태정보를 수신후에 수신기에 송신을 할때 범위에 도달하지 못하는 경우가 있으므로, 
     96          			//		수신기에서 중계를 할 수 있도록 송신기 ID만 설정하여 송신함.
     97          			pPkt->hdr.nIDFlag		=	(0x1 << GetCarNo());	//	송신기는 자신의 ID만 Set하여 전송.
   \       0x70   0x.... 0x....      BL       GetCarNo
   \       0x74   0x0021             MOVS     R1,R4
   \       0x76   0x2201             MOVS     R2,#+1
   \       0x78   0xFA12 0xF000      LSLS     R0,R2,R0
   \       0x7C   0x880A             LDRH     R2,[R1, #+0]
   \       0x7E   0xF360 0x020D      BFI      R2,R0,#+0,#+14
   \       0x82   0x800A             STRH     R2,[R1, #+0]
   \       0x84   0xE007             B.N      ??_MakePktHdr_2
     98          		}
     99          		else
    100          		{
    101          			//	수신기.
    102          			pPkt->hdr.nIDFlag		=	g_flagRspID;		//
   \                     ??_MakePktHdr_4: (+1)
   \       0x86   0x0020             MOVS     R0,R4
   \       0x88   0x.... 0x....      LDR.W    R1,??DataTable29_1
   \       0x8C   0x8809             LDRH     R1,[R1, #+0]
   \       0x8E   0x8802             LDRH     R2,[R0, #+0]
   \       0x90   0xF361 0x020D      BFI      R2,R1,#+0,#+14
   \       0x94   0x8002             STRH     R2,[R0, #+0]
    103          		}
    104          	}
    105          
    106          #else
    107          
    108          	pPkt->hdr.addrSrc		=	addrSrc;		//	Src Address
    109          	pPkt->hdr.addrDest		=	addrDest;		//	Broadcast
    110          	pPkt->hdr.nLen			=	nLen;			//	Length
    111          
    112          #endif
    113          
    114          	pPkt->hdr.nPktCmd		=	nPktCmd;		//	Status
   \                     ??_MakePktHdr_2: (+1)
   \       0x96   0xF884 0x8003      STRB     R8,[R4, #+3]
    115          }
   \       0x9A   0xE8BD 0x81F0      POP      {R4-R8,PC}
    116          
    117          #if defined(USE_CH_ISO_DEV)		//	장치별 채널분리.
    118          
    119          //========================================================================

   \                                 In section .text, align 2, keep-with-next
    120          void _MakePktHdr2	( RFMPkt *pPkt, int nPktCmd )
    121          //========================================================================
    122          {
   \                     _MakePktHdr2: (+1)
   \        0x0   0xB538             PUSH     {R3-R5,LR}
   \        0x2   0x0004             MOVS     R4,R0
   \        0x4   0x000D             MOVS     R5,R1
    123          	//	상태정보의 경우 Seq / ID : 0x00
    124          	pPkt->hdr2.bHdrID		=	HdrID2;				//	Header ID #1
   \        0x6   0x0020             MOVS     R0,R4
   \        0x8   0x7801             LDRB     R1,[R0, #+0]
   \        0xA   0xF011 0x013F      ANDS     R1,R1,#0x3F
   \        0xE   0xF051 0x0140      ORRS     R1,R1,#0x40
   \       0x12   0x7001             STRB     R1,[R0, #+0]
    125          	pPkt->hdr2.nSrcCh		=	GetChRx();			//	Source Channel
   \       0x14   0x.... 0x....      BL       GetChRx
   \       0x18   0x0021             MOVS     R1,R4
   \       0x1A   0x784A             LDRB     R2,[R1, #+1]
   \       0x1C   0xF360 0x0205      BFI      R2,R0,#+0,#+6
   \       0x20   0x704A             STRB     R2,[R1, #+1]
    126          	pPkt->hdr2.nTS			=	GetTrainSetIdx();	//	ID Flag
   \       0x22   0x.... 0x....      BL       GetTrainSetIdx
   \       0x26   0x0021             MOVS     R1,R4
   \       0x28   0x780A             LDRB     R2,[R1, #+0]
   \       0x2A   0xF360 0x0205      BFI      R2,R0,#+0,#+6
   \       0x2E   0x700A             STRB     R2,[R1, #+0]
    127          	pPkt->hdr2.nPktCmd		=	nPktCmd;			//	Status
   \       0x30   0x70E5             STRB     R5,[R4, #+3]
    128          
    129          //	CLEAR_BIT(pPkt->hdr2.nTS, (0x1<<7));
    130          //	SET_BIT(pPkt->hdr2.nTS, (0x1<<6));
    131          
    132          #if defined( USE_RFT_REG_TO_RFM )
    133          	//	자신의 송신기 ID Flag 설정.	-	재수신 받지 않음.
    134          	if( GetRFTID() == 1 )
                 	    ^
Warning[Pe223]: function "GetRFTID" declared implicitly
   \       0x32   0x.... 0x....      BL       GetRFTID
   \       0x36   0x2801             CMP      R0,#+1
   \       0x38   0xD10E             BNE.N    ??_MakePktHdr2_0
    135          	{
    136          		pPkt->hdr2.bRFT1	=	1;	//	SET_BIT( pPkt->hdr2.nSrcCh, (0x1<<6) );	//
   \       0x3A   0x0020             MOVS     R0,R4
   \       0x3C   0x7841             LDRB     R1,[R0, #+1]
   \       0x3E   0xF051 0x0140      ORRS     R1,R1,#0x40
   \       0x42   0x7041             STRB     R1,[R0, #+1]
    137          		if( GetChPARFT() != 0 )	pPkt->hdr2.bRFT2	=	1;	//	송신기에 직접 전송하는경우.
                 		    ^
Warning[Pe223]: function "GetChPARFT" declared implicitly
   \       0x44   0x.... 0x....      BL       GetChPARFT
   \       0x48   0x2800             CMP      R0,#+0
   \       0x4A   0xD017             BEQ.N    ??_MakePktHdr2_1
   \       0x4C   0x0020             MOVS     R0,R4
   \       0x4E   0x7841             LDRB     R1,[R0, #+1]
   \       0x50   0xF051 0x0180      ORRS     R1,R1,#0x80
   \       0x54   0x7041             STRB     R1,[R0, #+1]
   \       0x56   0xE011             B.N      ??_MakePktHdr2_1
    138          	}
    139          	else if( GetRFTID() == 2 )
   \                     ??_MakePktHdr2_0: (+1)
   \       0x58   0x.... 0x....      BL       GetRFTID
   \       0x5C   0x2802             CMP      R0,#+2
   \       0x5E   0xD10D             BNE.N    ??_MakePktHdr2_1
    140          	{
    141          		pPkt->hdr2.bRFT2	=	1;	//	SET_BIT( pPkt->hdr2.nSrcCh, (0x1<<7) );//
   \       0x60   0x0020             MOVS     R0,R4
   \       0x62   0x7841             LDRB     R1,[R0, #+1]
   \       0x64   0xF051 0x0180      ORRS     R1,R1,#0x80
   \       0x68   0x7041             STRB     R1,[R0, #+1]
    142          		if( GetChPARFT() != 0 )	pPkt->hdr2.bRFT1	=	1;	//	송신기에 직접 전송하는경우.
                 		    ^
Warning[Pe223]: function "GetChPARFT" declared implicitly
   \       0x6A   0x.... 0x....      BL       GetChPARFT
   \       0x6E   0x2800             CMP      R0,#+0
   \       0x70   0xD004             BEQ.N    ??_MakePktHdr2_1
   \       0x72   0x0020             MOVS     R0,R4
   \       0x74   0x7841             LDRB     R1,[R0, #+1]
   \       0x76   0xF051 0x0140      ORRS     R1,R1,#0x40
   \       0x7A   0x7041             STRB     R1,[R0, #+1]
    143          	}
    144          
    145          #endif
    146          }
   \                     ??_MakePktHdr2_1: (+1)
   \       0x7C   0xBD31             POP      {R0,R4,R5,PC}
    147          
    148          #endif	//	defined(USE_CH_ISO_DEV)		//	장치별 채널분리.
    149          
    150          //==========================================================================

   \                                 In section .text, align 2, keep-with-next
    151          void _MakeRFCmd( RFMPkt	*pPkt, char *sCmd, int nRSSI )
    152          //==========================================================================
    153          {
   \                     _MakeRFCmd: (+1)
   \        0x0   0xE92D 0x43F8      PUSH     {R3-R9,LR}
   \        0x4   0x0004             MOVS     R4,R0
   \        0x6   0x000D             MOVS     R5,R1
   \        0x8   0x0016             MOVS     R6,R2
    154          	printf( "%s(%d)\n", __func__, __LINE__ );
   \        0xA   0x229A             MOVS     R2,#+154
   \        0xC   0x.... 0x....      LDR.W    R1,??DataTable29_2
   \       0x10   0x.... 0x....      LDR.W    R0,??DataTable29_3
   \       0x14   0x.... 0x....      BL       printf
    155          
    156          	memset( pPkt, 0, sizeof( RFMPkt ) );
   \       0x18   0x2740             MOVS     R7,#+64
   \       0x1A   0xF05F 0x0800      MOVS     R8,#+0
   \       0x1E   0x46A1             MOV      R9,R4
   \       0x20   0x4642             MOV      R2,R8
   \       0x22   0x0039             MOVS     R1,R7
   \       0x24   0x4648             MOV      R0,R9
   \       0x26   0x.... 0x....      BL       __aeabi_memset
    157          
    158          	//========================================================================
    159          	//	Packet Header
    160          	_MakePktHdr( pPkt, GetDevID(), 0xFF, RFPktDataLen, PktCmd );
   \       0x2A   0x.... 0x....      BL       GetDevID
   \       0x2E   0x2120             MOVS     R1,#+32
   \       0x30   0x9100             STR      R1,[SP, #+0]
   \       0x32   0x233C             MOVS     R3,#+60
   \       0x34   0x22FF             MOVS     R2,#+255
   \       0x36   0x0001             MOVS     R1,R0
   \       0x38   0x0020             MOVS     R0,R4
   \       0x3A   0x.... 0x....      BL       _MakePktHdr
    161          
    162          	//========================================================================
    163          	//	Command
    164          	pPkt->dat.cmd.nRSSIOver = nRSSI;		//	명령 동작 RSSI 범위.
   \       0x3E   0x7126             STRB     R6,[R4, #+4]
    165          	strcpy( pPkt->dat.cmd.sCmd, sCmd );		//	명령 전송.
   \       0x40   0x0029             MOVS     R1,R5
   \       0x42   0xF114 0x0008      ADDS     R0,R4,#+8
   \       0x46   0x.... 0x....      BL       strcpy
    166          
    167          	//========================================================================
    168          }
   \       0x4A   0xE8BD 0x83F1      POP      {R0,R4-R9,PC}
    169          
    170          
    171          //========================================================================

   \                                 In section .text, align 2, keep-with-next
    172          void SendStatReq( int nDestCh )
    173          //========================================================================
    174          {
   \                     SendStatReq: (+1)
   \        0x0   0xB5F0             PUSH     {R4-R7,LR}
   \        0x2   0xB091             SUB      SP,SP,#+68
   \        0x4   0x0004             MOVS     R4,R0
    175          	if ( GetDbg() )	printf( "%s(%d)\n", __func__, __LINE__ );
                 	     ^
Warning[Pe223]: function "GetDbg" declared implicitly
   \        0x6   0x.... 0x....      BL       GetDbg
   \        0xA   0x2800             CMP      R0,#+0
   \        0xC   0xD006             BEQ.N    ??SendStatReq_0
   \        0xE   0x22AF             MOVS     R2,#+175
   \       0x10   0x.... 0x....      LDR.W    R1,??DataTable29_4
   \       0x14   0x.... 0x....      LDR.W    R0,??DataTable29_3
   \       0x18   0x.... 0x....      BL       printf
    176          
    177          	RFMPkt			stPkt;
    178          	RFMPktStatReq	*pStatReq;
    179          
    180          	memset( &stPkt, 0, sizeof( stPkt ) );
   \                     ??SendStatReq_0: (+1)
   \       0x1C   0x2640             MOVS     R6,#+64
   \       0x1E   0x2700             MOVS     R7,#+0
   \       0x20   0xAD01             ADD      R5,SP,#+4
   \       0x22   0x003A             MOVS     R2,R7
   \       0x24   0x0031             MOVS     R1,R6
   \       0x26   0x0028             MOVS     R0,R5
   \       0x28   0x.... 0x....      BL       __aeabi_memset
    181          	pStatReq = (RFMPktStatReq *)&stPkt.dat.statReq;
   \       0x2C   0xAD02             ADD      R5,SP,#+8
    182          
    183          	//========================================================================
    184          	//	Packet Header
    185          	_MakePktHdr( &stPkt, GetDevID(), 0xFF, sizeof( RFMPktStatReq ), PktStatReq );
   \       0x2E   0x.... 0x....      BL       GetDevID
   \       0x32   0x0001             MOVS     R1,R0
   \       0x34   0x2011             MOVS     R0,#+17
   \       0x36   0x9000             STR      R0,[SP, #+0]
   \       0x38   0x230C             MOVS     R3,#+12
   \       0x3A   0x22FF             MOVS     R2,#+255
   \       0x3C   0xA801             ADD      R0,SP,#+4
   \       0x3E   0x.... 0x....      BL       _MakePktHdr
    186          
    187          	//========================================================================
    188          	//	Packet Body
    189          	pStatReq->nSrcCh	=	GetChRx();			//	수신받을 채널
   \       0x42   0x.... 0x....      BL       GetChRx
   \       0x46   0x7028             STRB     R0,[R5, #+0]
    190          
    191          	pStatReq->nCarNo	=	GetCarNo();			//	호차번호.
   \       0x48   0x.... 0x....      BL       GetCarNo
   \       0x4C   0x7168             STRB     R0,[R5, #+5]
    192          	pStatReq->nTrainNo	=	GetTrainSetIdx();	//	편성번호.
   \       0x4E   0x.... 0x....      BL       GetTrainSetIdx
   \       0x52   0x7128             STRB     R0,[R5, #+4]
    193          
    194          #if defined(USE_ROUTE_NEAREST_RFM)
    195          
    196          	pStatReq->nNearCh	=	GetChNearRFM();		//	가장 가까운 수신기(RFM) 채널
   \       0x54   0x.... 0x....      BL       GetChNearRFM
   \       0x58   0x7228             STRB     R0,[R5, #+8]
    197          
    198          #endif	//	 defined(USE_ROUTE_NEAREST_RFM)
    199          
    200          	//========================================================================
    201          	//	Send RF
    202          	SendPktCh( nDestCh, (U8 *)&stPkt, (U8)sizeof( RFMPktHdr ) + sizeof( RFMPktStatReq ) );
                 	                    ^
Warning[Pe167]: argument of type "U8 *" is incompatible with parameter of type
          "char const *"
   \       0x5A   0x2210             MOVS     R2,#+16
   \       0x5C   0xA901             ADD      R1,SP,#+4
   \       0x5E   0x0020             MOVS     R0,R4
   \       0x60   0x.... 0x....      BL       SendPktCh
    203          }
   \       0x64   0xB011             ADD      SP,SP,#+68
   \       0x66   0xBDF0             POP      {R4-R7,PC}
    204          
    205          //========================================================================

   \                                 In section .text, align 2, keep-with-next
    206          void SendStat( int nDestCh )
    207          //========================================================================
    208          {
   \                     SendStat: (+1)
   \        0x0   0xE92D 0x41F8      PUSH     {R3-R8,LR}
   \        0x4   0xB091             SUB      SP,SP,#+68
   \        0x6   0x0004             MOVS     R4,R0
    209          	//	RF Mode가 RFMModeNormal인 경우.
    210          	//		상태정보 전송.
    211          
    212          	if ( GetDbg() )	printf( "%s(%d)\n", __func__, __LINE__ );
                 	     ^
Warning[Pe223]: function "GetDbg" declared implicitly
   \        0x8   0x.... 0x....      BL       GetDbg
   \        0xC   0x2800             CMP      R0,#+0
   \        0xE   0xD006             BEQ.N    ??SendStat_0
   \       0x10   0x22D4             MOVS     R2,#+212
   \       0x12   0x.... 0x....      LDR.W    R1,??DataTable29_5
   \       0x16   0x.... 0x....      LDR.W    R0,??DataTable29_3
   \       0x1A   0x.... 0x....      BL       printf
    213          
    214          	RFMPkt		stPkt;
    215          	RFMPktStat	*pStat;
    216          
    217          	memset( &stPkt, 0, sizeof( stPkt ) );
   \                     ??SendStat_0: (+1)
   \       0x1E   0x2540             MOVS     R5,#+64
   \       0x20   0x2600             MOVS     R6,#+0
   \       0x22   0xAF01             ADD      R7,SP,#+4
   \       0x24   0x0032             MOVS     R2,R6
   \       0x26   0x0029             MOVS     R1,R5
   \       0x28   0x0038             MOVS     R0,R7
   \       0x2A   0x.... 0x....      BL       __aeabi_memset
    218          	pStat = (RFMPktStat *)&stPkt.dat.stat;
   \       0x2E   0xAF02             ADD      R7,SP,#+8
    219          
    220          	//========================================================================
    221          	//	Packet Header
    222          	_MakePktHdr( &stPkt, GetDevID(), 0xFF, sizeof( RFMPktStat ), PktStat );
   \       0x30   0x.... 0x....      BL       GetDevID
   \       0x34   0x0001             MOVS     R1,R0
   \       0x36   0x2001             MOVS     R0,#+1
   \       0x38   0x9000             STR      R0,[SP, #+0]
   \       0x3A   0x2319             MOVS     R3,#+25
   \       0x3C   0x22FF             MOVS     R2,#+255
   \       0x3E   0xA801             ADD      R0,SP,#+4
   \       0x40   0x.... 0x....      BL       _MakePktHdr
    223          
    224          	//========================================================================
    225          	//	Status Data
    226          	pStat->ver_main		=	APP_MAIN_VER;		//	1;
   \       0x44   0x2001             MOVS     R0,#+1
   \       0x46   0x73B8             STRB     R0,[R7, #+14]
    227          	pStat->ver_sub		=	APP_SUB_VER;		//	0;
   \       0x48   0x2001             MOVS     R0,#+1
   \       0x4A   0x73F8             STRB     R0,[R7, #+15]
    228          	pStat->ver_det		=	APP_DETAIL_VER;		//	0;
   \       0x4C   0x2000             MOVS     R0,#+0
   \       0x4E   0x8238             STRH     R0,[R7, #+16]
    229          	pStat->ver_build	=	APP_BUILD_VER;		//	0;
   \       0x50   0xF44F 0x7097      MOV      R0,#+302
   \       0x54   0x8278             STRH     R0,[R7, #+18]
    230          
    231          	pStat->nMagicNum	=	0xAA55;				//	패킷 요류검출용.
   \       0x56   0xF64A 0x2055      MOVW     R0,#+43605
   \       0x5A   0x8078             STRH     R0,[R7, #+2]
    232          
    233          	pStat->nCarNo		=	GetCarNo();
   \       0x5C   0x.... 0x....      BL       GetCarNo
   \       0x60   0x7378             STRB     R0,[R7, #+13]
    234          	pStat->nDevID		=	GetDevID();
   \       0x62   0x.... 0x....      BL       GetDevID
   \       0x66   0x7078             STRB     R0,[R7, #+1]
    235          
    236          	pStat->nTrainNo		=	GetTrainSetIdx();	//	편성번호.
   \       0x68   0x.... 0x....      BL       GetTrainSetIdx
   \       0x6C   0x7338             STRB     R0,[R7, #+12]
    237          
    238          	pStat->upTime		=	HAL_GetTick();
   \       0x6E   0x.... 0x....      BL       HAL_GetTick
   \       0x72   0x6078             STR      R0,[R7, #+4]
    239          
    240          	pStat->rspID		=	g_flagRspID;		//	Rsp ID Flag
   \       0x74   0x.... 0x....      LDR.W    R0,??DataTable29_1
   \       0x78   0x8800             LDRH     R0,[R0, #+0]
   \       0x7A   0x82B8             STRH     R0,[R7, #+20]
    241          
    242          	pStat->nManHop		=	g_nManHopping;		//	Manual Hopping Setting
   \       0x7C   0x.... 0x....      LDR.W    R0,??DataTable29_6
   \       0x80   0x6800             LDR      R0,[R0, #+0]
   \       0x82   0x75B8             STRB     R0,[R7, #+22]
    243          	pStat->nRFMode		=	g_nRFMode;			//	RFMode
   \       0x84   0x.... 0x....      LDR.W    R8,??DataTable29_7
   \       0x88   0xF8D8 0x0000      LDR      R0,[R8, #+0]
   \       0x8C   0x75F8             STRB     R0,[R7, #+23]
    244          
    245          	pStat->nDevFlag		=	g_nDevFlag;			//	Device Flag : 조명 상태 등.
   \       0x8E   0x.... 0x....      LDR.W    R0,??DataTable29_8
   \       0x92   0x6800             LDR      R0,[R0, #+0]
   \       0x94   0x7638             STRB     R0,[R7, #+24]
    246          
    247          	pStat->nChRx		=	GetChRx();			//	수신 채널
   \       0x96   0x.... 0x....      BL       GetChRx
   \       0x9A   0x72B8             STRB     R0,[R7, #+10]
    248          
    249          	//========================================================================
    250          	//	Send RF
    251          
    252          	if( g_nRFMode == RFMode2 )//#if defined(USE_COMM_MODE_CH_GRP)	//	그룹주파수 모드. - [ 1, 2 ] [ 3, 4 ] ...
   \       0x9C   0xF8D8 0x0000      LDR      R0,[R8, #+0]
   \       0xA0   0x2802             CMP      R0,#+2
   \       0xA2   0xD105             BNE.N    ??SendStat_1
    253          	{
    254          		//	짝수 호차는 3msec Delay ( 송신시 충돌 방지 )
    255          		if( pStat->nCarNo % 2 == 0 ) HAL_Delay( 3 );
   \       0xA4   0x7B78             LDRB     R0,[R7, #+13]
   \       0xA6   0x07C0             LSLS     R0,R0,#+31
   \       0xA8   0xD402             BMI.N    ??SendStat_1
   \       0xAA   0x2003             MOVS     R0,#+3
   \       0xAC   0x.... 0x....      BL       HAL_Delay
    256          	}//#endif
    257          
    258          #if defined(USE_CH_ISO_DEV)
    259          	//	상태정보는 송신기로 전송.
    260          	int nCh;
    261          
    262          	//========================================================================
    263          	if ( nDestCh == 0 )	nCh = ChTx_1;	//	Default
   \                     ??SendStat_1: (+1)
   \       0xB0   0x2C00             CMP      R4,#+0
   \       0xB2   0xD103             BNE.N    ??SendStat_2
   \       0xB4   0x.... 0x....      LDR.W    R0,??DataTable31
   \       0xB8   0x6805             LDR      R5,[R0, #+0]
   \       0xBA   0xE000             B.N      ??SendStat_3
    264          	else				nCh = nDestCh;
   \                     ??SendStat_2: (+1)
   \       0xBC   0x0025             MOVS     R5,R4
    265          	//========================================================================
    266          
    267          	SendPktCh(nCh, (U8 *)&stPkt, (U8)sizeof( RFMPktHdr ) + sizeof( RFMPktStat ) );
                 	               ^
Warning[Pe167]: argument of type "U8 *" is incompatible with parameter of type
          "char const *"
   \                     ??SendStat_3: (+1)
   \       0xBE   0x221D             MOVS     R2,#+29
   \       0xC0   0xA901             ADD      R1,SP,#+4
   \       0xC2   0x0028             MOVS     R0,R5
   \       0xC4   0x.... 0x....      BL       SendPktCh
    268          #else
    269          	SendPacket( (U8 *)&stPkt, (U8)sizeof( RFMPktHdr ) + sizeof( RFMPktStat ) );
    270          #endif
    271          	//========================================================================
    272          }
   \       0xC8   0xB012             ADD      SP,SP,#+72
   \       0xCA   0xE8BD 0x81F0      POP      {R4-R8,PC}
    273          
    274          
    275          //========================================================================

   \                                 In section .text, align 2, keep-with-next
    276          void SendRouteReq( int nDestCh )
    277          //========================================================================
    278          {
   \                     SendRouteReq: (+1)
   \        0x0   0xB5F0             PUSH     {R4-R7,LR}
   \        0x2   0xB091             SUB      SP,SP,#+68
   \        0x4   0x0004             MOVS     R4,R0
    279          	if ( GetDbg() )	printf( "%s(%d)\n", __func__, __LINE__ );
                 	     ^
Warning[Pe223]: function "GetDbg" declared implicitly
   \        0x6   0x.... 0x....      BL       GetDbg
   \        0xA   0x2800             CMP      R0,#+0
   \        0xC   0xD007             BEQ.N    ??SendRouteReq_0
   \        0xE   0xF240 0x1217      MOVW     R2,#+279
   \       0x12   0x.... 0x....      LDR.W    R1,??DataTable29_9
   \       0x16   0x.... 0x....      LDR.W    R0,??DataTable31_1
   \       0x1A   0x.... 0x....      BL       printf
    280          
    281          	RFMPkt			stPkt;
    282          	RFMPktRoute		*pRouteReq;
    283          
    284          	memset( &stPkt, 0, sizeof( stPkt ) );
   \                     ??SendRouteReq_0: (+1)
   \       0x1E   0x2640             MOVS     R6,#+64
   \       0x20   0x2700             MOVS     R7,#+0
   \       0x22   0xAD01             ADD      R5,SP,#+4
   \       0x24   0x003A             MOVS     R2,R7
   \       0x26   0x0031             MOVS     R1,R6
   \       0x28   0x0028             MOVS     R0,R5
   \       0x2A   0x.... 0x....      BL       __aeabi_memset
    285          	pRouteReq = (RFMPktRoute *)&stPkt.dat.routeReq;
   \       0x2E   0xAD02             ADD      R5,SP,#+8
    286          
    287          	//========================================================================
    288          	//	Packet Header
    289          	_MakePktHdr( &stPkt, GetDevID(), 0xFF, sizeof( RFMPktRoute ), PktRouteReq );
   \       0x30   0x.... 0x....      BL       GetDevID
   \       0x34   0x0001             MOVS     R1,R0
   \       0x36   0x2031             MOVS     R0,#+49
   \       0x38   0x9000             STR      R0,[SP, #+0]
   \       0x3A   0x2307             MOVS     R3,#+7
   \       0x3C   0x22FF             MOVS     R2,#+255
   \       0x3E   0xA801             ADD      R0,SP,#+4
   \       0x40   0x.... 0x....      BL       _MakePktHdr
    290          
    291          	//========================================================================
    292          	//	Packet Body
    293          	pRouteReq->nSrcCh	=	GetChRx();			//	수신받을 채널
   \       0x44   0x.... 0x....      BL       GetChRx
   \       0x48   0x7028             STRB     R0,[R5, #+0]
    294          	pRouteReq->nSrcDev	=	GetDevID();			//	RFT / RFM
   \       0x4A   0x.... 0x....      BL       GetDevID
   \       0x4E   0x7068             STRB     R0,[R5, #+1]
    295          
    296          	pRouteReq->nCarNo	=	GetCarNo();			//	호차번호.
   \       0x50   0x.... 0x....      BL       GetCarNo
   \       0x54   0x71A8             STRB     R0,[R5, #+6]
    297          	pRouteReq->nTrainNo	=	GetTrainSetIdx();	//	편성번호.
   \       0x56   0x.... 0x....      BL       GetTrainSetIdx
   \       0x5A   0x7168             STRB     R0,[R5, #+5]
    298          
    299          	//========================================================================
    300          	//	Send RF
    301          	SendPktCh( nDestCh, (U8 *)&stPkt, (U8)sizeof( RFMPktHdr ) + sizeof( RFMPktRoute ) );
                 	                    ^
Warning[Pe167]: argument of type "U8 *" is incompatible with parameter of type
          "char const *"
   \       0x5C   0x220B             MOVS     R2,#+11
   \       0x5E   0xA901             ADD      R1,SP,#+4
   \       0x60   0x0020             MOVS     R0,R4
   \       0x62   0x.... 0x....      BL       SendPktCh
    302          }
   \       0x66   0xB011             ADD      SP,SP,#+68
   \       0x68   0xBDF0             POP      {R4-R7,PC}
    303          
    304          //========================================================================

   \                                 In section .text, align 2, keep-with-next
    305          void SendRouteRsp( int nDestCh )
    306          //========================================================================
    307          {
   \                     SendRouteRsp: (+1)
   \        0x0   0xB5F0             PUSH     {R4-R7,LR}
   \        0x2   0xB091             SUB      SP,SP,#+68
   \        0x4   0x0004             MOVS     R4,R0
    308          	if ( GetDbg() )	printf( "%s(%d)\n", __func__, __LINE__ );
                 	     ^
Warning[Pe223]: function "GetDbg" declared implicitly
   \        0x6   0x.... 0x....      BL       GetDbg
   \        0xA   0x2800             CMP      R0,#+0
   \        0xC   0xD007             BEQ.N    ??SendRouteRsp_0
   \        0xE   0xF44F 0x729A      MOV      R2,#+308
   \       0x12   0x.... 0x....      LDR.W    R1,??DataTable29_10
   \       0x16   0x.... 0x....      LDR.W    R0,??DataTable31_1
   \       0x1A   0x.... 0x....      BL       printf
    309          
    310          	RFMPkt			stPkt;
    311          	RFMPktRoute	*pRouteRsp;
    312          
    313          	memset( &stPkt, 0, sizeof( stPkt ) );
   \                     ??SendRouteRsp_0: (+1)
   \       0x1E   0x2640             MOVS     R6,#+64
   \       0x20   0x2700             MOVS     R7,#+0
   \       0x22   0xAD01             ADD      R5,SP,#+4
   \       0x24   0x003A             MOVS     R2,R7
   \       0x26   0x0031             MOVS     R1,R6
   \       0x28   0x0028             MOVS     R0,R5
   \       0x2A   0x.... 0x....      BL       __aeabi_memset
    314          	pRouteRsp = (RFMPktRoute *)&stPkt.dat.routeRsp;
   \       0x2E   0xAD02             ADD      R5,SP,#+8
    315          
    316          	//========================================================================
    317          	//	Packet Header
    318          	_MakePktHdr( &stPkt, GetDevID(), 0xFF, sizeof( RFMPktRoute ), PktRouteRsp );
   \       0x30   0x.... 0x....      BL       GetDevID
   \       0x34   0x0001             MOVS     R1,R0
   \       0x36   0x2032             MOVS     R0,#+50
   \       0x38   0x9000             STR      R0,[SP, #+0]
   \       0x3A   0x2307             MOVS     R3,#+7
   \       0x3C   0x22FF             MOVS     R2,#+255
   \       0x3E   0xA801             ADD      R0,SP,#+4
   \       0x40   0x.... 0x....      BL       _MakePktHdr
    319          
    320          	//========================================================================
    321          	//	Packet Body
    322          	pRouteRsp->nSrcCh	=	GetChRx();			//	수신받을 채널
   \       0x44   0x.... 0x....      BL       GetChRx
   \       0x48   0x7028             STRB     R0,[R5, #+0]
    323          	pRouteRsp->nSrcDev	=	GetDevID();			//	RFT / RFM
   \       0x4A   0x.... 0x....      BL       GetDevID
   \       0x4E   0x7068             STRB     R0,[R5, #+1]
    324          
    325          	pRouteRsp->nCarNo	=	GetCarNo();			//	호차번호.
   \       0x50   0x.... 0x....      BL       GetCarNo
   \       0x54   0x71A8             STRB     R0,[R5, #+6]
    326          	pRouteRsp->nTrainNo	=	GetTrainSetIdx();	//	편성번호.
   \       0x56   0x.... 0x....      BL       GetTrainSetIdx
   \       0x5A   0x7168             STRB     R0,[R5, #+5]
    327          
    328          	//========================================================================
    329          	//	Send RF
    330          	SendPktCh( nDestCh, (U8 *)&stPkt, (U8)sizeof( RFMPktHdr ) + sizeof( RFMPktRoute ) );
                 	                    ^
Warning[Pe167]: argument of type "U8 *" is incompatible with parameter of type
          "char const *"
   \       0x5C   0x220B             MOVS     R2,#+11
   \       0x5E   0xA901             ADD      R1,SP,#+4
   \       0x60   0x0020             MOVS     R0,R4
   \       0x62   0x.... 0x....      BL       SendPktCh
    331          }
   \       0x66   0xB011             ADD      SP,SP,#+68
   \       0x68   0xBDF0             POP      {R4-R7,PC}
    332          
    333          
    334          //========================================================================

   \                                 In section .text, align 2, keep-with-next
    335          void SendPA( int nStartStop )
    336          //========================================================================
    337          {
   \                     SendPA: (+1)
   \        0x0   0xB5F8             PUSH     {R3-R7,LR}
   \        0x2   0xB090             SUB      SP,SP,#+64
   \        0x4   0x0004             MOVS     R4,R0
    338          	printf( "%s(%d)\n", __func__, __LINE__ );
   \        0x6   0xF44F 0x72A9      MOV      R2,#+338
   \        0xA   0x.... 0x....      LDR.W    R1,??DataTable29_11
   \        0xE   0x.... 0x....      LDR.W    R0,??DataTable31_1
   \       0x12   0x.... 0x....      BL       printf
    339          
    340          	RFMPkt				stPkt;
    341          	RFMPktCtrlPACall	*pPACall;
    342          
    343          	memset( &stPkt, 0, sizeof( stPkt ) );
   \       0x16   0x2640             MOVS     R6,#+64
   \       0x18   0x2700             MOVS     R7,#+0
   \       0x1A   0x466D             MOV      R5,SP
   \       0x1C   0x003A             MOVS     R2,R7
   \       0x1E   0x0031             MOVS     R1,R6
   \       0x20   0x0028             MOVS     R0,R5
   \       0x22   0x.... 0x....      BL       __aeabi_memset
    344          	pPACall = (RFMPktCtrlPACall *)&stPkt.dat.pacall;
   \       0x26   0xAD01             ADD      R5,SP,#+4
    345          
    346          	//========================================================================
    347          	//	Packet Header
    348          #if defined(USE_CH_ISO_DEV)
    349          	_MakePktHdr2( &stPkt, PktCtrlPaCall );
   \       0x28   0x2108             MOVS     R1,#+8
   \       0x2A   0x4668             MOV      R0,SP
   \       0x2C   0x.... 0x....      BL       _MakePktHdr2
    350          #else
    351          	_MakePktHdr( &stPkt, GetDevID(), 0xFF, sizeof( RFMPktCtrlPACall ), PktCtrlPaCall );
    352          #endif
    353          
    354          	//========================================================================
    355          	//	Status Data
    356          	pPACall->nStartStop		=	nStartStop;
   \       0x30   0x702C             STRB     R4,[R5, #+0]
    357          
    358          	pPACall->nTypePACall	=	CtrlPA;
   \       0x32   0x2001             MOVS     R0,#+1
   \       0x34   0x7068             STRB     R0,[R5, #+1]
    359          
    360          	//========================================================================
    361          	//	Send RF
    362          
    363          #if defined(USE_CH_ISO_DEV)
    364          
    365          	if ( GetChPARFT() != 0 )
                 	     ^
Warning[Pe223]: function "GetChPARFT" declared implicitly
   \       0x36   0x.... 0x....      BL       GetChPARFT
   \       0x3A   0x2800             CMP      R0,#+0
   \       0x3C   0xD005             BEQ.N    ??SendPA_0
    366          	{
    367          		//	송신기에 전송.
    368          		SendPktCh( GetChPARFT(), (uint8_t *)&stPkt,
                 		                         ^
Warning[Pe167]: argument of type "uint8_t *" is incompatible with parameter of
          type "char const *"
    369          			(U8)sizeof( RFMPktHdr ) + sizeof( RFMPktCtrlPACall ) );
   \       0x3E   0x.... 0x....      BL       GetChPARFT
   \       0x42   0x2208             MOVS     R2,#+8
   \       0x44   0x4669             MOV      R1,SP
   \       0x46   0x.... 0x....      BL       SendPktCh
    370          	}
    371          
    372          	//	수신기에 전송
    373          	SendPktCh( GetChPA(), (uint8_t *)&stPkt,
                 	                      ^
Warning[Pe167]: argument of type "uint8_t *" is incompatible with parameter of
          type "char const *"
    374          		(U8)sizeof( RFMPktHdr ) + sizeof( RFMPktCtrlPACall ) );
   \                     ??SendPA_0: (+1)
   \       0x4A   0x.... 0x....      BL       GetChPA
   \       0x4E   0x2208             MOVS     R2,#+8
   \       0x50   0x4669             MOV      R1,SP
   \       0x52   0x.... 0x....      BL       SendPktCh
    375          
    376          #else
    377          	SendPacket( (U8 *)&stPkt, (U8)sizeof( RFMPktHdr ) + sizeof( RFMPktCtrlPACall ) );
    378          #endif
    379          
    380          	//========================================================================
    381          }
   \       0x56   0xB011             ADD      SP,SP,#+68
   \       0x58   0xBDF0             POP      {R4-R7,PC}
    382          
    383          
    384          //========================================================================

   \                                 In section .text, align 2, keep-with-next
    385          void SendCall( int nStartStop )
    386          //========================================================================
    387          {
   \                     SendCall: (+1)
   \        0x0   0xB5F8             PUSH     {R3-R7,LR}
   \        0x2   0xB090             SUB      SP,SP,#+64
   \        0x4   0x0004             MOVS     R4,R0
    388          	printf( "%s(%d)\n", __func__, __LINE__ );
   \        0x6   0xF44F 0x72C2      MOV      R2,#+388
   \        0xA   0x.... 0x....      LDR.W    R1,??DataTable30
   \        0xE   0x.... 0x....      LDR.W    R0,??DataTable31_1
   \       0x12   0x.... 0x....      BL       printf
    389          
    390          	RFMPkt			stPkt;
    391          	RFMPktCtrlPACall	*pPACall;
    392          
    393          	memset( &stPkt, 0, sizeof( stPkt ) );
   \       0x16   0x2640             MOVS     R6,#+64
   \       0x18   0x2700             MOVS     R7,#+0
   \       0x1A   0x466D             MOV      R5,SP
   \       0x1C   0x003A             MOVS     R2,R7
   \       0x1E   0x0031             MOVS     R1,R6
   \       0x20   0x0028             MOVS     R0,R5
   \       0x22   0x.... 0x....      BL       __aeabi_memset
    394          	pPACall = (RFMPktCtrlPACall *)&stPkt.dat.pacall;
   \       0x26   0xAD01             ADD      R5,SP,#+4
    395          
    396          	//========================================================================
    397          	//	Packet Header
    398          #if defined(USE_CH_ISO_DEV)
    399          	_MakePktHdr2( &stPkt, PktCtrlPaCall );
   \       0x28   0x2108             MOVS     R1,#+8
   \       0x2A   0x4668             MOV      R0,SP
   \       0x2C   0x.... 0x....      BL       _MakePktHdr2
    400          #else
    401          	_MakePktHdr( &stPkt, GetDevID(), 0xFF, sizeof( RFMPktCtrlPACall ), PktCtrlPaCall );
    402          #endif
    403          
    404          	//========================================================================
    405          	//	Status Data
    406          	pPACall->nStartStop		=	nStartStop;
   \       0x30   0x702C             STRB     R4,[R5, #+0]
    407          
    408          	pPACall->nTypePACall	=	CtrlCall;
   \       0x32   0x2002             MOVS     R0,#+2
   \       0x34   0x7068             STRB     R0,[R5, #+1]
    409          
    410          	//========================================================================
    411          	//	Send RF
    412          
    413          #if defined(USE_CH_ISO_DEV)
    414          
    415          	if ( GetChPARFT() != 0 )
                 	     ^
Warning[Pe223]: function "GetChPARFT" declared implicitly
   \       0x36   0x.... 0x....      BL       GetChPARFT
   \       0x3A   0x2800             CMP      R0,#+0
   \       0x3C   0xD006             BEQ.N    ??SendCall_0
    416          	{
    417          		//	송신기에 직접 전송.
    418          		SendPktCh( GetChPARFT(), (uint8_t *)&stPkt,
                 		                         ^
Warning[Pe167]: argument of type "uint8_t *" is incompatible with parameter of
          type "char const *"
    419          			(U8)sizeof( RFMPktHdr ) + sizeof( RFMPktCtrlPACall ) );
   \       0x3E   0x.... 0x....      BL       GetChPARFT
   \       0x42   0x2208             MOVS     R2,#+8
   \       0x44   0x4669             MOV      R1,SP
   \       0x46   0x.... 0x....      BL       SendPktCh
   \       0x4A   0xE005             B.N      ??SendCall_1
    420          	}
    421          	else
    422          	{
    423          		//	수신기를 통해 전송.
    424          		SendPktCh( GetChPA(),	//GetChOtherRFT(),
    425          				(uint8_t *)&stPkt,
                 				^
Warning[Pe167]: argument of type "uint8_t *" is incompatible with parameter of
          type "char const *"
    426          				(U8)sizeof( RFMPktHdr ) + sizeof( RFMPktCtrlPACall ) );
   \                     ??SendCall_0: (+1)
   \       0x4C   0x.... 0x....      BL       GetChPA
   \       0x50   0x2208             MOVS     R2,#+8
   \       0x52   0x4669             MOV      R1,SP
   \       0x54   0x.... 0x....      BL       SendPktCh
    427          	}
    428          
    429          #else
    430          
    431          	SendPacket( (U8 *)&stPkt, (U8)sizeof( RFMPktHdr ) + sizeof( RFMPktCtrlPACall ) );
    432          
    433          #endif
    434          
    435          	//========================================================================
    436          }
   \                     ??SendCall_1: (+1)
   \       0x58   0xB011             ADD      SP,SP,#+68
   \       0x5A   0xBDF0             POP      {R4-R7,PC}
    437          
    438          //========================================================================

   \                                 In section .text, align 2, keep-with-next
    439          void SendOCCPA( int nStartStop )
    440          //========================================================================
    441          {
   \                     SendOCCPA: (+1)
   \        0x0   0xB5F8             PUSH     {R3-R7,LR}
   \        0x2   0xB090             SUB      SP,SP,#+64
   \        0x4   0x0004             MOVS     R4,R0
    442          	printf( "%s(%d)\n", __func__, __LINE__ );
   \        0x6   0xF44F 0x72DD      MOV      R2,#+442
   \        0xA   0x.... 0x....      LDR.W    R1,??DataTable31_2
   \        0xE   0x.... 0x....      LDR.W    R0,??DataTable31_1
   \       0x12   0x.... 0x....      BL       printf
    443          
    444          	RFMPkt				stPkt;
    445          	RFMPktCtrlPACall	*pPACall;
    446          
    447          	memset( &stPkt, 0, sizeof( stPkt ) );
   \       0x16   0x2640             MOVS     R6,#+64
   \       0x18   0x2700             MOVS     R7,#+0
   \       0x1A   0x466D             MOV      R5,SP
   \       0x1C   0x003A             MOVS     R2,R7
   \       0x1E   0x0031             MOVS     R1,R6
   \       0x20   0x0028             MOVS     R0,R5
   \       0x22   0x.... 0x....      BL       __aeabi_memset
    448          	pPACall = (RFMPktCtrlPACall *)&stPkt.dat.pacall;
   \       0x26   0xAD01             ADD      R5,SP,#+4
    449          
    450          	//========================================================================
    451          	//	Packet Header
    452          #if defined(USE_CH_ISO_DEV)
    453          	_MakePktHdr2( &stPkt, PktCtrlPaCall );
   \       0x28   0x2108             MOVS     R1,#+8
   \       0x2A   0x4668             MOV      R0,SP
   \       0x2C   0x.... 0x....      BL       _MakePktHdr2
    454          #else
    455          	_MakePktHdr( &stPkt, GetDevID(), 0xFF, sizeof( RFMPktCtrlPACall ), PktCtrlPaCall );
    456          #endif
    457          
    458          	//========================================================================
    459          	//	Status Data
    460          	pPACall->nStartStop		=	nStartStop;
   \       0x30   0x702C             STRB     R4,[R5, #+0]
    461          
    462          	pPACall->nTypePACall	=	CtrlOccPa;
   \       0x32   0x2003             MOVS     R0,#+3
   \       0x34   0x7068             STRB     R0,[R5, #+1]
    463          
    464          	//========================================================================
    465          	//	Send RF
    466          
    467          #if defined(USE_CH_ISO_DEV)
    468          
    469          	if ( GetChPARFT() != 0 )
                 	     ^
Warning[Pe223]: function "GetChPARFT" declared implicitly
   \       0x36   0x.... 0x....      BL       GetChPARFT
   \       0x3A   0x2800             CMP      R0,#+0
   \       0x3C   0xD005             BEQ.N    ??SendOCCPA_0
    470          	{
    471          		//	송신기에 전송.
    472          		SendPktCh( GetChPARFT(), (uint8_t *)&stPkt,
                 		                         ^
Warning[Pe167]: argument of type "uint8_t *" is incompatible with parameter of
          type "char const *"
    473          			(U8)sizeof( RFMPktHdr ) + sizeof( RFMPktCtrlPACall ) );
   \       0x3E   0x.... 0x....      BL       GetChPARFT
   \       0x42   0x2208             MOVS     R2,#+8
   \       0x44   0x4669             MOV      R1,SP
   \       0x46   0x.... 0x....      BL       SendPktCh
    474          	}
    475          
    476          	//	수신기에 전송
    477          	SendPktCh( GetChPA(), (uint8_t *)&stPkt,
                 	                      ^
Warning[Pe167]: argument of type "uint8_t *" is incompatible with parameter of
          type "char const *"
    478          		(U8)sizeof( RFMPktHdr ) + sizeof( RFMPktCtrlPACall ) );
   \                     ??SendOCCPA_0: (+1)
   \       0x4A   0x.... 0x....      BL       GetChPA
   \       0x4E   0x2208             MOVS     R2,#+8
   \       0x50   0x4669             MOV      R1,SP
   \       0x52   0x.... 0x....      BL       SendPktCh
    479          
    480          #else
    481          	SendPacket( (U8 *)&stPkt, (U8)sizeof( RFMPktHdr ) + sizeof( RFMPktCtrlPACall ) );
    482          #endif
    483          
    484          	//========================================================================
    485          }
   \       0x56   0xB011             ADD      SP,SP,#+68
   \       0x58   0xBDF0             POP      {R4-R7,PC}
    486          
    487          
    488          //========================================================================

   \                                 In section .text, align 2, keep-with-next
    489          void SendLight( int nOnOff )
    490          //========================================================================
    491          {
   \                     SendLight: (+1)
   \        0x0   0xB5F8             PUSH     {R3-R7,LR}
   \        0x2   0xB090             SUB      SP,SP,#+64
   \        0x4   0x0004             MOVS     R4,R0
    492          	printf( "%s(%d)\n", __func__, __LINE__ );
   \        0x6   0xF44F 0x72F6      MOV      R2,#+492
   \        0xA   0x.... 0x....      LDR.W    R1,??DataTable31_3
   \        0xE   0x.... 0x....      LDR.W    R0,??DataTable31_1
   \       0x12   0x.... 0x....      BL       printf
    493          
    494          	RFMPkt			stPkt;
    495          	RFMPktLight		*pLight;
    496          
    497          	memset( &stPkt, 0, sizeof( stPkt ) );
   \       0x16   0x2640             MOVS     R6,#+64
   \       0x18   0x2700             MOVS     R7,#+0
   \       0x1A   0x466D             MOV      R5,SP
   \       0x1C   0x003A             MOVS     R2,R7
   \       0x1E   0x0031             MOVS     R1,R6
   \       0x20   0x0028             MOVS     R0,R5
   \       0x22   0x.... 0x....      BL       __aeabi_memset
    498          	pLight = (RFMPktLight *)&stPkt.dat.light;
   \       0x26   0xAD01             ADD      R5,SP,#+4
    499          
    500          	//========================================================================
    501          	//	Packet Header
    502          #if defined(USE_CH_ISO_DEV)
    503          
    504          	_MakePktHdr2( &stPkt, PktLight );
   \       0x28   0x2104             MOVS     R1,#+4
   \       0x2A   0x4668             MOV      R0,SP
   \       0x2C   0x.... 0x....      BL       _MakePktHdr2
    505          
    506          #else
    507          
    508          	_MakePktHdr( &stPkt, GetDevID(), 0xFF, sizeof( RFMPktLight ), PktLight );
    509          
    510          #endif
    511          
    512          	//========================================================================
    513          	//	Status Data
    514          	pLight->nOnOff = nOnOff;
   \       0x30   0x702C             STRB     R4,[R5, #+0]
    515          
    516          	//========================================================================
    517          	//	Send RF
    518          #if defined(USE_CH_ISO_DEV)
    519          
    520          	SendPktCh( GetChPA(), (uint8_t *)&stPkt,
                 	                      ^
Warning[Pe167]: argument of type "uint8_t *" is incompatible with parameter of
          type "char const *"
    521          		(U8)sizeof( RFMPktHdr ) + sizeof( RFMPktLight ) );
   \       0x32   0x.... 0x....      BL       GetChPA
   \       0x36   0x2208             MOVS     R2,#+8
   \       0x38   0x4669             MOV      R1,SP
   \       0x3A   0x.... 0x....      BL       SendPktCh
    522          
    523          #else
    524          
    525          	SendPacket( (U8 *)&stPkt, (U8)sizeof( RFMPktHdr ) + sizeof( RFMPktLight ) );
    526          
    527          #endif
    528          
    529          	//========================================================================
    530          }
   \       0x3E   0xB011             ADD      SP,SP,#+68
   \       0x40   0xBDF0             POP      {R4-R7,PC}
    531          
    532          //==========================================================================

   \                                 In section .text, align 2, keep-with-next
    533          void SendLightOn( void )
    534          //==========================================================================
    535          {
   \                     SendLightOn: (+1)
   \        0x0   0xB580             PUSH     {R7,LR}
    536          	SendLight( 1 );		//	Light On
   \        0x2   0x2001             MOVS     R0,#+1
   \        0x4   0x.... 0x....      BL       SendLight
    537          }
   \        0x8   0xBD01             POP      {R0,PC}
    538          
    539          //==========================================================================

   \                                 In section .text, align 2, keep-with-next
    540          void SendLightOff( void )
    541          //==========================================================================
    542          {
   \                     SendLightOff: (+1)
   \        0x0   0xB580             PUSH     {R7,LR}
    543          	SendLight( 0 );		//	Light Off
   \        0x2   0x2000             MOVS     R0,#+0
   \        0x4   0x.... 0x....      BL       SendLight
    544          }
   \        0x8   0xBD01             POP      {R0,PC}
    545          
    546          //==========================================================================

   \                                 In section .text, align 2, keep-with-next
    547          void SendRFCmdCh( int nCh, char *sCmd, int nRSSI )
    548          //==========================================================================
    549          {
   \                     SendRFCmdCh: (+1)
   \        0x0   0xB570             PUSH     {R4-R6,LR}
   \        0x2   0xB090             SUB      SP,SP,#+64
   \        0x4   0x0004             MOVS     R4,R0
   \        0x6   0x000D             MOVS     R5,R1
   \        0x8   0x0016             MOVS     R6,R2
    550          	printf( "%s(%d)\n", __func__, __LINE__ );
   \        0xA   0xF240 0x2226      MOVW     R2,#+550
   \        0xE   0x.... 0x....      LDR.W    R1,??DataTable31_4
   \       0x12   0x.... 0x....      LDR.W    R0,??DataTable31_1
   \       0x16   0x.... 0x....      BL       printf
    551          	//========================================================================
    552          	RFMPkt			stPkt;
    553          	_MakeRFCmd( &stPkt, sCmd, nRSSI );
   \       0x1A   0x0032             MOVS     R2,R6
   \       0x1C   0x0029             MOVS     R1,R5
   \       0x1E   0x4668             MOV      R0,SP
   \       0x20   0x.... 0x....      BL       _MakeRFCmd
    554          
    555          	//========================================================================
    556          	//	Send RF
    557          	SendPktCh( nCh, (U8 *)&stPkt, (U8)sizeof( RFMPktHdr ) + RFPktDataLen );
                 	                ^
Warning[Pe167]: argument of type "U8 *" is incompatible with parameter of type
          "char const *"
   \       0x24   0x2240             MOVS     R2,#+64
   \       0x26   0x4669             MOV      R1,SP
   \       0x28   0x0020             MOVS     R0,R4
   \       0x2A   0x.... 0x....      BL       SendPktCh
    558          	//========================================================================
    559          }
   \       0x2E   0xB010             ADD      SP,SP,#+64
   \       0x30   0xBD70             POP      {R4-R6,PC}
    560          
    561          //==========================================================================

   \                                 In section .text, align 2, keep-with-next
    562          void SendRFCmd( char *sCmd, int nRSSI )
    563          //==========================================================================
    564          {
   \                     SendRFCmd: (+1)
   \        0x0   0xB570             PUSH     {R4-R6,LR}
   \        0x2   0xB090             SUB      SP,SP,#+64
   \        0x4   0x0004             MOVS     R4,R0
   \        0x6   0x000D             MOVS     R5,R1
    565          	printf( "%s(%d)\n", __func__, __LINE__ );
   \        0x8   0xF240 0x2235      MOVW     R2,#+565
   \        0xC   0x.... 0x....      LDR.W    R1,??DataTable31_5
   \       0x10   0x.... 0x....      LDR.W    R0,??DataTable31_1
   \       0x14   0x.... 0x....      BL       printf
    566          	//========================================================================
    567          	RFMPkt			stPkt;
    568          	_MakeRFCmd( &stPkt, sCmd, nRSSI );
   \       0x18   0x002A             MOVS     R2,R5
   \       0x1A   0x0021             MOVS     R1,R4
   \       0x1C   0x4668             MOV      R0,SP
   \       0x1E   0x.... 0x....      BL       _MakeRFCmd
    569          
    570          	//========================================================================
    571          	//	Send RF
    572          //	SendPacket( (U8 *)&stPkt, (U8)sizeof( RFMPktHdr ) + RFPktDataLen );
    573          
    574          	//========================================================================
    575          	//	모든 수신기로 전송.
    576          //	for ( int nCh = ChTS_base; nCh < ChTS1_1 + (ChGap * 10); nCh++ )
    577          	for ( int nCh = ChTS_base; nCh < ChMax; nCh++ )
   \       0x22   0x260B             MOVS     R6,#+11
   \                     ??SendRFCmd_0: (+1)
   \       0x24   0x2E40             CMP      R6,#+64
   \       0x26   0xDA09             BGE.N    ??SendRFCmd_1
    578          	{
    579          		SendPktCh( nCh, (U8 *)&stPkt, (U8)sizeof( RFMPktHdr ) + RFPktDataLen );
                 		                ^
Warning[Pe167]: argument of type "U8 *" is incompatible with parameter of type
          "char const *"
   \       0x28   0x2240             MOVS     R2,#+64
   \       0x2A   0x4669             MOV      R1,SP
   \       0x2C   0x0030             MOVS     R0,R6
   \       0x2E   0x.... 0x....      BL       SendPktCh
    580          
    581          		HAL_Delay(3);	//	Tx Delay
   \       0x32   0x2003             MOVS     R0,#+3
   \       0x34   0x.... 0x....      BL       HAL_Delay
    582          	}
   \       0x38   0x1C76             ADDS     R6,R6,#+1
   \       0x3A   0xE7F3             B.N      ??SendRFCmd_0
    583          	//========================================================================
    584          }
   \                     ??SendRFCmd_1: (+1)
   \       0x3C   0xB010             ADD      SP,SP,#+64
   \       0x3E   0xBD70             POP      {R4-R6,PC}
    585          
    586          //==========================================================================

   \                                 In section .text, align 2, keep-with-next
    587          void SendRFCmdReset( void )
    588          //==========================================================================
    589          {
   \                     SendRFCmdReset: (+1)
   \        0x0   0xB510             PUSH     {R4,LR}
   \        0x2   0xB090             SUB      SP,SP,#+64
    590          	printf( "%s(%d)\n", __func__, __LINE__ );
   \        0x4   0xF240 0x224E      MOVW     R2,#+590
   \        0x8   0x.... 0x....      LDR.W    R1,??DataTable31_6
   \        0xC   0x.... 0x....      LDR.W    R0,??DataTable29_3
   \       0x10   0x.... 0x....      BL       printf
    591          
    592          	SendRFCmd( "reset", 190 );
   \       0x14   0x.... 0x....      LDR.W    R4,??DataTable31_7
   \       0x18   0x21BE             MOVS     R1,#+190
   \       0x1A   0x0020             MOVS     R0,R4
   \       0x1C   0x.... 0x....      BL       SendRFCmd
    593          
    594          	//========================================================================
    595          	//	Reset시 Upgrade채널도 reset
    596          	RFMPkt			stPkt;
    597          	_MakeRFCmd( &stPkt, "reset", 190 );
   \       0x20   0x22BE             MOVS     R2,#+190
   \       0x22   0x0021             MOVS     R1,R4
   \       0x24   0x4668             MOV      R0,SP
   \       0x26   0x.... 0x....      BL       _MakeRFCmd
    598          	SendPktCh( ChUpgrDst, (U8 *)&stPkt, (U8)sizeof( RFMPktHdr ) + RFPktDataLen );
                 	                      ^
Warning[Pe167]: argument of type "U8 *" is incompatible with parameter of type
          "char const *"
   \       0x2A   0x2240             MOVS     R2,#+64
   \       0x2C   0x4669             MOV      R1,SP
   \       0x2E   0x2003             MOVS     R0,#+3
   \       0x30   0x.... 0x....      BL       SendPktCh
    599          	//========================================================================
    600          }
   \       0x34   0xB010             ADD      SP,SP,#+64
   \       0x36   0xBD10             POP      {R4,PC}
    601          
    602          //==========================================================================

   \                                 In section .text, align 2, keep-with-next
    603          void SendRFCmdCar( int nCar )
    604          //==========================================================================
    605          {
   \                     SendRFCmdCar: (+1)
   \        0x0   0xB518             PUSH     {R3,R4,LR}
   \        0x2   0xB099             SUB      SP,SP,#+100
   \        0x4   0x0004             MOVS     R4,R0
    606          	printf( "%s(%d)\n", __func__, __LINE__ );
   \        0x6   0xF240 0x225E      MOVW     R2,#+606
   \        0xA   0x.... 0x....      LDR.W    R1,??DataTable31_8
   \        0xE   0x.... 0x....      LDR.W    R0,??DataTable29_3
   \       0x12   0x.... 0x....      BL       printf
    607          
    608          	char sBuf[100];
    609          	sprintf(sBuf, "car %d", nCar );
   \       0x16   0x0022             MOVS     R2,R4
   \       0x18   0x.... 0x....      LDR.W    R1,??DataTable31_9
   \       0x1C   0x4668             MOV      R0,SP
   \       0x1E   0x.... 0x....      BL       sprintf
    610          
    611          	SendRFCmd( sBuf, 190 );
   \       0x22   0x21BE             MOVS     R1,#+190
   \       0x24   0x4668             MOV      R0,SP
   \       0x26   0x.... 0x....      BL       SendRFCmd
    612          }
   \       0x2A   0xB01A             ADD      SP,SP,#+104
   \       0x2C   0xBD10             POP      {R4,PC}
    613          
    614          //==========================================================================

   \                                 In section .text, align 2, keep-with-next
    615          void SendRFCmdTS( int nIdx )
    616          //==========================================================================
    617          {
   \                     SendRFCmdTS: (+1)
   \        0x0   0xB518             PUSH     {R3,R4,LR}
   \        0x2   0xB099             SUB      SP,SP,#+100
   \        0x4   0x0004             MOVS     R4,R0
    618          	printf( "%s(%d)\n", __func__, __LINE__ );
   \        0x6   0xF240 0x226A      MOVW     R2,#+618
   \        0xA   0x.... 0x....      LDR.W    R1,??DataTable31_10
   \        0xE   0x.... 0x....      LDR.W    R0,??DataTable29_3
   \       0x12   0x.... 0x....      BL       printf
    619          
    620          	char sBuf[100];
    621          	sprintf(sBuf, "ts %d", nIdx );
   \       0x16   0x0022             MOVS     R2,R4
   \       0x18   0x.... 0x....      LDR.W    R1,??DataTable31_11
   \       0x1C   0x4668             MOV      R0,SP
   \       0x1E   0x.... 0x....      BL       sprintf
    622          
    623          	SendRFCmd( sBuf, 190 );
   \       0x22   0x21BE             MOVS     R1,#+190
   \       0x24   0x4668             MOV      R0,SP
   \       0x26   0x.... 0x....      BL       SendRFCmd
    624          }
   \       0x2A   0xB01A             ADD      SP,SP,#+104
   \       0x2C   0xBD10             POP      {R4,PC}
    625          
    626          //==========================================================================

   \                                 In section .text, align 2, keep-with-next
    627          void SendRFCmdRFMode( int nMode )
    628          //==========================================================================
    629          {
   \                     SendRFCmdRFMode: (+1)
   \        0x0   0xB518             PUSH     {R3,R4,LR}
   \        0x2   0xB099             SUB      SP,SP,#+100
   \        0x4   0x0004             MOVS     R4,R0
    630          	printf( "%s(%d)\n", __func__, __LINE__ );
   \        0x6   0xF240 0x2276      MOVW     R2,#+630
   \        0xA   0x.... 0x....      LDR.W    R1,??DataTable31_12
   \        0xE   0x.... 0x....      LDR.W    R0,??DataTable29_3
   \       0x12   0x.... 0x....      BL       printf
    631          
    632          	char sBuf[100];
    633          	sprintf(sBuf, "rfmod %d", nMode );
   \       0x16   0x0022             MOVS     R2,R4
   \       0x18   0x.... 0x....      LDR.W    R1,??DataTable31_13
   \       0x1C   0x4668             MOV      R0,SP
   \       0x1E   0x.... 0x....      BL       sprintf
    634          
    635          	SendRFCmd( sBuf, 190 );
   \       0x22   0x21BE             MOVS     R1,#+190
   \       0x24   0x4668             MOV      R0,SP
   \       0x26   0x.... 0x....      BL       SendRFCmd
    636          }
   \       0x2A   0xB01A             ADD      SP,SP,#+104
   \       0x2C   0xBD10             POP      {R4,PC}
    637          
    638          //==========================================================================

   \                                 In section .text, align 2, keep-with-next
    639          void SendRFCmdDFUMode( void )
    640          //==========================================================================
    641          {
   \                     SendRFCmdDFUMode: (+1)
   \        0x0   0xB580             PUSH     {R7,LR}
    642          	printf( "%s(%d)\n", __func__, __LINE__ );
   \        0x2   0xF240 0x2282      MOVW     R2,#+642
   \        0x6   0x.... 0x....      LDR.W    R1,??DataTable31_14
   \        0xA   0x.... 0x....      LDR.W    R0,??DataTable29_3
   \        0xE   0x.... 0x....      BL       printf
    643          	//==========================================================================
    644          	SendRFCmd( "stboot", 247 );	//	DFU모드의 경우 아주 근접(RSSI-247)하지 않으면 동작하지 않도록 한다!!!
   \       0x12   0x21F7             MOVS     R1,#+247
   \       0x14   0x.... 0x....      LDR.W    R0,??DataTable31_15
   \       0x18   0x.... 0x....      BL       SendRFCmd
    645          	//==========================================================================
    646          }
   \       0x1C   0xBD01             POP      {R0,PC}
    647          
    648          //==========================================================================

   \                                 In section .text, align 2, keep-with-next
    649          void SendRFCmdUpgrade( int bRetry )
    650          //==========================================================================
    651          {
   \                     SendRFCmdUpgrade: (+1)
   \        0x0   0xB510             PUSH     {R4,LR}
   \        0x2   0x0004             MOVS     R4,R0
    652          	//==========================================================================
    653          	//	송신기에서 Upgrade 명령 전송.
    654          	//==========================================================================
    655          
    656          	printf( "%s(%d)\n", __func__, __LINE__ );
   \        0x4   0xF44F 0x7224      MOV      R2,#+656
   \        0x8   0x.... 0x....      LDR.W    R1,??DataTable31_16
   \        0xC   0x.... 0x....      LDR.W    R0,??DataTable29_3
   \       0x10   0x.... 0x....      BL       printf
    657          	//==========================================================================
    658          	//	Upgrade Start Command
    659          
    660          	if ( bRetry )
   \       0x14   0x2C00             CMP      R4,#+0
   \       0x16   0xD006             BEQ.N    ??SendRFCmdUpgrade_0
    661          	{
    662          		//	Upgrade 채널로 전송
    663          		//	Upgrade Mode로 변경.
    664          		SendRFCmdCh( ChUpgrDst, "upgrade 1", 200 );	//	DFU모드의 경우 근접(RSSI-200)하지 않으면 동작하지 않도록 한다!!!
   \       0x18   0x22C8             MOVS     R2,#+200
   \       0x1A   0x.... 0x....      LDR.W    R1,??DataTable31_17
   \       0x1E   0x2003             MOVS     R0,#+3
   \       0x20   0x.... 0x....      BL       SendRFCmdCh
   \       0x24   0xE004             B.N      ??SendRFCmdUpgrade_1
    665          	}
    666          	else
    667          	{
    668          		//	Upgrade Mode로 변경.
    669          		SendRFCmd( "upgrade 1", 200 );	//	DFU모드의 경우 근접(RSSI-200)하지 않으면 동작하지 않도록 한다!!!
   \                     ??SendRFCmdUpgrade_0: (+1)
   \       0x26   0x21C8             MOVS     R1,#+200
   \       0x28   0x.... 0x....      LDR.W    R0,??DataTable31_17
   \       0x2C   0x.... 0x....      BL       SendRFCmd
    670          	}
    671          	//==========================================================================
    672          
    673          	SetUpgrReTry( bRetry );			//	Retry 설정.
                 	^
Warning[Pe223]: function "SetUpgrReTry" declared implicitly
   \                     ??SendRFCmdUpgrade_1: (+1)
   \       0x30   0x0020             MOVS     R0,R4
   \       0x32   0x.... 0x....      BL       SetUpgrReTry
    674          
    675          	HAL_Delay( 500 );	//	sleep 200 msec
   \       0x36   0xF44F 0x70FA      MOV      R0,#+500
   \       0x3A   0x.... 0x....      BL       HAL_Delay
    676          
    677          	//========================================================================
    678          	//	Upgrade Image 전송.
    679          	UpgrSendImageApp();
                 	^
Warning[Pe223]: function "UpgrSendImageApp" declared implicitly
   \       0x3E   0x.... 0x....      BL       UpgrSendImageApp
    680          	//========================================================================
    681          
    682          	//==========================================================================
    683          	//	Upgrade End Command
    684          //DEL	SendRFCmd( "upgrade 0", 200 );	//	DFU모드의 경우 근접(RSSI-200)하지 않으면 동작하지 않도록 한다!!!
    685          	//==========================================================================
    686          }
   \       0x42   0xBD10             POP      {R4,PC}
    687          
    688          //==========================================================================

   \                                 In section .text, align 2, keep-with-next
    689          void	SendUpgrData		( uint32_t nAddrTarget, int nPktTot, int nPktIdx, uint8_t *sBuf, int nSize )	//	Send Upgrade Data
    690          //==========================================================================
    691          {
   \                     SendUpgrData: (+1)
   \        0x0   0xE92D 0x4FF0      PUSH     {R4-R11,LR}
   \        0x4   0xB091             SUB      SP,SP,#+68
   \        0x6   0x0004             MOVS     R4,R0
   \        0x8   0x000D             MOVS     R5,R1
   \        0xA   0x0016             MOVS     R6,R2
   \        0xC   0x001F             MOVS     R7,R3
   \        0xE   0xF8DD 0x8068      LDR      R8,[SP, #+104]
    692          //	printf( "%s(%d)\n", __func__, __LINE__ );
    693          
    694          	RFMPkt			stPkt;
    695          	memset( &stPkt, 0, sizeof( stPkt ) );
   \       0x12   0xF05F 0x0940      MOVS     R9,#+64
   \       0x16   0xF05F 0x0A00      MOVS     R10,#+0
   \       0x1A   0xF10D 0x0B04      ADD      R11,SP,#+4
   \       0x1E   0x4652             MOV      R2,R10
   \       0x20   0x4649             MOV      R1,R9
   \       0x22   0x4658             MOV      R0,R11
   \       0x24   0x.... 0x....      BL       __aeabi_memset
    696          
    697          	//========================================================================
    698          	//	Packet Header
    699          	_MakePktHdr( &stPkt, GetDevID(), 0xFF, RFPktDataLen, PktUpgr );
   \       0x28   0x.... 0x....      BL       GetDevID
   \       0x2C   0x2140             MOVS     R1,#+64
   \       0x2E   0x9100             STR      R1,[SP, #+0]
   \       0x30   0x233C             MOVS     R3,#+60
   \       0x32   0x22FF             MOVS     R2,#+255
   \       0x34   0x0001             MOVS     R1,R0
   \       0x36   0xA801             ADD      R0,SP,#+4
   \       0x38   0x.... 0x....      BL       _MakePktHdr
    700          
    701          	//========================================================================
    702          	//	Packet Body
    703          	RFMPktUpgr	*pUpgr = (RFMPktUpgr *)&stPkt.dat.upgr;
   \       0x3C   0xF10D 0x0B08      ADD      R11,SP,#+8
    704          
    705          	pUpgr->baseAddr		=	nAddrTarget;
   \       0x40   0xF8CB 0x4000      STR      R4,[R11, #+0]
    706          	pUpgr->totPkt		=	nPktTot;
   \       0x44   0xF8AB 0x5004      STRH     R5,[R11, #+4]
    707          	pUpgr->idxPkt		=	nPktIdx;
   \       0x48   0xF8AB 0x6006      STRH     R6,[R11, #+6]
    708          	pUpgr->nSize		=	nSize;
   \       0x4C   0xF88B 0x8008      STRB     R8,[R11, #+8]
    709          
    710          	if( GetUpgrReTry() ) pUpgr->bFlag	|=	PktUpgrFlagRetry;	//	Retry Flag
                 	    ^
Warning[Pe223]: function "GetUpgrReTry" declared implicitly
   \       0x50   0x.... 0x....      BL       GetUpgrReTry
   \       0x54   0x2800             CMP      R0,#+0
   \       0x56   0xD005             BEQ.N    ??SendUpgrData_0
   \       0x58   0xF89B 0x0009      LDRB     R0,[R11, #+9]
   \       0x5C   0xF050 0x0001      ORRS     R0,R0,#0x1
   \       0x60   0xF88B 0x0009      STRB     R0,[R11, #+9]
    711          
    712          	memcpy( pUpgr->data, sBuf, nSize );
   \                     ??SendUpgrData_0: (+1)
   \       0x64   0xF8CD 0x8000      STR      R8,[SP, #+0]
   \       0x68   0x46B9             MOV      R9,R7
   \       0x6A   0xF11B 0x0A0A      ADDS     R10,R11,#+10
   \       0x6E   0x9A00             LDR      R2,[SP, #+0]
   \       0x70   0x4649             MOV      R1,R9
   \       0x72   0x4650             MOV      R0,R10
   \       0x74   0x.... 0x....      BL       __aeabi_memcpy
    713          
    714          	//========================================================================
    715          	//	Send RF
    716          	SendPktCh( ChUpgrDst, (U8 *)&stPkt, (U8)sizeof( RFMPktHdr ) + RFPktDataLen );
                 	                      ^
Warning[Pe167]: argument of type "U8 *" is incompatible with parameter of type
          "char const *"
   \       0x78   0x2240             MOVS     R2,#+64
   \       0x7A   0xA901             ADD      R1,SP,#+4
   \       0x7C   0x2003             MOVS     R0,#+3
   \       0x7E   0x.... 0x....      BL       SendPktCh
    717          
    718          	//========================================================================
    719          }
   \       0x82   0xB011             ADD      SP,SP,#+68
   \       0x84   0xE8BD 0x8FF0      POP      {R4-R11,PC}
    720          
    721          //==========================================================================

   \                                 In section .text, align 2, keep-with-next
    722          void	SendUpgrStat		( int nUpgrResult )	//	Send Upgrade Data
    723          //==========================================================================
    724          {
   \                     SendUpgrStat: (+1)
   \        0x0   0xB5F0             PUSH     {R4-R7,LR}
   \        0x2   0xB091             SUB      SP,SP,#+68
   \        0x4   0x0004             MOVS     R4,R0
    725          	printf( "%s(%d) - %d\n", __func__, __LINE__, nUpgrResult );
   \        0x6   0x0023             MOVS     R3,R4
   \        0x8   0xF240 0x22D5      MOVW     R2,#+725
   \        0xC   0x.... 0x....      LDR.W    R1,??DataTable31_18
   \       0x10   0x.... 0x....      LDR.W    R0,??DataTable31_19
   \       0x14   0x.... 0x....      BL       printf
    726          
    727          	RFMPkt			stPkt;
    728          	memset( &stPkt, 0, sizeof( stPkt ) );
   \       0x18   0x2540             MOVS     R5,#+64
   \       0x1A   0x2600             MOVS     R6,#+0
   \       0x1C   0xAF01             ADD      R7,SP,#+4
   \       0x1E   0x0032             MOVS     R2,R6
   \       0x20   0x0029             MOVS     R1,R5
   \       0x22   0x0038             MOVS     R0,R7
   \       0x24   0x.... 0x....      BL       __aeabi_memset
    729          
    730          	//========================================================================
    731          	//	Packet Header
    732          	_MakePktHdr( &stPkt, GetDevID(), 0xFF, RFPktDataLen, PktUpgrStat );
   \       0x28   0x.... 0x....      BL       GetDevID
   \       0x2C   0x0001             MOVS     R1,R0
   \       0x2E   0x2041             MOVS     R0,#+65
   \       0x30   0x9000             STR      R0,[SP, #+0]
   \       0x32   0x233C             MOVS     R3,#+60
   \       0x34   0x22FF             MOVS     R2,#+255
   \       0x36   0xA801             ADD      R0,SP,#+4
   \       0x38   0x.... 0x....      BL       _MakePktHdr
    733          
    734          	//========================================================================
    735          	//	Packet Body
    736          	RFMPktUpgrStat	*pUpgrStat = (RFMPktUpgrStat *)&stPkt.dat.upgrStat;
   \       0x3C   0xAF02             ADD      R7,SP,#+8
    737          
    738          	pUpgrStat->nResult		=	nUpgrResult;
   \       0x3E   0x703C             STRB     R4,[R7, #+0]
    739          	pUpgrStat->nTrainSet	=	g_idxTrainSet;
   \       0x40   0x.... 0x....      LDR.W    R0,??DataTable31_20
   \       0x44   0x6800             LDR      R0,[R0, #+0]
   \       0x46   0x7138             STRB     R0,[R7, #+4]
    740          	pUpgrStat->nCarNo 		=	g_nCarNo;
   \       0x48   0x.... 0x....      LDR.W    R0,??DataTable31_21
   \       0x4C   0x6800             LDR      R0,[R0, #+0]
   \       0x4E   0x7178             STRB     R0,[R7, #+5]
    741          
    742          	//========================================================================
    743          	//	Send RF
    744          #if defined( USE_CH_ISO_DEV )
    745          
    746          	//	송신기#1
    747          	SendPktCh( ChTx_1, (U8 *)&stPkt, (U8)sizeof( RFMPktHdr ) + RFPktDataLen );
                 	                   ^
Warning[Pe167]: argument of type "U8 *" is incompatible with parameter of type
          "char const *"
   \       0x50   0x2240             MOVS     R2,#+64
   \       0x52   0xA901             ADD      R1,SP,#+4
   \       0x54   0x.... 0x....      LDR.W    R0,??DataTable31
   \       0x58   0x6800             LDR      R0,[R0, #+0]
   \       0x5A   0x.... 0x....      BL       SendPktCh
    748          
    749          	HAL_Delay(3);	//	재전송 전 Delay
   \       0x5E   0x2003             MOVS     R0,#+3
   \       0x60   0x.... 0x....      BL       HAL_Delay
    750          
    751          	//	송신기#2
    752          	SendPktCh( ChTx_2, (U8 *)&stPkt, (U8)sizeof( RFMPktHdr ) + RFPktDataLen );
                 	                   ^
Warning[Pe167]: argument of type "U8 *" is incompatible with parameter of type
          "char const *"
   \       0x64   0x2240             MOVS     R2,#+64
   \       0x66   0xA901             ADD      R1,SP,#+4
   \       0x68   0x.... 0x....      LDR.W    R0,??DataTable31_22
   \       0x6C   0x6800             LDR      R0,[R0, #+0]
   \       0x6E   0x.... 0x....      BL       SendPktCh
    753          
    754          #else
    755          	int nCh;
    756          	nCh = ChTS1_1 + g_idxTrainSet * 2 + ((g_nCarNo) % 2);	// 현재 호차 채널
    757          	SendPktCh( nCh, (U8 *)&stPkt, (U8)sizeof( RFMPktHdr ) + RFPktDataLen );
    758          
    759          	HAL_Delay(5);	//	재전송 전 Delay
    760          
    761          	nCh = ChTS1_1 + g_idxTrainSet * 2 + ((g_nCarNo+1) % 2);	// 현재 호차 채널
    762          	SendPktCh( nCh, (U8 *)&stPkt, (U8)sizeof( RFMPktHdr ) + RFPktDataLen );
    763          #endif
    764          
    765          	//========================================================================
    766          }
   \       0x72   0xB011             ADD      SP,SP,#+68
   \       0x74   0xBDF0             POP      {R4-R7,PC}
    767          
    768          //==========================================================================
    769          //		Process Packet
    770          //==========================================================================
    771          
    772          
    773          //========================================================================

   \                                 In section .text, align 2, keep-with-next
    774          int	ProcPktStatReq		( const RFMPkt *pRFPkt )
    775          //========================================================================
    776          {
   \                     ProcPktStatReq: (+1)
   \        0x0   0xE92D 0x41F0      PUSH     {R4-R8,LR}
   \        0x4   0x0004             MOVS     R4,R0
    777          	if ( GetDbg() )		printf( "%s(%d)\n", __func__, __LINE__ );
                 	     ^
Warning[Pe223]: function "GetDbg" declared implicitly
   \        0x6   0x.... 0x....      BL       GetDbg
   \        0xA   0x2800             CMP      R0,#+0
   \        0xC   0xD007             BEQ.N    ??ProcPktStatReq_0
   \        0xE   0xF240 0x3209      MOVW     R2,#+777
   \       0x12   0x.... 0x....      LDR.W    R1,??DataTable31_23
   \       0x16   0x.... 0x....      LDR.W    R0,??DataTable29_3
   \       0x1A   0x.... 0x....      BL       printf
    778          
    779          	const RFMPktStatReq *pStatReq = &pRFPkt->dat.statReq;
   \                     ??ProcPktStatReq_0: (+1)
   \       0x1E   0x1D25             ADDS     R5,R4,#+4
    780          
    781          	//	수신기의 경우 송신기 상태정보 갱신.
    782          	//		-> 상태정보 요청한 송신기의 상태정보를 갱신한다.
    783          	if ( GetDevID() == DevRF900M )
   \       0x20   0x.... 0x....      BL       GetDevID
   \       0x24   0x2801             CMP      R0,#+1
   \       0x26   0xD120             BNE.N    ??ProcPktStatReq_1
    784          	{
    785          		int idx = pStatReq->nCarNo;
   \       0x28   0x796E             LDRB     R6,[R5, #+5]
    786          
    787          		//========================================================================
    788          		//	장치 응답 Flag 설정.
    789          		SetStat( idx );		//	상태정보 설정.
                 		^
Warning[Pe223]: function "SetStat" declared implicitly
   \       0x2A   0x0030             MOVS     R0,R6
   \       0x2C   0x.... 0x....      BL       SetStat
    790          
    791          		//========================================================================
    792          		//	RSSI 갱신
    793          		g_devStat[idx].stat.nChRx 	= pStatReq->nSrcCh;
   \       0x30   0x2725             MOVS     R7,#+37
   \       0x32   0x.... 0x....      LDR.W    R8,??DataTable31_24
   \       0x36   0x7828             LDRB     R0,[R5, #+0]
   \       0x38   0xFB07 0xF106      MUL      R1,R7,R6
   \       0x3C   0x4441             ADD      R1,R8,R1
   \       0x3E   0x7288             STRB     R0,[R1, #+10]
    794          		g_devStat[idx].stampRx 		= HAL_GetTick();
   \       0x40   0x.... 0x....      BL       HAL_GetTick
   \       0x44   0xFB07 0xF106      MUL      R1,R7,R6
   \       0x48   0x4441             ADD      R1,R8,R1
   \       0x4A   0xF8C1 0x0019      STR      R0,[R1, #+25]
    795          		g_devStat[idx].nRSSI 		= g_nRSSI;
   \       0x4E   0xFB07 0xF006      MUL      R0,R7,R6
   \       0x52   0x4440             ADD      R0,R8,R0
   \       0x54   0x.... 0x....      LDR.W    R1,??DataTable31_25
   \       0x58   0x6809             LDR      R1,[R1, #+0]
   \       0x5A   0xF8C0 0x101D      STR      R1,[R0, #+29]
    796          #if defined(USE_ROUTE_NEAREST_RFM)	//	수신기 -> 송신기 중계 연결. ( 가장가까운 수신기에서 송신기로 중계 )
    797          		g_devStat[idx].nNearCh 		= pStatReq->nNearCh;	//	송신기 입장에서 가까운 수신기(RFM)채널.
   \       0x5E   0x437E             MULS     R6,R7,R6
   \       0x60   0xEB08 0x0006      ADD      R0,R8,R6
   \       0x64   0x7A29             LDRB     R1,[R5, #+8]
   \       0x66   0xF8C0 0x1021      STR      R1,[R0, #+33]
    798          #endif	//	defined(USE_ROUTE_NEAREST_RFM)
    799          	}
    800          
    801          	//	Source Channel로 상태정보 송신.
    802          	SendStat( pStatReq->nSrcCh );
   \                     ??ProcPktStatReq_1: (+1)
   \       0x6A   0x7828             LDRB     R0,[R5, #+0]
   \       0x6C   0x.... 0x....      BL       SendStat
    803          }
                 ^
Warning[Pe940]: missing return statement at end of non-void function
          "ProcPktStatReq"
   \       0x70   0xE8BD 0x81F0      POP      {R4-R8,PC}
    804          
    805          
    806          //========================================================================

   \                                 In section .text, align 2, keep-with-next
    807          int	ProcPktStat			( const RFMPkt *pRFPkt )
    808          //========================================================================
    809          {
   \                     ProcPktStat: (+1)
   \        0x0   0xB570             PUSH     {R4-R6,LR}
   \        0x2   0x0004             MOVS     R4,R0
    810          	if ( GetDbg() )		printf( "%s(%d)\n", __func__, __LINE__ );
                 	     ^
Warning[Pe223]: function "GetDbg" declared implicitly
   \        0x4   0x.... 0x....      BL       GetDbg
   \        0x8   0x2800             CMP      R0,#+0
   \        0xA   0xD007             BEQ.N    ??ProcPktStat_0
   \        0xC   0xF240 0x322A      MOVW     R2,#+810
   \       0x10   0x.... 0x....      LDR.W    R1,??DataTable31_26
   \       0x14   0x.... 0x....      LDR.W    R0,??DataTable29_3
   \       0x18   0x.... 0x....      BL       printf
    811          
    812          	int nRspID = pRFPkt->dat.stat.nCarNo;
   \                     ??ProcPktStat_0: (+1)
   \       0x1C   0x7C65             LDRB     R5,[R4, #+17]
    813          	const RFMPktStat *pStat = &pRFPkt->dat.stat;
   \       0x1E   0x1D26             ADDS     R6,R4,#+4
    814          	//	상태정보 수신.
    815          //		printf ( "[Stat] Car:%d\n", pRFPkt->dat.stat.nCarNo );
    816          
    817          	if( nRspID < MaxCarNo	//	MaxCarNo(13)
    818          		&& ( pStat->nDevID == DevRF900M || pStat->nDevID == DevRF900T )
    819          		&& pStat->nMagicNum == 0xAA55
    820          		&& g_bSetRspIDManual == 0		//	수동설정모드가 아닌경우.
    821          		)
   \       0x20   0x2D0D             CMP      R5,#+13
   \       0x22   0xDA15             BGE.N    ??ProcPktStat_1
   \       0x24   0x7870             LDRB     R0,[R6, #+1]
   \       0x26   0x2801             CMP      R0,#+1
   \       0x28   0xD002             BEQ.N    ??ProcPktStat_2
   \       0x2A   0x7870             LDRB     R0,[R6, #+1]
   \       0x2C   0x2802             CMP      R0,#+2
   \       0x2E   0xD10F             BNE.N    ??ProcPktStat_1
   \                     ??ProcPktStat_2: (+1)
   \       0x30   0x8870             LDRH     R0,[R6, #+2]
   \       0x32   0xF64A 0x2155      MOVW     R1,#+43605
   \       0x36   0x4288             CMP      R0,R1
   \       0x38   0xD10A             BNE.N    ??ProcPktStat_1
   \       0x3A   0x.... 0x....      LDR.W    R0,??DataTable31_27
   \       0x3E   0x6800             LDR      R0,[R0, #+0]
   \       0x40   0x2800             CMP      R0,#+0
   \       0x42   0xD105             BNE.N    ??ProcPktStat_1
    822          	{
    823          		//	장치 응답 Flag 설정.
    824          		SetStat( nRspID );		//	상태정보 설정.
                 		^
Warning[Pe223]: function "SetStat" declared implicitly
   \       0x44   0x0028             MOVS     R0,R5
   \       0x46   0x.... 0x....      BL       SetStat
    825          
    826          		UpdateStat( pStat );	//	상태정보 Update. ( 버전정보 갱신 등 )
                 		^
Warning[Pe223]: function "UpdateStat" declared implicitly
   \       0x4A   0x0030             MOVS     R0,R6
   \       0x4C   0x.... 0x....      BL       UpdateStat
    827          	}
    828          
    829          	//========================================================================
    830          	//	송신기 조명상태에 따른 조명 제어.
    831          #if defined(USE_STAT_LIGHT)
    832          	if( pStat->nDevID == DevRF900T )
    833          	{
    834          		//	조명상태 저장 및 제어.
    835          		if( pStat->nDevFlag & DevFlagLight )
    836          		{
    837          			// 조명 On 명령 수신시.
    838          			g_nDevFlag |= DevFlagLight;
    839          			HAL_GPIO_WritePin ( LIGHT_ON_GPIO_Port, LIGHT_ON_Pin, GPIO_PIN_SET );
    840          		}
    841          		else
    842          		{
    843          			// 조명 Off
    844          			g_nDevFlag &= ~DevFlagLight;
    845          			HAL_GPIO_WritePin ( LIGHT_ON_GPIO_Port, LIGHT_ON_Pin, GPIO_PIN_RESET );
    846          		}
    847          	}
    848          #endif
    849          	//========================================================================
    850          }
                 ^
Warning[Pe940]: missing return statement at end of non-void function
          "ProcPktStat"
   \                     ??ProcPktStat_1: (+1)
   \       0x50   0xBD70             POP      {R4-R6,PC}
    851          
    852          
    853          //========================================================================

   \                                 In section .text, align 2, keep-with-next
    854          int	ProcPktRouteReq		( const RFMPkt *pRFPkt )
    855          //========================================================================
    856          {
   \                     ProcPktRouteReq: (+1)
   \        0x0   0xB570             PUSH     {R4-R6,LR}
   \        0x2   0x0004             MOVS     R4,R0
    857          	//	Source Channel로 Route 응답.
    858          	const RFMPktRoute *pRouteReq = &pRFPkt->dat.routeReq;
   \        0x4   0x1D25             ADDS     R5,R4,#+4
    859          
    860          	if ( GetDbg() )		printf( "%s(%d) - %d\n", __func__, __LINE__, pRouteReq->nSrcCh );
                 	     ^
Warning[Pe223]: function "GetDbg" declared implicitly
   \        0x6   0x.... 0x....      BL       GetDbg
   \        0xA   0x2800             CMP      R0,#+0
   \        0xC   0xD008             BEQ.N    ??ProcPktRouteReq_0
   \        0xE   0x782B             LDRB     R3,[R5, #+0]
   \       0x10   0xF44F 0x7257      MOV      R2,#+860
   \       0x14   0x.... 0x....      LDR.W    R1,??DataTable31_28
   \       0x18   0x.... 0x....      LDR.W    R0,??DataTable31_19
   \       0x1C   0x.... 0x....      BL       printf
    861          
    862          	if ( GetDevID() == DevRF900M )
   \                     ??ProcPktRouteReq_0: (+1)
   \       0x20   0x.... 0x....      BL       GetDevID
   \       0x24   0x2801             CMP      R0,#+1
   \       0x26   0xD114             BNE.N    ??ProcPktRouteReq_1
    863          	{
    864          		//	수신기의 경우 Route경로 설정.
    865          		int idx = pRouteReq->nCarNo;
                 		    ^
Warning[Pe177]: variable "idx" was declared but never referenced
   \       0x28   0x79AE             LDRB     R6,[R5, #+6]
    866          
    867          		if( pRouteReq->nSrcDev == DevRF900M )
   \       0x2A   0x7868             LDRB     R0,[R5, #+1]
   \       0x2C   0x2801             CMP      R0,#+1
   \       0x2E   0xD110             BNE.N    ??ProcPktRouteReq_1
    868          		{
    869          			//	1. 인접한 송신기로 등록.
    870          
    871          			//	2. 가까운 수신기에 Route정보 요청.
    872          
    873          			if ( pRouteReq->nSrcCh < GetChRx() )
   \       0x30   0x.... 0x....      BL       GetChRx
   \       0x34   0x7829             LDRB     R1,[R5, #+0]
   \       0x36   0x4281             CMP      R1,R0
   \       0x38   0xDA03             BGE.N    ??ProcPktRouteReq_2
    874          			{
    875          				//	1 -> 2 ...
    876          				SetChRFMDown( pRouteReq->nSrcCh );
   \       0x3A   0x7828             LDRB     R0,[R5, #+0]
   \       0x3C   0x.... 0x....      BL       SetChRFMDown
   \       0x40   0xE007             B.N      ??ProcPktRouteReq_1
    877          
    878          #if defined(USE_ROUTE_REQ_RFM)
    879          				//	수신기에서 요청의 경우 다음수신기로 요청하지 않음.
    880          #else
    881          				//	다음 수신기로 Route 요청.
    882          				SendRouteReq( GetChRx() + ChGap );
    883          #endif
    884          			}
    885          			else if ( pRouteReq->nSrcCh > GetChRx() )
   \                     ??ProcPktRouteReq_2: (+1)
   \       0x42   0x.... 0x....      BL       GetChRx
   \       0x46   0x7829             LDRB     R1,[R5, #+0]
   \       0x48   0x4288             CMP      R0,R1
   \       0x4A   0xDA02             BGE.N    ??ProcPktRouteReq_1
    886          			{
    887          				//	... 3 <- 4
    888          				SetChRFMUp( pRouteReq->nSrcCh );
   \       0x4C   0x7828             LDRB     R0,[R5, #+0]
   \       0x4E   0x.... 0x....      BL       SetChRFMUp
    889          
    890          #if defined(USE_ROUTE_REQ_RFM)
    891          				//	수신기에서 요청의 경우 다음수신기로 요청하지 않음.
    892          #else
    893          				//	다음 수신기로 Route 요청.
    894          				if( g_nCarNo != 1 )	//	1호차가 아닌경우
    895          					SendRouteReq( GetChRx() - ChGap );
    896          #endif
    897          			}
    898          		}
    899          #if defined(USE_ROUTE_REQ_RFM)
    900          				//	수신기에서 요청의 경우 다음수신기로 요청하지 않음.
    901          #else
    902          		else if( pRouteReq->nSrcDev == DevRF900T )
    903          		{
    904          			//	송신기에서 전송시  상위 / 하위 수신기 확인.
    905          			//	1 <- 2 -> 3 ...
    906          
    907          			//	다음 수신기로 Route 요청.
    908          			SendRouteReq( GetChRx() + ChGap );
    909          
    910          			if( g_nCarNo != 1 )	//	1호차가 아닌경우
    911          				SendRouteReq( GetChRx() - ChGap );
    912          		}
    913          #endif
    914          
    915          		//========================================================================
    916          		//	Route 정보 갱신
    917          	}
    918          
    919          	//	Resp Delay
    920          //	HAL_Delay( 3 );	//	Route 응답 Delay
    921          	SendRouteRsp( pRouteReq->nSrcCh );
   \                     ??ProcPktRouteReq_1: (+1)
   \       0x52   0x7828             LDRB     R0,[R5, #+0]
   \       0x54   0x.... 0x....      BL       SendRouteRsp
    922          }
                 ^
Warning[Pe940]: missing return statement at end of non-void function
          "ProcPktRouteReq"
   \       0x58   0xBD70             POP      {R4-R6,PC}
    923          
    924          
    925          //========================================================================

   \                                 In section .text, align 2, keep-with-next
    926          int	ProcPktRouteRsp		( const RFMPkt *pRFPkt )
    927          //========================================================================
    928          {
   \                     ProcPktRouteRsp: (+1)
   \        0x0   0xB570             PUSH     {R4-R6,LR}
   \        0x2   0x0004             MOVS     R4,R0
    929          	const RFMPktRoute *pRouteRsp = &pRFPkt->dat.routeRsp;
   \        0x4   0x1D25             ADDS     R5,R4,#+4
    930          
    931          	g_nStampRouteRsp = HAL_GetTick();		//	응답 시간 저장.
   \        0x6   0x.... 0x....      BL       HAL_GetTick
   \        0xA   0x.... 0x....      LDR.W    R1,??DataTable31_29
   \        0xE   0x6008             STR      R0,[R1, #+0]
    932          	g_nIdxRouteFindNext = 0;				//	Find Index 초기화.
   \       0x10   0x2000             MOVS     R0,#+0
   \       0x12   0x.... 0x....      LDR.W    R1,??DataTable31_30
   \       0x16   0x6008             STR      R0,[R1, #+0]
    933          
    934          	if ( GetDbg() )		printf( "%s(%d) - %d\n", __func__, __LINE__, pRouteRsp->nSrcCh );
                 	     ^
Warning[Pe223]: function "GetDbg" declared implicitly
   \       0x18   0x.... 0x....      BL       GetDbg
   \       0x1C   0x2800             CMP      R0,#+0
   \       0x1E   0xD008             BEQ.N    ??ProcPktRouteRsp_0
   \       0x20   0x782B             LDRB     R3,[R5, #+0]
   \       0x22   0xF240 0x32A6      MOVW     R2,#+934
   \       0x26   0x.... 0x....      LDR.W    R1,??DataTable31_31
   \       0x2A   0x.... 0x....      LDR.W    R0,??DataTable31_19
   \       0x2E   0x.... 0x....      BL       printf
    935          
    936          	if ( GetDevID() == DevRF900M )
   \                     ??ProcPktRouteRsp_0: (+1)
   \       0x32   0x.... 0x....      BL       GetDevID
   \       0x36   0x2801             CMP      R0,#+1
   \       0x38   0xD114             BNE.N    ??ProcPktRouteRsp_1
    937          	{
    938          		//	수신기의 경우 Route경로 설정.
    939          		int idx = pRouteRsp->nCarNo;
                 		    ^
Warning[Pe177]: variable "idx" was declared but never referenced
   \       0x3A   0x79AE             LDRB     R6,[R5, #+6]
    940          
    941          		if( pRouteRsp->nSrcDev == DevRF900M )
   \       0x3C   0x7868             LDRB     R0,[R5, #+1]
   \       0x3E   0x2801             CMP      R0,#+1
   \       0x40   0xD110             BNE.N    ??ProcPktRouteRsp_2
    942          		{
    943          			//	1. 인접한 송신기로 등록.
    944          
    945          			//	2. 가까운 수신기에 Route정보 요청.
    946          
    947          			if ( pRouteRsp->nSrcCh < GetChRx() )
   \       0x42   0x.... 0x....      BL       GetChRx
   \       0x46   0x7829             LDRB     R1,[R5, #+0]
   \       0x48   0x4281             CMP      R1,R0
   \       0x4A   0xDA03             BGE.N    ??ProcPktRouteRsp_3
    948          			{
    949          				//	1 -> 2 ...
    950          				SetChRFMDown( pRouteRsp->nSrcCh );
   \       0x4C   0x7828             LDRB     R0,[R5, #+0]
   \       0x4E   0x.... 0x....      BL       SetChRFMDown
   \       0x52   0xE007             B.N      ??ProcPktRouteRsp_2
    951          
    952          				//	다음 수신기로 Route 요청.
    953          			}
    954          			else if ( pRouteRsp->nSrcCh > GetChRx() )
   \                     ??ProcPktRouteRsp_3: (+1)
   \       0x54   0x.... 0x....      BL       GetChRx
   \       0x58   0x7829             LDRB     R1,[R5, #+0]
   \       0x5A   0x4288             CMP      R0,R1
   \       0x5C   0xDA02             BGE.N    ??ProcPktRouteRsp_2
    955          			{
    956          				//	... 3 <- 4
    957          				SetChRFMUp( pRouteRsp->nSrcCh );
   \       0x5E   0x7828             LDRB     R0,[R5, #+0]
   \       0x60   0x.... 0x....      BL       SetChRFMUp
    958          
    959          				//	다음 수신기로 Route 요청.
    960          			}
    961          		}
    962          
    963          		if( pRouteRsp->nSrcDev == DevRF900T )
    964          		{
    965          			//	송신기에서 전송시  상위 / 하위 수신기 확인.
    966          			//	1 <- 2 -> 3 ...
    967          
    968          			//	다음 수신기로 Route 요청.
    969          		}
    970          
    971          		//========================================================================
    972          		//	Route 정보 갱신
    973          	}
    974          }
                 ^
Warning[Pe940]: missing return statement at end of non-void function
          "ProcPktRouteRsp"
   \                     ??ProcPktRouteRsp_2: (+1)
   \                     ??ProcPktRouteRsp_1: (+1)
   \       0x64   0xBD70             POP      {R4-R6,PC}
    975          
    976          
    977          //========================================================================

   \                                 In section .text, align 2, keep-with-next
    978          int	ProcPktCtrlPaCall	( const RFMPkt *pRFPkt )
    979          //========================================================================
    980          {
   \                     ProcPktCtrlPaCall: (+1)
   \        0x0   0xB538             PUSH     {R3-R5,LR}
   \        0x2   0x0004             MOVS     R4,R0
    981          	if ( GetDbg() )		printf( "%s(%d)\n", __func__, __LINE__ );
                 	     ^
Warning[Pe223]: function "GetDbg" declared implicitly
   \        0x4   0x.... 0x....      BL       GetDbg
   \        0x8   0x2800             CMP      R0,#+0
   \        0xA   0xD006             BEQ.N    ??ProcPktCtrlPaCall_0
   \        0xC   0xF240 0x32D5      MOVW     R2,#+981
   \       0x10   0x.... 0x....      LDR.W    R1,??DataTable31_32
   \       0x14   0x....             LDR.N    R0,??DataTable29_3
   \       0x16   0x.... 0x....      BL       printf
    982          
    983          	//	방송/통화 시작 종료 명령.
    984          	const RFMPktCtrlPACall	*pCtrl = &pRFPkt->dat.pacall;
   \                     ??ProcPktCtrlPaCall_0: (+1)
   \       0x1A   0x1D25             ADDS     R5,R4,#+4
    985          
    986          	switch ( pCtrl->nStartStop )
   \       0x1C   0x7828             LDRB     R0,[R5, #+0]
   \       0x1E   0x2800             CMP      R0,#+0
   \       0x20   0xD009             BEQ.N    ??ProcPktCtrlPaCall_1
   \       0x22   0x2801             CMP      R0,#+1
   \       0x24   0xD116             BNE.N    ??ProcPktCtrlPaCall_2
    987          	{
    988          	case CtrlStart:
    989          		printf("[Start]");
   \                     ??ProcPktCtrlPaCall_3: (+1)
   \       0x26   0x.... 0x....      LDR.W    R0,??DataTable31_33
   \       0x2A   0x.... 0x....      BL       printf
    990          		SetRFMMode( RFMModeRx );
   \       0x2E   0x2002             MOVS     R0,#+2
   \       0x30   0x.... 0x....      BL       SetRFMMode
    991          		break;
   \       0x34   0xE016             B.N      ??ProcPktCtrlPaCall_4
    992          	case CtrlStop:
    993          		printf("[Stop]");
   \                     ??ProcPktCtrlPaCall_1: (+1)
   \       0x36   0x.... 0x....      LDR.W    R0,??DataTable31_34
   \       0x3A   0x.... 0x....      BL       printf
    994          		SetRFMMode( RFMModeNormal );
   \       0x3E   0x2000             MOVS     R0,#+0
   \       0x40   0x.... 0x....      BL       SetRFMMode
    995          		//  송신기 & 수신기 Spk Relay Off
    996          		HAL_GPIO_WritePin( AUDIO_ON_GPIO_Port, AUDIO_ON_Pin, GPIO_PIN_RESET );
   \       0x44   0x2200             MOVS     R2,#+0
   \       0x46   0xF44F 0x7180      MOV      R1,#+256
   \       0x4A   0x.... 0x....      LDR.W    R0,??DataTable31_35
   \       0x4E   0x.... 0x....      BL       HAL_GPIO_WritePin
    997          		break;
   \       0x52   0xE007             B.N      ??ProcPktCtrlPaCall_4
    998          	default:			printf("%s:Invalid\n", __func__);	return 0;
   \                     ??ProcPktCtrlPaCall_2: (+1)
   \       0x54   0x.... 0x....      LDR.W    R1,??DataTable31_32
   \       0x58   0x.... 0x....      LDR.W    R0,??DataTable31_36
   \       0x5C   0x.... 0x....      BL       printf
   \       0x60   0x2000             MOVS     R0,#+0
   \       0x62   0xE02F             B.N      ??ProcPktCtrlPaCall_5
    999          	}
   1000          
   1001          	switch ( pCtrl->nTypePACall )
   \                     ??ProcPktCtrlPaCall_4: (+1)
   \       0x64   0x7868             LDRB     R0,[R5, #+1]
   \       0x66   0x2801             CMP      R0,#+1
   \       0x68   0xD004             BEQ.N    ??ProcPktCtrlPaCall_6
   \       0x6A   0xD312             BCC.N    ??ProcPktCtrlPaCall_7
   \       0x6C   0x2803             CMP      R0,#+3
   \       0x6E   0xD00B             BEQ.N    ??ProcPktCtrlPaCall_8
   \       0x70   0xD305             BCC.N    ??ProcPktCtrlPaCall_9
   \       0x72   0xE00E             B.N      ??ProcPktCtrlPaCall_7
   1002          	{
   1003          	case CtrlPA:		printf("[PA]");						break;
   \                     ??ProcPktCtrlPaCall_6: (+1)
   \       0x74   0x.... 0x....      LDR.W    R0,??DataTable31_37
   \       0x78   0x.... 0x....      BL       printf
   \       0x7C   0xE011             B.N      ??ProcPktCtrlPaCall_10
   1004          	case CtrlCall:		printf("[Call]");					break;
   \                     ??ProcPktCtrlPaCall_9: (+1)
   \       0x7E   0x.... 0x....      LDR.W    R0,??DataTable31_38
   \       0x82   0x.... 0x....      BL       printf
   \       0x86   0xE00C             B.N      ??ProcPktCtrlPaCall_10
   1005          	case CtrlOccPa:		printf("[OccPa]");					break;
   \                     ??ProcPktCtrlPaCall_8: (+1)
   \       0x88   0x.... 0x....      LDR.W    R0,??DataTable31_39
   \       0x8C   0x.... 0x....      BL       printf
   \       0x90   0xE007             B.N      ??ProcPktCtrlPaCall_10
   1006          	default:			printf("%s:Invalid\n", __func__);	return 0;
   \                     ??ProcPktCtrlPaCall_7: (+1)
   \       0x92   0x.... 0x....      LDR.W    R1,??DataTable31_32
   \       0x96   0x.... 0x....      LDR.W    R0,??DataTable31_36
   \       0x9A   0x.... 0x....      BL       printf
   \       0x9E   0x2000             MOVS     R0,#+0
   \       0xA0   0xE010             B.N      ??ProcPktCtrlPaCall_5
   1007          	}
   1008          
   1009          	printf("\n");
   \                     ??ProcPktCtrlPaCall_10: (+1)
   \       0xA2   0x....             ADR.N    R0,??DataTable29
   \       0xA4   0x.... 0x....      BL       printf
   1010          
   1011          	if ( GetDevID() == DevRF900M )
   \       0xA8   0x.... 0x....      BL       GetDevID
   \       0xAC   0x2801             CMP      R0,#+1
   \       0xAE   0xD104             BNE.N    ??ProcPktCtrlPaCall_11
   1012          	{
   1013          		//	수신기
   1014          
   1015          		//	가까이 있는 송신기 설정. ( 수신기 -> 송신기 중계시 사용 )
   1016          		SetChPARFT( GetChNearRFT( 190 ) );	//	RSSI 190 이상인경우 : 수신기 -> 송신기 중계
                 		^
Warning[Pe223]: function "SetChPARFT" declared implicitly
   \       0xB0   0x20BE             MOVS     R0,#+190
   \       0xB2   0x.... 0x....      BL       GetChNearRFT
   \       0xB6   0x.... 0x....      BL       SetChPARFT
   1017          	}
   1018          
   1019          	g_nStampRxPkt = HAL_GetTick();		//	방송/통화 Stamp
   \                     ??ProcPktCtrlPaCall_11: (+1)
   \       0xBA   0x.... 0x....      BL       HAL_GetTick
   \       0xBE   0x.... 0x....      LDR.W    R1,??DataTable31_40
   \       0xC2   0x6008             STR      R0,[R1, #+0]
   1020          }
                 ^
Warning[Pe940]: missing return statement at end of non-void function
          "ProcPktCtrlPaCall"
   \                     ??ProcPktCtrlPaCall_5: (+1)
   \       0xC4   0xBD32             POP      {R1,R4,R5,PC}
   1021          
   1022          //========================================================================

   \                                 In section .text, align 2, keep-with-next
   1023          int	ProcPktPA			( const RFMPkt *pRFPkt )
   1024          //========================================================================
   1025          {
   \                     ProcPktPA: (+1)
   \        0x0   0xB570             PUSH     {R4-R6,LR}
   \        0x2   0x0004             MOVS     R4,R0
   1026          	if ( GetDbg() )		printf( "%s(%d)\n", __func__, __LINE__ );
                 	     ^
Warning[Pe223]: function "GetDbg" declared implicitly
   \        0x4   0x.... 0x....      BL       GetDbg
   \        0x8   0x2800             CMP      R0,#+0
   \        0xA   0xD006             BEQ.N    ??ProcPktPA_0
   \        0xC   0xF240 0x4202      MOVW     R2,#+1026
   \       0x10   0x.... 0x....      LDR.W    R1,??DataTable31_41
   \       0x14   0x....             LDR.N    R0,??DataTable29_3
   \       0x16   0x.... 0x....      BL       printf
   1027          
   1028          	//========================================================================
   1029          	//  방송 ( PTT )
   1030          	if ( GetDevID() == DevRF900M )
   \                     ??ProcPktPA_0: (+1)
   \       0x1A   0x.... 0x....      BL       GetDevID
   \       0x1E   0x2801             CMP      R0,#+1
   \       0x20   0xD11B             BNE.N    ??ProcPktPA_1
   1031          	{
   1032          		//  수신기
   1033          		uint16_t	 *pAudioBuf = (uint16_t*)pRFPkt->dat.data;
   \       0x22   0x1D25             ADDS     R5,R4,#+4
   1034          
   1035          		//  방송 : 송신기 -> 수신기
   1036          		qBufPut( &g_qBufAudioRx, (uint8_t*)pAudioBuf, ( I2S_DMA_LOOP_SIZE * 2 ) );
   \       0x24   0x223C             MOVS     R2,#+60
   \       0x26   0x0029             MOVS     R1,R5
   \       0x28   0x.... 0x....      LDR.W    R0,??DataTable31_42
   \       0x2C   0x.... 0x....      BL       qBufPut
   1037          
   1038          		// 조명 On
   1039          		HAL_GPIO_WritePin ( LIGHT_ON_GPIO_Port, LIGHT_ON_Pin, GPIO_PIN_SET );
   \       0x30   0x.... 0x....      LDR.W    R6,??DataTable31_35
   \       0x34   0x2201             MOVS     R2,#+1
   \       0x36   0xF44F 0x7100      MOV      R1,#+512
   \       0x3A   0x0030             MOVS     R0,R6
   \       0x3C   0x.... 0x....      BL       HAL_GPIO_WritePin
   1040          
   1041          		SetRFMMode( RFMModeRx );
   \       0x40   0x2002             MOVS     R0,#+2
   \       0x42   0x.... 0x....      BL       SetRFMMode
   1042          
   1043          		//	Codec Speaker On
   1044          		RFM_Spk(1);
   \       0x46   0x2001             MOVS     R0,#+1
   \       0x48   0x.... 0x....      BL       RFM_Spk
   1045          		//  수신기 Spk Relay On
   1046          		HAL_GPIO_WritePin( AUDIO_ON_GPIO_Port, AUDIO_ON_Pin, GPIO_PIN_SET );
   \       0x4C   0x2201             MOVS     R2,#+1
   \       0x4E   0xF44F 0x7180      MOV      R1,#+256
   \       0x52   0x0030             MOVS     R0,R6
   \       0x54   0x.... 0x....      BL       HAL_GPIO_WritePin
   \       0x58   0xE013             B.N      ??ProcPktPA_2
   1047          	}
   1048          	else
   1049          	{
   1050          		//========================================================================
   1051          		uint16_t	 *pAudioBuf = (uint16_t*)pRFPkt->dat.data;
   \                     ??ProcPktPA_1: (+1)
   \       0x5A   0x1D25             ADDS     R5,R4,#+4
   1052          
   1053          #if defined(USE_RFT_ONLY_RX_SPK_ON)
   1054          		//  송신기 : 수신중인 경우 SPK ON
   1055          //			HAL_GPIO_WritePin( SPK_ON_GPIO_Port, SPK_ON_Pin, GPIO_PIN_SET );
   1056          		RFM_Spk(1);
   \       0x5C   0x2001             MOVS     R0,#+1
   \       0x5E   0x.... 0x....      BL       RFM_Spk
   1057          #endif
   1058          
   1059          		//  방송 : 송신기 -> 수신기
   1060          		qBufPut( &g_qBufAudioRx, (uint8_t*)pAudioBuf, ( I2S_DMA_LOOP_SIZE * 2 ) );
   \       0x62   0x223C             MOVS     R2,#+60
   \       0x64   0x0029             MOVS     R1,R5
   \       0x66   0x.... 0x....      LDR.W    R0,??DataTable31_42
   \       0x6A   0x.... 0x....      BL       qBufPut
   1061          		//========================================================================
   1062          
   1063          		//  송신기
   1064          		SetRFMMode( RFMModeRx );
   \       0x6E   0x2002             MOVS     R0,#+2
   \       0x70   0x.... 0x....      BL       SetRFMMode
   1065          
   1066          		//  Red LED On
   1067          		HAL_GPIO_WritePin ( LED_ON_B_GPIO_Port, LED_ON_B_Pin, GPIO_PIN_SET ); //  RED LED
   \       0x74   0x2201             MOVS     R2,#+1
   \       0x76   0xF44F 0x4180      MOV      R1,#+16384
   \       0x7A   0x.... 0x....      LDR.W    R0,??DataTable31_43
   \       0x7E   0x.... 0x....      BL       HAL_GPIO_WritePin
   1068          	}
   1069          	g_nStampRxPkt = HAL_GetTick();		//	방송/통화 Stamp
   \                     ??ProcPktPA_2: (+1)
   \       0x82   0x.... 0x....      BL       HAL_GetTick
   \       0x86   0x.... 0x....      LDR.W    R1,??DataTable31_40
   \       0x8A   0x6008             STR      R0,[R1, #+0]
   1070          }
                 ^
Warning[Pe940]: missing return statement at end of non-void function
          "ProcPktPA"
   \       0x8C   0xBD70             POP      {R4-R6,PC}
   1071          
   1072          //========================================================================

   \                                 In section .text, align 2, keep-with-next
   1073          int	ProcPktCall			( const RFMPkt *pRFPkt )
   1074          //========================================================================
   1075          {
   \                     ProcPktCall: (+1)
   \        0x0   0xB538             PUSH     {R3-R5,LR}
   \        0x2   0x0004             MOVS     R4,R0
   1076          	if ( GetDbg() )		printf( "%s(%d)\n", __func__, __LINE__ );
                 	     ^
Warning[Pe223]: function "GetDbg" declared implicitly
   \        0x4   0x.... 0x....      BL       GetDbg
   \        0x8   0x2800             CMP      R0,#+0
   \        0xA   0xD006             BEQ.N    ??ProcPktCall_0
   \        0xC   0xF240 0x4234      MOVW     R2,#+1076
   \       0x10   0x.... 0x....      LDR.W    R1,??DataTable31_44
   \       0x14   0x....             LDR.N    R0,??DataTable29_3
   \       0x16   0x.... 0x....      BL       printf
   1077          
   1078          	if( GetDevID() == DevRF900T )
   \                     ??ProcPktCall_0: (+1)
   \       0x1A   0x.... 0x....      BL       GetDevID
   \       0x1E   0x2802             CMP      R0,#+2
   \       0x20   0xD114             BNE.N    ??ProcPktCall_1
   1079          	{
   1080          		//	송신기
   1081          
   1082          		//========================================================================
   1083          		//  통화 ( SOS )
   1084          		uint16_t	 *pAudioBuf = (uint16_t*)pRFPkt->dat.data;
   \       0x22   0x1D25             ADDS     R5,R4,#+4
   1085          
   1086          		SetRFMMode( RFMModeRx );
   \       0x24   0x2002             MOVS     R0,#+2
   \       0x26   0x.... 0x....      BL       SetRFMMode
   1087          
   1088          #if defined(USE_RFT_ONLY_RX_SPK_ON)
   1089          		//  송신기 : 수신중인 경우 SPK ON
   1090          //		HAL_GPIO_WritePin( SPK_ON_GPIO_Port, SPK_ON_Pin, GPIO_PIN_SET );
   1091          		RFM_Spk(1);
   \       0x2A   0x2001             MOVS     R0,#+1
   \       0x2C   0x.... 0x....      BL       RFM_Spk
   1092          #endif
   1093          
   1094          		//  Red LED On
   1095          		HAL_GPIO_WritePin ( LED_ON_B_GPIO_Port, LED_ON_B_Pin, GPIO_PIN_SET ); //  RED LED
   \       0x30   0x2201             MOVS     R2,#+1
   \       0x32   0xF44F 0x4180      MOV      R1,#+16384
   \       0x36   0x.... 0x....      LDR.W    R0,??DataTable31_43
   \       0x3A   0x.... 0x....      BL       HAL_GPIO_WritePin
   1096          
   1097          		//  통화 : 송신기 -> 송신기
   1098          
   1099          		qBufPut( &g_qBufAudioRx, (uint8_t*)pAudioBuf, ( I2S_DMA_LOOP_SIZE * 2 ) );
   \       0x3E   0x223C             MOVS     R2,#+60
   \       0x40   0x0029             MOVS     R1,R5
   \       0x42   0x.... 0x....      LDR.W    R0,??DataTable31_42
   \       0x46   0x.... 0x....      BL       qBufPut
   \       0x4A   0xE006             B.N      ??ProcPktCall_2
   1100          	}
   1101          	else if ( GetDevID() == DevRF900M )
   \                     ??ProcPktCall_1: (+1)
   \       0x4C   0x.... 0x....      BL       GetDevID
   \       0x50   0x2801             CMP      R0,#+1
   \       0x52   0xD102             BNE.N    ??ProcPktCall_2
   1102          	{
   1103          		//	수신기
   1104          
   1105          		SetRFMMode( RFMModeRx );
   \       0x54   0x2002             MOVS     R0,#+2
   \       0x56   0x.... 0x....      BL       SetRFMMode
   1106          	}
   1107          
   1108          	g_nStampRxPkt = HAL_GetTick();		//	방송/통화 Stamp
   \                     ??ProcPktCall_2: (+1)
   \       0x5A   0x.... 0x....      BL       HAL_GetTick
   \       0x5E   0x.... 0x....      LDR.W    R1,??DataTable31_40
   \       0x62   0x6008             STR      R0,[R1, #+0]
   1109          }
                 ^
Warning[Pe940]: missing return statement at end of non-void function
          "ProcPktCall"
   \       0x64   0xBD32             POP      {R1,R4,R5,PC}
   1110          
   1111          
   1112          //========================================================================

   \                                 In section .text, align 2, keep-with-next
   1113          int	ProcPktDevConn			( const RFMPkt *pRFPkt )
   1114          //========================================================================
   1115          {
   \                     ProcPktDevConn: (+1)
   \        0x0   0xB538             PUSH     {R3-R5,LR}
   \        0x2   0x0004             MOVS     R4,R0
   1116          	//	Device Node Connection
   1117          	if ( GetDbg() )		printf( "%s(%d)\n", __func__, __LINE__ );
                 	     ^
Warning[Pe223]: function "GetDbg" declared implicitly
   \        0x4   0x.... 0x....      BL       GetDbg
   \        0x8   0x2800             CMP      R0,#+0
   \        0xA   0xD007             BEQ.N    ??ProcPktDevConn_0
   \        0xC   0xF240 0x425D      MOVW     R2,#+1117
   \       0x10   0x.... 0x....      LDR.W    R1,??DataTable31_45
   \       0x14   0x.... 0x....      LDR.W    R0,??DataTable31_1
   \       0x18   0x.... 0x....      BL       printf
   1118          
   1119          	const RFMPktDevConn	*pConn = &pRFPkt->dat.devConn;
   \                     ??ProcPktDevConn_0: (+1)
   \       0x1C   0x1D25             ADDS     R5,R4,#+4
   1120          
   1121          	if( GetDevID() == DevRF900T )
   \       0x1E   0x.... 0x....      BL       GetDevID
   \       0x22   0x2802             CMP      R0,#+2
   \       0x24   0xD105             BNE.N    ??ProcPktDevConn_1
   1122          	{
   1123          		//========================================================================
   1124          		//	송신기
   1125          		SetDevConn( pConn->nSrcCh, pConn->nDevType, pConn->nConnect );
                 		^
Warning[Pe223]: function "SetDevConn" declared implicitly
   \       0x26   0x78AA             LDRB     R2,[R5, #+2]
   \       0x28   0x7829             LDRB     R1,[R5, #+0]
   \       0x2A   0x7868             LDRB     R0,[R5, #+1]
   \       0x2C   0x.... 0x....      BL       SetDevConn
   \       0x30   0xE008             B.N      ??ProcPktDevConn_2
   1126          	}
   1127          	else if ( GetDevID() == DevRF900M )
   \                     ??ProcPktDevConn_1: (+1)
   \       0x32   0x.... 0x....      BL       GetDevID
   \       0x36   0x2801             CMP      R0,#+1
   \       0x38   0xD104             BNE.N    ??ProcPktDevConn_2
   1128          	{
   1129          		//========================================================================
   1130          		//	수신기
   1131          		SetDevConn( pConn->nSrcCh, pConn->nDevType, pConn->nConnect );
                 		^
Warning[Pe223]: function "SetDevConn" declared implicitly
   \       0x3A   0x78AA             LDRB     R2,[R5, #+2]
   \       0x3C   0x7829             LDRB     R1,[R5, #+0]
   \       0x3E   0x7868             LDRB     R0,[R5, #+1]
   \       0x40   0x.... 0x....      BL       SetDevConn
   1132          	}
   1133          }
                 ^
Warning[Pe940]: missing return statement at end of non-void function
          "ProcPktDevConn"
   \                     ??ProcPktDevConn_2: (+1)
   \       0x44   0xBD32             POP      {R1,R4,R5,PC}
   1134          
   1135          //========================================================================

   \                                 In section .text, align 2, keep-with-next
   1136          int	ProcPktLight		( const RFMPkt *pRFPkt )
   1137          //========================================================================
   1138          {
   \                     ProcPktLight: (+1)
   \        0x0   0xB510             PUSH     {R4,LR}
   \        0x2   0x0004             MOVS     R4,R0
   1139          	if ( GetDbg() )		printf( "%s(%d)\n", __func__, __LINE__ );
                 	     ^
Warning[Pe223]: function "GetDbg" declared implicitly
   \        0x4   0x.... 0x....      BL       GetDbg
   \        0x8   0x2800             CMP      R0,#+0
   \        0xA   0xD006             BEQ.N    ??ProcPktLight_0
   \        0xC   0xF240 0x4273      MOVW     R2,#+1139
   \       0x10   0x.... 0x....      LDR.W    R1,??DataTable31_46
   \       0x14   0x....             LDR.N    R0,??DataTable29_3
   \       0x16   0x.... 0x....      BL       printf
   1140          
   1141          	if ( GetDevID() == DevRF900M && pRFPkt->hdr.nPktCmd == PktLight )
   \                     ??ProcPktLight_0: (+1)
   \       0x1A   0x.... 0x....      BL       GetDevID
   \       0x1E   0x2801             CMP      R0,#+1
   \       0x20   0xD117             BNE.N    ??ProcPktLight_1
   \       0x22   0x78E0             LDRB     R0,[R4, #+3]
   \       0x24   0x2804             CMP      R0,#+4
   \       0x26   0xD114             BNE.N    ??ProcPktLight_1
   1142          	{
   1143          		//  수신기 조명제어.
   1144          		if ( pRFPkt->dat.light.nOnOff == 0 )
   \       0x28   0x7920             LDRB     R0,[R4, #+4]
   \       0x2A   0x2800             CMP      R0,#+0
   \       0x2C   0xD107             BNE.N    ??ProcPktLight_2
   1145          		{
   1146          			// 조명 Off 명령 수신시.
   1147          			HAL_GPIO_WritePin ( LIGHT_ON_GPIO_Port, LIGHT_ON_Pin, GPIO_PIN_RESET );
   \       0x2E   0x2200             MOVS     R2,#+0
   \       0x30   0xF44F 0x7100      MOV      R1,#+512
   \       0x34   0x.... 0x....      LDR.W    R0,??DataTable31_35
   \       0x38   0x.... 0x....      BL       HAL_GPIO_WritePin
   \       0x3C   0xE009             B.N      ??ProcPktLight_1
   1148          		}
   1149          		else if ( pRFPkt->dat.light.nOnOff == 1 )
   \                     ??ProcPktLight_2: (+1)
   \       0x3E   0x7920             LDRB     R0,[R4, #+4]
   \       0x40   0x2801             CMP      R0,#+1
   \       0x42   0xD106             BNE.N    ??ProcPktLight_1
   1150          		{
   1151          			// 조명 On 명령 수신시.
   1152          			HAL_GPIO_WritePin ( LIGHT_ON_GPIO_Port, LIGHT_ON_Pin, GPIO_PIN_SET );
   \       0x44   0x2201             MOVS     R2,#+1
   \       0x46   0xF44F 0x7100      MOV      R1,#+512
   \       0x4A   0x.... 0x....      LDR.W    R0,??DataTable31_35
   \       0x4E   0x.... 0x....      BL       HAL_GPIO_WritePin
   1153          		}
   1154          	}
   1155          }
                 ^
Warning[Pe940]: missing return statement at end of non-void function
          "ProcPktLight"
   \                     ??ProcPktLight_1: (+1)
   \       0x52   0xBD10             POP      {R4,PC}
   1156          
   1157          
   1158          //========================================================================

   \                                 In section .text, align 2, keep-with-next
   1159          int	ProcPktCmd			( const RFMPkt *pRFPkt )
   1160          //========================================================================
   1161          {
   \                     ProcPktCmd: (+1)
   \        0x0   0xB510             PUSH     {R4,LR}
   \        0x2   0x0004             MOVS     R4,R0
   1162          	if ( GetDbg() )		printf( "%s(%d)\n", __func__, __LINE__ );
                 	     ^
Warning[Pe223]: function "GetDbg" declared implicitly
   \        0x4   0x.... 0x....      BL       GetDbg
   \        0x8   0x2800             CMP      R0,#+0
   \        0xA   0xD006             BEQ.N    ??ProcPktCmd_0
   \        0xC   0xF240 0x428A      MOVW     R2,#+1162
   \       0x10   0x.... 0x....      LDR.W    R1,??DataTable31_47
   \       0x14   0x....             LDR.N    R0,??DataTable29_3
   \       0x16   0x.... 0x....      BL       printf
   1163          
   1164          	//	RSSI Check
   1165          	printf( "%s(%d) - %s\n", __func__, __LINE__, pRFPkt->dat.cmd.sCmd );
   \                     ??ProcPktCmd_0: (+1)
   \       0x1A   0xF114 0x0308      ADDS     R3,R4,#+8
   \       0x1E   0xF240 0x428D      MOVW     R2,#+1165
   \       0x22   0x.... 0x....      LDR.W    R1,??DataTable31_47
   \       0x26   0x.... 0x....      LDR.W    R0,??DataTable31_48
   \       0x2A   0x.... 0x....      BL       printf
   1166          
   1167          	if ( g_nRSSI >= pRFPkt->dat.cmd.nRSSIOver )
   \       0x2E   0x.... 0x....      LDR.W    R0,??DataTable31_25
   \       0x32   0x6800             LDR      R0,[R0, #+0]
   \       0x34   0xF994 0x1004      LDRSB    R1,[R4, #+4]
   \       0x38   0x4288             CMP      R0,R1
   \       0x3A   0xDB03             BLT.N    ??ProcPktCmd_1
   1168          	{
   1169          		if ( pRFPkt->dat.cmd.nRsp == 1 )
   1170          		{
   1171          			//	명령 처리 동작 결과 응답.
   1172          
   1173          			//	ToDo
   1174          		}
   1175          
   1176          		//	RSSI값 확인 후 해당 범위 내에 있는 경우 명령 동작.
   1177          		ProcessCommand( pRFPkt->dat.cmd.sCmd );
                 		^
Warning[Pe223]: function "ProcessCommand" declared implicitly
   \       0x3C   0xF114 0x0008      ADDS     R0,R4,#+8
   \       0x40   0x.... 0x....      BL       ProcessCommand
   1178          	}
   1179          }
                 ^
Warning[Pe940]: missing return statement at end of non-void function
          "ProcPktCmd"
   \                     ??ProcPktCmd_1: (+1)
   \       0x44   0xBD10             POP      {R4,PC}
   1180          
   1181          
   1182          //========================================================================

   \                                 In section .text, align 2, keep-with-next
   1183          int	ProcPktCmdRsp		( const RFMPkt *pRFPkt )
   1184          //========================================================================
   1185          {
   \                     ProcPktCmdRsp: (+1)
   \        0x0   0xB510             PUSH     {R4,LR}
   \        0x2   0x0004             MOVS     R4,R0
   1186          	if ( GetDbg() )		printf( "%s(%d)\n", __func__, __LINE__ );
                 	     ^
Warning[Pe223]: function "GetDbg" declared implicitly
   \        0x4   0x.... 0x....      BL       GetDbg
   \        0x8   0x2800             CMP      R0,#+0
   \        0xA   0xD006             BEQ.N    ??ProcPktCmdRsp_0
   \        0xC   0xF240 0x42A2      MOVW     R2,#+1186
   \       0x10   0x.... 0x....      LDR.W    R1,??DataTable31_49
   \       0x14   0x....             LDR.N    R0,??DataTable31_1
   \       0x16   0x.... 0x....      BL       printf
   1187          
   1188          	//	Command 처리결과 응답.
   1189          
   1190          	//	ToDo
   1191          }
                 ^
Warning[Pe940]: missing return statement at end of non-void function
          "ProcPktCmdRsp"
   \                     ??ProcPktCmdRsp_0: (+1)
   \       0x1A   0xBD10             POP      {R4,PC}
   1192          
   1193          //========================================================================

   \                                 In section .bss, align 4
   1194          uint8_t	s_bUpgrDataValid[(MaxUpgrDataPacket + 7) / 8];	//	4000];	//	Upgrade Data Valid Check
   \                     s_bUpgrDataValid:
   \        0x0                      DS8 1'024
   1195          //========================================================================
   1196          
   1197          //========================================================================

   \                                 In section .text, align 2, keep-with-next
   1198          int	ProcPktUpgr			( const RFMPkt *pRFPkt )
   1199          //========================================================================
   1200          {
   \                     ProcPktUpgr: (+1)
   \        0x0   0xE92D 0x4FF1      PUSH     {R0,R4-R11,LR}
   \        0x4   0xB088             SUB      SP,SP,#+32
   1201          	//========================================================================
   1202          	//	Upgrade Flash Image
   1203          	//========================================================================
   1204          
   1205          	if ( GetDbg() )		printf( "%s(%d)\n", __func__, __LINE__ );
                 	     ^
Warning[Pe223]: function "GetDbg" declared implicitly
   \        0x6   0x.... 0x....      BL       GetDbg
   \        0xA   0x2800             CMP      R0,#+0
   \        0xC   0xD006             BEQ.N    ??ProcPktUpgr_0
   \        0xE   0xF240 0x42B5      MOVW     R2,#+1205
   \       0x12   0x.... 0x....      LDR.W    R1,??DataTable31_50
   \       0x16   0x....             LDR.N    R0,??DataTable31_1
   \       0x18   0x.... 0x....      BL       printf
   1206          
   1207          	//========================================================================
   1208          	//	Data Flash영역에 Write
   1209          	const RFMPktUpgr	*pUpgr = &pRFPkt->dat.upgr;
   \                     ??ProcPktUpgr_0: (+1)
   \       0x1C   0x9808             LDR      R0,[SP, #+32]
   \       0x1E   0x1D04             ADDS     R4,R0,#+4
   1210          
   1211          	if ( pUpgr->baseAddr < 0x08080000 || 0x080FFFFF < pUpgr->baseAddr )
   \       0x20   0x6820             LDR      R0,[R4, #+0]
   \       0x22   0x.... 0x....      LDR.W    R5,??DataTable31_51
   \       0x26   0x42A8             CMP      R0,R5
   \       0x28   0xD303             BCC.N    ??ProcPktUpgr_1
   \       0x2A   0x6820             LDR      R0,[R4, #+0]
   \       0x2C   0xF1B0 0x6F01      CMP      R0,#+135266304
   \       0x30   0xD30A             BCC.N    ??ProcPktUpgr_2
   1212          	{
   1213          		printf("%s(%d) - Out Of Range - baseAddr(0x%08X)\n", __func__, __LINE__, pUpgr->baseAddr );
   \                     ??ProcPktUpgr_1: (+1)
   \       0x32   0x6823             LDR      R3,[R4, #+0]
   \       0x34   0xF240 0x42BD      MOVW     R2,#+1213
   \       0x38   0x.... 0x....      LDR.W    R1,??DataTable31_50
   \       0x3C   0x.... 0x....      LDR.W    R0,??DataTable31_52
   \       0x40   0x.... 0x....      BL       printf
   1214          		return 0;
   \       0x44   0x2000             MOVS     R0,#+0
   \       0x46   0xE12A             B.N      ??ProcPktUpgr_3
   1215          	}
   1216          
   1217          	//========================================================================
   1218          	//	RFM Packet
   1219          //	RFMPktUpgr	*pUpgr = (RFMPktUpgr *)pRFPkt->dat.upgr;
   1220          //	pUpgr->baseAddr		=	nAddrTarget;
   1221          //	pUpgr->totPkt		=	nPktTot;
   1222          //	pUpgr->idxPkt		=	nPktIdx;
   1223          //	pUpgr->nSize		=	nSize;
   1224          //	memcpy( pUpgr->data, sBuf, nSize );
   1225          
   1226          	//========================================================================
   1227          	static int	s_rxPkt;
   1228          
   1229          	if ( pUpgr->idxPkt == 0 )
   \                     ??ProcPktUpgr_2: (+1)
   \       0x48   0x88E0             LDRH     R0,[R4, #+6]
   \       0x4A   0x2800             CMP      R0,#+0
   \       0x4C   0xD130             BNE.N    ??ProcPktUpgr_4
   1230          	{
   1231          		//	Start Uprade
   1232          		printf("%s(%d) - Start Upgrade\n", __func__, __LINE__ );
   \       0x4E   0xF44F 0x629A      MOV      R2,#+1232
   \       0x52   0x....             LDR.N    R1,??DataTable31_50
   \       0x54   0x.... 0x....      LDR.W    R0,??DataTable31_53
   \       0x58   0x.... 0x....      BL       printf
   1233          
   1234          		if( pUpgr->bFlag & PktUpgrFlagRetry )
   \       0x5C   0x7A60             LDRB     R0,[R4, #+9]
   \       0x5E   0x07C0             LSLS     R0,R0,#+31
   \       0x60   0xD506             BPL.N    ??ProcPktUpgr_5
   1235          		{
   1236          			//	No Erase
   1237          			printf( "[%08d] Flash Erase - Skip ( Retry - Upgrade )\n", HAL_GetTick() );
   \       0x62   0x.... 0x....      BL       HAL_GetTick
   \       0x66   0x0001             MOVS     R1,R0
   \       0x68   0x....             LDR.N    R0,??DataTable31_54
   \       0x6A   0x.... 0x....      BL       printf
   \       0x6E   0xE01C             B.N      ??ProcPktUpgr_6
   1238          		}
   1239          		else
   1240          		{
   1241          			//========================================================================
   1242          			//	Flash Erase
   1243          	//		 __HAL_RCC_DBGMCU_CLK_ENABLE();
   1244          			 __HAL_DBGMCU_FREEZE_IWDG();
   \                     ??ProcPktUpgr_5: (+1)
   \       0x70   0x....             LDR.N    R0,??DataTable31_55
   \       0x72   0x6801             LDR      R1,[R0, #+0]
   \       0x74   0xF451 0x5180      ORRS     R1,R1,#0x1000
   \       0x78   0x6001             STR      R1,[R0, #+0]
   1245          	//		MX_IWDG_Disable();		//	Disable Watchdog
   1246          			printf( "[%08d] Flash Erase - Start\n", HAL_GetTick() );
   \       0x7A   0x.... 0x....      BL       HAL_GetTick
   \       0x7E   0x0001             MOVS     R1,R0
   \       0x80   0x....             LDR.N    R0,??DataTable31_56
   \       0x82   0x.... 0x....      BL       printf
   1247          	//        FLASH_If_Erase( ADDR_FLASH_IMGAPP );
   1248          			FLASH_If_Erase( ADDR_FLASH_IMGBOOT );		//	0x08080000
   \       0x86   0x0028             MOVS     R0,R5
   \       0x88   0x.... 0x....      BL       FLASH_If_Erase
   1249          			printf( "[%08d] Flash Erase - End\n", HAL_GetTick() );
   \       0x8C   0x.... 0x....      BL       HAL_GetTick
   \       0x90   0x0001             MOVS     R1,R0
   \       0x92   0x....             LDR.N    R0,??DataTable31_57
   \       0x94   0x.... 0x....      BL       printf
   1250          	    	//========================================================================
   1251          
   1252          			memset( s_bUpgrDataValid, 0, sizeof(s_bUpgrDataValid) );
   \       0x98   0xF44F 0x6580      MOV      R5,#+1024
   \       0x9C   0x2600             MOVS     R6,#+0
   \       0x9E   0x....             LDR.N    R7,??DataTable31_58
   \       0xA0   0x0032             MOVS     R2,R6
   \       0xA2   0x0029             MOVS     R1,R5
   \       0xA4   0x0038             MOVS     R0,R7
   \       0xA6   0x.... 0x....      BL       __aeabi_memset
   1253          		}
   1254          
   1255          		s_rxPkt = 0;
   \                     ??ProcPktUpgr_6: (+1)
   \       0xAA   0x2000             MOVS     R0,#+0
   \       0xAC   0x....             LDR.N    R1,??DataTable31_59
   \       0xAE   0x6008             STR      R0,[R1, #+0]
   1256          	}
   1257          
   1258          	s_rxPkt++;
   \                     ??ProcPktUpgr_4: (+1)
   \       0xB0   0x....             LDR.N    R6,??DataTable31_59
   \       0xB2   0x6830             LDR      R0,[R6, #+0]
   \       0xB4   0x1C40             ADDS     R0,R0,#+1
   \       0xB6   0x6030             STR      R0,[R6, #+0]
   1259          
   1260          	//========================================================================
   1261          	//	Write Upgrade Image Data
   1262          
   1263          	if ( FLASH_If_Write( pUpgr->baseAddr + (pUpgr->idxPkt * PktUpgrDataSize),
   1264          						(uint32_t *)pUpgr->data,
   1265          						pUpgr->nSize / 4 ) == FLASHIF_OK )
   \       0xB8   0x6820             LDR      R0,[R4, #+0]
   \       0xBA   0x2730             MOVS     R7,#+48
   \       0xBC   0x7A22             LDRB     R2,[R4, #+8]
   \       0xBE   0xB2D2             UXTB     R2,R2
   \       0xC0   0x0892             LSRS     R2,R2,#+2
   \       0xC2   0xB2D2             UXTB     R2,R2
   \       0xC4   0xF114 0x010A      ADDS     R1,R4,#+10
   \       0xC8   0x88E3             LDRH     R3,[R4, #+6]
   \       0xCA   0xFB07 0x0003      MLA      R0,R7,R3,R0
   \       0xCE   0x.... 0x....      BL       FLASH_If_Write
   \       0xD2   0x2800             CMP      R0,#+0
   \       0xD4   0xD111             BNE.N    ??ProcPktUpgr_7
   1266          	{
   1267          		//	Valid Check Data
   1268          		SET_BIT( s_bUpgrDataValid[pUpgr->idxPkt/8], (0x1 << (pUpgr->idxPkt % 8)) );
   \       0xD6   0x88E1             LDRH     R1,[R4, #+6]
   \       0xD8   0x2208             MOVS     R2,#+8
   \       0xDA   0x....             LDR.N    R0,??DataTable31_58
   \       0xDC   0x88E3             LDRH     R3,[R4, #+6]
   \       0xDE   0x10DB             ASRS     R3,R3,#+3
   \       0xE0   0x5CC3             LDRB     R3,[R0, R3]
   \       0xE2   0x2501             MOVS     R5,#+1
   \       0xE4   0xFB91 0xFCF2      SDIV     R12,R1,R2
   \       0xE8   0xFB02 0x111C      MLS      R1,R2,R12,R1
   \       0xEC   0xFA15 0xF101      LSLS     R1,R5,R1
   \       0xF0   0x4319             ORRS     R1,R1,R3
   \       0xF2   0x88E2             LDRH     R2,[R4, #+6]
   \       0xF4   0x10D2             ASRS     R2,R2,#+3
   \       0xF6   0x5481             STRB     R1,[R0, R2]
   \       0xF8   0xE018             B.N      ??ProcPktUpgr_8
   1269          	}
   1270          	else /* An error occurred while writing to Flash memory */
   1271          	{
   1272          		/* End session */
   1273          		printf("%s(%d) - Error idx(%d)\n", __func__, __LINE__, pUpgr->idxPkt );
   \                     ??ProcPktUpgr_7: (+1)
   \       0xFA   0x88E3             LDRH     R3,[R4, #+6]
   \       0xFC   0xF240 0x42F9      MOVW     R2,#+1273
   \      0x100   0x....             LDR.N    R1,??DataTable31_50
   \      0x102   0x....             LDR.N    R0,??DataTable31_60
   \      0x104   0x.... 0x....      BL       printf
   1274          		CLEAR_BIT( s_bUpgrDataValid[pUpgr->idxPkt/8], (0x1 << (pUpgr->idxPkt % 8)) );	//	Clear
   \      0x108   0x88E1             LDRH     R1,[R4, #+6]
   \      0x10A   0x2208             MOVS     R2,#+8
   \      0x10C   0x....             LDR.N    R0,??DataTable31_58
   \      0x10E   0x88E3             LDRH     R3,[R4, #+6]
   \      0x110   0x10DB             ASRS     R3,R3,#+3
   \      0x112   0x5CC3             LDRB     R3,[R0, R3]
   \      0x114   0x2501             MOVS     R5,#+1
   \      0x116   0xFB91 0xFCF2      SDIV     R12,R1,R2
   \      0x11A   0xFB02 0x111C      MLS      R1,R2,R12,R1
   \      0x11E   0xFA15 0xF101      LSLS     R1,R5,R1
   \      0x122   0xEA33 0x0101      BICS     R1,R3,R1
   \      0x126   0x88E2             LDRH     R2,[R4, #+6]
   \      0x128   0x10D2             ASRS     R2,R2,#+3
   \      0x12A   0x5481             STRB     R1,[R0, R2]
   1275          	}
   1276          
   1277          	g_nStampRxPkt = HAL_GetTick();		//	Rx Pkt Stamp
   \                     ??ProcPktUpgr_8: (+1)
   \      0x12C   0x.... 0x....      BL       HAL_GetTick
   \      0x130   0x....             LDR.N    R1,??DataTable31_40
   \      0x132   0x6008             STR      R0,[R1, #+0]
   1278          	//========================================================================
   1279          
   1280          	//========================================================================
   1281          	if ( pUpgr->idxPkt == (pUpgr->totPkt - 1) )
   \      0x134   0x88E0             LDRH     R0,[R4, #+6]
   \      0x136   0x88A1             LDRH     R1,[R4, #+4]
   \      0x138   0x1E49             SUBS     R1,R1,#+1
   \      0x13A   0x4288             CMP      R0,R1
   \      0x13C   0xF040 0x80AF      BNE.W    ??ProcPktUpgr_9
   1282          	{
   1283          		//	End Upgrade
   1284          //		s_rxPkt++;
   1285          
   1286          		printf("%s(%d) - End Upgrade ( rxPkt : %d / totPkt : %d )\n", __func__, __LINE__,
   1287          					s_rxPkt, pUpgr->totPkt );
   \      0x140   0x....             LDR.N    R5,??DataTable31_50
   \      0x142   0x88A0             LDRH     R0,[R4, #+4]
   \      0x144   0x9000             STR      R0,[SP, #+0]
   \      0x146   0x6833             LDR      R3,[R6, #+0]
   \      0x148   0xF240 0x5206      MOVW     R2,#+1286
   \      0x14C   0x0029             MOVS     R1,R5
   \      0x14E   0x....             LDR.N    R0,??DataTable31_61
   \      0x150   0x.... 0x....      BL       printf
   1288          
   1289          		int result = UpgrStatSuccess;
   \      0x154   0x2601             MOVS     R6,#+1
   1290          		for( int i = 0; i < pUpgr->totPkt; i++ )
   \      0x156   0x2000             MOVS     R0,#+0
   \                     ??ProcPktUpgr_10: (+1)
   \      0x158   0x88A1             LDRH     R1,[R4, #+4]
   \      0x15A   0x4288             CMP      R0,R1
   \      0x15C   0xDA13             BGE.N    ??ProcPktUpgr_11
   1291          		{
   1292          			if( READ_BIT( s_bUpgrDataValid[i / 8], (0x1 << (i % 8)) ) == 0 )
   \      0x15E   0x2108             MOVS     R1,#+8
   \      0x160   0x2208             MOVS     R2,#+8
   \      0x162   0xFB90 0xF2F2      SDIV     R2,R0,R2
   \      0x166   0x....             LDR.N    R3,??DataTable31_58
   \      0x168   0x5C9A             LDRB     R2,[R3, R2]
   \      0x16A   0x2301             MOVS     R3,#+1
   \      0x16C   0xFB90 0xFCF1      SDIV     R12,R0,R1
   \      0x170   0xFB01 0x011C      MLS      R1,R1,R12,R0
   \      0x174   0xFA13 0xF101      LSLS     R1,R3,R1
   \      0x178   0x420A             TST      R2,R1
   \      0x17A   0xD102             BNE.N    ??ProcPktUpgr_12
   1293          			{
   1294          				result = UpgrStatFailed;
   \      0x17C   0x2100             MOVS     R1,#+0
   \      0x17E   0x000E             MOVS     R6,R1
   1295          				break;
   \      0x180   0xE001             B.N      ??ProcPktUpgr_11
   1296          			}
   1297          		}
   \                     ??ProcPktUpgr_12: (+1)
   \      0x182   0x1C40             ADDS     R0,R0,#+1
   \      0x184   0xE7E8             B.N      ??ProcPktUpgr_10
   1298          
   1299          		//========================================================================
   1300          		if ( result == UpgrStatSuccess )//( s_rxPkt == pUpgr->totPkt )
   \                     ??ProcPktUpgr_11: (+1)
   \      0x186   0x2E01             CMP      R6,#+1
   \      0x188   0xD16D             BNE.N    ??ProcPktUpgr_13
   1301          		{
   1302          			//	Upgrade Success
   1303          
   1304          			char buf[10];
   1305          			int filesize = pUpgr->totPkt * PktUpgrDataSize;
   \      0x18A   0x88A0             LDRH     R0,[R4, #+4]
   \      0x18C   0xFB07 0xF700      MUL      R7,R7,R0
   \      0x190   0x9701             STR      R7,[SP, #+4]
   1306          
   1307          			printf("%s(%d) - Upgrade Success ( Size : %d )\n", __func__, __LINE__, filesize );
   \      0x192   0x9B01             LDR      R3,[SP, #+4]
   \      0x194   0xF240 0x521B      MOVW     R2,#+1307
   \      0x198   0x0029             MOVS     R1,R5
   \      0x19A   0x....             LDR.N    R0,??DataTable31_62
   \      0x19C   0x.... 0x....      BL       printf
   1308          
   1309          			memset( buf, 0, sizeof( buf ) );
   \      0x1A0   0x200A             MOVS     R0,#+10
   \      0x1A2   0x9006             STR      R0,[SP, #+24]
   \      0x1A4   0x2000             MOVS     R0,#+0
   \      0x1A6   0x9005             STR      R0,[SP, #+20]
   \      0x1A8   0xAF02             ADD      R7,SP,#+8
   \      0x1AA   0x9A05             LDR      R2,[SP, #+20]
   \      0x1AC   0x9906             LDR      R1,[SP, #+24]
   \      0x1AE   0x0038             MOVS     R0,R7
   \      0x1B0   0x.... 0x....      BL       __aeabi_memset
   1310          
   1311          			buf[0] = 0xaa;
   \      0x1B4   0x20AA             MOVS     R0,#+170
   \      0x1B6   0xF88D 0x0008      STRB     R0,[SP, #+8]
   1312          			buf[1] = 0x55;
   \      0x1BA   0xAF02             ADD      R7,SP,#+8
   \      0x1BC   0x2055             MOVS     R0,#+85
   \      0x1BE   0x7078             STRB     R0,[R7, #+1]
   1313          			buf[2] = ( filesize >> 16 ) & 0xFF;
   \      0x1C0   0x9801             LDR      R0,[SP, #+4]
   \      0x1C2   0x1400             ASRS     R0,R0,#+16
   \      0x1C4   0x70B8             STRB     R0,[R7, #+2]
   1314          			buf[3] = ( filesize >> 8 ) & 0xFF;
   \      0x1C6   0x9801             LDR      R0,[SP, #+4]
   \      0x1C8   0x1200             ASRS     R0,R0,#+8
   \      0x1CA   0x70F8             STRB     R0,[R7, #+3]
   1315          			buf[4] = ( filesize >> 0 ) & 0xFF;
   \      0x1CC   0x9801             LDR      R0,[SP, #+4]
   \      0x1CE   0x7138             STRB     R0,[R7, #+4]
   1316          
   1317          		    M24_HAL_WriteBytes( &hi2c1, 0xA0, AddrEEPUpgrMGN1, (uint8_t *)buf, 5 );
   \      0x1D0   0x.... 0x....      LDR.W    R10,??DataTable31_63
   \      0x1D4   0x2005             MOVS     R0,#+5
   \      0x1D6   0x9000             STR      R0,[SP, #+0]
   \      0x1D8   0xAB02             ADD      R3,SP,#+8
   \      0x1DA   0x2220             MOVS     R2,#+32
   \      0x1DC   0x21A0             MOVS     R1,#+160
   \      0x1DE   0x4650             MOV      R0,R10
   \      0x1E0   0x.... 0x....      BL       M24_HAL_WriteBytes
   1318          
   1319          			memset( buf, 0, sizeof( buf ) );
   \      0x1E4   0xF05F 0x080A      MOVS     R8,#+10
   \      0x1E8   0xF05F 0x0900      MOVS     R9,#+0
   \      0x1EC   0xF10D 0x0B08      ADD      R11,SP,#+8
   \      0x1F0   0x464A             MOV      R2,R9
   \      0x1F2   0x4641             MOV      R1,R8
   \      0x1F4   0x4658             MOV      R0,R11
   \      0x1F6   0x.... 0x....      BL       __aeabi_memset
   1320          
   1321          		    M24_HAL_ReadBytes( &hi2c1, 0xA0, AddrEEPUpgrMGN1, (uint8_t *)buf, 5 );
   \      0x1FA   0x2005             MOVS     R0,#+5
   \      0x1FC   0x9000             STR      R0,[SP, #+0]
   \      0x1FE   0xAB02             ADD      R3,SP,#+8
   \      0x200   0x2220             MOVS     R2,#+32
   \      0x202   0x21A0             MOVS     R1,#+160
   \      0x204   0x4650             MOV      R0,R10
   \      0x206   0x.... 0x....      BL       M24_HAL_ReadBytes
   1322          
   1323          		    filesize = ( buf[2] << 16 ) | ( buf[3] << 8 ) | ( buf[4] );
   \      0x20A   0x78B8             LDRB     R0,[R7, #+2]
   \      0x20C   0xF897 0xA003      LDRB     R10,[R7, #+3]
   \      0x210   0xEA5F 0x2A0A      LSLS     R10,R10,#+8
   \      0x214   0xEA5A 0x4A00      ORRS     R10,R10,R0, LSL #+16
   \      0x218   0x7938             LDRB     R0,[R7, #+4]
   \      0x21A   0xEA50 0x0A0A      ORRS     R10,R0,R10
   1324          
   1325          			printf( "%s(%d) - EEPROM [0,1] : 0x%02X 0x%02X / ( bin size : %d )\n", __func__, __LINE__, buf[0], buf[1], filesize );
   \      0x21E   0xF8CD 0xA004      STR      R10,[SP, #+4]
   \      0x222   0x7878             LDRB     R0,[R7, #+1]
   \      0x224   0x9000             STR      R0,[SP, #+0]
   \      0x226   0xF89D 0x3008      LDRB     R3,[SP, #+8]
   \      0x22A   0xF240 0x522D      MOVW     R2,#+1325
   \      0x22E   0x0029             MOVS     R1,R5
   \      0x230   0x....             LDR.N    R0,??DataTable31_64
   \      0x232   0x.... 0x....      BL       printf
   1326          
   1327          			HAL_Delay( 2000 );	//	Upgrade 결과전송 전 Delay
   \      0x236   0xF44F 0x60FA      MOV      R0,#+2000
   \      0x23A   0x.... 0x....      BL       HAL_Delay
   1328          
   1329          			//===========================================================================
   1330          			//	Send Upgrade Result
   1331          			SendUpgrStat( UpgrStatSuccess );	//	Upgrade 결과전송.
   \      0x23E   0x2001             MOVS     R0,#+1
   \      0x240   0x.... 0x....      BL       SendUpgrStat
   1332          			HAL_Delay( 100 );	//	Upgrade 결과전송 전 Delay
   \      0x244   0x2064             MOVS     R0,#+100
   \      0x246   0x.... 0x....      BL       HAL_Delay
   1333          			SendUpgrStat( UpgrStatSuccess );	//	Upgrade 결과전송.
   \      0x24A   0x2001             MOVS     R0,#+1
   \      0x24C   0x.... 0x....      BL       SendUpgrStat
   1334          			HAL_Delay( 100 );	//	Upgrade 결과전송 전 Delay
   \      0x250   0x2064             MOVS     R0,#+100
   \      0x252   0x.... 0x....      BL       HAL_Delay
   1335          			SendUpgrStat( UpgrStatSuccess );	//	Upgrade 결과전송.
   \      0x256   0x2001             MOVS     R0,#+1
   \      0x258   0x.... 0x....      BL       SendUpgrStat
   1336          
   1337          			//===========================================================================
   1338          			//	Reset
   1339          			cmd_reset(0, 0);
                 			^
Warning[Pe223]: function "cmd_reset" declared implicitly
   \      0x25C   0x2100             MOVS     R1,#+0
   \      0x25E   0x2000             MOVS     R0,#+0
   \      0x260   0x.... 0x....      BL       cmd_reset
   \      0x264   0xE018             B.N      ??ProcPktUpgr_14
   1340          			//===========================================================================
   1341          		}
   1342          		else
   1343          		{
   1344          			HAL_Delay( 2000 );	//	Upgrade 결과전송 전 Delay
   \                     ??ProcPktUpgr_13: (+1)
   \      0x266   0xF44F 0x60FA      MOV      R0,#+2000
   \      0x26A   0x.... 0x....      BL       HAL_Delay
   1345          
   1346          			//===========================================================================
   1347          			//	Send Upgrade Result
   1348          			SendUpgrStat( UpgrStatFailed );		//	Upgrade 결과전송.
   \      0x26E   0x2000             MOVS     R0,#+0
   \      0x270   0x.... 0x....      BL       SendUpgrStat
   1349          			HAL_Delay( 100 );	//	Upgrade 결과전송 전 Delay
   \      0x274   0x2064             MOVS     R0,#+100
   \      0x276   0x.... 0x....      BL       HAL_Delay
   1350          			SendUpgrStat( UpgrStatFailed );	//	Upgrade 결과전송.
   \      0x27A   0x2000             MOVS     R0,#+0
   \      0x27C   0x.... 0x....      BL       SendUpgrStat
   1351          			HAL_Delay( 100 );	//	Upgrade 결과전송 전 Delay
   \      0x280   0x2064             MOVS     R0,#+100
   \      0x282   0x.... 0x....      BL       HAL_Delay
   1352          			SendUpgrStat( UpgrStatFailed );	//	Upgrade 결과전송.
   \      0x286   0x2000             MOVS     R0,#+0
   \      0x288   0x.... 0x....      BL       SendUpgrStat
   1353          
   1354          			//	Upgrade Failed
   1355          			printf("%s(%d) - Upgrade Failed\n", __func__, __LINE__ );
   \      0x28C   0xF240 0x524B      MOVW     R2,#+1355
   \      0x290   0x0029             MOVS     R1,R5
   \      0x292   0x....             LDR.N    R0,??DataTable31_65
   \      0x294   0x.... 0x....      BL       printf
   1356          		}
   1357          		//========================================================================
   1358          
   1359          		//========================================================================
   1360          		SetRFMMode( RFMModeNormal );	//	Normal 모드로 설정.
   \                     ??ProcPktUpgr_14: (+1)
   \      0x298   0x2000             MOVS     R0,#+0
   \      0x29A   0x.... 0x....      BL       SetRFMMode
   1361          		//========================================================================
   1362          	}
   1363          }
                 ^
Warning[Pe940]: missing return statement at end of non-void function
          "ProcPktUpgr"
   \                     ??ProcPktUpgr_9: (+1)
   \                     ??ProcPktUpgr_3: (+1)
   \      0x29E   0xB009             ADD      SP,SP,#+36
   \      0x2A0   0xE8BD 0x8FF0      POP      {R4-R11,PC}

   \                                 In section .bss, align 4
   \                     `ProcPktUpgr::s_rxPkt`:
   \        0x0                      DS8 4
   1364          
   1365          
   1366          //========================================================================

   \                                 In section .text, align 2, keep-with-next
   1367          int	ProcPktUpgrStat			( const RFMPkt *pRFPkt )
   1368          //========================================================================
   1369          {
   \                     ProcPktUpgrStat: (+1)
   \        0x0   0xB530             PUSH     {R4,R5,LR}
   \        0x2   0xB08D             SUB      SP,SP,#+52
   \        0x4   0x0004             MOVS     R4,R0
   1370          	//========================================================================
   1371          	//	Upgrade Status
   1372          	//========================================================================
   1373          
   1374          	//	Upgrade 결과 수신후 수신기 LCD창에 표시.
   1375          	if ( GetDbg() )		printf( "%s(%d)\n", __func__, __LINE__ );
                 	     ^
Warning[Pe223]: function "GetDbg" declared implicitly
   \        0x6   0x.... 0x....      BL       GetDbg
   \        0xA   0x2800             CMP      R0,#+0
   \        0xC   0xD005             BEQ.N    ??ProcPktUpgrStat_0
   \        0xE   0xF240 0x525F      MOVW     R2,#+1375
   \       0x12   0x....             LDR.N    R1,??DataTable31_66
   \       0x14   0x....             LDR.N    R0,??DataTable31_1
   \       0x16   0x.... 0x....      BL       printf
   1376          
   1377          	char sBuf[50];
   1378          
   1379          	//========================================================================
   1380          	//	Data Flash영역에 Write
   1381          	RFMPktUpgrStat	*pUpgrStat = (RFMPktUpgrStat *)&pRFPkt->dat.upgrStat;
   \                     ??ProcPktUpgrStat_0: (+1)
   \       0x1A   0x1D25             ADDS     R5,R4,#+4
   1382          
   1383          	printf( "%s(%d) - %d\n", __func__, __LINE__, pUpgrStat->nResult );
   \       0x1C   0x782B             LDRB     R3,[R5, #+0]
   \       0x1E   0xF240 0x5267      MOVW     R2,#+1383
   \       0x22   0x....             LDR.N    R1,??DataTable31_66
   \       0x24   0x....             LDR.N    R0,??DataTable31_19
   \       0x26   0x.... 0x....      BL       printf
   1384          
   1385          	if ( pUpgrStat->nResult == UpgrStatSuccess )
   \       0x2A   0x7828             LDRB     R0,[R5, #+0]
   \       0x2C   0x2801             CMP      R0,#+1
   \       0x2E   0xD10B             BNE.N    ??ProcPktUpgrStat_1
   1386          	{
   1387          		//	송신기 : Upgr Success
   1388          
   1389          		sprintf(sBuf, "Success(%d/%d)", pUpgrStat->nTrainSet, pUpgrStat->nCarNo);
   \       0x30   0x796B             LDRB     R3,[R5, #+5]
   \       0x32   0x792A             LDRB     R2,[R5, #+4]
   \       0x34   0x....             LDR.N    R1,??DataTable31_67
   \       0x36   0x4668             MOV      R0,SP
   \       0x38   0x.... 0x....      BL       sprintf
   1390          		LCDPrintfXY( 0, 13, sBuf );
   \       0x3C   0x466A             MOV      R2,SP
   \       0x3E   0x210D             MOVS     R1,#+13
   \       0x40   0x2000             MOVS     R0,#+0
   \       0x42   0x.... 0x....      BL       LCDPrintfXY
   \       0x46   0xE00D             B.N      ??ProcPktUpgrStat_2
   1391          
   1392          //		HAL_Delay(2000);
   1393          	}
   1394          	else if( pUpgrStat->nResult == UpgrStatFailed )
   \                     ??ProcPktUpgrStat_1: (+1)
   \       0x48   0x7828             LDRB     R0,[R5, #+0]
   \       0x4A   0x2800             CMP      R0,#+0
   \       0x4C   0xD10A             BNE.N    ??ProcPktUpgrStat_2
   1395          	{
   1396          		//	송신기 : Upgr Failed
   1397          
   1398          		sprintf(sBuf, "Failed(%d/%d)", pUpgrStat->nTrainSet, pUpgrStat->nCarNo);
   \       0x4E   0x796B             LDRB     R3,[R5, #+5]
   \       0x50   0x792A             LDRB     R2,[R5, #+4]
   \       0x52   0x....             LDR.N    R1,??DataTable31_68
   \       0x54   0x4668             MOV      R0,SP
   \       0x56   0x.... 0x....      BL       sprintf
   1399          		LCDPrintfXY( 0, 13, sBuf );
   \       0x5A   0x466A             MOV      R2,SP
   \       0x5C   0x210D             MOVS     R1,#+13
   \       0x5E   0x2000             MOVS     R0,#+0
   \       0x60   0x.... 0x....      BL       LCDPrintfXY
   1400          
   1401          //		HAL_Delay(2000);
   1402          	}
   1403          
   1404          	return 1;
   \                     ??ProcPktUpgrStat_2: (+1)
   \       0x64   0x2001             MOVS     R0,#+1
   \       0x66   0xB00D             ADD      SP,SP,#+52
   \       0x68   0xBD30             POP      {R4,R5,PC}
   1405          }

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable27:
   \        0x0   0x....'....        DC32     g_nPktSeq

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable29:
   \        0x0   0x0A 0x00          DC8      "\n",0x0,0x0   

   \              0x00 0x00

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable29_1:
   \        0x0   0x....'....        DC32     g_flagRspID

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable29_2:
   \        0x0   0x....'....        DC32     `_MakeRFCmd::__func__`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable29_3:
   \        0x0   0x....'....        DC32     ?_0

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable29_4:
   \        0x0   0x....'....        DC32     `SendStatReq::__func__`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable29_5:
   \        0x0   0x....'....        DC32     `SendStat::__func__`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable29_6:
   \        0x0   0x....'....        DC32     g_nManHopping

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable29_7:
   \        0x0   0x....'....        DC32     g_nRFMode

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable29_8:
   \        0x0   0x....'....        DC32     g_nDevFlag

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable29_9:
   \        0x0   0x....'....        DC32     `SendRouteReq::__func__`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable29_10:
   \        0x0   0x....'....        DC32     `SendRouteRsp::__func__`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable29_11:
   \        0x0   0x....'....        DC32     `SendPA::__func__`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable30:
   \        0x0   0x....'....        DC32     `SendCall::__func__`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable31:
   \        0x0   0x....'....        DC32     ChTx_1

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable31_1:
   \        0x0   0x....'....        DC32     ?_0

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable31_2:
   \        0x0   0x....'....        DC32     `SendOCCPA::__func__`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable31_3:
   \        0x0   0x....'....        DC32     `SendLight::__func__`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable31_4:
   \        0x0   0x....'....        DC32     `SendRFCmdCh::__func__`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable31_5:
   \        0x0   0x....'....        DC32     `SendRFCmd::__func__`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable31_6:
   \        0x0   0x....'....        DC32     `SendRFCmdReset::__func__`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable31_7:
   \        0x0   0x....'....        DC32     ?_1

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable31_8:
   \        0x0   0x....'....        DC32     `SendRFCmdCar::__func__`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable31_9:
   \        0x0   0x....'....        DC32     ?_2

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable31_10:
   \        0x0   0x....'....        DC32     `SendRFCmdTS::__func__`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable31_11:
   \        0x0   0x....'....        DC32     ?_3

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable31_12:
   \        0x0   0x....'....        DC32     `SendRFCmdRFMode::__func__`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable31_13:
   \        0x0   0x....'....        DC32     ?_4

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable31_14:
   \        0x0   0x....'....        DC32     `SendRFCmdDFUMode::__func__`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable31_15:
   \        0x0   0x....'....        DC32     ?_5

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable31_16:
   \        0x0   0x....'....        DC32     `SendRFCmdUpgrade::__func__`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable31_17:
   \        0x0   0x....'....        DC32     ?_6

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable31_18:
   \        0x0   0x....'....        DC32     `SendUpgrStat::__func__`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable31_19:
   \        0x0   0x....'....        DC32     ?_7

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable31_20:
   \        0x0   0x....'....        DC32     g_idxTrainSet

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable31_21:
   \        0x0   0x....'....        DC32     g_nCarNo

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable31_22:
   \        0x0   0x....'....        DC32     ChTx_2

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable31_23:
   \        0x0   0x....'....        DC32     `ProcPktStatReq::__func__`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable31_24:
   \        0x0   0x....'....        DC32     g_devStat

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable31_25:
   \        0x0   0x....'....        DC32     g_nRSSI

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable31_26:
   \        0x0   0x....'....        DC32     `ProcPktStat::__func__`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable31_27:
   \        0x0   0x....'....        DC32     g_bSetRspIDManual

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable31_28:
   \        0x0   0x....'....        DC32     `ProcPktRouteReq::__func__`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable31_29:
   \        0x0   0x....'....        DC32     g_nStampRouteRsp

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable31_30:
   \        0x0   0x....'....        DC32     g_nIdxRouteFindNext

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable31_31:
   \        0x0   0x....'....        DC32     `ProcPktRouteRsp::__func__`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable31_32:
   \        0x0   0x....'....        DC32     `ProcPktCtrlPaCall::__func__`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable31_33:
   \        0x0   0x....'....        DC32     ?_8

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable31_34:
   \        0x0   0x....'....        DC32     ?_9

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable31_35:
   \        0x0   0x4002'1000        DC32     0x40021000

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable31_36:
   \        0x0   0x....'....        DC32     ?_10

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable31_37:
   \        0x0   0x....'....        DC32     ?_11

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable31_38:
   \        0x0   0x....'....        DC32     ?_12

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable31_39:
   \        0x0   0x....'....        DC32     ?_13

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable31_40:
   \        0x0   0x....'....        DC32     g_nStampRxPkt

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable31_41:
   \        0x0   0x....'....        DC32     `ProcPktPA::__func__`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable31_42:
   \        0x0   0x....'....        DC32     g_qBufAudioRx

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable31_43:
   \        0x0   0x4002'0400        DC32     0x40020400

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable31_44:
   \        0x0   0x....'....        DC32     `ProcPktCall::__func__`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable31_45:
   \        0x0   0x....'....        DC32     `ProcPktDevConn::__func__`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable31_46:
   \        0x0   0x....'....        DC32     `ProcPktLight::__func__`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable31_47:
   \        0x0   0x....'....        DC32     `ProcPktCmd::__func__`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable31_48:
   \        0x0   0x....'....        DC32     ?_15

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable31_49:
   \        0x0   0x....'....        DC32     `ProcPktCmdRsp::__func__`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable31_50:
   \        0x0   0x....'....        DC32     `ProcPktUpgr::__func__`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable31_51:
   \        0x0   0x0808'0000        DC32     0x8080000

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable31_52:
   \        0x0   0x....'....        DC32     ?_16

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable31_53:
   \        0x0   0x....'....        DC32     ?_17

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable31_54:
   \        0x0   0x....'....        DC32     ?_18

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable31_55:
   \        0x0   0xE004'2008        DC32     0xe0042008

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable31_56:
   \        0x0   0x....'....        DC32     ?_19

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable31_57:
   \        0x0   0x....'....        DC32     ?_20

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable31_58:
   \        0x0   0x....'....        DC32     s_bUpgrDataValid

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable31_59:
   \        0x0   0x....'....        DC32     `ProcPktUpgr::s_rxPkt`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable31_60:
   \        0x0   0x....'....        DC32     ?_21

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable31_61:
   \        0x0   0x....'....        DC32     ?_22

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable31_62:
   \        0x0   0x....'....        DC32     ?_23

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable31_63:
   \        0x0   0x....'....        DC32     hi2c1

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable31_64:
   \        0x0   0x....'....        DC32     ?_24

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable31_65:
   \        0x0   0x....'....        DC32     ?_25

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable31_66:
   \        0x0   0x....'....        DC32     `ProcPktUpgrStat::__func__`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable31_67:
   \        0x0   0x....'....        DC32     ?_26

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable31_68:
   \        0x0   0x....'....        DC32     ?_27

   \                                 In section .rodata, align 4
   \                     ?_0:
   \        0x0   0x25 0x73          DC8 "%s(%d)\012"

   \              0x28 0x25    

   \              0x64 0x29    

   \              0x0A 0x00

   \                                 In section .rodata, align 4
   \                     ?_1:
   \        0x0   0x72 0x65          DC8 "reset"

   \              0x73 0x65    

   \              0x74 0x00
   \        0x6                      DS8 2

   \                                 In section .rodata, align 4
   \                     ?_2:
   \        0x0   0x63 0x61          DC8 "car %d"

   \              0x72 0x20    

   \              0x25 0x64    

   \              0x00
   \        0x7                      DS8 1

   \                                 In section .rodata, align 4
   \                     ?_3:
   \        0x0   0x74 0x73          DC8 "ts %d"

   \              0x20 0x25    

   \              0x64 0x00
   \        0x6                      DS8 2

   \                                 In section .rodata, align 4
   \                     ?_4:
   \        0x0   0x72 0x66          DC8 "rfmod %d"

   \              0x6D 0x6F    

   \              0x64 0x20    

   \              0x25 0x64    

   \              0x00
   \        0x9                      DS8 3

   \                                 In section .rodata, align 4
   \                     ?_5:
   \        0x0   0x73 0x74          DC8 "stboot"

   \              0x62 0x6F    

   \              0x6F 0x74    

   \              0x00
   \        0x7                      DS8 1

   \                                 In section .rodata, align 4
   \                     ?_6:
   \        0x0   0x75 0x70          DC8 "upgrade 1"

   \              0x67 0x72    

   \              0x61 0x64    

   \              0x65 0x20    

   \              0x31 0x00
   \        0xA                      DS8 2

   \                                 In section .rodata, align 4
   \                     ?_7:
   \        0x0   0x25 0x73          DC8 "%s(%d) - %d\012"

   \              0x28 0x25    

   \              0x64 0x29    

   \              0x20 0x2D    

   \              0x20 0x25    

   \              0x64 0x0A    

   \              0x00
   \        0xD                      DS8 3

   \                                 In section .rodata, align 4
   \                     ?_8:
   \        0x0   0x5B 0x53          DC8 "[Start]"

   \              0x74 0x61    

   \              0x72 0x74    

   \              0x5D 0x00

   \                                 In section .rodata, align 4
   \                     ?_9:
   \        0x0   0x5B 0x53          DC8 "[Stop]"

   \              0x74 0x6F    

   \              0x70 0x5D    

   \              0x00
   \        0x7                      DS8 1

   \                                 In section .rodata, align 4
   \                     ?_10:
   \        0x0   0x25 0x73          DC8 "%s:Invalid\012"

   \              0x3A 0x49    

   \              0x6E 0x76    

   \              0x61 0x6C    

   \              0x69 0x64    

   \              0x0A 0x00

   \                                 In section .rodata, align 4
   \                     ?_11:
   \        0x0   0x5B 0x50          DC8 "[PA]"

   \              0x41 0x5D    

   \              0x00
   \        0x5                      DS8 3

   \                                 In section .rodata, align 4
   \                     ?_12:
   \        0x0   0x5B 0x43          DC8 "[Call]"

   \              0x61 0x6C    

   \              0x6C 0x5D    

   \              0x00
   \        0x7                      DS8 1

   \                                 In section .rodata, align 4
   \                     ?_13:
   \        0x0   0x5B 0x4F          DC8 "[OccPa]"

   \              0x63 0x63    

   \              0x50 0x61    

   \              0x5D 0x00

   \                                 In section .rodata, align 2
   \        0x0   0x0A 0x00          DC8 "\012"

   \                                 In section .rodata, align 4
   \                     ?_15:
   \        0x0   0x25 0x73          DC8 "%s(%d) - %s\012"

   \              0x28 0x25    

   \              0x64 0x29    

   \              0x20 0x2D    

   \              0x20 0x25    

   \              0x73 0x0A    

   \              0x00
   \        0xD                      DS8 3

   \                                 In section .rodata, align 4
   \                     ?_16:
   \        0x0   0x25 0x73          DC8 "%s(%d) - Out Of Range - baseAddr(0x%08X)\012"

   \              0x28 0x25    

   \              0x64 0x29    

   \              0x20 0x2D    

   \              0x20 0x4F    

   \              0x75 0x74    

   \              0x20 0x4F    

   \              0x66 0x20    

   \              0x52 0x61    

   \              0x6E 0x67    

   \              0x65 0x20    

   \              0x2D 0x20    

   \              0x62 0x61    

   \              0x73 0x65    

   \              0x41 0x64    

   \              0x64 0x72    

   \              0x28 0x30    

   \              0x78 0x25    

   \              0x30 0x38    

   \              0x58 0x29    

   \              0x0A 0x00
   \       0x2A                      DS8 2

   \                                 In section .rodata, align 4
   \                     ?_17:
   \        0x0   0x25 0x73          DC8 "%s(%d) - Start Upgrade\012"

   \              0x28 0x25    

   \              0x64 0x29    

   \              0x20 0x2D    

   \              0x20 0x53    

   \              0x74 0x61    

   \              0x72 0x74    

   \              0x20 0x55    

   \              0x70 0x67    

   \              0x72 0x61    

   \              0x64 0x65    

   \              0x0A 0x00

   \                                 In section .rodata, align 4
   \                     ?_18:
   \        0x0   0x5B 0x25          DC8 "[%08d] Flash Erase - Skip ( Retry - Upgrade )\012"

   \              0x30 0x38    

   \              0x64 0x5D    

   \              0x20 0x46    

   \              0x6C 0x61    

   \              0x73 0x68    

   \              0x20 0x45    

   \              0x72 0x61    

   \              0x73 0x65    

   \              0x20 0x2D    

   \              0x20 0x53    

   \              0x6B 0x69    

   \              0x70 0x20    

   \              0x28 0x20    

   \              0x52 0x65    

   \              0x74 0x72    

   \              0x79 0x20    

   \              0x2D 0x20    

   \              0x55 0x70    

   \              0x67 0x72    

   \              0x61 0x64    

   \              0x65 0x20    

   \              0x29 0x0A    

   \              0x00
   \       0x2F                      DS8 1

   \                                 In section .rodata, align 4
   \                     ?_19:
   \        0x0   0x5B 0x25          DC8 "[%08d] Flash Erase - Start\012"

   \              0x30 0x38    

   \              0x64 0x5D    

   \              0x20 0x46    

   \              0x6C 0x61    

   \              0x73 0x68    

   \              0x20 0x45    

   \              0x72 0x61    

   \              0x73 0x65    

   \              0x20 0x2D    

   \              0x20 0x53    

   \              0x74 0x61    

   \              0x72 0x74    

   \              0x0A 0x00

   \                                 In section .rodata, align 4
   \                     ?_20:
   \        0x0   0x5B 0x25          DC8 "[%08d] Flash Erase - End\012"

   \              0x30 0x38    

   \              0x64 0x5D    

   \              0x20 0x46    

   \              0x6C 0x61    

   \              0x73 0x68    

   \              0x20 0x45    

   \              0x72 0x61    

   \              0x73 0x65    

   \              0x20 0x2D    

   \              0x20 0x45    

   \              0x6E 0x64    

   \              0x0A 0x00
   \       0x1A                      DS8 2

   \                                 In section .rodata, align 4
   \                     ?_21:
   \        0x0   0x25 0x73          DC8 "%s(%d) - Error idx(%d)\012"

   \              0x28 0x25    

   \              0x64 0x29    

   \              0x20 0x2D    

   \              0x20 0x45    

   \              0x72 0x72    

   \              0x6F 0x72    

   \              0x20 0x69    

   \              0x64 0x78    

   \              0x28 0x25    

   \              0x64 0x29    

   \              0x0A 0x00

   \                                 In section .rodata, align 4
   \                     ?_22:
   \        0x0   0x25 0x73          DC8 0x25, 0x73, 0x28, 0x25, 0x64, 0x29, 0x20, 0x2D

   \              0x28 0x25    

   \              0x64 0x29    

   \              0x20 0x2D
   \        0x8   0x20 0x45          DC8 0x20, 0x45, 0x6E, 0x64, 0x20, 0x55, 0x70, 0x67

   \              0x6E 0x64    

   \              0x20 0x55    

   \              0x70 0x67
   \       0x10   0x72 0x61          DC8 0x72, 0x61, 0x64, 0x65, 0x20, 0x28, 0x20, 0x72

   \              0x64 0x65    

   \              0x20 0x28    

   \              0x20 0x72
   \       0x18   0x78 0x50          DC8 0x78, 0x50, 0x6B, 0x74, 0x20, 0x3A, 0x20, 0x25

   \              0x6B 0x74    

   \              0x20 0x3A    

   \              0x20 0x25
   \       0x20   0x64 0x20          DC8 0x64, 0x20, 0x2F, 0x20, 0x74, 0x6F, 0x74, 0x50

   \              0x2F 0x20    

   \              0x74 0x6F    

   \              0x74 0x50
   \       0x28   0x6B 0x74          DC8 0x6B, 0x74, 0x20, 0x3A, 0x20, 0x25, 0x64, 0x20

   \              0x20 0x3A    

   \              0x20 0x25    

   \              0x64 0x20
   \       0x30   0x29 0x0A          DC8 0x29, 0x0A, 0

   \              0x00
   \       0x33                      DS8 1

   \                                 In section .rodata, align 4
   \                     ?_23:
   \        0x0   0x25 0x73          DC8 "%s(%d) - Upgrade Success ( Size : %d )\012"

   \              0x28 0x25    

   \              0x64 0x29    

   \              0x20 0x2D    

   \              0x20 0x55    

   \              0x70 0x67    

   \              0x72 0x61    

   \              0x64 0x65    

   \              0x20 0x53    

   \              0x75 0x63    

   \              0x63 0x65    

   \              0x73 0x73    

   \              0x20 0x28    

   \              0x20 0x53    

   \              0x69 0x7A    

   \              0x65 0x20    

   \              0x3A 0x20    

   \              0x25 0x64    

   \              0x20 0x29    

   \              0x0A 0x00

   \                                 In section .rodata, align 4
   \                     ?_24:
   \        0x0   0x25 0x73          DC8 0x25, 0x73, 0x28, 0x25, 0x64, 0x29, 0x20, 0x2D

   \              0x28 0x25    

   \              0x64 0x29    

   \              0x20 0x2D
   \        0x8   0x20 0x45          DC8 0x20, 0x45, 0x45, 0x50, 0x52, 0x4F, 0x4D, 0x20

   \              0x45 0x50    

   \              0x52 0x4F    

   \              0x4D 0x20
   \       0x10   0x5B 0x30          DC8 0x5B, 0x30, 0x2C, 0x31, 0x5D, 0x20, 0x3A, 0x20

   \              0x2C 0x31    

   \              0x5D 0x20    

   \              0x3A 0x20
   \       0x18   0x30 0x78          DC8 0x30, 0x78, 0x25, 0x30, 0x32, 0x58, 0x20, 0x30

   \              0x25 0x30    

   \              0x32 0x58    

   \              0x20 0x30
   \       0x20   0x78 0x25          DC8 0x78, 0x25, 0x30, 0x32, 0x58, 0x20, 0x2F, 0x20

   \              0x30 0x32    

   \              0x58 0x20    

   \              0x2F 0x20
   \       0x28   0x28 0x20          DC8 0x28, 0x20, 0x62, 0x69, 0x6E, 0x20, 0x73, 0x69

   \              0x62 0x69    

   \              0x6E 0x20    

   \              0x73 0x69
   \       0x30   0x7A 0x65          DC8 0x7A, 0x65, 0x20, 0x3A, 0x20, 0x25, 0x64, 0x20

   \              0x20 0x3A    

   \              0x20 0x25    

   \              0x64 0x20
   \       0x38   0x29 0x0A          DC8 0x29, 0x0A, 0

   \              0x00
   \       0x3B                      DS8 1

   \                                 In section .rodata, align 4
   \                     ?_25:
   \        0x0   0x25 0x73          DC8 "%s(%d) - Upgrade Failed\012"

   \              0x28 0x25    

   \              0x64 0x29    

   \              0x20 0x2D    

   \              0x20 0x55    

   \              0x70 0x67    

   \              0x72 0x61    

   \              0x64 0x65    

   \              0x20 0x46    

   \              0x61 0x69    

   \              0x6C 0x65    

   \              0x64 0x0A    

   \              0x00
   \       0x19                      DS8 3

   \                                 In section .rodata, align 4
   \                     ?_26:
   \        0x0   0x53 0x75          DC8 "Success(%d/%d)"

   \              0x63 0x63    

   \              0x65 0x73    

   \              0x73 0x28    

   \              0x25 0x64    

   \              0x2F 0x25    

   \              0x64 0x29    

   \              0x00
   \        0xF                      DS8 1

   \                                 In section .rodata, align 4
   \                     ?_27:
   \        0x0   0x46 0x61          DC8 "Failed(%d/%d)"

   \              0x69 0x6C    

   \              0x65 0x64    

   \              0x28 0x25    

   \              0x64 0x2F    

   \              0x25 0x64    

   \              0x29 0x00
   \        0xE                      DS8 2
   1406          

   Maximum stack usage in bytes:

   .cstack Function
   ------- --------
      16   ProcPktCall
        16   -> GetDbg
        16   -> GetDevID
        16   -> HAL_GPIO_WritePin
        16   -> HAL_GetTick
        16   -> RFM_Spk
        16   -> SetRFMMode
        16   -> printf
        16   -> qBufPut
       8   ProcPktCmd
         8   -> GetDbg
         8   -> ProcessCommand
         8   -> printf
       8   ProcPktCmdRsp
         8   -> GetDbg
         8   -> printf
      16   ProcPktCtrlPaCall
        16   -> GetChNearRFT
        16   -> GetDbg
        16   -> GetDevID
        16   -> HAL_GPIO_WritePin
        16   -> HAL_GetTick
        16   -> SetChPARFT
        16   -> SetRFMMode
        16   -> printf
      16   ProcPktDevConn
        16   -> GetDbg
        16   -> GetDevID
        16   -> SetDevConn
        16   -> printf
       8   ProcPktLight
         8   -> GetDbg
         8   -> GetDevID
         8   -> HAL_GPIO_WritePin
         8   -> printf
      16   ProcPktPA
        16   -> GetDbg
        16   -> GetDevID
        16   -> HAL_GPIO_WritePin
        16   -> HAL_GetTick
        16   -> RFM_Spk
        16   -> SetRFMMode
        16   -> printf
        16   -> qBufPut
      16   ProcPktRouteReq
        16   -> GetChRx
        16   -> GetDbg
        16   -> GetDevID
        16   -> SendRouteRsp
        16   -> SetChRFMDown
        16   -> SetChRFMUp
        16   -> printf
      16   ProcPktRouteRsp
        16   -> GetChRx
        16   -> GetDbg
        16   -> GetDevID
        16   -> HAL_GetTick
        16   -> SetChRFMDown
        16   -> SetChRFMUp
        16   -> printf
      16   ProcPktStat
        16   -> GetDbg
        16   -> SetStat
        16   -> UpdateStat
        16   -> printf
      24   ProcPktStatReq
        24   -> GetDbg
        24   -> GetDevID
        24   -> HAL_GetTick
        24   -> SendStat
        24   -> SetStat
        24   -> printf
      72   ProcPktUpgr
        72   -> FLASH_If_Erase
        72   -> FLASH_If_Write
        72   -> GetDbg
        72   -> HAL_Delay
        72   -> HAL_GetTick
        72   -> M24_HAL_ReadBytes
        72   -> M24_HAL_WriteBytes
        72   -> SendUpgrStat
        72   -> SetRFMMode
        72   -> __aeabi_memset
        72   -> cmd_reset
        72   -> printf
      64   ProcPktUpgrStat
        64   -> GetDbg
        64   -> LCDPrintfXY
        64   -> printf
        64   -> sprintf
      88   SendCall
        88   -> GetChPA
        88   -> GetChPARFT
        88   -> SendPktCh
        88   -> _MakePktHdr2
        88   -> __aeabi_memset
        88   -> printf
      88   SendLight
        88   -> GetChPA
        88   -> SendPktCh
        88   -> _MakePktHdr2
        88   -> __aeabi_memset
        88   -> printf
       8   SendLightOff
         8   -> SendLight
       8   SendLightOn
         8   -> SendLight
      88   SendOCCPA
        88   -> GetChPA
        88   -> GetChPARFT
        88   -> SendPktCh
        88   -> _MakePktHdr2
        88   -> __aeabi_memset
        88   -> printf
      88   SendPA
        88   -> GetChPA
        88   -> GetChPARFT
        88   -> SendPktCh
        88   -> _MakePktHdr2
        88   -> __aeabi_memset
        88   -> printf
      80   SendRFCmd
        80   -> HAL_Delay
        80   -> SendPktCh
        80   -> _MakeRFCmd
        80   -> printf
     112   SendRFCmdCar
       112   -> SendRFCmd
       112   -> printf
       112   -> sprintf
      80   SendRFCmdCh
        80   -> SendPktCh
        80   -> _MakeRFCmd
        80   -> printf
       8   SendRFCmdDFUMode
         8   -> SendRFCmd
         8   -> printf
     112   SendRFCmdRFMode
       112   -> SendRFCmd
       112   -> printf
       112   -> sprintf
      72   SendRFCmdReset
        72   -> SendPktCh
        72   -> SendRFCmd
        72   -> _MakeRFCmd
        72   -> printf
     112   SendRFCmdTS
       112   -> SendRFCmd
       112   -> printf
       112   -> sprintf
       8   SendRFCmdUpgrade
         8   -> HAL_Delay
         8   -> SendRFCmd
         8   -> SendRFCmdCh
         8   -> SetUpgrReTry
         8   -> UpgrSendImageApp
         8   -> printf
      88   SendRouteReq
        88   -> GetCarNo
        88   -> GetChRx
        88   -> GetDbg
        88   -> GetDevID
        88   -> GetTrainSetIdx
        88   -> SendPktCh
        88   -> _MakePktHdr
        88   -> __aeabi_memset
        88   -> printf
      88   SendRouteRsp
        88   -> GetCarNo
        88   -> GetChRx
        88   -> GetDbg
        88   -> GetDevID
        88   -> GetTrainSetIdx
        88   -> SendPktCh
        88   -> _MakePktHdr
        88   -> __aeabi_memset
        88   -> printf
      96   SendStat
        96   -> GetCarNo
        96   -> GetChRx
        96   -> GetDbg
        96   -> GetDevID
        96   -> GetTrainSetIdx
        96   -> HAL_Delay
        96   -> HAL_GetTick
        96   -> SendPktCh
        96   -> _MakePktHdr
        96   -> __aeabi_memset
        96   -> printf
      88   SendStatReq
        88   -> GetCarNo
        88   -> GetChNearRFM
        88   -> GetChRx
        88   -> GetDbg
        88   -> GetDevID
        88   -> GetTrainSetIdx
        88   -> SendPktCh
        88   -> _MakePktHdr
        88   -> __aeabi_memset
        88   -> printf
     104   SendUpgrData
       104   -> GetDevID
       104   -> GetUpgrReTry
       104   -> SendPktCh
       104   -> _MakePktHdr
       104   -> __aeabi_memcpy
       104   -> __aeabi_memset
      88   SendUpgrStat
        88   -> GetDevID
        88   -> HAL_Delay
        88   -> SendPktCh
        88   -> _MakePktHdr
        88   -> __aeabi_memset
        88   -> printf
      24   _MakePktHdr
        24   -> GetCarNo
        24   -> GetDevID
      16   _MakePktHdr2
        16   -> GetChPARFT
        16   -> GetChRx
        16   -> GetRFTID
        16   -> GetTrainSetIdx
      32   _MakeRFCmd
        32   -> GetDevID
        32   -> _MakePktHdr
        32   -> __aeabi_memset
        32   -> printf
        32   -> strcpy


   Section sizes:

   Bytes  Function/Label
   -----  --------------
       4  ??DataTable27
       4  ??DataTable29
       4  ??DataTable29_1
       4  ??DataTable29_10
       4  ??DataTable29_11
       4  ??DataTable29_2
       4  ??DataTable29_3
       4  ??DataTable29_4
       4  ??DataTable29_5
       4  ??DataTable29_6
       4  ??DataTable29_7
       4  ??DataTable29_8
       4  ??DataTable29_9
       4  ??DataTable30
       4  ??DataTable31
       4  ??DataTable31_1
       4  ??DataTable31_10
       4  ??DataTable31_11
       4  ??DataTable31_12
       4  ??DataTable31_13
       4  ??DataTable31_14
       4  ??DataTable31_15
       4  ??DataTable31_16
       4  ??DataTable31_17
       4  ??DataTable31_18
       4  ??DataTable31_19
       4  ??DataTable31_2
       4  ??DataTable31_20
       4  ??DataTable31_21
       4  ??DataTable31_22
       4  ??DataTable31_23
       4  ??DataTable31_24
       4  ??DataTable31_25
       4  ??DataTable31_26
       4  ??DataTable31_27
       4  ??DataTable31_28
       4  ??DataTable31_29
       4  ??DataTable31_3
       4  ??DataTable31_30
       4  ??DataTable31_31
       4  ??DataTable31_32
       4  ??DataTable31_33
       4  ??DataTable31_34
       4  ??DataTable31_35
       4  ??DataTable31_36
       4  ??DataTable31_37
       4  ??DataTable31_38
       4  ??DataTable31_39
       4  ??DataTable31_4
       4  ??DataTable31_40
       4  ??DataTable31_41
       4  ??DataTable31_42
       4  ??DataTable31_43
       4  ??DataTable31_44
       4  ??DataTable31_45
       4  ??DataTable31_46
       4  ??DataTable31_47
       4  ??DataTable31_48
       4  ??DataTable31_49
       4  ??DataTable31_5
       4  ??DataTable31_50
       4  ??DataTable31_51
       4  ??DataTable31_52
       4  ??DataTable31_53
       4  ??DataTable31_54
       4  ??DataTable31_55
       4  ??DataTable31_56
       4  ??DataTable31_57
       4  ??DataTable31_58
       4  ??DataTable31_59
       4  ??DataTable31_6
       4  ??DataTable31_60
       4  ??DataTable31_61
       4  ??DataTable31_62
       4  ??DataTable31_63
       4  ??DataTable31_64
       4  ??DataTable31_65
       4  ??DataTable31_66
       4  ??DataTable31_67
       4  ??DataTable31_68
       4  ??DataTable31_7
       4  ??DataTable31_8
       4  ??DataTable31_9
       8  ?_0
       8  ?_1
      12  ?_10
       8  ?_11
       8  ?_12
       8  ?_13
       2  ?_14
      16  ?_15
      44  ?_16
      24  ?_17
      48  ?_18
      28  ?_19
       8  ?_2
      28  ?_20
      24  ?_21
      52  ?_22
      40  ?_23
      60  ?_24
      28  ?_25
      16  ?_26
      16  ?_27
       8  ?_3
      12  ?_4
       8  ?_5
      12  ?_6
      16  ?_7
       8  ?_8
       8  ?_9
       4  ChTS1_1
       4  ChTx_1
       4  ChTx_2
     102  ProcPktCall
      70  ProcPktCmd
      28  ProcPktCmdRsp
     198  ProcPktCtrlPaCall
      70  ProcPktDevConn
      84  ProcPktLight
     142  ProcPktPA
      90  ProcPktRouteReq
     102  ProcPktRouteRsp
      82  ProcPktStat
     116  ProcPktStatReq
     676  ProcPktUpgr
     106  ProcPktUpgrStat
      92  SendCall
      66  SendLight
      10  SendLightOff
      10  SendLightOn
      90  SendOCCPA
      90  SendPA
      64  SendRFCmd
      46  SendRFCmdCar
      50  SendRFCmdCh
      30  SendRFCmdDFUMode
      46  SendRFCmdRFMode
      56  SendRFCmdReset
      46  SendRFCmdTS
      68  SendRFCmdUpgrade
     106  SendRouteReq
     106  SendRouteRsp
     206  SendStat
     104  SendStatReq
     136  SendUpgrData
     118  SendUpgrStat
     158  _MakePktHdr
     126  _MakePktHdr2
      78  _MakeRFCmd
   1'024  s_bUpgrDataValid
       4  s_rxPkt
     444  -- Other

 
 1'028 bytes in section .bss
    12 bytes in section .data
 1'002 bytes in section .rodata
 4'100 bytes in section .text
 
 4'100 bytes of CODE  memory
 1'002 bytes of CONST memory
 1'040 bytes of DATA  memory

Errors: none
Warnings: 83
