###############################################################################
#
# IAR ANSI C/C++ Compiler V9.30.1.335/W64 for ARM         22/Sep/2022  13:40:08
# Copyright 1999-2022 IAR Systems AB.
#
#    Cpu mode                 =  thumb
#    Endian                   =  little
#    Source file              =
#        C:\D\Git_Hub\STM_IAR_SIL_Change\Library\RFMProtocol.c
#    Command line             =
#        -f
#        C:\D\Git_Hub\STM_IAR_SIL_Change\EWARM\RFM\Obj\Library\RFMProtocol.o.rsp
#        (C:\D\Git_Hub\STM_IAR_SIL_Change\Library\RFMProtocol.c -D
#        USE_HAL_DRIVER -D STM32F407xx -lC
#        C:\D\Git_Hub\STM_IAR_SIL_Change\EWARM\RFM\List\Library -o
#        C:\D\Git_Hub\STM_IAR_SIL_Change\EWARM\RFM\Obj\Library --no_cse
#        --no_unroll --no_inline --no_code_motion --no_tbaa --no_clustering
#        --no_scheduling --debug --endian=little --cpu=Cortex-M4 -e
#        --fpu=VFPv4_sp --dlib_config "C:\Program Files\IAR Systems\Embedded
#        Workbench 9.1\arm\inc\c\DLib_Config_Full.h" -I
#        C:\D\Git_Hub\STM_IAR_SIL_Change\EWARM/../USB_DEVICE/App\ -I
#        C:\D\Git_Hub\STM_IAR_SIL_Change\EWARM/../USB_DEVICE/Target\ -I
#        C:\D\Git_Hub\STM_IAR_SIL_Change\EWARM/../Core/Inc\ -I
#        C:\D\Git_Hub\STM_IAR_SIL_Change\EWARM/../Drivers/STM32F4xx_HAL_Driver/Inc\
#        -I
#        C:\D\Git_Hub\STM_IAR_SIL_Change\EWARM/../Drivers/STM32F4xx_HAL_Driver/Inc/Legacy\
#        -I
#        C:\D\Git_Hub\STM_IAR_SIL_Change\EWARM/../Middlewares/ST/STM32_USB_Device_Library/Core/Inc\
#        -I
#        C:\D\Git_Hub\STM_IAR_SIL_Change\EWARM/../Middlewares/ST/STM32_USB_Device_Library/Class/CDC/Inc\
#        -I
#        C:\D\Git_Hub\STM_IAR_SIL_Change\EWARM/../Drivers/CMSIS/Device/ST/STM32F4xx/Include\
#        -I C:\D\Git_Hub\STM_IAR_SIL_Change\EWARM/../Drivers/CMSIS/Include\ -I
#        C:\D\Git_Hub\STM_IAR_SIL_Change\EWARM/../Drivers/radio\ -I
#        C:\D\Git_Hub\STM_IAR_SIL_Change\EWARM/../Drivers/radio/Si446x\ -I
#        C:\D\Git_Hub\STM_IAR_SIL_Change\EWARM/../Drivers/display\ -I
#        C:\D\Git_Hub\STM_IAR_SIL_Change\EWARM/../Library\ -I
#        C:\D\Git_Hub\STM_IAR_SIL_Change\EWARM\..\Drivers\display\fonts\ -I
#        C:\D\Git_Hub\STM_IAR_SIL_Change\EWARM\..\Drivers\STM32F4xx_HAL_Driver\Src\
#        -On --use_c++_inline -I "C:\Program Files\IAR Systems\Embedded
#        Workbench 9.1\arm\CMSIS\Core\Include\\") --dependencies=n
#        C:\D\Git_Hub\STM_IAR_SIL_Change\EWARM\RFM\Obj\Library\RFMProtocol.o.d
#    Locale                   =  C
#    List file                =
#        C:\D\Git_Hub\STM_IAR_SIL_Change\EWARM\RFM\List\Library\RFMProtocol.lst
#    Object file              =
#        C:\D\Git_Hub\STM_IAR_SIL_Change\EWARM\RFM\Obj\Library\RFMProtocol.o
#    Runtime model:              
#      __CPP_Runtime          =  1
#      __SystemLibrary        =  DLib
#      __dlib_file_descriptor =  1
#      __dlib_version         =  6
#      __iar_require _Printf  =  flags,widths
#
###############################################################################

C:\D\Git_Hub\STM_IAR_SIL_Change\Library\RFMProtocol.c
      1          /*------------------------------------------------------------------------------------------
      2          	Project			: RFM ( RF-Module )
      3          	Description		: RFM Protocol Header
      4          
      5          	Writer			: $Author: zlkit $
      6          	Revision		: $Rev: 1446 $
      7          	Date			: 2020. 02.
      8          	Copyright		: Piranti Corp.
      9          	 
     10          	Revision History 
     11          	1. 2020. 02.	: Created
     12          -------------------------------------------------------------------------------------------*/
     13          
     14          #include <stdio.h>				//	printf()
     15          #include <stdint.h>				//	uint8_t, ...
     16          
     17          #include <string.h>				//	memset()
     18          
     19          #include "typedef.h"			//	char_t, int32_t, ...

  typedef unsigned char       BYTE;
                              ^
"C:\D\Git_Hub\STM_IAR_SIL_Change\Library\typedef.h",73  Warning[Pe301]: typedef
          name has already been declared (with same type)

  typedef unsigned short      WORD;
                              ^
"C:\D\Git_Hub\STM_IAR_SIL_Change\Library\typedef.h",77  Warning[Pe301]: typedef
          name has already been declared (with same type)
     20          
     21          #include "RFMProtocol.h"		//	RFM Protocol

  	};
  	 ^
"C:\D\Git_Hub\STM_IAR_SIL_Change\Library\RFMProtocol.h",304  Warning[Pe040]: 
          expected an identifier

  	};
  	 ^
"C:\D\Git_Hub\STM_IAR_SIL_Change\Library\RFMProtocol.h",322  Warning[Pe040]: 
          expected an identifier

  	};
  	 ^
"C:\D\Git_Hub\STM_IAR_SIL_Change\Library\RFMProtocol.h",468  Warning[Pe040]: 
          expected an identifier

  	};
  	 ^
"C:\D\Git_Hub\STM_IAR_SIL_Change\Library\RFMProtocol.h",506  Warning[Pe040]: 
          expected an identifier

  	};
  	 ^
"C:\D\Git_Hub\STM_IAR_SIL_Change\Library\RFMProtocol.h",511  Warning[Pe040]: 
          expected an identifier

  	};
  	 ^
"C:\D\Git_Hub\STM_IAR_SIL_Change\Library\RFMProtocol.h",533  Warning[Pe040]: 
          expected an identifier

  	};
  	 ^
"C:\D\Git_Hub\STM_IAR_SIL_Change\Library\RFMProtocol.h",559  Warning[Pe040]: 
          expected an identifier

  	};
  	 ^
"C:\D\Git_Hub\STM_IAR_SIL_Change\Library\RFMProtocol.h",567  Warning[Pe040]: 
          expected an identifier
     22          
     23          #include "radio.h"				//	vRadio_StartTx_Variable_Packet()

  # warning unrecognized compiler
    ^
"C:\D\Git_Hub\STM_IAR_SIL_Change\Drivers\radio\compiler_defs.h",744  Warning[Pa183]: 
          #warning directive: unrecognized compiler

  typedef unsigned char U8;
                        ^
"C:\D\Git_Hub\STM_IAR_SIL_Change\Drivers\radio\compiler_defs.h",788  Warning[Pe301]: 
          typedef name has already been declared (with same type)

  typedef unsigned int U16;
                       ^
"C:\D\Git_Hub\STM_IAR_SIL_Change\Drivers\radio\compiler_defs.h",789  Warning[Pe301]: 
          typedef name has already been declared (with same type)

  typedef unsigned long U32;
                        ^
"C:\D\Git_Hub\STM_IAR_SIL_Change\Drivers\radio\compiler_defs.h",790  Warning[Pe301]: 
          typedef name has already been declared (with same type)

  typedef signed char S8;
                      ^
"C:\D\Git_Hub\STM_IAR_SIL_Change\Drivers\radio\compiler_defs.h",792  Warning[Pe301]: 
          typedef name has already been declared (with same type)

  typedef signed int S16;
                     ^
"C:\D\Git_Hub\STM_IAR_SIL_Change\Drivers\radio\compiler_defs.h",793  Warning[Pe301]: 
          typedef name has already been declared (with same type)

  typedef signed long S32;
                      ^
"C:\D\Git_Hub\STM_IAR_SIL_Change\Drivers\radio\compiler_defs.h",794  Warning[Pe301]: 
          typedef name has already been declared (with same type)

  typedef bit BIT;
              ^
"C:\D\Git_Hub\STM_IAR_SIL_Change\Drivers\radio\compiler_defs.h",820  Warning[Pe301]: 
          typedef name has already been declared (with same type)
     24          
     25          #include "Adafruit_SSD1306.h"	//	LCDPrintf()
     26          
     27          #include "main.h"				//	FLASH_ON_Pin / GPIO_PIN_SET / ...
     28          
     29          #include "ProcPkt.h"			//	SendPacekt()
     30          
     31          #include "version.h"			//	Version Info
     32          
     33          #include "rfm.h"				//	g_nManHopping
     34          
     35          #include "audio.h"				//	I2S_DMA_LOOP_SIZE
     36          
     37          #include "flash_if.h"			//	FLASH_If_Write()
     38          
     39          #include "eeprom.h"				//	AddrEEPUpgrMGN1
     40          
     41          #include "cli.h"
     42          
     43          //==========================================================================
     44          //	Define
     45          
     46          //==========================================================================

   \                                 In section .data, align 4
     47          extern int ChTx_1 	= 	_ChTx_1;	//	* CH8 : 송신기#1 - (Car No : 11) - 915 + 0.25 * 8
   \                     ChTx_1:
   \        0x0   0x0000'0008        DC32 8

   \                                 In section .data, align 4
     48          extern int ChTx_2 	= 	_ChTx_2;	//	* CH9 : 송신기#2 - (Car No : 12)
   \                     ChTx_2:
   \        0x0   0x0000'000C        DC32 12

   \                                 In section .data, align 4
     49          extern int ChTS1_1 	= 	_ChTS1_1;	//	1호차 수신기 채널
   \                     ChTS1_1:
   \        0x0   0x0000'0015        DC32 21
     50          //==========================================================================
     51          
     52          
     53          

   \                                 In section .bss, align 4
     54          int m_lightReSendCnt = 0; // 수신기에서 사용하는 변수.
   \                     m_lightReSendCnt:
   \        0x0                      DS8 4

   \                                 In section .bss, align 4
     55          int m_lightTxSentCnt = 0; //송신기에서 전송하는 방법.
   \                     m_lightTxSentCnt:
   \        0x0                      DS8 4

   \                                 In section .data, align 4
     56          int m_light_Val = 0xFF;
   \                     m_light_Val:
   \        0x0   0x0000'00FF        DC32 255
     57          

   \                                 In section .bss, align 4
     58          int m_RouteReq_OK = 0; //Route 기능에서 내가 요청에 응답이 수신되었는지 확인.
   \                     m_RouteReq_OK:
   \        0x0                      DS8 4
     59          

   \                                 In section .bss, align 4
     60          int m_RouteRunFlag = 0; // 전파 방해금지를 위해 동작 조건을 설정.
   \                     m_RouteRunFlag:
   \        0x0                      DS8 4
     61          
     62          //==========================================================================
     63          //	Function
     64          
     65          
     66          //==========================================================================
     67          //		API
     68          //==========================================================================
     69          
     70          
     71          
     72          //==========================================================================
     73          //		Send Packet
     74          //==========================================================================
     75          
     76          //========================================================================

   \                                 In section .text, align 2, keep-with-next
     77          void _MakePktHdr	( RFMPkt *pPkt, int addrSrc, int addrDest, int nLen, int nPktCmd )
     78          //========================================================================
     79          {
   \                     _MakePktHdr: (+1)
   \        0x0   0xE92D 0x41F0      PUSH     {R4-R8,LR}
   \        0x4   0x0004             MOVS     R4,R0
   \        0x6   0x000D             MOVS     R5,R1
   \        0x8   0x0016             MOVS     R6,R2
   \        0xA   0x001F             MOVS     R7,R3
   \        0xC   0xF8DD 0x8018      LDR      R8,[SP, #+24]
     80          #if	defined(USE_HOPPING)
     81          
     82          	if ( nPktCmd == PktStat
     83          		|| nPktCmd == PktStatReq
     84          		|| nPktCmd == PktCmd
     85          		|| nPktCmd == PktUpgr
     86          		|| nPktCmd == PktRouteReq
     87          		|| nPktCmd == PktRouteRsp
     88          		)
   \       0x10   0xF1B8 0x0F01      CMP      R8,#+1
   \       0x14   0xD00E             BEQ.N    ??_MakePktHdr_0
   \       0x16   0xF1B8 0x0F11      CMP      R8,#+17
   \       0x1A   0xD00B             BEQ.N    ??_MakePktHdr_0
   \       0x1C   0xF1B8 0x0F20      CMP      R8,#+32
   \       0x20   0xD008             BEQ.N    ??_MakePktHdr_0
   \       0x22   0xF1B8 0x0F40      CMP      R8,#+64
   \       0x26   0xD005             BEQ.N    ??_MakePktHdr_0
   \       0x28   0xF1B8 0x0F31      CMP      R8,#+49
   \       0x2C   0xD002             BEQ.N    ??_MakePktHdr_0
   \       0x2E   0xF1B8 0x0F32      CMP      R8,#+50
   \       0x32   0xD10F             BNE.N    ??_MakePktHdr_1
     89          	{
     90          		//	상태정보의 경우 Seq / ID : 0x00
     91          		pPkt->hdr.bHdrID		=	HdrID1;		//	Header ID #1
   \                     ??_MakePktHdr_0: (+1)
   \       0x34   0x0020             MOVS     R0,R4
   \       0x36   0x8801             LDRH     R1,[R0, #+0]
   \       0x38   0x0489             LSLS     R1,R1,#+18
   \       0x3A   0x0C89             LSRS     R1,R1,#+18
   \       0x3C   0x8001             STRH     R1,[R0, #+0]
     92          		pPkt->hdr.nSeq			=	0x00;		//	Sequence
   \       0x3E   0x2000             MOVS     R0,#+0
   \       0x40   0x70A0             STRB     R0,[R4, #+2]
     93          		pPkt->hdr.nIDFlag		=	0x00;		//	ID Flag
   \       0x42   0x0020             MOVS     R0,R4
   \       0x44   0x8801             LDRH     R1,[R0, #+0]
   \       0x46   0xF411 0x4140      ANDS     R1,R1,#0xC000
   \       0x4A   0x8001             STRH     R1,[R0, #+0]
     94          
     95          		pPkt->dat.cmd.nSpare[0] = GetTrainSetIdx(); // 편성 정보를 전달한다. //_JDS
   \       0x4C   0x.... 0x....      BL       GetTrainSetIdx
   \       0x50   0x71A0             STRB     R0,[R4, #+6]
   \       0x52   0xE023             B.N      ??_MakePktHdr_2
     96          
     97          
     98          	}
     99          	else
    100          	{
    101          		g_nPktSeq++;
   \                     ??_MakePktHdr_1: (+1)
   \       0x54   0x.... 0x....      LDR.W    R1,??DataTable24
   \       0x58   0x7808             LDRB     R0,[R1, #+0]
   \       0x5A   0x1C40             ADDS     R0,R0,#+1
   \       0x5C   0x7008             STRB     R0,[R1, #+0]
    102          		if ( g_nPktSeq == 0 )	g_nPktSeq++;
   \       0x5E   0x7808             LDRB     R0,[R1, #+0]
   \       0x60   0x2800             CMP      R0,#+0
   \       0x62   0xD102             BNE.N    ??_MakePktHdr_3
   \       0x64   0x7808             LDRB     R0,[R1, #+0]
   \       0x66   0x1C40             ADDS     R0,R0,#+1
   \       0x68   0x7008             STRB     R0,[R1, #+0]
    103          		pPkt->hdr.nSeq			=	g_nPktSeq;			//
   \                     ??_MakePktHdr_3: (+1)
   \       0x6A   0x7808             LDRB     R0,[R1, #+0]
   \       0x6C   0x70A0             STRB     R0,[R4, #+2]
    104          
    105          		if ( GetDevID() == DevRF900T )
   \       0x6E   0x.... 0x....      BL       GetDevID
   \       0x72   0x2802             CMP      R0,#+2
   \       0x74   0xD10A             BNE.N    ??_MakePktHdr_4
    106          		{
    107          			//	송신기.
    108          			//		송신기의 송/수신반경과 수신기의 송/수신반경의 차이로 
    109          			//		송신기가 상태정보를 수신후에 수신기에 송신을 할때 범위에 도달하지 못하는 경우가 있으므로, 
    110          			//		수신기에서 중계를 할 수 있도록 송신기 ID만 설정하여 송신함.
    111          			pPkt->hdr.nIDFlag		=	(0x1 << GetCarNo());	//	송신기는 자신의 ID만 Set하여 전송.
   \       0x76   0x.... 0x....      BL       GetCarNo
   \       0x7A   0x0021             MOVS     R1,R4
   \       0x7C   0x2201             MOVS     R2,#+1
   \       0x7E   0xFA12 0xF000      LSLS     R0,R2,R0
   \       0x82   0x880A             LDRH     R2,[R1, #+0]
   \       0x84   0xF360 0x020D      BFI      R2,R0,#+0,#+14
   \       0x88   0x800A             STRH     R2,[R1, #+0]
   \       0x8A   0xE007             B.N      ??_MakePktHdr_2
    112          		}
    113          		else
    114          		{
    115          			//	수신기.
    116          			pPkt->hdr.nIDFlag		=	g_flagRspID;		//
   \                     ??_MakePktHdr_4: (+1)
   \       0x8C   0x0020             MOVS     R0,R4
   \       0x8E   0x.... 0x....      LDR.W    R1,??DataTable27
   \       0x92   0x8809             LDRH     R1,[R1, #+0]
   \       0x94   0x8802             LDRH     R2,[R0, #+0]
   \       0x96   0xF361 0x020D      BFI      R2,R1,#+0,#+14
   \       0x9A   0x8002             STRH     R2,[R0, #+0]
    117          		}
    118          	}
    119          
    120          #else
    121          
    122          	pPkt->hdr.addrSrc		=	addrSrc;		//	Src Address
    123          	pPkt->hdr.addrDest		=	addrDest;		//	Broadcast
    124          	pPkt->hdr.nLen			=	nLen;			//	Length
    125          
    126          #endif
    127          
    128          	pPkt->hdr.nPktCmd		=	nPktCmd;		//	Status
   \                     ??_MakePktHdr_2: (+1)
   \       0x9C   0xF884 0x8003      STRB     R8,[R4, #+3]
    129          }
   \       0xA0   0xE8BD 0x81F0      POP      {R4-R8,PC}
    130          
    131          #if defined(USE_CH_ISO_DEV)		//	장치별 채널분리.
    132          
    133          //========================================================================

   \                                 In section .text, align 2, keep-with-next
    134          void _MakePktHdr2	( RFMPkt *pPkt, int nPktCmd )
    135          //========================================================================
    136          {
   \                     _MakePktHdr2: (+1)
   \        0x0   0xB538             PUSH     {R3-R5,LR}
   \        0x2   0x0004             MOVS     R4,R0
   \        0x4   0x000D             MOVS     R5,R1
    137          	//	상태정보의 경우 Seq / ID : 0x00
    138          	pPkt->hdr2.bHdrID		=	HdrID2;				//	Header ID #1
   \        0x6   0x0020             MOVS     R0,R4
   \        0x8   0x7801             LDRB     R1,[R0, #+0]
   \        0xA   0xF011 0x013F      ANDS     R1,R1,#0x3F
   \        0xE   0xF051 0x0140      ORRS     R1,R1,#0x40
   \       0x12   0x7001             STRB     R1,[R0, #+0]
    139          	pPkt->hdr2.nSrcCh		=	GetChRx();			//	Source Channel
   \       0x14   0x.... 0x....      BL       GetChRx
   \       0x18   0x0021             MOVS     R1,R4
   \       0x1A   0x784A             LDRB     R2,[R1, #+1]
   \       0x1C   0xF360 0x0205      BFI      R2,R0,#+0,#+6
   \       0x20   0x704A             STRB     R2,[R1, #+1]
    140          	pPkt->hdr2.nTS			=	GetTrainSetIdx();	//	ID Flag
   \       0x22   0x.... 0x....      BL       GetTrainSetIdx
   \       0x26   0x0021             MOVS     R1,R4
   \       0x28   0x780A             LDRB     R2,[R1, #+0]
   \       0x2A   0xF360 0x0205      BFI      R2,R0,#+0,#+6
   \       0x2E   0x700A             STRB     R2,[R1, #+0]
    141          	pPkt->hdr2.nPktCmd		=	nPktCmd;			//	Status
   \       0x30   0x70E5             STRB     R5,[R4, #+3]
    142          
    143          	if((GetDevID() == DevRF900T && GetRFMMode() == RFMModeTx)|| (GetRFMMode() == RFMModeOcc) )
   \       0x32   0x.... 0x....      BL       GetDevID
   \       0x36   0x2802             CMP      R0,#+2
   \       0x38   0xD103             BNE.N    ??_MakePktHdr2_0
   \       0x3A   0x.... 0x....      BL       GetRFMMode
   \       0x3E   0x2801             CMP      R0,#+1
   \       0x40   0xD003             BEQ.N    ??_MakePktHdr2_1
   \                     ??_MakePktHdr2_0: (+1)
   \       0x42   0x.... 0x....      BL       GetRFMMode
   \       0x46   0x2803             CMP      R0,#+3
   \       0x48   0xD10C             BNE.N    ??_MakePktHdr2_2
    144          	{
    145          		// 전송 페키지 카운터.
    146          		g_nPktSeq_2++;
   \                     ??_MakePktHdr2_1: (+1)
   \       0x4A   0x.... 0x....      LDR.W    R1,??DataTable25
   \       0x4E   0x7808             LDRB     R0,[R1, #+0]
   \       0x50   0x1C40             ADDS     R0,R0,#+1
   \       0x52   0x7008             STRB     R0,[R1, #+0]
    147          		if ( g_nPktSeq_2 == 0 )	g_nPktSeq_2++;
   \       0x54   0x7808             LDRB     R0,[R1, #+0]
   \       0x56   0x2800             CMP      R0,#+0
   \       0x58   0xD102             BNE.N    ??_MakePktHdr2_3
   \       0x5A   0x7808             LDRB     R0,[R1, #+0]
   \       0x5C   0x1C40             ADDS     R0,R0,#+1
   \       0x5E   0x7008             STRB     R0,[R1, #+0]
    148          		pPkt->hdr2.nSeq			=	g_nPktSeq_2;
   \                     ??_MakePktHdr2_3: (+1)
   \       0x60   0x7808             LDRB     R0,[R1, #+0]
   \       0x62   0x70A0             STRB     R0,[R4, #+2]
    149          	}
    150          
    151          
    152          //	CLEAR_BIT(pPkt->hdr2.nTS, (0x1<<7));
    153          //	SET_BIT(pPkt->hdr2.nTS, (0x1<<6));
    154          
    155          #if defined( USE_RFT_REG_TO_RFM )
    156          
    157          	if ( GetDevID() == DevRF900T )
   \                     ??_MakePktHdr2_2: (+1)
   \       0x64   0x.... 0x....      BL       GetDevID
   \       0x68   0x2802             CMP      R0,#+2
   \       0x6A   0xD125             BNE.N    ??_MakePktHdr2_4
    158          	{
    159          		//	자신의 송신기 ID Flag 설정.	-	재수신 받지 않음.
    160          		if( GetRFTID() == 1 )
                 		    ^
Warning[Pe223]: function "GetRFTID" declared implicitly
   \       0x6C   0x.... 0x....      BL       GetRFTID
   \       0x70   0x2801             CMP      R0,#+1
   \       0x72   0xD10E             BNE.N    ??_MakePktHdr2_5
    161          		{
    162          			pPkt->hdr2.bRFT1	=	1;	//	SET_BIT( pPkt->hdr2.nSrcCh, (0x1<<6) );	//
   \       0x74   0x0020             MOVS     R0,R4
   \       0x76   0x7841             LDRB     R1,[R0, #+1]
   \       0x78   0xF051 0x0140      ORRS     R1,R1,#0x40
   \       0x7C   0x7041             STRB     R1,[R0, #+1]
    163          			if( GetChPARFT() != 0 )	pPkt->hdr2.bRFT2	=	1;	//	송신기에 직접 전송하는경우.
                 			    ^
Warning[Pe223]: function "GetChPARFT" declared implicitly
   \       0x7E   0x.... 0x....      BL       GetChPARFT
   \       0x82   0x2800             CMP      R0,#+0
   \       0x84   0xD02A             BEQ.N    ??_MakePktHdr2_6
   \       0x86   0x0020             MOVS     R0,R4
   \       0x88   0x7841             LDRB     R1,[R0, #+1]
   \       0x8A   0xF051 0x0180      ORRS     R1,R1,#0x80
   \       0x8E   0x7041             STRB     R1,[R0, #+1]
   \       0x90   0xE024             B.N      ??_MakePktHdr2_6
    164          		}
    165          		else if( GetRFTID() == 2 )
   \                     ??_MakePktHdr2_5: (+1)
   \       0x92   0x.... 0x....      BL       GetRFTID
   \       0x96   0x2802             CMP      R0,#+2
   \       0x98   0xD120             BNE.N    ??_MakePktHdr2_6
    166          		{
    167          			pPkt->hdr2.bRFT2	=	1;	//	SET_BIT( pPkt->hdr2.nSrcCh, (0x1<<7) );//
   \       0x9A   0x0020             MOVS     R0,R4
   \       0x9C   0x7841             LDRB     R1,[R0, #+1]
   \       0x9E   0xF051 0x0180      ORRS     R1,R1,#0x80
   \       0xA2   0x7041             STRB     R1,[R0, #+1]
    168          			if( GetChPARFT() != 0 )	pPkt->hdr2.bRFT1	=	1;	//	송신기에 직접 전송하는경우.
                 			    ^
Warning[Pe223]: function "GetChPARFT" declared implicitly
   \       0xA4   0x.... 0x....      BL       GetChPARFT
   \       0xA8   0x2800             CMP      R0,#+0
   \       0xAA   0xD017             BEQ.N    ??_MakePktHdr2_6
   \       0xAC   0x0020             MOVS     R0,R4
   \       0xAE   0x7841             LDRB     R1,[R0, #+1]
   \       0xB0   0xF051 0x0140      ORRS     R1,R1,#0x40
   \       0xB4   0x7041             STRB     R1,[R0, #+1]
   \       0xB6   0xE011             B.N      ??_MakePktHdr2_6
    169          		}
    170          	}
    171          	else
    172          	{
    173          
    174          		if( GetChRx() == ChTS1_1 )	//	1호차 수신기
   \                     ??_MakePktHdr2_4: (+1)
   \       0xB8   0x.... 0x....      BL       GetChRx
   \       0xBC   0x.... 0x....      LDR.W    R1,??DataTable29
   \       0xC0   0x6809             LDR      R1,[R1, #+0]
   \       0xC2   0x4288             CMP      R0,R1
   \       0xC4   0xD105             BNE.N    ??_MakePktHdr2_7
    175          		{
    176          			pPkt->hdr2.bRFT1	=	1;	//	SET_BIT( pPkt->hdr2.nSrcCh, (0x1<<6) );	//
   \       0xC6   0x0020             MOVS     R0,R4
   \       0xC8   0x7841             LDRB     R1,[R0, #+1]
   \       0xCA   0xF051 0x0140      ORRS     R1,R1,#0x40
   \       0xCE   0x7041             STRB     R1,[R0, #+1]
   \       0xD0   0xE004             B.N      ??_MakePktHdr2_6
    177          			//if( GetChPARFT() != 0 )	pPkt->hdr2.bRFT2	=	1;	//	송신기에 직접 전송하는경우.
    178          
    179          		}
    180          		else
    181          		{
    182          			pPkt->hdr2.bRFT2	=	1;	//	SET_BIT( pPkt->hdr2.nSrcCh, (0x1<<7) );//
   \                     ??_MakePktHdr2_7: (+1)
   \       0xD2   0x0020             MOVS     R0,R4
   \       0xD4   0x7841             LDRB     R1,[R0, #+1]
   \       0xD6   0xF051 0x0180      ORRS     R1,R1,#0x80
   \       0xDA   0x7041             STRB     R1,[R0, #+1]
    183          			//if( GetChPARFT() != 0 )	pPkt->hdr2.bRFT1	=	1;	//	송신기에 직접 전송하는경우.
    184          
    185          		}
    186          	}
    187          
    188          
    189          #endif
    190          }
   \                     ??_MakePktHdr2_6: (+1)
   \       0xDC   0xBD31             POP      {R0,R4,R5,PC}
    191          
    192          #endif	//	defined(USE_CH_ISO_DEV)		//	장치별 채널분리.
    193          
    194          //==========================================================================

   \                                 In section .text, align 2, keep-with-next
    195          void _MakeRFCmd( RFMPkt	*pPkt, char *sCmd, int nRSSI )
    196          //==========================================================================
    197          {
   \                     _MakeRFCmd: (+1)
   \        0x0   0xE92D 0x43F8      PUSH     {R3-R9,LR}
   \        0x4   0x0004             MOVS     R4,R0
   \        0x6   0x000D             MOVS     R5,R1
   \        0x8   0x0016             MOVS     R6,R2
    198          	printf( "%s(%d)\n", __func__, __LINE__ );
   \        0xA   0x22C6             MOVS     R2,#+198
   \        0xC   0x.... 0x....      LDR.W    R1,??DataTable25_1
   \       0x10   0x.... 0x....      LDR.W    R0,??DataTable26
   \       0x14   0x.... 0x....      BL       printf
    199          
    200          	memset( pPkt, 0, sizeof( RFMPkt ) );
   \       0x18   0x2740             MOVS     R7,#+64
   \       0x1A   0xF05F 0x0800      MOVS     R8,#+0
   \       0x1E   0x46A1             MOV      R9,R4
   \       0x20   0x4642             MOV      R2,R8
   \       0x22   0x0039             MOVS     R1,R7
   \       0x24   0x4648             MOV      R0,R9
   \       0x26   0x.... 0x....      BL       __aeabi_memset
    201          
    202          	//========================================================================
    203          	//	Packet Header
    204          	_MakePktHdr( pPkt, GetDevID(), 0xFF, RFPktDataLen, PktCmd );
   \       0x2A   0x.... 0x....      BL       GetDevID
   \       0x2E   0x2120             MOVS     R1,#+32
   \       0x30   0x9100             STR      R1,[SP, #+0]
   \       0x32   0x233C             MOVS     R3,#+60
   \       0x34   0x22FF             MOVS     R2,#+255
   \       0x36   0x0001             MOVS     R1,R0
   \       0x38   0x0020             MOVS     R0,R4
   \       0x3A   0x.... 0x....      BL       _MakePktHdr
    205          
    206          	//========================================================================
    207          	//	Command
    208          	pPkt->dat.cmd.nRSSIOver = nRSSI;		//	명령 동작 RSSI 범위.
   \       0x3E   0x7126             STRB     R6,[R4, #+4]
    209          	strcpy( pPkt->dat.cmd.sCmd, sCmd );		//	명령 전송.
   \       0x40   0x0029             MOVS     R1,R5
   \       0x42   0xF114 0x0008      ADDS     R0,R4,#+8
   \       0x46   0x.... 0x....      BL       strcpy
    210          
    211          	pPkt->dat.cmd.nSpare[0] = GetTrainSetIdx(); // 편성 정보를 전달한다. //_JDS
   \       0x4A   0x.... 0x....      BL       GetTrainSetIdx
   \       0x4E   0x71A0             STRB     R0,[R4, #+6]
    212          
    213          	//========================================================================
    214          }
   \       0x50   0xE8BD 0x83F1      POP      {R0,R4-R9,PC}
    215          
    216          
    217          //========================================================================

   \                                 In section .text, align 2, keep-with-next
    218          void  SendStatReq( int nDestCh )
    219          //========================================================================
    220          {
   \                     SendStatReq: (+1)
   \        0x0   0xB5F0             PUSH     {R4-R7,LR}
   \        0x2   0xB091             SUB      SP,SP,#+68
   \        0x4   0x0004             MOVS     R4,R0
    221          	if ( GetDbg() == 3)	printf( "%s(%d)\n", __func__, __LINE__ );
                 	     ^
Warning[Pe223]: function "GetDbg" declared implicitly
   \        0x6   0x.... 0x....      BL       GetDbg
   \        0xA   0x2803             CMP      R0,#+3
   \        0xC   0xD106             BNE.N    ??SendStatReq_0
   \        0xE   0x22DD             MOVS     R2,#+221
   \       0x10   0x.... 0x....      LDR.W    R1,??DataTable26_1
   \       0x14   0x.... 0x....      LDR.W    R0,??DataTable26
   \       0x18   0x.... 0x....      BL       printf
    222          
    223          	RFMPkt			stPkt;
    224          	RFMPktStatReq	*pStatReq;
    225          
    226          	memset( &stPkt, 0, sizeof( stPkt ) );
   \                     ??SendStatReq_0: (+1)
   \       0x1C   0x2640             MOVS     R6,#+64
   \       0x1E   0x2700             MOVS     R7,#+0
   \       0x20   0xAD01             ADD      R5,SP,#+4
   \       0x22   0x003A             MOVS     R2,R7
   \       0x24   0x0031             MOVS     R1,R6
   \       0x26   0x0028             MOVS     R0,R5
   \       0x28   0x.... 0x....      BL       __aeabi_memset
    227          	pStatReq = (RFMPktStatReq *)&stPkt.dat.statReq;
   \       0x2C   0xAD02             ADD      R5,SP,#+8
    228          
    229          	//========================================================================
    230          	//	Packet Header
    231          	_MakePktHdr( &stPkt, GetDevID(), 0xFF, sizeof( RFMPktStatReq ), PktStatReq );
   \       0x2E   0x.... 0x....      BL       GetDevID
   \       0x32   0x0001             MOVS     R1,R0
   \       0x34   0x2011             MOVS     R0,#+17
   \       0x36   0x9000             STR      R0,[SP, #+0]
   \       0x38   0x230C             MOVS     R3,#+12
   \       0x3A   0x22FF             MOVS     R2,#+255
   \       0x3C   0xA801             ADD      R0,SP,#+4
   \       0x3E   0x.... 0x....      BL       _MakePktHdr
    232          
    233          	//========================================================================
    234          	//	Packet Body
    235          	pStatReq->nSrcCh	=	GetChRx();			//	수신받을 채널
   \       0x42   0x.... 0x....      BL       GetChRx
   \       0x46   0x7028             STRB     R0,[R5, #+0]
    236          
    237          	pStatReq->nCarNo	=	GetCarNo();			//	호차번호.
   \       0x48   0x.... 0x....      BL       GetCarNo
   \       0x4C   0x7168             STRB     R0,[R5, #+5]
    238          	pStatReq->nTrainNo	=	GetTrainSetIdx();	//	편성번호.
   \       0x4E   0x.... 0x....      BL       GetTrainSetIdx
   \       0x52   0x7128             STRB     R0,[R5, #+4]
    239          
    240          #if defined(USE_ROUTE_NEAREST_RFM)
    241          
    242          	pStatReq->nNearCh	=	GetChNearRFM();		//	가장 가까운 수신기(RFM) 채널
   \       0x54   0x.... 0x....      BL       GetChNearRFM
   \       0x58   0x7228             STRB     R0,[R5, #+8]
    243          
    244          #endif	//	 defined(USE_ROUTE_NEAREST_RFM)
    245          
    246          	if (m_lightTxSentCnt) //조명등 OFF 동작을 라우터 프로토콜에 15초 동안 추가해서 기능 확인. _JDS
   \       0x5A   0x.... 0x....      LDR.W    R1,??DataTable26_2
   \       0x5E   0x6808             LDR      R0,[R1, #+0]
   \       0x60   0x2800             CMP      R0,#+0
   \       0x62   0xD00E             BEQ.N    ??SendStatReq_1
    247          	{
    248          		m_lightTxSentCnt--;
   \       0x64   0x6808             LDR      R0,[R1, #+0]
   \       0x66   0x1E40             SUBS     R0,R0,#+1
   \       0x68   0x6008             STR      R0,[R1, #+0]
    249          
    250          		pStatReq->nSpare1[0] = m_light_Val;
   \       0x6A   0x.... 0x....      LDR.W    R0,??DataTable26_3
   \       0x6E   0x6800             LDR      R0,[R0, #+0]
   \       0x70   0x7068             STRB     R0,[R5, #+1]
    251          
    252          		if ( GetDbg() == 6 ) printf("SeStReq:CC \n");
                 		     ^
Warning[Pe223]: function "GetDbg" declared implicitly
   \       0x72   0x.... 0x....      BL       GetDbg
   \       0x76   0x2806             CMP      R0,#+6
   \       0x78   0xD103             BNE.N    ??SendStatReq_1
   \       0x7A   0x.... 0x....      LDR.W    R0,??DataTable32
   \       0x7E   0x.... 0x....      BL       printf
    253          	}
    254          
    255          	//========================================================================
    256          	//	Send RF
    257          	SendPktCh( nDestCh, (U8 *)&stPkt, (U8)sizeof( RFMPktHdr ) + sizeof( RFMPktStatReq ) );
                 	                    ^
Warning[Pe167]: argument of type "U8 *" is incompatible with parameter of type
          "char const *"
   \                     ??SendStatReq_1: (+1)
   \       0x82   0x2210             MOVS     R2,#+16
   \       0x84   0xA901             ADD      R1,SP,#+4
   \       0x86   0x0020             MOVS     R0,R4
   \       0x88   0x.... 0x....      BL       SendPktCh
    258          }
   \       0x8C   0xB011             ADD      SP,SP,#+68
   \       0x8E   0xBDF0             POP      {R4-R7,PC}
    259          
    260          //========================================================================

   \                                 In section .text, align 2, keep-with-next
    261          void SendStat( int nDestCh )
    262          //========================================================================
    263          {
   \                     SendStat: (+1)
   \        0x0   0xE92D 0x41F8      PUSH     {R3-R8,LR}
   \        0x4   0xB091             SUB      SP,SP,#+68
   \        0x6   0x0004             MOVS     R4,R0
    264          	//	RF Mode가 RFMModeNormal인 경우.
    265          	//		상태정보 전송.
    266          
    267          	if ( GetDbg() == 3 )	printf( "%s(%d)\n", __func__, __LINE__ );
                 	     ^
Warning[Pe223]: function "GetDbg" declared implicitly
   \        0x8   0x.... 0x....      BL       GetDbg
   \        0xC   0x2803             CMP      R0,#+3
   \        0xE   0xD107             BNE.N    ??SendStat_0
   \       0x10   0xF240 0x120B      MOVW     R2,#+267
   \       0x14   0x.... 0x....      LDR.W    R1,??DataTable26_4
   \       0x18   0x.... 0x....      LDR.W    R0,??DataTable26
   \       0x1C   0x.... 0x....      BL       printf
    268          
    269          	RFMPkt		stPkt;
    270          	RFMPktStat	*pStat;
    271          
    272          	memset( &stPkt, 0, sizeof( stPkt ) );
   \                     ??SendStat_0: (+1)
   \       0x20   0x2540             MOVS     R5,#+64
   \       0x22   0x2600             MOVS     R6,#+0
   \       0x24   0xAF01             ADD      R7,SP,#+4
   \       0x26   0x0032             MOVS     R2,R6
   \       0x28   0x0029             MOVS     R1,R5
   \       0x2A   0x0038             MOVS     R0,R7
   \       0x2C   0x.... 0x....      BL       __aeabi_memset
    273          	pStat = (RFMPktStat *)&stPkt.dat.stat;
   \       0x30   0xAF02             ADD      R7,SP,#+8
    274          
    275          	//========================================================================
    276          	//	Packet Header
    277          	_MakePktHdr( &stPkt, GetDevID(), 0xFF, sizeof( RFMPktStat ), PktStat );
   \       0x32   0x.... 0x....      BL       GetDevID
   \       0x36   0x0001             MOVS     R1,R0
   \       0x38   0x2001             MOVS     R0,#+1
   \       0x3A   0x9000             STR      R0,[SP, #+0]
   \       0x3C   0x2319             MOVS     R3,#+25
   \       0x3E   0x22FF             MOVS     R2,#+255
   \       0x40   0xA801             ADD      R0,SP,#+4
   \       0x42   0x.... 0x....      BL       _MakePktHdr
    278          
    279          	//========================================================================
    280          	//	Status Data
    281          	pStat->ver_main		=	APP_MAIN_VER;		//	1;
   \       0x46   0x2001             MOVS     R0,#+1
   \       0x48   0x73B8             STRB     R0,[R7, #+14]
    282          	pStat->ver_sub		=	APP_SUB_VER;		//	0;
   \       0x4A   0x2001             MOVS     R0,#+1
   \       0x4C   0x73F8             STRB     R0,[R7, #+15]
    283          	pStat->ver_det		=	APP_DETAIL_VER;		//	0;
   \       0x4E   0x2000             MOVS     R0,#+0
   \       0x50   0x8238             STRH     R0,[R7, #+16]
    284          	pStat->ver_build	=	APP_BUILD_VER;		//	0;
   \       0x52   0xF44F 0x70B9      MOV      R0,#+370
   \       0x56   0x8278             STRH     R0,[R7, #+18]
    285          
    286          	pStat->nMagicNum	=	0xAA55;				//	패킷 요류검출용.
   \       0x58   0xF64A 0x2055      MOVW     R0,#+43605
   \       0x5C   0x8078             STRH     R0,[R7, #+2]
    287          
    288          	pStat->nCarNo		=	GetCarNo();
   \       0x5E   0x.... 0x....      BL       GetCarNo
   \       0x62   0x7378             STRB     R0,[R7, #+13]
    289          	pStat->nDevID		=	GetDevID();
   \       0x64   0x.... 0x....      BL       GetDevID
   \       0x68   0x7078             STRB     R0,[R7, #+1]
    290          
    291          	pStat->nTrainNo		=	GetTrainSetIdx();	//	편성번호.
   \       0x6A   0x.... 0x....      BL       GetTrainSetIdx
   \       0x6E   0x7338             STRB     R0,[R7, #+12]
    292          
    293          	pStat->upTime		=	HAL_GetTick();
   \       0x70   0x.... 0x....      BL       HAL_GetTick
   \       0x74   0x6078             STR      R0,[R7, #+4]
    294          
    295          	pStat->rspID		=	g_flagRspID;		//	Rsp ID Flag
   \       0x76   0x.... 0x....      LDR.W    R0,??DataTable27
   \       0x7A   0x8800             LDRH     R0,[R0, #+0]
   \       0x7C   0x82B8             STRH     R0,[R7, #+20]
    296          
    297          	pStat->nManHop		=	g_nManHopping;		//	Manual Hopping Setting
   \       0x7E   0x.... 0x....      LDR.W    R0,??DataTable27_1
   \       0x82   0x6800             LDR      R0,[R0, #+0]
   \       0x84   0x75B8             STRB     R0,[R7, #+22]
    298          	pStat->nRFMode		=	g_nRFMode;			//	RFMode
   \       0x86   0x.... 0x....      LDR.W    R8,??DataTable27_2
   \       0x8A   0xF8D8 0x0000      LDR      R0,[R8, #+0]
   \       0x8E   0x75F8             STRB     R0,[R7, #+23]
    299          
    300          	pStat->nDevFlag		=	g_nDevFlag;			//	Device Flag : 조명 상태 등.
   \       0x90   0x.... 0x....      LDR.W    R0,??DataTable27_3
   \       0x94   0x6800             LDR      R0,[R0, #+0]
   \       0x96   0x7638             STRB     R0,[R7, #+24]
    301          
    302          	pStat->nChRx		=	GetChRx();			//	수신 채널
   \       0x98   0x.... 0x....      BL       GetChRx
   \       0x9C   0x72B8             STRB     R0,[R7, #+10]
    303          
    304          	//========================================================================
    305          	//	Send RF
    306          
    307          	if( g_nRFMode == RFMode2 )//#if defined(USE_COMM_MODE_CH_GRP)	//	그룹주파수 모드. - [ 1, 2 ] [ 3, 4 ] ...
   \       0x9E   0xF8D8 0x0000      LDR      R0,[R8, #+0]
   \       0xA2   0x2802             CMP      R0,#+2
   \       0xA4   0xD105             BNE.N    ??SendStat_1
    308          	{
    309          		//	짝수 호차는 3msec Delay ( 송신시 충돌 방지 )
    310          		if( pStat->nCarNo % 2 == 0 ) HAL_Delay( 3 );
   \       0xA6   0x7B78             LDRB     R0,[R7, #+13]
   \       0xA8   0x07C0             LSLS     R0,R0,#+31
   \       0xAA   0xD402             BMI.N    ??SendStat_1
   \       0xAC   0x2003             MOVS     R0,#+3
   \       0xAE   0x.... 0x....      BL       HAL_Delay
    311          	}//#endif
    312          
    313          #if defined(USE_CH_ISO_DEV)
    314          	//	상태정보는 송신기로 전송.
    315          	int nCh;
    316          
    317          	//========================================================================
    318          	if ( nDestCh == 0 )	nCh = ChTx_1;	//	Default
   \                     ??SendStat_1: (+1)
   \       0xB2   0x2C00             CMP      R4,#+0
   \       0xB4   0xD103             BNE.N    ??SendStat_2
   \       0xB6   0x.... 0x....      LDR.W    R0,??DataTable32_1
   \       0xBA   0x6805             LDR      R5,[R0, #+0]
   \       0xBC   0xE000             B.N      ??SendStat_3
    319          	else				nCh = nDestCh;
   \                     ??SendStat_2: (+1)
   \       0xBE   0x0025             MOVS     R5,R4
    320          	//========================================================================
    321          
    322          	SendPktCh(nCh, (U8 *)&stPkt, (U8)sizeof( RFMPktHdr ) + sizeof( RFMPktStat ) );
                 	               ^
Warning[Pe167]: argument of type "U8 *" is incompatible with parameter of type
          "char const *"
   \                     ??SendStat_3: (+1)
   \       0xC0   0x221D             MOVS     R2,#+29
   \       0xC2   0xA901             ADD      R1,SP,#+4
   \       0xC4   0x0028             MOVS     R0,R5
   \       0xC6   0x.... 0x....      BL       SendPktCh
    323          #else
    324          	SendPacket( (U8 *)&stPkt, (U8)sizeof( RFMPktHdr ) + sizeof( RFMPktStat ) );
    325          #endif
    326          	//========================================================================
    327          }
   \       0xCA   0xB012             ADD      SP,SP,#+72
   \       0xCC   0xE8BD 0x81F0      POP      {R4-R8,PC}
    328          
    329          
    330          //========================================================================

   \                                 In section .text, align 2, keep-with-next
    331          void SendRouteReq( int nDestCh ) // 요청하는 부분.
    332          //========================================================================
    333          {
   \                     SendRouteReq: (+1)
   \        0x0   0xB5F0             PUSH     {R4-R7,LR}
   \        0x2   0xB091             SUB      SP,SP,#+68
   \        0x4   0x0004             MOVS     R4,R0
    334          	if ( GetDbg() == 3 )	printf( "%s(%d)\n", __func__, __LINE__ );
                 	     ^
Warning[Pe223]: function "GetDbg" declared implicitly
   \        0x6   0x.... 0x....      BL       GetDbg
   \        0xA   0x2803             CMP      R0,#+3
   \        0xC   0xD107             BNE.N    ??SendRouteReq_0
   \        0xE   0xF44F 0x72A7      MOV      R2,#+334
   \       0x12   0x.... 0x....      LDR.W    R1,??DataTable29_1
   \       0x16   0x.... 0x....      LDR.W    R0,??DataTable26
   \       0x1A   0x.... 0x....      BL       printf
    335          
    336          	RFMPkt			stPkt;
    337          	RFMPktRoute		*pRouteReq;
    338          
    339          	memset( &stPkt, 0, sizeof( stPkt ) );
   \                     ??SendRouteReq_0: (+1)
   \       0x1E   0x2640             MOVS     R6,#+64
   \       0x20   0x2700             MOVS     R7,#+0
   \       0x22   0xAD01             ADD      R5,SP,#+4
   \       0x24   0x003A             MOVS     R2,R7
   \       0x26   0x0031             MOVS     R1,R6
   \       0x28   0x0028             MOVS     R0,R5
   \       0x2A   0x.... 0x....      BL       __aeabi_memset
    340          	pRouteReq = (RFMPktRoute *)&stPkt.dat.routeReq;
   \       0x2E   0xAD02             ADD      R5,SP,#+8
    341          
    342          	//========================================================================
    343          	//	Packet Header
    344          	_MakePktHdr( &stPkt, GetDevID(), 0xFF, sizeof( RFMPktRoute ), PktRouteReq );
   \       0x30   0x.... 0x....      BL       GetDevID
   \       0x34   0x0001             MOVS     R1,R0
   \       0x36   0x2031             MOVS     R0,#+49
   \       0x38   0x9000             STR      R0,[SP, #+0]
   \       0x3A   0x2307             MOVS     R3,#+7
   \       0x3C   0x22FF             MOVS     R2,#+255
   \       0x3E   0xA801             ADD      R0,SP,#+4
   \       0x40   0x.... 0x....      BL       _MakePktHdr
    345          
    346          	//========================================================================
    347          	//	Packet Body
    348          	pRouteReq->nSrcCh	=	GetChRx();			//	수신받을 채널
   \       0x44   0x.... 0x....      BL       GetChRx
   \       0x48   0x7028             STRB     R0,[R5, #+0]
    349          	pRouteReq->nSrcDev	=	GetDevID();			//	RFT / RFM
   \       0x4A   0x.... 0x....      BL       GetDevID
   \       0x4E   0x7068             STRB     R0,[R5, #+1]
    350          
    351          	pRouteReq->nCarNo	=	GetCarNo();			//	호차번호.
   \       0x50   0x.... 0x....      BL       GetCarNo
   \       0x54   0x71A8             STRB     R0,[R5, #+6]
    352          	pRouteReq->nTrainNo	=	GetTrainSetIdx();	//	편성번호.
   \       0x56   0x.... 0x....      BL       GetTrainSetIdx
   \       0x5A   0x7168             STRB     R0,[R5, #+5]
    353          
    354          
    355          	if (m_lightReSendCnt) //조명등 OFF 동작을 라우터 프로토콜에 15초 동안 추가해서 기능 확인.
   \       0x5C   0x.... 0x....      LDR.W    R1,??DataTable29_2
   \       0x60   0x6808             LDR      R0,[R1, #+0]
   \       0x62   0x2800             CMP      R0,#+0
   \       0x64   0xD00E             BEQ.N    ??SendRouteReq_1
    356          	{
    357          		m_lightReSendCnt--;
   \       0x66   0x6808             LDR      R0,[R1, #+0]
   \       0x68   0x1E40             SUBS     R0,R0,#+1
   \       0x6A   0x6008             STR      R0,[R1, #+0]
    358          
    359          		pRouteReq->nSpare1[0] = m_light_Val;
   \       0x6C   0x.... 0x....      LDR.W    R0,??DataTable26_3
   \       0x70   0x6800             LDR      R0,[R0, #+0]
   \       0x72   0x70A8             STRB     R0,[R5, #+2]
    360          
    361          		if ( GetDbg() == 6 ) printf("SeReq:AA \n");
                 		     ^
Warning[Pe223]: function "GetDbg" declared implicitly
   \       0x74   0x.... 0x....      BL       GetDbg
   \       0x78   0x2806             CMP      R0,#+6
   \       0x7A   0xD103             BNE.N    ??SendRouteReq_1
   \       0x7C   0x.... 0x....      LDR.W    R0,??DataTable32_2
   \       0x80   0x.... 0x....      BL       printf
    362          	}
    363          
    364          
    365          	//========================================================================
    366          	//	Send RF
    367          	SendPktCh( nDestCh, (U8 *)&stPkt, (U8)sizeof( RFMPktHdr ) + sizeof( RFMPktRoute ) );
                 	                    ^
Warning[Pe167]: argument of type "U8 *" is incompatible with parameter of type
          "char const *"
   \                     ??SendRouteReq_1: (+1)
   \       0x84   0x220B             MOVS     R2,#+11
   \       0x86   0xA901             ADD      R1,SP,#+4
   \       0x88   0x0020             MOVS     R0,R4
   \       0x8A   0x.... 0x....      BL       SendPktCh
    368          }
   \       0x8E   0xB011             ADD      SP,SP,#+68
   \       0x90   0xBDF0             POP      {R4-R7,PC}
    369          
    370          //========================================================================

   \                                 In section .text, align 2, keep-with-next
    371          void SendRouteRsp( int nDestCh ) //응답하는 부분.
    372          //========================================================================
    373          {
   \                     SendRouteRsp: (+1)
   \        0x0   0xB5F0             PUSH     {R4-R7,LR}
   \        0x2   0xB091             SUB      SP,SP,#+68
   \        0x4   0x0004             MOVS     R4,R0
    374          	if ( GetDbg() == 3 )	printf( "%s(%d)\n", __func__, __LINE__ );
                 	     ^
Warning[Pe223]: function "GetDbg" declared implicitly
   \        0x6   0x.... 0x....      BL       GetDbg
   \        0xA   0x2803             CMP      R0,#+3
   \        0xC   0xD107             BNE.N    ??SendRouteRsp_0
   \        0xE   0xF44F 0x72BB      MOV      R2,#+374
   \       0x12   0x.... 0x....      LDR.W    R1,??DataTable30
   \       0x16   0x.... 0x....      LDR.W    R0,??DataTable26
   \       0x1A   0x.... 0x....      BL       printf
    375          
    376          	RFMPkt			stPkt;
    377          	RFMPktRoute	*pRouteRsp;
    378          
    379          	memset( &stPkt, 0, sizeof( stPkt ) );
   \                     ??SendRouteRsp_0: (+1)
   \       0x1E   0x2640             MOVS     R6,#+64
   \       0x20   0x2700             MOVS     R7,#+0
   \       0x22   0xAD01             ADD      R5,SP,#+4
   \       0x24   0x003A             MOVS     R2,R7
   \       0x26   0x0031             MOVS     R1,R6
   \       0x28   0x0028             MOVS     R0,R5
   \       0x2A   0x.... 0x....      BL       __aeabi_memset
    380          	pRouteRsp = (RFMPktRoute *)&stPkt.dat.routeRsp;
   \       0x2E   0xAD02             ADD      R5,SP,#+8
    381          
    382          	//========================================================================
    383          	//	Packet Header
    384          	_MakePktHdr( &stPkt, GetDevID(), 0xFF, sizeof( RFMPktRoute ), PktRouteRsp );
   \       0x30   0x.... 0x....      BL       GetDevID
   \       0x34   0x0001             MOVS     R1,R0
   \       0x36   0x2032             MOVS     R0,#+50
   \       0x38   0x9000             STR      R0,[SP, #+0]
   \       0x3A   0x2307             MOVS     R3,#+7
   \       0x3C   0x22FF             MOVS     R2,#+255
   \       0x3E   0xA801             ADD      R0,SP,#+4
   \       0x40   0x.... 0x....      BL       _MakePktHdr
    385          
    386          	//========================================================================
    387          	//	Packet Body
    388          	pRouteRsp->nSrcCh	=	GetChRx();			//	수신받을 채널
   \       0x44   0x.... 0x....      BL       GetChRx
   \       0x48   0x7028             STRB     R0,[R5, #+0]
    389          	pRouteRsp->nSrcDev	=	GetDevID();			//	RFT / RFM
   \       0x4A   0x.... 0x....      BL       GetDevID
   \       0x4E   0x7068             STRB     R0,[R5, #+1]
    390          
    391          	pRouteRsp->nCarNo	=	GetCarNo();			//	호차번호.
   \       0x50   0x.... 0x....      BL       GetCarNo
   \       0x54   0x71A8             STRB     R0,[R5, #+6]
    392          	pRouteRsp->nTrainNo	=	GetTrainSetIdx();	//	편성번호.
   \       0x56   0x.... 0x....      BL       GetTrainSetIdx
   \       0x5A   0x7168             STRB     R0,[R5, #+5]
    393          
    394          	if(GetRFMMode() == RFMModeNormal) //_JDS
   \       0x5C   0x.... 0x....      BL       GetRFMMode
   \       0x60   0x2800             CMP      R0,#+0
   \       0x62   0xD114             BNE.N    ??SendRouteRsp_1
    395          	{
    396          		if (m_lightReSendCnt) {
   \       0x64   0x.... 0x....      LDR.W    R1,??DataTable29_2
   \       0x68   0x6808             LDR      R0,[R1, #+0]
   \       0x6A   0x2800             CMP      R0,#+0
   \       0x6C   0xD013             BEQ.N    ??SendRouteRsp_2
    397          			m_lightReSendCnt--;
   \       0x6E   0x6808             LDR      R0,[R1, #+0]
   \       0x70   0x1E40             SUBS     R0,R0,#+1
   \       0x72   0x6008             STR      R0,[R1, #+0]
    398          			pRouteRsp->nSpare1[1] = m_light_Val;
   \       0x74   0x.... 0x....      LDR.W    R0,??DataTable26_3
   \       0x78   0x6800             LDR      R0,[R0, #+0]
   \       0x7A   0x70E8             STRB     R0,[R5, #+3]
    399          
    400          			if ( GetDbg() == 6 ) printf("SeRep:BB \n");
                 			     ^
Warning[Pe223]: function "GetDbg" declared implicitly
   \       0x7C   0x.... 0x....      BL       GetDbg
   \       0x80   0x2806             CMP      R0,#+6
   \       0x82   0xD108             BNE.N    ??SendRouteRsp_2
   \       0x84   0x.... 0x....      LDR.W    R0,??DataTable31_1
   \       0x88   0x.... 0x....      BL       printf
   \       0x8C   0xE003             B.N      ??SendRouteRsp_2
    401          
    402          		}
    403          	}
    404          	else
    405          	{
    406          		m_lightReSendCnt = 0;
   \                     ??SendRouteRsp_1: (+1)
   \       0x8E   0x2000             MOVS     R0,#+0
   \       0x90   0x.... 0x....      LDR.W    R1,??DataTable29_2
   \       0x94   0x6008             STR      R0,[R1, #+0]
    407          	}
    408          
    409          	//========================================================================
    410          	//	Send RF
    411          	SendPktCh( nDestCh, (U8 *)&stPkt, (U8)sizeof( RFMPktHdr ) + sizeof( RFMPktRoute ) );
                 	                    ^
Warning[Pe167]: argument of type "U8 *" is incompatible with parameter of type
          "char const *"
   \                     ??SendRouteRsp_2: (+1)
   \       0x96   0x220B             MOVS     R2,#+11
   \       0x98   0xA901             ADD      R1,SP,#+4
   \       0x9A   0x0020             MOVS     R0,R4
   \       0x9C   0x.... 0x....      BL       SendPktCh
    412          }
   \       0xA0   0xB011             ADD      SP,SP,#+68
   \       0xA2   0xBDF0             POP      {R4-R7,PC}
    413          
    414          
    415          //========================================================================

   \                                 In section .text, align 2, keep-with-next
    416          void SendPA( int nStartStop )
    417          //========================================================================
    418          {
   \                     SendPA: (+1)
   \        0x0   0xB5F8             PUSH     {R3-R7,LR}
   \        0x2   0xB090             SUB      SP,SP,#+64
   \        0x4   0x0004             MOVS     R4,R0
    419          	printf( "%s(%d)\n", __func__, __LINE__ );
   \        0x6   0xF240 0x12A3      MOVW     R2,#+419
   \        0xA   0x.... 0x....      LDR.W    R1,??DataTable32_3
   \        0xE   0x.... 0x....      LDR.W    R0,??DataTable26
   \       0x12   0x.... 0x....      BL       printf
    420          
    421          	RFMPkt				stPkt;
    422          	RFMPktCtrlPACall	*pPACall;
    423          
    424          	memset( &stPkt, 0, sizeof( stPkt ) );
   \       0x16   0x2640             MOVS     R6,#+64
   \       0x18   0x2700             MOVS     R7,#+0
   \       0x1A   0x466D             MOV      R5,SP
   \       0x1C   0x003A             MOVS     R2,R7
   \       0x1E   0x0031             MOVS     R1,R6
   \       0x20   0x0028             MOVS     R0,R5
   \       0x22   0x.... 0x....      BL       __aeabi_memset
    425          	pPACall = (RFMPktCtrlPACall *)&stPkt.dat.pacall;
   \       0x26   0xAD01             ADD      R5,SP,#+4
    426          
    427          	//========================================================================
    428          	//	Packet Header
    429          #if defined(USE_CH_ISO_DEV)
    430          	_MakePktHdr2( &stPkt, PktCtrlPaCall );
   \       0x28   0x2108             MOVS     R1,#+8
   \       0x2A   0x4668             MOV      R0,SP
   \       0x2C   0x.... 0x....      BL       _MakePktHdr2
    431          #else
    432          	_MakePktHdr( &stPkt, GetDevID(), 0xFF, sizeof( RFMPktCtrlPACall ), PktCtrlPaCall );
    433          #endif
    434          
    435          	//========================================================================
    436          	//	Status Data
    437          	pPACall->nStartStop		=	nStartStop;
   \       0x30   0x702C             STRB     R4,[R5, #+0]
    438          
    439          	pPACall->nTypePACall	=	CtrlPA;
   \       0x32   0x2001             MOVS     R0,#+1
   \       0x34   0x7068             STRB     R0,[R5, #+1]
    440          
    441          	//========================================================================
    442          	//	Send RF
    443          
    444          #if defined(USE_CH_ISO_DEV)
    445          
    446          	if ( GetChPARFT() != 0 )
                 	     ^
Warning[Pe223]: function "GetChPARFT" declared implicitly
   \       0x36   0x.... 0x....      BL       GetChPARFT
   \       0x3A   0x2800             CMP      R0,#+0
   \       0x3C   0xD005             BEQ.N    ??SendPA_0
    447          	{
    448          		//	송신기에 전송.
    449          		SendPktCh( GetChPARFT(), (uint8_t *)&stPkt,
                 		                         ^
Warning[Pe167]: argument of type "uint8_t *" is incompatible with parameter of
          type "char const *"
    450          			(U8)sizeof( RFMPktHdr ) + sizeof( RFMPktCtrlPACall ) );
   \       0x3E   0x.... 0x....      BL       GetChPARFT
   \       0x42   0x2208             MOVS     R2,#+8
   \       0x44   0x4669             MOV      R1,SP
   \       0x46   0x.... 0x....      BL       SendPktCh
    451          	}
    452          
    453          	//	수신기에 전송
    454          	SendPktCh( GetChPA(), (uint8_t *)&stPkt,
                 	                      ^
Warning[Pe167]: argument of type "uint8_t *" is incompatible with parameter of
          type "char const *"
    455          		(U8)sizeof( RFMPktHdr ) + sizeof( RFMPktCtrlPACall ) );
   \                     ??SendPA_0: (+1)
   \       0x4A   0x.... 0x....      BL       GetChPA
   \       0x4E   0x2208             MOVS     R2,#+8
   \       0x50   0x4669             MOV      R1,SP
   \       0x52   0x.... 0x....      BL       SendPktCh
    456          
    457          #else
    458          	SendPacket( (U8 *)&stPkt, (U8)sizeof( RFMPktHdr ) + sizeof( RFMPktCtrlPACall ) );
    459          #endif
    460          
    461          	//========================================================================
    462          }
   \       0x56   0xB011             ADD      SP,SP,#+68
   \       0x58   0xBDF0             POP      {R4-R7,PC}
    463          
    464          
    465          //========================================================================

   \                                 In section .text, align 2, keep-with-next
    466          void SendCall( int nStartStop )
    467          //========================================================================
    468          {
   \                     SendCall: (+1)
   \        0x0   0xB5F8             PUSH     {R3-R7,LR}
   \        0x2   0xB090             SUB      SP,SP,#+64
   \        0x4   0x0004             MOVS     R4,R0
    469          	printf( "%s(%d)\n", __func__, __LINE__ );
   \        0x6   0xF240 0x12D5      MOVW     R2,#+469
   \        0xA   0x.... 0x....      LDR.W    R1,??DataTable32_4
   \        0xE   0x.... 0x....      LDR.W    R0,??DataTable26
   \       0x12   0x.... 0x....      BL       printf
    470          
    471          	RFMPkt			stPkt;
    472          	RFMPktCtrlPACall	*pPACall;
    473          
    474          	memset( &stPkt, 0, sizeof( stPkt ) );
   \       0x16   0x2640             MOVS     R6,#+64
   \       0x18   0x2700             MOVS     R7,#+0
   \       0x1A   0x466D             MOV      R5,SP
   \       0x1C   0x003A             MOVS     R2,R7
   \       0x1E   0x0031             MOVS     R1,R6
   \       0x20   0x0028             MOVS     R0,R5
   \       0x22   0x.... 0x....      BL       __aeabi_memset
    475          	pPACall = (RFMPktCtrlPACall *)&stPkt.dat.pacall;
   \       0x26   0xAD01             ADD      R5,SP,#+4
    476          
    477          	//========================================================================
    478          	//	Packet Header
    479          #if defined(USE_CH_ISO_DEV)
    480          	_MakePktHdr2( &stPkt, PktCtrlPaCall );
   \       0x28   0x2108             MOVS     R1,#+8
   \       0x2A   0x4668             MOV      R0,SP
   \       0x2C   0x.... 0x....      BL       _MakePktHdr2
    481          #else
    482          	_MakePktHdr( &stPkt, GetDevID(), 0xFF, sizeof( RFMPktCtrlPACall ), PktCtrlPaCall );
    483          #endif
    484          
    485          	//========================================================================
    486          	//	Status Data
    487          	pPACall->nStartStop		=	nStartStop;
   \       0x30   0x702C             STRB     R4,[R5, #+0]
    488          
    489          	pPACall->nTypePACall	=	CtrlCall;
   \       0x32   0x2002             MOVS     R0,#+2
   \       0x34   0x7068             STRB     R0,[R5, #+1]
    490          
    491          	//========================================================================
    492          	//	Send RF
    493          
    494          #if defined(USE_CH_ISO_DEV)
    495          
    496          	if ( GetChPARFT() != 0 )
                 	     ^
Warning[Pe223]: function "GetChPARFT" declared implicitly
   \       0x36   0x.... 0x....      BL       GetChPARFT
   \       0x3A   0x2800             CMP      R0,#+0
   \       0x3C   0xD006             BEQ.N    ??SendCall_0
    497          	{
    498          		//	송신기에 직접 전송.
    499          		SendPktCh( GetChPARFT(), (uint8_t *)&stPkt,
                 		                         ^
Warning[Pe167]: argument of type "uint8_t *" is incompatible with parameter of
          type "char const *"
    500          			(U8)sizeof( RFMPktHdr ) + sizeof( RFMPktCtrlPACall ) );
   \       0x3E   0x.... 0x....      BL       GetChPARFT
   \       0x42   0x2208             MOVS     R2,#+8
   \       0x44   0x4669             MOV      R1,SP
   \       0x46   0x.... 0x....      BL       SendPktCh
   \       0x4A   0xE005             B.N      ??SendCall_1
    501          	}
    502          	else
    503          	{
    504          		//	수신기를 통해 전송.
    505          		SendPktCh( GetChPA(),	//GetChOtherRFT(),
    506          				(uint8_t *)&stPkt,
                 				^
Warning[Pe167]: argument of type "uint8_t *" is incompatible with parameter of
          type "char const *"
    507          				(U8)sizeof( RFMPktHdr ) + sizeof( RFMPktCtrlPACall ) );
   \                     ??SendCall_0: (+1)
   \       0x4C   0x.... 0x....      BL       GetChPA
   \       0x50   0x2208             MOVS     R2,#+8
   \       0x52   0x4669             MOV      R1,SP
   \       0x54   0x.... 0x....      BL       SendPktCh
    508          	}
    509          
    510          #else
    511          
    512          	SendPacket( (U8 *)&stPkt, (U8)sizeof( RFMPktHdr ) + sizeof( RFMPktCtrlPACall ) );
    513          
    514          #endif
    515          
    516          	//========================================================================
    517          }
   \                     ??SendCall_1: (+1)
   \       0x58   0xB011             ADD      SP,SP,#+68
   \       0x5A   0xBDF0             POP      {R4-R7,PC}
    518          
    519          //========================================================================

   \                                 In section .text, align 2, keep-with-next
    520          void SendOCCPA( int nStartStop )
    521          //========================================================================
    522          {
   \                     SendOCCPA: (+1)
   \        0x0   0xE92D 0x43F8      PUSH     {R3-R9,LR}
   \        0x4   0xB090             SUB      SP,SP,#+64
   \        0x6   0x0004             MOVS     R4,R0
    523          	printf( "%s(%d)\n", __func__, __LINE__ );
   \        0x8   0x.... 0x....      LDR.W    R5,??DataTable26
   \        0xC   0x.... 0x....      LDR.W    R6,??DataTable33
   \       0x10   0xF240 0x220B      MOVW     R2,#+523
   \       0x14   0x0031             MOVS     R1,R6
   \       0x16   0x0028             MOVS     R0,R5
   \       0x18   0x.... 0x....      BL       printf
    524          
    525          	RFMPkt				stPkt;
    526          	RFMPktCtrlPACall	*pPACall;
    527          
    528          	memset( &stPkt, 0, sizeof( stPkt ) );
   \       0x1C   0x2740             MOVS     R7,#+64
   \       0x1E   0xF05F 0x0800      MOVS     R8,#+0
   \       0x22   0x46E9             MOV      R9,SP
   \       0x24   0x4642             MOV      R2,R8
   \       0x26   0x0039             MOVS     R1,R7
   \       0x28   0x4648             MOV      R0,R9
   \       0x2A   0x.... 0x....      BL       __aeabi_memset
    529          	pPACall = (RFMPktCtrlPACall *)&stPkt.dat.pacall;
   \       0x2E   0xF10D 0x0904      ADD      R9,SP,#+4
    530          
    531          	//========================================================================
    532          	//	Packet Header
    533          #if defined(USE_CH_ISO_DEV)
    534          	_MakePktHdr2( &stPkt, PktCtrlPaCall );
   \       0x32   0x2108             MOVS     R1,#+8
   \       0x34   0x4668             MOV      R0,SP
   \       0x36   0x.... 0x....      BL       _MakePktHdr2
    535          #else
    536          	_MakePktHdr( &stPkt, GetDevID(), 0xFF, sizeof( RFMPktCtrlPACall ), PktCtrlPaCall );
    537          #endif
    538          
    539          	//========================================================================
    540          	//	Status Data
    541          	pPACall->nStartStop		=	nStartStop;
   \       0x3A   0xF889 0x4000      STRB     R4,[R9, #+0]
    542          
    543          	pPACall->nTypePACall	=	CtrlPA;
   \       0x3E   0x2001             MOVS     R0,#+1
   \       0x40   0xF889 0x0001      STRB     R0,[R9, #+1]
    544          
    545          	//========================================================================
    546          	//	Send RF
    547          
    548          #if defined(USE_CH_ISO_DEV)
    549          
    550          	if ( GetChPARFT() != 0 )
                 	     ^
Warning[Pe223]: function "GetChPARFT" declared implicitly
   \       0x44   0x.... 0x....      BL       GetChPARFT
    551          	{
    552          		//	송신기에 전송.
    553          		//SendPktCh( GetChPARFT(), (uint8_t *)&stPkt,
    554          		//	(U8)sizeof( RFMPktHdr ) + sizeof( RFMPktCtrlPACall ) );
    555          	}
    556          
    557          	//	수신기에 전송
    558          	SendPktCh( GetChRFMUp(), (uint8_t *)&stPkt,
                 	                         ^
Warning[Pe167]: argument of type "uint8_t *" is incompatible with parameter of
          type "char const *"
    559          		(U8)sizeof( RFMPktHdr ) + sizeof( RFMPktCtrlPACall ) );
   \       0x48   0x.... 0x....      BL       GetChRFMUp
   \       0x4C   0x2208             MOVS     R2,#+8
   \       0x4E   0x4669             MOV      R1,SP
   \       0x50   0x.... 0x....      BL       SendPktCh
    560          
    561          	printf( "%s(%d)\n", __func__, GetChPA() + ChGap );
   \       0x54   0x.... 0x....      BL       GetChPA
   \       0x58   0x0002             MOVS     R2,R0
   \       0x5A   0x1D12             ADDS     R2,R2,#+4
   \       0x5C   0x0031             MOVS     R1,R6
   \       0x5E   0x0028             MOVS     R0,R5
   \       0x60   0x.... 0x....      BL       printf
    562          
    563          #else
    564          	SendPacket( (U8 *)&stPkt, (U8)sizeof( RFMPktHdr ) + sizeof( RFMPktCtrlPACall ) );
    565          #endif
    566          
    567          	//========================================================================
    568          }
   \       0x64   0xB011             ADD      SP,SP,#+68
   \       0x66   0xE8BD 0x83F0      POP      {R4-R9,PC}
    569          
    570          
    571          //========================================================================

   \                                 In section .text, align 2, keep-with-next
    572          void SendLight( int nOnOff )
    573          //========================================================================
    574          {
   \                     SendLight: (+1)
   \        0x0   0xB5F8             PUSH     {R3-R7,LR}
   \        0x2   0xB090             SUB      SP,SP,#+64
   \        0x4   0x0004             MOVS     R4,R0
    575          	printf( "%s(%d)\n", __func__, __LINE__ );
   \        0x6   0xF240 0x223F      MOVW     R2,#+575
   \        0xA   0x.... 0x....      LDR.W    R1,??DataTable32_5
   \        0xE   0x.... 0x....      LDR.W    R0,??DataTable26
   \       0x12   0x.... 0x....      BL       printf
    576          
    577          	RFMPkt			stPkt;
    578          	RFMPktLight		*pLight;
    579          
    580          	memset( &stPkt, 0, sizeof( stPkt ) );
   \       0x16   0x2640             MOVS     R6,#+64
   \       0x18   0x2700             MOVS     R7,#+0
   \       0x1A   0x466D             MOV      R5,SP
   \       0x1C   0x003A             MOVS     R2,R7
   \       0x1E   0x0031             MOVS     R1,R6
   \       0x20   0x0028             MOVS     R0,R5
   \       0x22   0x.... 0x....      BL       __aeabi_memset
    581          	pLight = (RFMPktLight *)&stPkt.dat.light;
   \       0x26   0xAD01             ADD      R5,SP,#+4
    582          
    583          	//========================================================================
    584          	//	Packet Header
    585          #if defined(USE_CH_ISO_DEV)
    586          
    587          	_MakePktHdr2( &stPkt, PktLight );
   \       0x28   0x2104             MOVS     R1,#+4
   \       0x2A   0x4668             MOV      R0,SP
   \       0x2C   0x.... 0x....      BL       _MakePktHdr2
    588          
    589          #else
    590          
    591          	_MakePktHdr( &stPkt, GetDevID(), 0xFF, sizeof( RFMPktLight ), PktLight );
    592          
    593          #endif
    594          
    595          	//========================================================================
    596          	//	Status Data
    597          	pLight->nOnOff = nOnOff;
   \       0x30   0x702C             STRB     R4,[R5, #+0]
    598          
    599          	//========================================================================
    600          	//	Send RF
    601          #if defined(USE_CH_ISO_DEV)
    602          
    603          	SendPktCh( GetChPA(), (uint8_t *)&stPkt,
                 	                      ^
Warning[Pe167]: argument of type "uint8_t *" is incompatible with parameter of
          type "char const *"
    604          		(U8)sizeof( RFMPktHdr ) + sizeof( RFMPktLight ) );
   \       0x32   0x.... 0x....      BL       GetChPA
   \       0x36   0x2208             MOVS     R2,#+8
   \       0x38   0x4669             MOV      R1,SP
   \       0x3A   0x.... 0x....      BL       SendPktCh
    605          
    606          #else
    607          
    608          	SendPacket( (U8 *)&stPkt, (U8)sizeof( RFMPktHdr ) + sizeof( RFMPktLight ) );
    609          
    610          #endif
    611          
    612          	//========================================================================
    613          }
   \       0x3E   0xB011             ADD      SP,SP,#+68
   \       0x40   0xBDF0             POP      {R4-R7,PC}
    614          
    615          //==========================================================================

   \                                 In section .text, align 2, keep-with-next
    616          void SendLightOn( void )
    617          //==========================================================================
    618          {
   \                     SendLightOn: (+1)
   \        0x0   0xB580             PUSH     {R7,LR}
    619          	SendLight( 1 );		//	Light On
   \        0x2   0x2001             MOVS     R0,#+1
   \        0x4   0x.... 0x....      BL       SendLight
    620          
    621          
    622          	m_lightTxSentCnt = 20;
   \        0x8   0x2014             MOVS     R0,#+20
   \        0xA   0x.... 0x....      LDR.W    R1,??DataTable26_2
   \        0xE   0x6008             STR      R0,[R1, #+0]
    623          	m_light_Val = 0xDD;
   \       0x10   0x20DD             MOVS     R0,#+221
   \       0x12   0x.... 0x....      LDR.W    R1,??DataTable26_3
   \       0x16   0x6008             STR      R0,[R1, #+0]
    624          
    625          
    626          }
   \       0x18   0xBD01             POP      {R0,PC}
    627          
    628          //==========================================================================

   \                                 In section .text, align 2, keep-with-next
    629          void SendLightOff( void )
    630          //==========================================================================
    631          {
   \                     SendLightOff: (+1)
   \        0x0   0xB580             PUSH     {R7,LR}
    632          	SendLight( 0 );		//	Light Off
   \        0x2   0x2000             MOVS     R0,#+0
   \        0x4   0x.... 0x....      BL       SendLight
    633          
    634          	m_lightTxSentCnt = 20;
   \        0x8   0x2014             MOVS     R0,#+20
   \        0xA   0x.... 0x....      LDR.W    R1,??DataTable26_2
   \        0xE   0x6008             STR      R0,[R1, #+0]
    635          	m_light_Val = 0xCC;
   \       0x10   0x20CC             MOVS     R0,#+204
   \       0x12   0x.... 0x....      LDR.W    R1,??DataTable26_3
   \       0x16   0x6008             STR      R0,[R1, #+0]
    636          
    637          }
   \       0x18   0xBD01             POP      {R0,PC}
    638          
    639          //==========================================================================

   \                                 In section .text, align 2, keep-with-next
    640          void SendRFCmdCh( int nCh, char *sCmd, int nRSSI )
    641          //==========================================================================
    642          {
   \                     SendRFCmdCh: (+1)
   \        0x0   0xB570             PUSH     {R4-R6,LR}
   \        0x2   0xB090             SUB      SP,SP,#+64
   \        0x4   0x0004             MOVS     R4,R0
   \        0x6   0x000D             MOVS     R5,R1
   \        0x8   0x0016             MOVS     R6,R2
    643          	printf( "%s(%d)\n", __func__, __LINE__ );
   \        0xA   0xF240 0x2283      MOVW     R2,#+643
   \        0xE   0x.... 0x....      LDR.W    R1,??DataTable32_6
   \       0x12   0x.... 0x....      LDR.W    R0,??DataTable34
   \       0x16   0x.... 0x....      BL       printf
    644          	//========================================================================
    645          	RFMPkt			stPkt;
    646          	_MakeRFCmd( &stPkt, sCmd, nRSSI );
   \       0x1A   0x0032             MOVS     R2,R6
   \       0x1C   0x0029             MOVS     R1,R5
   \       0x1E   0x4668             MOV      R0,SP
   \       0x20   0x.... 0x....      BL       _MakeRFCmd
    647          
    648          	//========================================================================
    649          	//	Send RF
    650          	SendPktCh( nCh, (U8 *)&stPkt, (U8)sizeof( RFMPktHdr ) + RFPktDataLen );
                 	                ^
Warning[Pe167]: argument of type "U8 *" is incompatible with parameter of type
          "char const *"
   \       0x24   0x2240             MOVS     R2,#+64
   \       0x26   0x4669             MOV      R1,SP
   \       0x28   0x0020             MOVS     R0,R4
   \       0x2A   0x.... 0x....      BL       SendPktCh
    651          	//========================================================================
    652          }
   \       0x2E   0xB010             ADD      SP,SP,#+64
   \       0x30   0xBD70             POP      {R4-R6,PC}
    653          
    654          //==========================================================================

   \                                 In section .text, align 2, keep-with-next
    655          void SendRFCmd( char *sCmd, int nRSSI )
    656          //==========================================================================
    657          {
   \                     SendRFCmd: (+1)
   \        0x0   0xB570             PUSH     {R4-R6,LR}
   \        0x2   0xB090             SUB      SP,SP,#+64
   \        0x4   0x0004             MOVS     R4,R0
   \        0x6   0x000D             MOVS     R5,R1
    658          	printf( "%s(%d)\n", __func__, __LINE__ );
   \        0x8   0xF240 0x2292      MOVW     R2,#+658
   \        0xC   0x.... 0x....      LDR.W    R1,??DataTable32_7
   \       0x10   0x.... 0x....      LDR.W    R0,??DataTable34
   \       0x14   0x.... 0x....      BL       printf
    659          	//========================================================================
    660          	RFMPkt			stPkt;
    661          	_MakeRFCmd( &stPkt, sCmd, nRSSI );
   \       0x18   0x002A             MOVS     R2,R5
   \       0x1A   0x0021             MOVS     R1,R4
   \       0x1C   0x4668             MOV      R0,SP
   \       0x1E   0x.... 0x....      BL       _MakeRFCmd
    662          
    663          
    664          	//========================================================================
    665          	//	Send RF
    666          //	SendPacket( (U8 *)&stPkt, (U8)sizeof( RFMPktHdr ) + RFPktDataLen );
    667          
    668          	//========================================================================
    669          	//	모든 수신기로 전송.
    670          //	for ( int nCh = ChTS_base; nCh < ChTS1_1 + (ChGap * 10); nCh++ )
    671          	for ( int nCh = ChTS_base; nCh < ChMax; nCh++ )
   \       0x22   0x260B             MOVS     R6,#+11
   \                     ??SendRFCmd_0: (+1)
   \       0x24   0x2E40             CMP      R6,#+64
   \       0x26   0xDA09             BGE.N    ??SendRFCmd_1
    672          	{
    673          		SendPktCh( nCh, (U8 *)&stPkt, (U8)sizeof( RFMPktHdr ) + RFPktDataLen );
                 		                ^
Warning[Pe167]: argument of type "U8 *" is incompatible with parameter of type
          "char const *"
   \       0x28   0x2240             MOVS     R2,#+64
   \       0x2A   0x4669             MOV      R1,SP
   \       0x2C   0x0030             MOVS     R0,R6
   \       0x2E   0x.... 0x....      BL       SendPktCh
    674          
    675          		HAL_Delay(3);	//	Tx Delay
   \       0x32   0x2003             MOVS     R0,#+3
   \       0x34   0x.... 0x....      BL       HAL_Delay
    676          	}
   \       0x38   0x1C76             ADDS     R6,R6,#+1
   \       0x3A   0xE7F3             B.N      ??SendRFCmd_0
    677          	//========================================================================
    678          }
   \                     ??SendRFCmd_1: (+1)
   \       0x3C   0xB010             ADD      SP,SP,#+64
   \       0x3E   0xBD70             POP      {R4-R6,PC}
    679          
    680          //==========================================================================

   \                                 In section .text, align 2, keep-with-next
    681          void SendRFCmdReset( void )
    682          //==========================================================================
    683          {
   \                     SendRFCmdReset: (+1)
   \        0x0   0xB510             PUSH     {R4,LR}
   \        0x2   0xB090             SUB      SP,SP,#+64
    684          	printf( "%s(%d)\n", __func__, __LINE__ );
   \        0x4   0xF44F 0x722B      MOV      R2,#+684
   \        0x8   0x.... 0x....      LDR.W    R1,??DataTable32_8
   \        0xC   0x.... 0x....      LDR.W    R0,??DataTable26
   \       0x10   0x.... 0x....      BL       printf
    685          
    686          	SendRFCmd( "reset", 190 );
   \       0x14   0x.... 0x....      LDR.W    R4,??DataTable34_1
   \       0x18   0x21BE             MOVS     R1,#+190
   \       0x1A   0x0020             MOVS     R0,R4
   \       0x1C   0x.... 0x....      BL       SendRFCmd
    687          
    688          	//========================================================================
    689          	//	Reset시 Upgrade채널도 reset
    690          	RFMPkt			stPkt;
    691          	_MakeRFCmd( &stPkt, "reset", 190 );
   \       0x20   0x22BE             MOVS     R2,#+190
   \       0x22   0x0021             MOVS     R1,R4
   \       0x24   0x4668             MOV      R0,SP
   \       0x26   0x.... 0x....      BL       _MakeRFCmd
    692          	SendPktCh( ChUpgrDst, (U8 *)&stPkt, (U8)sizeof( RFMPktHdr ) + RFPktDataLen );
                 	                      ^
Warning[Pe167]: argument of type "U8 *" is incompatible with parameter of type
          "char const *"
   \       0x2A   0x2240             MOVS     R2,#+64
   \       0x2C   0x4669             MOV      R1,SP
   \       0x2E   0x2003             MOVS     R0,#+3
   \       0x30   0x.... 0x....      BL       SendPktCh
    693          	//========================================================================
    694          }
   \       0x34   0xB010             ADD      SP,SP,#+64
   \       0x36   0xBD10             POP      {R4,PC}
    695          
    696          //==========================================================================

   \                                 In section .text, align 2, keep-with-next
    697          void SendRFCmdCar( int nCar )
    698          //==========================================================================
    699          {
   \                     SendRFCmdCar: (+1)
   \        0x0   0xB518             PUSH     {R3,R4,LR}
   \        0x2   0xB099             SUB      SP,SP,#+100
   \        0x4   0x0004             MOVS     R4,R0
    700          	printf( "%s(%d)\n", __func__, __LINE__ );
   \        0x6   0xF44F 0x722F      MOV      R2,#+700
   \        0xA   0x.... 0x....      LDR.W    R1,??DataTable32_9
   \        0xE   0x.... 0x....      LDR.W    R0,??DataTable26
   \       0x12   0x.... 0x....      BL       printf
    701          
    702          	char sBuf[100];
    703          	sprintf(sBuf, "car %d", nCar );
   \       0x16   0x0022             MOVS     R2,R4
   \       0x18   0x.... 0x....      LDR.W    R1,??DataTable34_2
   \       0x1C   0x4668             MOV      R0,SP
   \       0x1E   0x.... 0x....      BL       sprintf
    704          
    705          	SendRFCmd( sBuf, 190 );
   \       0x22   0x21BE             MOVS     R1,#+190
   \       0x24   0x4668             MOV      R0,SP
   \       0x26   0x.... 0x....      BL       SendRFCmd
    706          }
   \       0x2A   0xB01A             ADD      SP,SP,#+104
   \       0x2C   0xBD10             POP      {R4,PC}
    707          
    708          //==========================================================================

   \                                 In section .text, align 2, keep-with-next
    709          void SendRFCmdTS( int nIdx )
    710          //==========================================================================
    711          {
   \                     SendRFCmdTS: (+1)
   \        0x0   0xB518             PUSH     {R3,R4,LR}
   \        0x2   0xB099             SUB      SP,SP,#+100
   \        0x4   0x0004             MOVS     R4,R0
    712          	printf( "%s(%d)\n", __func__, __LINE__ );
   \        0x6   0xF44F 0x7232      MOV      R2,#+712
   \        0xA   0x.... 0x....      LDR.W    R1,??DataTable32_10
   \        0xE   0x.... 0x....      LDR.W    R0,??DataTable26
   \       0x12   0x.... 0x....      BL       printf
    713          
    714          	char sBuf[100];
    715          	sprintf(sBuf, "ts %d", nIdx );
   \       0x16   0x0022             MOVS     R2,R4
   \       0x18   0x.... 0x....      LDR.W    R1,??DataTable34_3
   \       0x1C   0x4668             MOV      R0,SP
   \       0x1E   0x.... 0x....      BL       sprintf
    716          
    717          	SendRFCmd( sBuf, 190 );
   \       0x22   0x21BE             MOVS     R1,#+190
   \       0x24   0x4668             MOV      R0,SP
   \       0x26   0x.... 0x....      BL       SendRFCmd
    718          }
   \       0x2A   0xB01A             ADD      SP,SP,#+104
   \       0x2C   0xBD10             POP      {R4,PC}
    719          
    720          //==========================================================================

   \                                 In section .text, align 2, keep-with-next
    721          void SendRFCmdRFMode( int nMode )
    722          //==========================================================================
    723          {
   \                     SendRFCmdRFMode: (+1)
   \        0x0   0xB518             PUSH     {R3,R4,LR}
   \        0x2   0xB099             SUB      SP,SP,#+100
   \        0x4   0x0004             MOVS     R4,R0
    724          	printf( "%s(%d)\n", __func__, __LINE__ );
   \        0x6   0xF44F 0x7235      MOV      R2,#+724
   \        0xA   0x.... 0x....      LDR.W    R1,??DataTable32_11
   \        0xE   0x.... 0x....      LDR.W    R0,??DataTable26
   \       0x12   0x.... 0x....      BL       printf
    725          
    726          	char sBuf[100];
    727          	sprintf(sBuf, "rfmod %d", nMode );
   \       0x16   0x0022             MOVS     R2,R4
   \       0x18   0x.... 0x....      LDR.W    R1,??DataTable34_4
   \       0x1C   0x4668             MOV      R0,SP
   \       0x1E   0x.... 0x....      BL       sprintf
    728          
    729          	SendRFCmd( sBuf, 190 );
   \       0x22   0x21BE             MOVS     R1,#+190
   \       0x24   0x4668             MOV      R0,SP
   \       0x26   0x.... 0x....      BL       SendRFCmd
    730          }
   \       0x2A   0xB01A             ADD      SP,SP,#+104
   \       0x2C   0xBD10             POP      {R4,PC}
    731          
    732          //==========================================================================

   \                                 In section .text, align 2, keep-with-next
    733          void SendRFCmdDFUMode( void )
    734          //==========================================================================
    735          {
   \                     SendRFCmdDFUMode: (+1)
   \        0x0   0xB580             PUSH     {R7,LR}
    736          	printf( "%s(%d)\n", __func__, __LINE__ );
   \        0x2   0xF44F 0x7238      MOV      R2,#+736
   \        0x6   0x.... 0x....      LDR.W    R1,??DataTable33_1
   \        0xA   0x.... 0x....      LDR.W    R0,??DataTable26
   \        0xE   0x.... 0x....      BL       printf
    737          	//==========================================================================
    738          	SendRFCmd( "stboot", 247 );	//	DFU모드의 경우 아주 근접(RSSI-247)하지 않으면 동작하지 않도록 한다!!!
   \       0x12   0x21F7             MOVS     R1,#+247
   \       0x14   0x.... 0x....      LDR.W    R0,??DataTable34_5
   \       0x18   0x.... 0x....      BL       SendRFCmd
    739          	//==========================================================================
    740          }
   \       0x1C   0xBD01             POP      {R0,PC}
    741          
    742          //==========================================================================

   \                                 In section .text, align 2, keep-with-next
    743          void SendRFCmdUpgrade( int bRetry )
    744          //==========================================================================
    745          {
   \                     SendRFCmdUpgrade: (+1)
   \        0x0   0xB510             PUSH     {R4,LR}
   \        0x2   0x0004             MOVS     R4,R0
    746          	//==========================================================================
    747          	//	송신기에서 Upgrade 명령 전송.
    748          	//==========================================================================
    749          
    750          	printf( "%s(%d)\n", __func__, __LINE__ );
   \        0x4   0xF240 0x22EE      MOVW     R2,#+750
   \        0x8   0x.... 0x....      LDR.W    R1,??DataTable33_2
   \        0xC   0x.... 0x....      LDR.W    R0,??DataTable26
   \       0x10   0x.... 0x....      BL       printf
    751          	//==========================================================================
    752          	//	Upgrade Start Command
    753          
    754          	if ( bRetry )
   \       0x14   0x2C00             CMP      R4,#+0
   \       0x16   0xD006             BEQ.N    ??SendRFCmdUpgrade_0
    755          	{
    756          		//	Upgrade 채널로 전송
    757          		//	Upgrade Mode로 변경.
    758          		SendRFCmdCh( ChUpgrDst, "upgrade 1", 200 );	//	DFU모드의 경우 근접(RSSI-200)하지 않으면 동작하지 않도록 한다!!!
   \       0x18   0x22C8             MOVS     R2,#+200
   \       0x1A   0x.... 0x....      LDR.W    R1,??DataTable34_6
   \       0x1E   0x2003             MOVS     R0,#+3
   \       0x20   0x.... 0x....      BL       SendRFCmdCh
   \       0x24   0xE004             B.N      ??SendRFCmdUpgrade_1
    759          	}
    760          	else
    761          	{
    762          		//	Upgrade Mode로 변경.
    763          		SendRFCmd( "upgrade 1", 200 );	//	DFU모드의 경우 근접(RSSI-200)하지 않으면 동작하지 않도록 한다!!!
   \                     ??SendRFCmdUpgrade_0: (+1)
   \       0x26   0x21C8             MOVS     R1,#+200
   \       0x28   0x.... 0x....      LDR.W    R0,??DataTable34_6
   \       0x2C   0x.... 0x....      BL       SendRFCmd
    764          	}
    765          	//==========================================================================
    766          
    767          	SetUpgrReTry( bRetry );			//	Retry 설정.
                 	^
Warning[Pe223]: function "SetUpgrReTry" declared implicitly
   \                     ??SendRFCmdUpgrade_1: (+1)
   \       0x30   0x0020             MOVS     R0,R4
   \       0x32   0x.... 0x....      BL       SetUpgrReTry
    768          
    769          	HAL_Delay( 500 );	//	sleep 200 msec
   \       0x36   0xF44F 0x70FA      MOV      R0,#+500
   \       0x3A   0x.... 0x....      BL       HAL_Delay
    770          
    771          	//========================================================================
    772          	//	Upgrade Image 전송.
    773          	UpgrSendImageApp();
                 	^
Warning[Pe223]: function "UpgrSendImageApp" declared implicitly
   \       0x3E   0x.... 0x....      BL       UpgrSendImageApp
    774          	//========================================================================
    775          
    776          	//==========================================================================
    777          	//	Upgrade End Command
    778          //DEL	SendRFCmd( "upgrade 0", 200 );	//	DFU모드의 경우 근접(RSSI-200)하지 않으면 동작하지 않도록 한다!!!
    779          	//==========================================================================
    780          }
   \       0x42   0xBD10             POP      {R4,PC}
    781          
    782          //==========================================================================

   \                                 In section .text, align 2, keep-with-next
    783          void	SendUpgrData		( uint32_t nAddrTarget, int nPktTot, int nPktIdx, uint8_t *sBuf, int nSize )	//	Send Upgrade Data
    784          //==========================================================================
    785          {
   \                     SendUpgrData: (+1)
   \        0x0   0xE92D 0x4FF0      PUSH     {R4-R11,LR}
   \        0x4   0xB091             SUB      SP,SP,#+68
   \        0x6   0x0004             MOVS     R4,R0
   \        0x8   0x000D             MOVS     R5,R1
   \        0xA   0x0016             MOVS     R6,R2
   \        0xC   0x001F             MOVS     R7,R3
   \        0xE   0xF8DD 0x8068      LDR      R8,[SP, #+104]
    786          //	printf( "%s(%d)\n", __func__, __LINE__ );
    787          
    788          	RFMPkt			stPkt;
    789          	memset( &stPkt, 0, sizeof( stPkt ) );
   \       0x12   0xF05F 0x0940      MOVS     R9,#+64
   \       0x16   0xF05F 0x0A00      MOVS     R10,#+0
   \       0x1A   0xF10D 0x0B04      ADD      R11,SP,#+4
   \       0x1E   0x4652             MOV      R2,R10
   \       0x20   0x4649             MOV      R1,R9
   \       0x22   0x4658             MOV      R0,R11
   \       0x24   0x.... 0x....      BL       __aeabi_memset
    790          
    791          	//========================================================================
    792          	//	Packet Header
    793          	_MakePktHdr( &stPkt, GetDevID(), 0xFF, RFPktDataLen, PktUpgr );
   \       0x28   0x.... 0x....      BL       GetDevID
   \       0x2C   0x2140             MOVS     R1,#+64
   \       0x2E   0x9100             STR      R1,[SP, #+0]
   \       0x30   0x233C             MOVS     R3,#+60
   \       0x32   0x22FF             MOVS     R2,#+255
   \       0x34   0x0001             MOVS     R1,R0
   \       0x36   0xA801             ADD      R0,SP,#+4
   \       0x38   0x.... 0x....      BL       _MakePktHdr
    794          
    795          	//========================================================================
    796          	//	Packet Body
    797          	RFMPktUpgr	*pUpgr = (RFMPktUpgr *)&stPkt.dat.upgr;
   \       0x3C   0xF10D 0x0B08      ADD      R11,SP,#+8
    798          
    799          	pUpgr->baseAddr		=	nAddrTarget;
   \       0x40   0xF8CB 0x4000      STR      R4,[R11, #+0]
    800          	pUpgr->totPkt		=	nPktTot;
   \       0x44   0xF8AB 0x5004      STRH     R5,[R11, #+4]
    801          	pUpgr->idxPkt		=	nPktIdx;
   \       0x48   0xF8AB 0x6006      STRH     R6,[R11, #+6]
    802          	pUpgr->nSize		=	nSize;
   \       0x4C   0xF88B 0x8008      STRB     R8,[R11, #+8]
    803          
    804          	if (stPkt.hdr.nPktCmd == PktUpgr) //같은 편성만 업데이트가 가능 하도록 기능 추가.
   \       0x50   0xF89D 0x0007      LDRB     R0,[SP, #+7]
   \       0x54   0x2840             CMP      R0,#+64
   \       0x56   0xD103             BNE.N    ??SendUpgrData_0
    805          	{
    806          		pUpgr->nSpare2[0] = GetTrainSetIdx(); //
   \       0x58   0x.... 0x....      BL       GetTrainSetIdx
   \       0x5C   0xF88B 0x003A      STRB     R0,[R11, #+58]
    807          	}
    808          
    809          
    810          
    811          	if( GetUpgrReTry() ) pUpgr->bFlag	|=	PktUpgrFlagRetry;	//	Retry Flag
                 	    ^
Warning[Pe223]: function "GetUpgrReTry" declared implicitly
   \                     ??SendUpgrData_0: (+1)
   \       0x60   0x.... 0x....      BL       GetUpgrReTry
   \       0x64   0x2800             CMP      R0,#+0
   \       0x66   0xD005             BEQ.N    ??SendUpgrData_1
   \       0x68   0xF89B 0x0009      LDRB     R0,[R11, #+9]
   \       0x6C   0xF050 0x0001      ORRS     R0,R0,#0x1
   \       0x70   0xF88B 0x0009      STRB     R0,[R11, #+9]
    812          
    813          	memcpy( pUpgr->data, sBuf, nSize );
   \                     ??SendUpgrData_1: (+1)
   \       0x74   0xF8CD 0x8000      STR      R8,[SP, #+0]
   \       0x78   0x46B9             MOV      R9,R7
   \       0x7A   0xF11B 0x0A0A      ADDS     R10,R11,#+10
   \       0x7E   0x9A00             LDR      R2,[SP, #+0]
   \       0x80   0x4649             MOV      R1,R9
   \       0x82   0x4650             MOV      R0,R10
   \       0x84   0x.... 0x....      BL       __aeabi_memcpy
    814          
    815          	//========================================================================
    816          	//	Send RF
    817          	SendPktCh( ChUpgrDst, (U8 *)&stPkt, (U8)sizeof( RFMPktHdr ) + RFPktDataLen );
                 	                      ^
Warning[Pe167]: argument of type "U8 *" is incompatible with parameter of type
          "char const *"
   \       0x88   0x2240             MOVS     R2,#+64
   \       0x8A   0xA901             ADD      R1,SP,#+4
   \       0x8C   0x2003             MOVS     R0,#+3
   \       0x8E   0x.... 0x....      BL       SendPktCh
    818          
    819          	//========================================================================
    820          }
   \       0x92   0xB011             ADD      SP,SP,#+68
   \       0x94   0xE8BD 0x8FF0      POP      {R4-R11,PC}
    821          
    822          //==========================================================================

   \                                 In section .text, align 2, keep-with-next
    823          void	SendUpgrStat		( int nUpgrResult )	//	Send Upgrade Data
    824          //==========================================================================
    825          {
   \                     SendUpgrStat: (+1)
   \        0x0   0xB5F0             PUSH     {R4-R7,LR}
   \        0x2   0xB091             SUB      SP,SP,#+68
   \        0x4   0x0004             MOVS     R4,R0
    826          	printf( "%s(%d) - %d\n", __func__, __LINE__, nUpgrResult );
   \        0x6   0x0023             MOVS     R3,R4
   \        0x8   0xF240 0x323A      MOVW     R2,#+826
   \        0xC   0x.... 0x....      LDR.W    R1,??DataTable34_7
   \       0x10   0x.... 0x....      LDR.W    R0,??DataTable34_8
   \       0x14   0x.... 0x....      BL       printf
    827          
    828          	RFMPkt			stPkt;
    829          	memset( &stPkt, 0, sizeof( stPkt ) );
   \       0x18   0x2540             MOVS     R5,#+64
   \       0x1A   0x2600             MOVS     R6,#+0
   \       0x1C   0xAF01             ADD      R7,SP,#+4
   \       0x1E   0x0032             MOVS     R2,R6
   \       0x20   0x0029             MOVS     R1,R5
   \       0x22   0x0038             MOVS     R0,R7
   \       0x24   0x.... 0x....      BL       __aeabi_memset
    830          
    831          	//========================================================================
    832          	//	Packet Header
    833          	_MakePktHdr( &stPkt, GetDevID(), 0xFF, RFPktDataLen, PktUpgrStat );
   \       0x28   0x.... 0x....      BL       GetDevID
   \       0x2C   0x0001             MOVS     R1,R0
   \       0x2E   0x2041             MOVS     R0,#+65
   \       0x30   0x9000             STR      R0,[SP, #+0]
   \       0x32   0x233C             MOVS     R3,#+60
   \       0x34   0x22FF             MOVS     R2,#+255
   \       0x36   0xA801             ADD      R0,SP,#+4
   \       0x38   0x.... 0x....      BL       _MakePktHdr
    834          
    835          	//========================================================================
    836          	//	Packet Body
    837          	RFMPktUpgrStat	*pUpgrStat = (RFMPktUpgrStat *)&stPkt.dat.upgrStat;
   \       0x3C   0xAF02             ADD      R7,SP,#+8
    838          
    839          	pUpgrStat->nResult		=	nUpgrResult;
   \       0x3E   0x703C             STRB     R4,[R7, #+0]
    840          	pUpgrStat->nTrainSet	=	g_idxTrainSet;
   \       0x40   0x.... 0x....      LDR.W    R0,??DataTable34_9
   \       0x44   0x6800             LDR      R0,[R0, #+0]
   \       0x46   0x7138             STRB     R0,[R7, #+4]
    841          	pUpgrStat->nCarNo 		=	g_nCarNo;
   \       0x48   0x.... 0x....      LDR.W    R0,??DataTable34_10
   \       0x4C   0x6800             LDR      R0,[R0, #+0]
   \       0x4E   0x7178             STRB     R0,[R7, #+5]
    842          
    843          	//========================================================================
    844          	//	Send RF
    845          #if defined( USE_CH_ISO_DEV )
    846          
    847          	//	송신기#1
    848          	SendPktCh( ChTx_1, (U8 *)&stPkt, (U8)sizeof( RFMPktHdr ) + RFPktDataLen );
                 	                   ^
Warning[Pe167]: argument of type "U8 *" is incompatible with parameter of type
          "char const *"
   \       0x50   0x2240             MOVS     R2,#+64
   \       0x52   0xA901             ADD      R1,SP,#+4
   \       0x54   0x.... 0x....      LDR.W    R0,??DataTable32_1
   \       0x58   0x6800             LDR      R0,[R0, #+0]
   \       0x5A   0x.... 0x....      BL       SendPktCh
    849          
    850          	HAL_Delay(3);	//	재전송 전 Delay
   \       0x5E   0x2003             MOVS     R0,#+3
   \       0x60   0x.... 0x....      BL       HAL_Delay
    851          
    852          	//	송신기#2
    853          	SendPktCh( ChTx_2, (U8 *)&stPkt, (U8)sizeof( RFMPktHdr ) + RFPktDataLen );
                 	                   ^
Warning[Pe167]: argument of type "U8 *" is incompatible with parameter of type
          "char const *"
   \       0x64   0x2240             MOVS     R2,#+64
   \       0x66   0xA901             ADD      R1,SP,#+4
   \       0x68   0x.... 0x....      LDR.W    R0,??DataTable34_11
   \       0x6C   0x6800             LDR      R0,[R0, #+0]
   \       0x6E   0x.... 0x....      BL       SendPktCh
    854          
    855          #else
    856          	int nCh;
    857          	nCh = ChTS1_1 + g_idxTrainSet * 2 + ((g_nCarNo) % 2);	// 현재 호차 채널
    858          	SendPktCh( nCh, (U8 *)&stPkt, (U8)sizeof( RFMPktHdr ) + RFPktDataLen );
    859          
    860          	HAL_Delay(5);	//	재전송 전 Delay
    861          
    862          	nCh = ChTS1_1 + g_idxTrainSet * 2 + ((g_nCarNo+1) % 2);	// 현재 호차 채널
    863          	SendPktCh( nCh, (U8 *)&stPkt, (U8)sizeof( RFMPktHdr ) + RFPktDataLen );
    864          #endif
    865          
    866          	//========================================================================
    867          }
   \       0x72   0xB011             ADD      SP,SP,#+68
   \       0x74   0xBDF0             POP      {R4-R7,PC}
    868          
    869          //==========================================================================
    870          //		Process Packet
    871          //==========================================================================
    872          
    873          
    874          //========================================================================

   \                                 In section .text, align 2, keep-with-next
    875          int	ProcPktStatReq		( const RFMPkt *pRFPkt )
    876          //========================================================================
    877          {
   \                     ProcPktStatReq: (+1)
   \        0x0   0xE92D 0x41F0      PUSH     {R4-R8,LR}
   \        0x4   0x0004             MOVS     R4,R0
    878          	if ( GetDbg() == 3 )		printf( "%s(%d)\n", __func__, __LINE__ );
                 	     ^
Warning[Pe223]: function "GetDbg" declared implicitly
   \        0x6   0x.... 0x....      BL       GetDbg
   \        0xA   0x2803             CMP      R0,#+3
   \        0xC   0xD107             BNE.N    ??ProcPktStatReq_0
   \        0xE   0xF240 0x326E      MOVW     R2,#+878
   \       0x12   0x.... 0x....      LDR.W    R1,??DataTable34_12
   \       0x16   0x.... 0x....      LDR.W    R0,??DataTable26
   \       0x1A   0x.... 0x....      BL       printf
    879          
    880          	const RFMPktStatReq *pStatReq = &pRFPkt->dat.statReq;
   \                     ??ProcPktStatReq_0: (+1)
   \       0x1E   0x1D25             ADDS     R5,R4,#+4
    881          
    882          	// 같은 편성 번호 차량 명령에만 반응한다. )
    883          	if ((pStatReq->nTrainNo != GetTrainSetIdx())) return 0;
   \       0x20   0x.... 0x....      BL       GetTrainSetIdx
   \       0x24   0x7929             LDRB     R1,[R5, #+4]
   \       0x26   0x4281             CMP      R1,R0
   \       0x28   0xD001             BEQ.N    ??ProcPktStatReq_1
   \       0x2A   0x2000             MOVS     R0,#+0
   \       0x2C   0xE064             B.N      ??ProcPktStatReq_2
    884          
    885          	m_RouteRunFlag = ((10 - GetCarNo())*5);
   \                     ??ProcPktStatReq_1: (+1)
   \       0x2E   0x.... 0x....      BL       GetCarNo
   \       0x32   0xF1D0 0x000A      RSBS     R0,R0,#+10
   \       0x36   0x2105             MOVS     R1,#+5
   \       0x38   0x4348             MULS     R0,R1,R0
   \       0x3A   0x.... 0x....      LDR.W    R1,??DataTable34_13
   \       0x3E   0x6008             STR      R0,[R1, #+0]
    886          
    887          	//	수신기의 경우 송신기 상태정보 갱신.
    888          	//		-> 상태정보 요청한 송신기의 상태정보를 갱신한다.
    889          	if ( GetDevID() == DevRF900M )
   \       0x40   0x.... 0x....      BL       GetDevID
   \       0x44   0x2801             CMP      R0,#+1
   \       0x46   0xD154             BNE.N    ??ProcPktStatReq_3
    890          	{
    891          
    892          		int idx = pStatReq->nCarNo;
   \       0x48   0x796E             LDRB     R6,[R5, #+5]
    893          
    894          		//========================================================================
    895          		//	장치 응답 Flag 설정.
    896          		SetStat( idx );		//	상태정보 설정.
                 		^
Warning[Pe223]: function "SetStat" declared implicitly
   \       0x4A   0x0030             MOVS     R0,R6
   \       0x4C   0x.... 0x....      BL       SetStat
    897          
    898          		//========================================================================
    899          		//	RSSI 갱신
    900          		g_devStat[idx].stat.nChRx 	= pStatReq->nSrcCh;
   \       0x50   0x2725             MOVS     R7,#+37
   \       0x52   0x.... 0x....      LDR.W    R8,??DataTable34_14
   \       0x56   0x7828             LDRB     R0,[R5, #+0]
   \       0x58   0xFB07 0xF106      MUL      R1,R7,R6
   \       0x5C   0x4441             ADD      R1,R8,R1
   \       0x5E   0x7288             STRB     R0,[R1, #+10]
    901          		g_devStat[idx].stampRx 		= HAL_GetTick();
   \       0x60   0x.... 0x....      BL       HAL_GetTick
   \       0x64   0xFB07 0xF106      MUL      R1,R7,R6
   \       0x68   0x4441             ADD      R1,R8,R1
   \       0x6A   0xF8C1 0x0019      STR      R0,[R1, #+25]
    902          		g_devStat[idx].nRSSI 		= g_nRSSI;
   \       0x6E   0xFB07 0xF006      MUL      R0,R7,R6
   \       0x72   0x4440             ADD      R0,R8,R0
   \       0x74   0x.... 0x....      LDR.W    R1,??DataTable34_15
   \       0x78   0x6809             LDR      R1,[R1, #+0]
   \       0x7A   0xF8C0 0x101D      STR      R1,[R0, #+29]
    903          #if defined(USE_ROUTE_NEAREST_RFM)	//	수신기 -> 송신기 중계 연결. ( 가장가까운 수신기에서 송신기로 중계 )
    904          		g_devStat[idx].nNearCh 		= pStatReq->nNearCh;	//	송신기 입장에서 가까운 수신기(RFM)채널.
   \       0x7E   0xFB07 0xF706      MUL      R7,R7,R6
   \       0x82   0xEB08 0x0007      ADD      R0,R8,R7
   \       0x86   0x7A29             LDRB     R1,[R5, #+8]
   \       0x88   0xF8C0 0x1021      STR      R1,[R0, #+33]
    905          #endif	//	defined(USE_ROUTE_NEAREST_RFM)
    906          
    907          		if(pStatReq->nSpare1[0] == 0xCC)
   \       0x8C   0x7868             LDRB     R0,[R5, #+1]
   \       0x8E   0x28CC             CMP      R0,#+204
   \       0x90   0xD116             BNE.N    ??ProcPktStatReq_4
    908          		{
    909          			// 조명 Off 명령 수신시.
    910          			HAL_GPIO_WritePin ( LIGHT_ON_GPIO_Port, LIGHT_ON_Pin, GPIO_PIN_RESET );
   \       0x92   0x.... 0x....      LDR.W    R7,??DataTable34_16
   \       0x96   0x2200             MOVS     R2,#+0
   \       0x98   0xF44F 0x7100      MOV      R1,#+512
   \       0x9C   0x0038             MOVS     R0,R7
   \       0x9E   0x.... 0x....      BL       HAL_GPIO_WritePin
    911          			HAL_GPIO_WritePin ( LIGHT_ON_GPIO_Port, LIGHT_ON_Pin, GPIO_PIN_RESET );
   \       0xA2   0x2200             MOVS     R2,#+0
   \       0xA4   0xF44F 0x7100      MOV      R1,#+512
   \       0xA8   0x0038             MOVS     R0,R7
   \       0xAA   0x.... 0x....      BL       HAL_GPIO_WritePin
    912          
    913          			if ( GetDbg() == 6 ) printf("StReq: Led_OFF \n");
                 			     ^
Warning[Pe223]: function "GetDbg" declared implicitly
   \       0xAE   0x.... 0x....      BL       GetDbg
   \       0xB2   0x2806             CMP      R0,#+6
   \       0xB4   0xD11D             BNE.N    ??ProcPktStatReq_3
   \       0xB6   0x.... 0x....      LDR.W    R0,??DataTable34_17
   \       0xBA   0x.... 0x....      BL       printf
   \       0xBE   0xE018             B.N      ??ProcPktStatReq_3
    914          
    915          		}
    916          		else if(pStatReq->nSpare1[0] == 0xDD)
   \                     ??ProcPktStatReq_4: (+1)
   \       0xC0   0x7868             LDRB     R0,[R5, #+1]
   \       0xC2   0x28DD             CMP      R0,#+221
   \       0xC4   0xD115             BNE.N    ??ProcPktStatReq_3
    917          		{
    918          			// 조명 ON 명령 수신시.
    919          			HAL_GPIO_WritePin ( LIGHT_ON_GPIO_Port, LIGHT_ON_Pin, GPIO_PIN_SET );
   \       0xC6   0x.... 0x....      LDR.W    R7,??DataTable34_16
   \       0xCA   0x2201             MOVS     R2,#+1
   \       0xCC   0xF44F 0x7100      MOV      R1,#+512
   \       0xD0   0x0038             MOVS     R0,R7
   \       0xD2   0x.... 0x....      BL       HAL_GPIO_WritePin
    920          			HAL_GPIO_WritePin ( LIGHT_ON_GPIO_Port, LIGHT_ON_Pin, GPIO_PIN_SET );
   \       0xD6   0x2201             MOVS     R2,#+1
   \       0xD8   0xF44F 0x7100      MOV      R1,#+512
   \       0xDC   0x0038             MOVS     R0,R7
   \       0xDE   0x.... 0x....      BL       HAL_GPIO_WritePin
    921          
    922          			if ( GetDbg() == 6 ) printf("Req: Led_ON \n");
                 			     ^
Warning[Pe223]: function "GetDbg" declared implicitly
   \       0xE2   0x.... 0x....      BL       GetDbg
   \       0xE6   0x2806             CMP      R0,#+6
   \       0xE8   0xD103             BNE.N    ??ProcPktStatReq_3
   \       0xEA   0x.... 0x....      LDR.W    R0,??DataTable34_18
   \       0xEE   0x.... 0x....      BL       printf
    923          
    924          		}
    925          
    926          	}
    927          
    928          	//	Source Channel로 상태정보 송신.
    929          	SendStat( pStatReq->nSrcCh );
   \                     ??ProcPktStatReq_3: (+1)
   \       0xF2   0x7828             LDRB     R0,[R5, #+0]
   \       0xF4   0x.... 0x....      BL       SendStat
    930          }
                 ^
Warning[Pe940]: missing return statement at end of non-void function
          "ProcPktStatReq"
   \                     ??ProcPktStatReq_2: (+1)
   \       0xF8   0xE8BD 0x81F0      POP      {R4-R8,PC}
    931          
    932          
    933          //========================================================================

   \                                 In section .text, align 2, keep-with-next
    934          int	ProcPktStat			( const RFMPkt *pRFPkt )
    935          //========================================================================
    936          {
   \                     ProcPktStat: (+1)
   \        0x0   0xB570             PUSH     {R4-R6,LR}
   \        0x2   0x0004             MOVS     R4,R0
    937          	if ( GetDbg() == 3 )		printf( "%s(%d)\n", __func__, __LINE__ );
                 	     ^
Warning[Pe223]: function "GetDbg" declared implicitly
   \        0x4   0x.... 0x....      BL       GetDbg
   \        0x8   0x2803             CMP      R0,#+3
   \        0xA   0xD106             BNE.N    ??ProcPktStat_0
   \        0xC   0xF240 0x32A9      MOVW     R2,#+937
   \       0x10   0x.... 0x....      LDR.W    R1,??DataTable34_19
   \       0x14   0x....             LDR.N    R0,??DataTable26
   \       0x16   0x.... 0x....      BL       printf
    938          
    939          	int nRspID = pRFPkt->dat.stat.nCarNo;
   \                     ??ProcPktStat_0: (+1)
   \       0x1A   0x7C65             LDRB     R5,[R4, #+17]
    940          	const RFMPktStat *pStat = &pRFPkt->dat.stat;
   \       0x1C   0x1D26             ADDS     R6,R4,#+4
    941          	//	상태정보 수신.
    942          //		printf ( "[Stat] Car:%d\n", pRFPkt->dat.stat.nCarNo );
    943          
    944          	if(pStat->nTrainNo !=	GetTrainSetIdx()) return 0;	//	편성번호 확인.
   \       0x1E   0x.... 0x....      BL       GetTrainSetIdx
   \       0x22   0x7B31             LDRB     R1,[R6, #+12]
   \       0x24   0x4281             CMP      R1,R0
   \       0x26   0xD001             BEQ.N    ??ProcPktStat_1
   \       0x28   0x2000             MOVS     R0,#+0
   \       0x2A   0xE017             B.N      ??ProcPktStat_2
    945          
    946          
    947          	if( nRspID < MaxCarNo	//	MaxCarNo(13)
    948          		&& ( pStat->nDevID == DevRF900M || pStat->nDevID == DevRF900T )
    949          		&& pStat->nMagicNum == 0xAA55
    950          		&& g_bSetRspIDManual == 0		//	수동설정모드가 아닌경우.
    951          		)
   \                     ??ProcPktStat_1: (+1)
   \       0x2C   0x2D0D             CMP      R5,#+13
   \       0x2E   0xDA15             BGE.N    ??ProcPktStat_3
   \       0x30   0x7870             LDRB     R0,[R6, #+1]
   \       0x32   0x2801             CMP      R0,#+1
   \       0x34   0xD002             BEQ.N    ??ProcPktStat_4
   \       0x36   0x7870             LDRB     R0,[R6, #+1]
   \       0x38   0x2802             CMP      R0,#+2
   \       0x3A   0xD10F             BNE.N    ??ProcPktStat_3
   \                     ??ProcPktStat_4: (+1)
   \       0x3C   0x8870             LDRH     R0,[R6, #+2]
   \       0x3E   0xF64A 0x2155      MOVW     R1,#+43605
   \       0x42   0x4288             CMP      R0,R1
   \       0x44   0xD10A             BNE.N    ??ProcPktStat_3
   \       0x46   0x.... 0x....      LDR.W    R0,??DataTable34_20
   \       0x4A   0x6800             LDR      R0,[R0, #+0]
   \       0x4C   0x2800             CMP      R0,#+0
   \       0x4E   0xD105             BNE.N    ??ProcPktStat_3
    952          	{
    953          		//	장치 응답 Flag 설정.
    954          		SetStat( nRspID );		//	상태정보 설정.
                 		^
Warning[Pe223]: function "SetStat" declared implicitly
   \       0x50   0x0028             MOVS     R0,R5
   \       0x52   0x.... 0x....      BL       SetStat
    955          
    956          		UpdateStat( pStat );	//	상태정보 Update. ( 버전정보 갱신 등 )
                 		^
Warning[Pe223]: function "UpdateStat" declared implicitly
   \       0x56   0x0030             MOVS     R0,R6
   \       0x58   0x.... 0x....      BL       UpdateStat
    957          	}
    958          
    959          	//========================================================================
    960          	//	송신기 조명상태에 따른 조명 제어.
    961          #if defined(USE_STAT_LIGHT)
    962          	if( pStat->nDevID == DevRF900T )
    963          	{
    964          		//	조명상태 저장 및 제어.
    965          		if( pStat->nDevFlag & DevFlagLight )
    966          		{
    967          			// 조명 On 명령 수신시.
    968          			g_nDevFlag |= DevFlagLight;
    969          			HAL_GPIO_WritePin ( LIGHT_ON_GPIO_Port, LIGHT_ON_Pin, GPIO_PIN_SET );
    970          		}
    971          		else
    972          		{
    973          			// 조명 Off
    974          			g_nDevFlag &= ~DevFlagLight;
    975          			HAL_GPIO_WritePin ( LIGHT_ON_GPIO_Port, LIGHT_ON_Pin, GPIO_PIN_RESET );
    976          		}
    977          	}
    978          #endif
    979          	//========================================================================
    980          }
                 ^
Warning[Pe940]: missing return statement at end of non-void function
          "ProcPktStat"
   \                     ??ProcPktStat_3: (+1)
   \                     ??ProcPktStat_2: (+1)
   \       0x5C   0xBD70             POP      {R4-R6,PC}
    981          
    982          
    983          //========================================================================

   \                                 In section .text, align 2, keep-with-next
    984          int	ProcPktRouteReq		( const RFMPkt *pRFPkt ) //요청.
    985          //========================================================================
    986          {
   \                     ProcPktRouteReq: (+1)
   \        0x0   0xB5F8             PUSH     {R3-R7,LR}
   \        0x2   0x0004             MOVS     R4,R0
    987          	//	Source Channel로 Route 응답.
    988          	const RFMPktRoute *pRouteReq = &pRFPkt->dat.routeReq;
   \        0x4   0x1D25             ADDS     R5,R4,#+4
    989          
    990          	// 같은 편성 번호 차량 명령에만 반응한다. )
    991          	if ((pRouteReq->nTrainNo  != GetTrainSetIdx())) return 0;
   \        0x6   0x.... 0x....      BL       GetTrainSetIdx
   \        0xA   0x7969             LDRB     R1,[R5, #+5]
   \        0xC   0x4281             CMP      R1,R0
   \        0xE   0xD001             BEQ.N    ??ProcPktRouteReq_0
   \       0x10   0x2000             MOVS     R0,#+0
   \       0x12   0xE071             B.N      ??ProcPktRouteReq_1
    992          
    993          	if ( GetDbg() == 3 )		printf( "%s(%d) - %d\n", __func__, __LINE__, pRouteReq->nSrcCh );
                 	     ^
Warning[Pe223]: function "GetDbg" declared implicitly
   \                     ??ProcPktRouteReq_0: (+1)
   \       0x14   0x.... 0x....      BL       GetDbg
   \       0x18   0x2803             CMP      R0,#+3
   \       0x1A   0xD108             BNE.N    ??ProcPktRouteReq_2
   \       0x1C   0x782B             LDRB     R3,[R5, #+0]
   \       0x1E   0xF240 0x32E1      MOVW     R2,#+993
   \       0x22   0x.... 0x....      LDR.W    R1,??DataTable34_21
   \       0x26   0x.... 0x....      LDR.W    R0,??DataTable34_8
   \       0x2A   0x.... 0x....      BL       printf
    994          
    995          	if ( GetDbg() == 5 ) printf( "Req : %d\n",pRouteReq->nSrcCh);
                 	     ^
Warning[Pe223]: function "GetDbg" declared implicitly
   \                     ??ProcPktRouteReq_2: (+1)
   \       0x2E   0x.... 0x....      BL       GetDbg
   \       0x32   0x2805             CMP      R0,#+5
   \       0x34   0xD104             BNE.N    ??ProcPktRouteReq_3
   \       0x36   0x7829             LDRB     R1,[R5, #+0]
   \       0x38   0x.... 0x....      LDR.W    R0,??DataTable34_22
   \       0x3C   0x.... 0x....      BL       printf
    996          
    997          
    998          
    999          
   1000          	if ( GetDevID() == DevRF900M )
   \                     ??ProcPktRouteReq_3: (+1)
   \       0x40   0x.... 0x....      BL       GetDevID
   \       0x44   0x2801             CMP      R0,#+1
   \       0x46   0xD147             BNE.N    ??ProcPktRouteReq_4
   1001          	{
   1002          		//	수신기의 경우 Route경로 설정.
   1003          		int idx = pRouteReq->nCarNo;
   \       0x48   0x79AE             LDRB     R6,[R5, #+6]
   1004          
   1005          		if( pRouteReq->nSrcDev == DevRF900M )
   \       0x4A   0x7868             LDRB     R0,[R5, #+1]
   \       0x4C   0x2801             CMP      R0,#+1
   \       0x4E   0xD110             BNE.N    ??ProcPktRouteReq_5
   1006          		{
   1007          			//	1. 인접한 송신기로 등록.
   1008          
   1009          			//	2. 가까운 수신기에 Route정보 요청.
   1010          
   1011          			if ( pRouteReq->nSrcCh < GetChRx() )
   \       0x50   0x.... 0x....      BL       GetChRx
   \       0x54   0x7829             LDRB     R1,[R5, #+0]
   \       0x56   0x4281             CMP      R1,R0
   \       0x58   0xDA03             BGE.N    ??ProcPktRouteReq_6
   1012          			{
   1013          				//	1 -> 2 ...
   1014          				SetChRFMDown( pRouteReq->nSrcCh );
   \       0x5A   0x7828             LDRB     R0,[R5, #+0]
   \       0x5C   0x.... 0x....      BL       SetChRFMDown
   \       0x60   0xE007             B.N      ??ProcPktRouteReq_5
   1015          
   1016          #if defined(USE_ROUTE_REQ_RFM)
   1017          				//	수신기에서 요청의 경우 다음수신기로 요청하지 않음.
   1018          #else
   1019          				//	다음 수신기로 Route 요청.
   1020          				SendRouteReq( GetChRx() + ChGap );
   1021          #endif
   1022          			}
   1023          			else if ( pRouteReq->nSrcCh > GetChRx() )
   \                     ??ProcPktRouteReq_6: (+1)
   \       0x62   0x.... 0x....      BL       GetChRx
   \       0x66   0x7829             LDRB     R1,[R5, #+0]
   \       0x68   0x4288             CMP      R0,R1
   \       0x6A   0xDA02             BGE.N    ??ProcPktRouteReq_5
   1024          			{
   1025          				//	... 3 <- 4
   1026          				SetChRFMUp( pRouteReq->nSrcCh );
   \       0x6C   0x7828             LDRB     R0,[R5, #+0]
   \       0x6E   0x.... 0x....      BL       SetChRFMUp
   1027          
   1028          #if defined(USE_ROUTE_REQ_RFM)
   1029          				//	수신기에서 요청의 경우 다음수신기로 요청하지 않음.
   1030          #else
   1031          				//	다음 수신기로 Route 요청.
   1032          				if( g_nCarNo != 1 )	//	1호차가 아닌경우
   1033          					SendRouteReq( GetChRx() - ChGap );
   1034          #endif
   1035          			}
   1036          		}
   1037          #if defined(USE_ROUTE_REQ_RFM)
   1038          				//	수신기에서 요청의 경우 다음수신기로 요청하지 않음.
   1039          #else
   1040          		else if( pRouteReq->nSrcDev == DevRF900T )
   1041          		{
   1042          			//	송신기에서 전송시  상위 / 하위 수신기 확인.
   1043          			//	1 <- 2 -> 3 ...
   1044          
   1045          			//	다음 수신기로 Route 요청.
   1046          			SendRouteReq( GetChRx() + ChGap );
   1047          
   1048          			if( g_nCarNo != 1 )	//	1호차가 아닌경우
   1049          				SendRouteReq( GetChRx() - ChGap );
   1050          		}
   1051          #endif
   1052          
   1053          
   1054          		//========================================================================
   1055          		//	Route 정보 갱신
   1056          		if (pRouteReq->nSpare1[0] == 0xAA) // 조명등 OFF 데이타를 받으면, 강제로 종료 한다. ( 내가 받은 데이타)  _JDS
   \                     ??ProcPktRouteReq_5: (+1)
   \       0x72   0x78A8             LDRB     R0,[R5, #+2]
   \       0x74   0x28AA             CMP      R0,#+170
   \       0x76   0xD116             BNE.N    ??ProcPktRouteReq_7
   1057          		{
   1058          			// 조명 Off 명령 수신시.
   1059          			HAL_GPIO_WritePin ( LIGHT_ON_GPIO_Port, LIGHT_ON_Pin, GPIO_PIN_RESET );
   \       0x78   0x.... 0x....      LDR.W    R7,??DataTable34_16
   \       0x7C   0x2200             MOVS     R2,#+0
   \       0x7E   0xF44F 0x7100      MOV      R1,#+512
   \       0x82   0x0038             MOVS     R0,R7
   \       0x84   0x.... 0x....      BL       HAL_GPIO_WritePin
   1060          			HAL_GPIO_WritePin ( LIGHT_ON_GPIO_Port, LIGHT_ON_Pin, GPIO_PIN_RESET );
   \       0x88   0x2200             MOVS     R2,#+0
   \       0x8A   0xF44F 0x7100      MOV      R1,#+512
   \       0x8E   0x0038             MOVS     R0,R7
   \       0x90   0x.... 0x....      BL       HAL_GPIO_WritePin
   1061          
   1062          			if ( GetDbg() == 6 ) printf("Req: Led_OFF \n");
                 			     ^
Warning[Pe223]: function "GetDbg" declared implicitly
   \       0x94   0x.... 0x....      BL       GetDbg
   \       0x98   0x2806             CMP      R0,#+6
   \       0x9A   0xD11D             BNE.N    ??ProcPktRouteReq_4
   \       0x9C   0x.... 0x....      LDR.W    R0,??DataTable34_23
   \       0xA0   0x.... 0x....      BL       printf
   \       0xA4   0xE018             B.N      ??ProcPktRouteReq_4
   1063          
   1064          		}
   1065          		else if (pRouteReq->nSpare1[0] == 0xBB) // 조명등 ON 데이타를 받으면, 강제로 종료 한다. ( 내가 받은 데이타)  _JDS
   \                     ??ProcPktRouteReq_7: (+1)
   \       0xA6   0x78A8             LDRB     R0,[R5, #+2]
   \       0xA8   0x28BB             CMP      R0,#+187
   \       0xAA   0xD115             BNE.N    ??ProcPktRouteReq_4
   1066          		{
   1067          			// 조명 ON 명령 수신시.
   1068          			HAL_GPIO_WritePin ( LIGHT_ON_GPIO_Port, LIGHT_ON_Pin, GPIO_PIN_SET );
   \       0xAC   0x.... 0x....      LDR.W    R7,??DataTable34_16
   \       0xB0   0x2201             MOVS     R2,#+1
   \       0xB2   0xF44F 0x7100      MOV      R1,#+512
   \       0xB6   0x0038             MOVS     R0,R7
   \       0xB8   0x.... 0x....      BL       HAL_GPIO_WritePin
   1069          			HAL_GPIO_WritePin ( LIGHT_ON_GPIO_Port, LIGHT_ON_Pin, GPIO_PIN_SET );
   \       0xBC   0x2201             MOVS     R2,#+1
   \       0xBE   0xF44F 0x7100      MOV      R1,#+512
   \       0xC2   0x0038             MOVS     R0,R7
   \       0xC4   0x.... 0x....      BL       HAL_GPIO_WritePin
   1070          
   1071          			if ( GetDbg() == 6 ) printf("Req: Led_ON \n");
                 			     ^
Warning[Pe223]: function "GetDbg" declared implicitly

  		int idx = pRouteReq->nCarNo;
  		    ^
"C:\D\Git_Hub\STM_IAR_SIL_Change\Library\RFMProtocol.c",1003  Warning[Pe177]: 
          variable "idx" was declared but never referenced
   \       0xC8   0x.... 0x....      BL       GetDbg
   \       0xCC   0x2806             CMP      R0,#+6
   \       0xCE   0xD103             BNE.N    ??ProcPktRouteReq_4
   \       0xD0   0x.... 0x....      LDR.W    R0,??DataTable34_18
   \       0xD4   0x.... 0x....      BL       printf
   1072          
   1073          		}
   1074          
   1075          	}
   1076          
   1077          	//	Resp Delay
   1078          //	HAL_Delay( 3 );	//	Route 응답 Delay
   1079          	SendRouteRsp( pRouteReq->nSrcCh );
   \                     ??ProcPktRouteReq_4: (+1)
   \       0xD8   0x7828             LDRB     R0,[R5, #+0]
   \       0xDA   0x.... 0x....      BL       SendRouteRsp
   1080          
   1081          	m_RouteReq_OK = 1;
   \       0xDE   0x2001             MOVS     R0,#+1
   \       0xE0   0x.... 0x....      LDR.W    R1,??DataTable34_24
   \       0xE4   0x6008             STR      R0,[R1, #+0]
   1082          
   1083          	m_RouteRunFlag = ((10 - GetCarNo())*5);
   \       0xE6   0x.... 0x....      BL       GetCarNo
   \       0xEA   0xF1D0 0x000A      RSBS     R0,R0,#+10
   \       0xEE   0x2105             MOVS     R1,#+5
   \       0xF0   0x4348             MULS     R0,R1,R0
   \       0xF2   0x.... 0x....      LDR.W    R1,??DataTable34_13
   \       0xF6   0x6008             STR      R0,[R1, #+0]
   1084          
   1085          }
                 ^
Warning[Pe940]: missing return statement at end of non-void function
          "ProcPktRouteReq"
   \                     ??ProcPktRouteReq_1: (+1)
   \       0xF8   0xBDF2             POP      {R1,R4-R7,PC}
   1086          
   1087          
   1088          //========================================================================

   \                                 In section .text, align 2, keep-with-next
   1089          int	ProcPktRouteRsp		( const RFMPkt *pRFPkt )
   1090          //========================================================================
   1091          {
   \                     ProcPktRouteRsp: (+1)
   \        0x0   0xB5F8             PUSH     {R3-R7,LR}
   \        0x2   0x0004             MOVS     R4,R0
   1092          	const RFMPktRoute *pRouteRsp = &pRFPkt->dat.routeRsp;
   \        0x4   0x1D25             ADDS     R5,R4,#+4
   1093          
   1094          	// 같은 편성 번호 차량 명령에만 반응한다. )
   1095          	if ((pRouteRsp->nTrainNo != GetTrainSetIdx())) return 0;
   \        0x6   0x.... 0x....      BL       GetTrainSetIdx
   \        0xA   0x7969             LDRB     R1,[R5, #+5]
   \        0xC   0x4281             CMP      R1,R0
   \        0xE   0xD001             BEQ.N    ??ProcPktRouteRsp_0
   \       0x10   0x2000             MOVS     R0,#+0
   \       0x12   0xE06A             B.N      ??ProcPktRouteRsp_1
   1096          
   1097          
   1098          	g_nStampRouteRsp = HAL_GetTick();		//	응답 시간 저장.
   \                     ??ProcPktRouteRsp_0: (+1)
   \       0x14   0x.... 0x....      BL       HAL_GetTick
   \       0x18   0x.... 0x....      LDR.W    R1,??DataTable34_25
   \       0x1C   0x6008             STR      R0,[R1, #+0]
   1099          	g_nIdxRouteFindNext = 0;				//	Find Index 초기화.
   \       0x1E   0x2000             MOVS     R0,#+0
   \       0x20   0x.... 0x....      LDR.W    R1,??DataTable34_26
   \       0x24   0x6008             STR      R0,[R1, #+0]
   1100          
   1101          	if ( GetDbg() == 3 )		printf( "%s(%d) - %d\n", __func__, __LINE__, pRouteRsp->nSrcCh );
                 	     ^
Warning[Pe223]: function "GetDbg" declared implicitly
   \       0x26   0x.... 0x....      BL       GetDbg
   \       0x2A   0x2803             CMP      R0,#+3
   \       0x2C   0xD108             BNE.N    ??ProcPktRouteRsp_2
   \       0x2E   0x782B             LDRB     R3,[R5, #+0]
   \       0x30   0xF240 0x424D      MOVW     R2,#+1101
   \       0x34   0x.... 0x....      LDR.W    R1,??DataTable34_27
   \       0x38   0x.... 0x....      LDR.W    R0,??DataTable34_8
   \       0x3C   0x.... 0x....      BL       printf
   1102          
   1103          	if ( GetDbg() == 5 ) printf( "Rsp : %d\n",pRouteRsp->nSrcCh);
                 	     ^
Warning[Pe223]: function "GetDbg" declared implicitly
   \                     ??ProcPktRouteRsp_2: (+1)
   \       0x40   0x.... 0x....      BL       GetDbg
   \       0x44   0x2805             CMP      R0,#+5
   \       0x46   0xD104             BNE.N    ??ProcPktRouteRsp_3
   \       0x48   0x7829             LDRB     R1,[R5, #+0]
   \       0x4A   0x.... 0x....      LDR.W    R0,??DataTable34_28
   \       0x4E   0x.... 0x....      BL       printf
   1104          
   1105          
   1106          
   1107          
   1108          
   1109          	if ( GetDevID() == DevRF900M )
   \                     ??ProcPktRouteRsp_3: (+1)
   \       0x52   0x.... 0x....      BL       GetDevID
   \       0x56   0x2801             CMP      R0,#+1
   \       0x58   0xD147             BNE.N    ??ProcPktRouteRsp_4
   1110          	{
   1111          		//	수신기의 경우 Route경로 설정.
   1112          		int idx = pRouteRsp->nCarNo;
   \       0x5A   0x79AE             LDRB     R6,[R5, #+6]
   1113          
   1114          		if( pRouteRsp->nSrcDev == DevRF900M )
   \       0x5C   0x7868             LDRB     R0,[R5, #+1]
   \       0x5E   0x2801             CMP      R0,#+1
   \       0x60   0xD110             BNE.N    ??ProcPktRouteRsp_5
   1115          		{
   1116          			//	1. 인접한 송신기로 등록.
   1117          
   1118          			//	2. 가까운 수신기에 Route정보 요청.
   1119          
   1120          			if ( pRouteRsp->nSrcCh < GetChRx() )
   \       0x62   0x.... 0x....      BL       GetChRx
   \       0x66   0x7829             LDRB     R1,[R5, #+0]
   \       0x68   0x4281             CMP      R1,R0
   \       0x6A   0xDA03             BGE.N    ??ProcPktRouteRsp_6
   1121          			{
   1122          				//	1 -> 2 ...
   1123          				SetChRFMDown( pRouteRsp->nSrcCh );
   \       0x6C   0x7828             LDRB     R0,[R5, #+0]
   \       0x6E   0x.... 0x....      BL       SetChRFMDown
   \       0x72   0xE007             B.N      ??ProcPktRouteRsp_5
   1124          
   1125          				//	다음 수신기로 Route 요청.
   1126          			}
   1127          			else if ( pRouteRsp->nSrcCh > GetChRx() )
   \                     ??ProcPktRouteRsp_6: (+1)
   \       0x74   0x.... 0x....      BL       GetChRx
   \       0x78   0x7829             LDRB     R1,[R5, #+0]
   \       0x7A   0x4288             CMP      R0,R1
   \       0x7C   0xDA02             BGE.N    ??ProcPktRouteRsp_5
   1128          			{
   1129          				//	... 3 <- 4
   1130          				SetChRFMUp( pRouteRsp->nSrcCh );
   \       0x7E   0x7828             LDRB     R0,[R5, #+0]
   \       0x80   0x.... 0x....      BL       SetChRFMUp
   1131          
   1132          				//	다음 수신기로 Route 요청.
   1133          			}
   1134          		}
   1135          
   1136          		if( pRouteRsp->nSrcDev == DevRF900T )
   1137          		{
   1138          			//	송신기에서 전송시  상위 / 하위 수신기 확인.
   1139          			//	1 <- 2 -> 3 ...
   1140          
   1141          			//	다음 수신기로 Route 요청.
   1142          		}
   1143          
   1144          		//========================================================================
   1145          		//	Route 정보 갱신
   1146          
   1147          		if (pRouteRsp->nSpare1[1] == 0xAA) // 조명등 OFF 데이타를 받으면, 강제로 종료 한다. ( 내가 받은 데이타)  _JDS
   \                     ??ProcPktRouteRsp_5: (+1)
   \       0x84   0x78E8             LDRB     R0,[R5, #+3]
   \       0x86   0x28AA             CMP      R0,#+170
   \       0x88   0xD116             BNE.N    ??ProcPktRouteRsp_7
   1148          		{
   1149          			// 조명 Off 명령 수신시.
   1150          			HAL_GPIO_WritePin(LIGHT_ON_GPIO_Port, LIGHT_ON_Pin, GPIO_PIN_RESET);
   \       0x8A   0x.... 0x....      LDR.W    R7,??DataTable34_16
   \       0x8E   0x2200             MOVS     R2,#+0
   \       0x90   0xF44F 0x7100      MOV      R1,#+512
   \       0x94   0x0038             MOVS     R0,R7
   \       0x96   0x.... 0x....      BL       HAL_GPIO_WritePin
   1151          			HAL_GPIO_WritePin(LIGHT_ON_GPIO_Port, LIGHT_ON_Pin, GPIO_PIN_RESET);
   \       0x9A   0x2200             MOVS     R2,#+0
   \       0x9C   0xF44F 0x7100      MOV      R1,#+512
   \       0xA0   0x0038             MOVS     R0,R7
   \       0xA2   0x.... 0x....      BL       HAL_GPIO_WritePin
   1152          
   1153          			if ( GetDbg() == 6 ) printf("Rep: Led_OFF \n");
                 			     ^
Warning[Pe223]: function "GetDbg" declared implicitly
   \       0xA6   0x.... 0x....      BL       GetDbg
   \       0xAA   0x2806             CMP      R0,#+6
   \       0xAC   0xD11D             BNE.N    ??ProcPktRouteRsp_4
   \       0xAE   0x.... 0x....      LDR.W    R0,??DataTable34_29
   \       0xB2   0x.... 0x....      BL       printf
   \       0xB6   0xE018             B.N      ??ProcPktRouteRsp_4
   1154          
   1155          		}
   1156          		else if (pRouteRsp->nSpare1[1] == 0xBB)
   \                     ??ProcPktRouteRsp_7: (+1)
   \       0xB8   0x78E8             LDRB     R0,[R5, #+3]
   \       0xBA   0x28BB             CMP      R0,#+187
   \       0xBC   0xD115             BNE.N    ??ProcPktRouteRsp_4
   1157          		{
   1158          			// 조명 ON 명령 수신시.
   1159          			HAL_GPIO_WritePin ( LIGHT_ON_GPIO_Port, LIGHT_ON_Pin, GPIO_PIN_SET );
   \       0xBE   0x.... 0x....      LDR.W    R7,??DataTable34_16
   \       0xC2   0x2201             MOVS     R2,#+1
   \       0xC4   0xF44F 0x7100      MOV      R1,#+512
   \       0xC8   0x0038             MOVS     R0,R7
   \       0xCA   0x.... 0x....      BL       HAL_GPIO_WritePin
   1160          			HAL_GPIO_WritePin ( LIGHT_ON_GPIO_Port, LIGHT_ON_Pin, GPIO_PIN_SET );
   \       0xCE   0x2201             MOVS     R2,#+1
   \       0xD0   0xF44F 0x7100      MOV      R1,#+512
   \       0xD4   0x0038             MOVS     R0,R7
   \       0xD6   0x.... 0x....      BL       HAL_GPIO_WritePin
   1161          
   1162          			if ( GetDbg() == 6 ) printf("Req: Led_ON \n");
                 			     ^
Warning[Pe223]: function "GetDbg" declared implicitly

  		int idx = pRouteRsp->nCarNo;
  		    ^
"C:\D\Git_Hub\STM_IAR_SIL_Change\Library\RFMProtocol.c",1112  Warning[Pe177]: 
          variable "idx" was declared but never referenced
   \       0xDA   0x.... 0x....      BL       GetDbg
   \       0xDE   0x2806             CMP      R0,#+6
   \       0xE0   0xD103             BNE.N    ??ProcPktRouteRsp_4
   \       0xE2   0x.... 0x....      LDR.W    R0,??DataTable34_18
   \       0xE6   0x.... 0x....      BL       printf
   1163          
   1164          
   1165          		}
   1166          
   1167          	}
   1168          }
                 ^
Warning[Pe940]: missing return statement at end of non-void function
          "ProcPktRouteRsp"
   \                     ??ProcPktRouteRsp_4: (+1)
   \                     ??ProcPktRouteRsp_1: (+1)
   \       0xEA   0xBDF2             POP      {R1,R4-R7,PC}
   1169          
   1170          
   1171          //========================================================================

   \                                 In section .text, align 2, keep-with-next
   1172          int	ProcPktCtrlPaCall	( const RFMPkt *pRFPkt )
   1173          //========================================================================
   1174          {
   \                     ProcPktCtrlPaCall: (+1)
   \        0x0   0xB538             PUSH     {R3-R5,LR}
   \        0x2   0x0004             MOVS     R4,R0
   1175          	if ( GetDbg() == 3 )		printf( "%s(%d)\n", __func__, __LINE__ );
                 	     ^
Warning[Pe223]: function "GetDbg" declared implicitly
   \        0x4   0x.... 0x....      BL       GetDbg
   \        0x8   0x2803             CMP      R0,#+3
   \        0xA   0xD106             BNE.N    ??ProcPktCtrlPaCall_0
   \        0xC   0xF240 0x4297      MOVW     R2,#+1175
   \       0x10   0x.... 0x....      LDR.W    R1,??DataTable34_30
   \       0x14   0x....             LDR.N    R0,??DataTable26
   \       0x16   0x.... 0x....      BL       printf
   1176          
   1177          	//	방송/통화 시작 종료 명령.
   1178          	const RFMPktCtrlPACall	*pCtrl = &pRFPkt->dat.pacall;
   \                     ??ProcPktCtrlPaCall_0: (+1)
   \       0x1A   0x1D25             ADDS     R5,R4,#+4
   1179          
   1180          	switch ( pCtrl->nStartStop )
   \       0x1C   0x7828             LDRB     R0,[R5, #+0]
   \       0x1E   0x2800             CMP      R0,#+0
   \       0x20   0xD009             BEQ.N    ??ProcPktCtrlPaCall_1
   \       0x22   0x2801             CMP      R0,#+1
   \       0x24   0xD11A             BNE.N    ??ProcPktCtrlPaCall_2
   1181          	{
   1182          	case CtrlStart:
   1183          		printf("[Start]");
   \                     ??ProcPktCtrlPaCall_3: (+1)
   \       0x26   0x.... 0x....      LDR.W    R0,??DataTable34_31
   \       0x2A   0x.... 0x....      BL       printf
   1184          		SetRFMMode( RFMModeRx );
   \       0x2E   0x2002             MOVS     R0,#+2
   \       0x30   0x.... 0x....      BL       SetRFMMode
   1185          		break;
   \       0x34   0xE01A             B.N      ??ProcPktCtrlPaCall_4
   1186          	case CtrlStop:
   1187          		printf("[Stop]");
   \                     ??ProcPktCtrlPaCall_1: (+1)
   \       0x36   0x.... 0x....      LDR.W    R0,??DataTable34_32
   \       0x3A   0x.... 0x....      BL       printf
   1188          		SetRFMMode( RFMModeNormal );
   \       0x3E   0x2000             MOVS     R0,#+0
   \       0x40   0x.... 0x....      BL       SetRFMMode
   1189          		//  송신기 & 수신기 Spk Relay Off
   1190          		HAL_GPIO_WritePin( AUDIO_ON_GPIO_Port, AUDIO_ON_Pin, GPIO_PIN_RESET );
   \       0x44   0x2200             MOVS     R2,#+0
   \       0x46   0xF44F 0x7180      MOV      R1,#+256
   \       0x4A   0x.... 0x....      LDR.W    R0,??DataTable34_16
   \       0x4E   0x.... 0x....      BL       HAL_GPIO_WritePin
   1191          
   1192          		qBufClear( &g_qBufAudioRx );	//	Tx Buffer Clear
   \       0x52   0x.... 0x....      LDR.W    R0,??DataTable34_33
   \       0x56   0x.... 0x....      BL       qBufClear
   1193          
   1194          		break;
   \       0x5A   0xE007             B.N      ??ProcPktCtrlPaCall_4
   1195          	default:			printf("%s:Invalid\n", __func__);	return 0;
   \                     ??ProcPktCtrlPaCall_2: (+1)
   \       0x5C   0x.... 0x....      LDR.W    R1,??DataTable34_30
   \       0x60   0x.... 0x....      LDR.W    R0,??DataTable34_34
   \       0x64   0x.... 0x....      BL       printf
   \       0x68   0x2000             MOVS     R0,#+0
   \       0x6A   0xE02F             B.N      ??ProcPktCtrlPaCall_5
   1196          	}
   1197          
   1198          	switch ( pCtrl->nTypePACall )
   \                     ??ProcPktCtrlPaCall_4: (+1)
   \       0x6C   0x7868             LDRB     R0,[R5, #+1]
   \       0x6E   0x2801             CMP      R0,#+1
   \       0x70   0xD004             BEQ.N    ??ProcPktCtrlPaCall_6
   \       0x72   0xD312             BCC.N    ??ProcPktCtrlPaCall_7
   \       0x74   0x2803             CMP      R0,#+3
   \       0x76   0xD00B             BEQ.N    ??ProcPktCtrlPaCall_8
   \       0x78   0xD305             BCC.N    ??ProcPktCtrlPaCall_9
   \       0x7A   0xE00E             B.N      ??ProcPktCtrlPaCall_7
   1199          	{
   1200          	case CtrlPA:		printf("[PA]");						break;
   \                     ??ProcPktCtrlPaCall_6: (+1)
   \       0x7C   0x.... 0x....      LDR.W    R0,??DataTable34_35
   \       0x80   0x.... 0x....      BL       printf
   \       0x84   0xE011             B.N      ??ProcPktCtrlPaCall_10
   1201          	case CtrlCall:		printf("[Call]");					break;
   \                     ??ProcPktCtrlPaCall_9: (+1)
   \       0x86   0x.... 0x....      LDR.W    R0,??DataTable34_36
   \       0x8A   0x.... 0x....      BL       printf
   \       0x8E   0xE00C             B.N      ??ProcPktCtrlPaCall_10
   1202          	case CtrlOccPa:		printf("[OccPa]");					break;
   \                     ??ProcPktCtrlPaCall_8: (+1)
   \       0x90   0x.... 0x....      LDR.W    R0,??DataTable34_37
   \       0x94   0x.... 0x....      BL       printf
   \       0x98   0xE007             B.N      ??ProcPktCtrlPaCall_10
   1203          	default:			printf("%s:Invalid\n", __func__);	return 0;
   \                     ??ProcPktCtrlPaCall_7: (+1)
   \       0x9A   0x.... 0x....      LDR.W    R1,??DataTable34_30
   \       0x9E   0x.... 0x....      LDR.W    R0,??DataTable34_34
   \       0xA2   0x.... 0x....      BL       printf
   \       0xA6   0x2000             MOVS     R0,#+0
   \       0xA8   0xE010             B.N      ??ProcPktCtrlPaCall_5
   1204          	}
   1205          
   1206          	printf("\n");
   \                     ??ProcPktCtrlPaCall_10: (+1)
   \       0xAA   0x....             ADR.N    R0,??DataTable31
   \       0xAC   0x.... 0x....      BL       printf
   1207          
   1208          	if ( GetDevID() == DevRF900M )
   \       0xB0   0x.... 0x....      BL       GetDevID
   \       0xB4   0x2801             CMP      R0,#+1
   \       0xB6   0xD104             BNE.N    ??ProcPktCtrlPaCall_11
   1209          	{
   1210          		//	수신기
   1211          
   1212          		//	가까이 있는 송신기 설정. ( 수신기 -> 송신기 중계시 사용 )
   1213          		SetChPARFT( GetChNearRFT( 150 ) );	//	RSSI 190 이상인경우 : 수신기 -> 송신기 중계
                 		^
Warning[Pe223]: function "SetChPARFT" declared implicitly
   \       0xB8   0x2096             MOVS     R0,#+150
   \       0xBA   0x.... 0x....      BL       GetChNearRFT
   \       0xBE   0x.... 0x....      BL       SetChPARFT
   1214          	}
   1215          
   1216          	g_nStampRxPkt = HAL_GetTick();		//	방송/통화 Stamp
   \                     ??ProcPktCtrlPaCall_11: (+1)
   \       0xC2   0x.... 0x....      BL       HAL_GetTick
   \       0xC6   0x.... 0x....      LDR.W    R1,??DataTable34_38
   \       0xCA   0x6008             STR      R0,[R1, #+0]
   1217          }
                 ^
Warning[Pe940]: missing return statement at end of non-void function
          "ProcPktCtrlPaCall"
   \                     ??ProcPktCtrlPaCall_5: (+1)
   \       0xCC   0xBD32             POP      {R1,R4,R5,PC}
   1218          
   1219          //========================================================================

   \                                 In section .text, align 2, keep-with-next
   1220          int	ProcPktPA			( const RFMPkt *pRFPkt )
   1221          //========================================================================
   1222          {
   \                     ProcPktPA: (+1)
   \        0x0   0xB5F8             PUSH     {R3-R7,LR}
   \        0x2   0x0004             MOVS     R4,R0
   1223          	//RFMPktStat *pStat = &pRFPkt->dat.stat;
   1224          
   1225          	const RFMPktHdr2 *pHdr = &pRFPkt->hdr2;
   \        0x4   0x0025             MOVS     R5,R4
   1226          
   1227          	if ( GetDbg() == 3 )		printf( "%s(%d)\n", __func__, __LINE__ );
                 	     ^
Warning[Pe223]: function "GetDbg" declared implicitly
   \        0x6   0x.... 0x....      BL       GetDbg
   \        0xA   0x2803             CMP      R0,#+3
   \        0xC   0xD107             BNE.N    ??ProcPktPA_0
   \        0xE   0xF240 0x42CB      MOVW     R2,#+1227
   \       0x12   0x.... 0x....      LDR.W    R1,??DataTable34_39
   \       0x16   0x.... 0x....      LDR.W    R0,??DataTable34
   \       0x1A   0x.... 0x....      BL       printf
   1228          
   1229          
   1230          	if ( pHdr->nTS != GetTrainSetIdx() )
   \                     ??ProcPktPA_0: (+1)
   \       0x1E   0x.... 0x....      BL       GetTrainSetIdx
   \       0x22   0x7829             LDRB     R1,[R5, #+0]
   \       0x24   0xF011 0x013F      ANDS     R1,R1,#0x3F
   \       0x28   0x4281             CMP      R1,R0
   \       0x2A   0xD001             BEQ.N    ??ProcPktPA_1
   1231          	{
   1232          		//	열차번호가 다른경우 : Skip
   1233          		return 0;	//	Skip
   \       0x2C   0x2000             MOVS     R0,#+0
   \       0x2E   0xE03C             B.N      ??ProcPktPA_2
   1234          	}
   1235          
   1236          	//========================================================================
   1237          	//  방송 ( PTT )
   1238          	if ( GetDevID() == DevRF900M )
   \                     ??ProcPktPA_1: (+1)
   \       0x30   0x.... 0x....      BL       GetDevID
   \       0x34   0x2801             CMP      R0,#+1
   \       0x36   0xD11B             BNE.N    ??ProcPktPA_3
   1239          	{
   1240          		//  수신기
   1241          		uint16_t	 *pAudioBuf = (uint16_t*)pRFPkt->dat.data;
   \       0x38   0x1D26             ADDS     R6,R4,#+4
   1242          
   1243          		//  방송 : 송신기 -> 수신기
   1244          		qBufPut( &g_qBufAudioRx, (uint8_t*)pAudioBuf, ( I2S_DMA_LOOP_SIZE * 2 ) );
   \       0x3A   0x223C             MOVS     R2,#+60
   \       0x3C   0x0031             MOVS     R1,R6
   \       0x3E   0x.... 0x....      LDR.W    R0,??DataTable34_33
   \       0x42   0x.... 0x....      BL       qBufPut
   1245          
   1246          		// 조명 On
   1247          		HAL_GPIO_WritePin ( LIGHT_ON_GPIO_Port, LIGHT_ON_Pin, GPIO_PIN_SET );
   \       0x46   0x.... 0x....      LDR.W    R7,??DataTable34_16
   \       0x4A   0x2201             MOVS     R2,#+1
   \       0x4C   0xF44F 0x7100      MOV      R1,#+512
   \       0x50   0x0038             MOVS     R0,R7
   \       0x52   0x.... 0x....      BL       HAL_GPIO_WritePin
   1248          
   1249          		SetRFMMode( RFMModeRx );
   \       0x56   0x2002             MOVS     R0,#+2
   \       0x58   0x.... 0x....      BL       SetRFMMode
   1250          
   1251          		//	Codec Speaker On
   1252          		RFM_Spk(1);
   \       0x5C   0x2001             MOVS     R0,#+1
   \       0x5E   0x.... 0x....      BL       RFM_Spk
   1253          		//  수신기 Spk Relay On
   1254          		HAL_GPIO_WritePin( AUDIO_ON_GPIO_Port, AUDIO_ON_Pin, GPIO_PIN_SET );
   \       0x62   0x2201             MOVS     R2,#+1
   \       0x64   0xF44F 0x7180      MOV      R1,#+256
   \       0x68   0x0038             MOVS     R0,R7
   \       0x6A   0x.... 0x....      BL       HAL_GPIO_WritePin
   \       0x6E   0xE017             B.N      ??ProcPktPA_4
   1255          	}
   1256          	else
   1257          	{
   1258          		//========================================================================
   1259          		uint16_t	 *pAudioBuf = (uint16_t*)pRFPkt->dat.data;
   \                     ??ProcPktPA_3: (+1)
   \       0x70   0x1D26             ADDS     R6,R4,#+4
   1260          
   1261          #if defined(USE_RFT_ONLY_RX_SPK_ON)
   1262          		//  송신기 : 수신중인 경우 SPK ON
   1263          
   1264          		WriteI2CCodec( 0x0c, 0x2A );	// 갑자기 소리 커지는 문제 해결하기 위해 추가.
   \       0x72   0x212A             MOVS     R1,#+42
   \       0x74   0x200C             MOVS     R0,#+12
   \       0x76   0x.... 0x....      BL       WriteI2CCodec
   1265          //			HAL_GPIO_WritePin( SPK_ON_GPIO_Port, SPK_ON_Pin, GPIO_PIN_SET );
   1266          		RFM_Spk(1);
   \       0x7A   0x2001             MOVS     R0,#+1
   \       0x7C   0x.... 0x....      BL       RFM_Spk
   1267          #endif
   1268          
   1269          		//  방송 : 송신기 -> 수신기
   1270          		qBufPut( &g_qBufAudioRx, (uint8_t*)pAudioBuf, ( I2S_DMA_LOOP_SIZE * 2 ) );
   \       0x80   0x223C             MOVS     R2,#+60
   \       0x82   0x0031             MOVS     R1,R6
   \       0x84   0x.... 0x....      LDR.W    R0,??DataTable34_33
   \       0x88   0x.... 0x....      BL       qBufPut
   1271          		//========================================================================
   1272          
   1273          		//  송신기
   1274          		SetRFMMode( RFMModeRx );
   \       0x8C   0x2002             MOVS     R0,#+2
   \       0x8E   0x.... 0x....      BL       SetRFMMode
   1275          
   1276          		//  Red LED On
   1277          		HAL_GPIO_WritePin ( LED_ON_B_GPIO_Port, LED_ON_B_Pin, GPIO_PIN_SET ); //  RED LED
   \       0x92   0x2201             MOVS     R2,#+1
   \       0x94   0xF44F 0x4180      MOV      R1,#+16384
   \       0x98   0x.... 0x....      LDR.W    R0,??DataTable34_40
   \       0x9C   0x.... 0x....      BL       HAL_GPIO_WritePin
   1278          	}
   1279          	g_nStampRxPkt = HAL_GetTick();		//	방송/통화 Stamp
   \                     ??ProcPktPA_4: (+1)
   \       0xA0   0x.... 0x....      BL       HAL_GetTick
   \       0xA4   0x.... 0x....      LDR.W    R1,??DataTable34_38
   \       0xA8   0x6008             STR      R0,[R1, #+0]
   1280          }
                 ^
Warning[Pe940]: missing return statement at end of non-void function
          "ProcPktPA"
   \                     ??ProcPktPA_2: (+1)
   \       0xAA   0xBDF2             POP      {R1,R4-R7,PC}
   1281          
   1282          //========================================================================

   \                                 In section .text, align 2, keep-with-next
   1283          int	ProcPktCall			( const RFMPkt *pRFPkt )
   1284          //========================================================================
   1285          {
   \                     ProcPktCall: (+1)
   \        0x0   0xB538             PUSH     {R3-R5,LR}
   \        0x2   0x0004             MOVS     R4,R0
   1286          	if ( GetDbg() == 3 )		printf( "%s(%d)\n", __func__, __LINE__ );
                 	     ^
Warning[Pe223]: function "GetDbg" declared implicitly
   \        0x4   0x.... 0x....      BL       GetDbg
   \        0x8   0x2803             CMP      R0,#+3
   \        0xA   0xD107             BNE.N    ??ProcPktCall_0
   \        0xC   0xF240 0x5206      MOVW     R2,#+1286
   \       0x10   0x.... 0x....      LDR.W    R1,??DataTable34_41
   \       0x14   0x.... 0x....      LDR.W    R0,??DataTable34
   \       0x18   0x.... 0x....      BL       printf
   1287          
   1288          	if( GetDevID() == DevRF900T )
   \                     ??ProcPktCall_0: (+1)
   \       0x1C   0x.... 0x....      BL       GetDevID
   \       0x20   0x2802             CMP      R0,#+2
   \       0x22   0xD114             BNE.N    ??ProcPktCall_1
   1289          	{
   1290          		//	송신기
   1291          
   1292          		//========================================================================
   1293          		//  통화 ( SOS )
   1294          		uint16_t	 *pAudioBuf = (uint16_t*)pRFPkt->dat.data;
   \       0x24   0x1D25             ADDS     R5,R4,#+4
   1295          
   1296          		SetRFMMode( RFMModeRx );
   \       0x26   0x2002             MOVS     R0,#+2
   \       0x28   0x.... 0x....      BL       SetRFMMode
   1297          
   1298          #if defined(USE_RFT_ONLY_RX_SPK_ON)
   1299          		//  송신기 : 수신중인 경우 SPK ON
   1300          //		HAL_GPIO_WritePin( SPK_ON_GPIO_Port, SPK_ON_Pin, GPIO_PIN_SET );
   1301          		RFM_Spk(1);
   \       0x2C   0x2001             MOVS     R0,#+1
   \       0x2E   0x.... 0x....      BL       RFM_Spk
   1302          #endif
   1303          
   1304          		//  Red LED On
   1305          		HAL_GPIO_WritePin ( LED_ON_B_GPIO_Port, LED_ON_B_Pin, GPIO_PIN_SET ); //  RED LED
   \       0x32   0x2201             MOVS     R2,#+1
   \       0x34   0xF44F 0x4180      MOV      R1,#+16384
   \       0x38   0x.... 0x....      LDR.W    R0,??DataTable34_40
   \       0x3C   0x.... 0x....      BL       HAL_GPIO_WritePin
   1306          
   1307          		//  통화 : 송신기 -> 송신기
   1308          
   1309          		qBufPut( &g_qBufAudioRx, (uint8_t*)pAudioBuf, ( I2S_DMA_LOOP_SIZE * 2 ) );
   \       0x40   0x223C             MOVS     R2,#+60
   \       0x42   0x0029             MOVS     R1,R5
   \       0x44   0x.... 0x....      LDR.W    R0,??DataTable34_33
   \       0x48   0x.... 0x....      BL       qBufPut
   \       0x4C   0xE006             B.N      ??ProcPktCall_2
   1310          	}
   1311          	else if ( GetDevID() == DevRF900M )
   \                     ??ProcPktCall_1: (+1)
   \       0x4E   0x.... 0x....      BL       GetDevID
   \       0x52   0x2801             CMP      R0,#+1
   \       0x54   0xD102             BNE.N    ??ProcPktCall_2
   1312          	{
   1313          		//	수신기
   1314          
   1315          		SetRFMMode( RFMModeRx );
   \       0x56   0x2002             MOVS     R0,#+2
   \       0x58   0x.... 0x....      BL       SetRFMMode
   1316          	}
   1317          
   1318          	g_nStampRxPkt = HAL_GetTick();		//	방송/통화 Stamp
   \                     ??ProcPktCall_2: (+1)
   \       0x5C   0x.... 0x....      BL       HAL_GetTick
   \       0x60   0x.... 0x....      LDR.W    R1,??DataTable34_38
   \       0x64   0x6008             STR      R0,[R1, #+0]
   1319          }
                 ^
Warning[Pe940]: missing return statement at end of non-void function
          "ProcPktCall"
   \       0x66   0xBD32             POP      {R1,R4,R5,PC}
   1320          
   1321          
   1322          //========================================================================

   \                                 In section .text, align 2, keep-with-next
   1323          int	ProcPktDevConn			( const RFMPkt *pRFPkt )
   1324          //========================================================================
   1325          {
   \                     ProcPktDevConn: (+1)
   \        0x0   0xB538             PUSH     {R3-R5,LR}
   \        0x2   0x0004             MOVS     R4,R0
   1326          	//	Device Node Connection
   1327          	if ( GetDbg() == 3 )		printf( "%s(%d)\n", __func__, __LINE__ );
                 	     ^
Warning[Pe223]: function "GetDbg" declared implicitly
   \        0x4   0x.... 0x....      BL       GetDbg
   \        0x8   0x2803             CMP      R0,#+3
   \        0xA   0xD107             BNE.N    ??ProcPktDevConn_0
   \        0xC   0xF240 0x522F      MOVW     R2,#+1327
   \       0x10   0x.... 0x....      LDR.W    R1,??DataTable34_42
   \       0x14   0x.... 0x....      LDR.W    R0,??DataTable34
   \       0x18   0x.... 0x....      BL       printf
   1328          
   1329          	const RFMPktDevConn	*pConn = &pRFPkt->dat.devConn;
   \                     ??ProcPktDevConn_0: (+1)
   \       0x1C   0x1D25             ADDS     R5,R4,#+4
   1330          
   1331          	if( GetDevID() == DevRF900T )
   \       0x1E   0x.... 0x....      BL       GetDevID
   \       0x22   0x2802             CMP      R0,#+2
   \       0x24   0xD105             BNE.N    ??ProcPktDevConn_1
   1332          	{
   1333          		//========================================================================
   1334          		//	송신기
   1335          		SetDevConn( pConn->nSrcCh, pConn->nDevType, pConn->nConnect );
                 		^
Warning[Pe223]: function "SetDevConn" declared implicitly
   \       0x26   0x78AA             LDRB     R2,[R5, #+2]
   \       0x28   0x7829             LDRB     R1,[R5, #+0]
   \       0x2A   0x7868             LDRB     R0,[R5, #+1]
   \       0x2C   0x.... 0x....      BL       SetDevConn
   \       0x30   0xE008             B.N      ??ProcPktDevConn_2
   1336          	}
   1337          	else if ( GetDevID() == DevRF900M )
   \                     ??ProcPktDevConn_1: (+1)
   \       0x32   0x.... 0x....      BL       GetDevID
   \       0x36   0x2801             CMP      R0,#+1
   \       0x38   0xD104             BNE.N    ??ProcPktDevConn_2
   1338          	{
   1339          		//========================================================================
   1340          		//	수신기
   1341          		SetDevConn( pConn->nSrcCh, pConn->nDevType, pConn->nConnect );
                 		^
Warning[Pe223]: function "SetDevConn" declared implicitly
   \       0x3A   0x78AA             LDRB     R2,[R5, #+2]
   \       0x3C   0x7829             LDRB     R1,[R5, #+0]
   \       0x3E   0x7868             LDRB     R0,[R5, #+1]
   \       0x40   0x.... 0x....      BL       SetDevConn
   1342          	}
   1343          }
                 ^
Warning[Pe940]: missing return statement at end of non-void function
          "ProcPktDevConn"
   \                     ??ProcPktDevConn_2: (+1)
   \       0x44   0xBD32             POP      {R1,R4,R5,PC}
   1344          
   1345          //========================================================================

   \                                 In section .text, align 2, keep-with-next
   1346          int	ProcPktLight		( const RFMPkt *pRFPkt )
   1347          //========================================================================
   1348          {
   \                     ProcPktLight: (+1)
   \        0x0   0xB510             PUSH     {R4,LR}
   \        0x2   0x0004             MOVS     R4,R0
   1349          	if ( GetDbg() == 3 )		printf( "%s(%d)\n", __func__, __LINE__ );
                 	     ^
Warning[Pe223]: function "GetDbg" declared implicitly
   \        0x4   0x.... 0x....      BL       GetDbg
   \        0x8   0x2803             CMP      R0,#+3
   \        0xA   0xD107             BNE.N    ??ProcPktLight_0
   \        0xC   0xF240 0x5245      MOVW     R2,#+1349
   \       0x10   0x.... 0x....      LDR.W    R1,??DataTable34_43
   \       0x14   0x.... 0x....      LDR.W    R0,??DataTable34
   \       0x18   0x.... 0x....      BL       printf
   1350          
   1351          
   1352          	if ( GetDevID() == DevRF900M && pRFPkt->hdr.nPktCmd == PktLight )
   \                     ??ProcPktLight_0: (+1)
   \       0x1C   0x.... 0x....      BL       GetDevID
   \       0x20   0x2801             CMP      R0,#+1
   \       0x22   0xD127             BNE.N    ??ProcPktLight_1
   \       0x24   0x78E0             LDRB     R0,[R4, #+3]
   \       0x26   0x2804             CMP      R0,#+4
   \       0x28   0xD124             BNE.N    ??ProcPktLight_1
   1353          	{
   1354          		//  수신기 조명제어.
   1355          		if ( pRFPkt->dat.light.nOnOff == 0 )
   \       0x2A   0x7920             LDRB     R0,[R4, #+4]
   \       0x2C   0x2800             CMP      R0,#+0
   \       0x2E   0xD10F             BNE.N    ??ProcPktLight_2
   1356          		{
   1357          			// 조명 Off 명령 수신시.
   1358          			HAL_GPIO_WritePin ( LIGHT_ON_GPIO_Port, LIGHT_ON_Pin, GPIO_PIN_RESET );
   \       0x30   0x2200             MOVS     R2,#+0
   \       0x32   0xF44F 0x7100      MOV      R1,#+512
   \       0x36   0x.... 0x....      LDR.W    R0,??DataTable34_16
   \       0x3A   0x.... 0x....      BL       HAL_GPIO_WritePin
   1359          
   1360          			m_lightReSendCnt = 10;
   \       0x3E   0x200A             MOVS     R0,#+10
   \       0x40   0x.... 0x....      LDR.W    R1,??DataTable34_44
   \       0x44   0x6008             STR      R0,[R1, #+0]
   1361          			m_light_Val = 0xAA;
   \       0x46   0x20AA             MOVS     R0,#+170
   \       0x48   0x.... 0x....      LDR.W    R1,??DataTable34_45
   \       0x4C   0x6008             STR      R0,[R1, #+0]
   \       0x4E   0xE011             B.N      ??ProcPktLight_1
   1362          		}
   1363          		else if ( pRFPkt->dat.light.nOnOff == 1 )
   \                     ??ProcPktLight_2: (+1)
   \       0x50   0x7920             LDRB     R0,[R4, #+4]
   \       0x52   0x2801             CMP      R0,#+1
   \       0x54   0xD10E             BNE.N    ??ProcPktLight_1
   1364          		{
   1365          			// 조명 On 명령 수신시.
   1366          			HAL_GPIO_WritePin ( LIGHT_ON_GPIO_Port, LIGHT_ON_Pin, GPIO_PIN_SET );
   \       0x56   0x2201             MOVS     R2,#+1
   \       0x58   0xF44F 0x7100      MOV      R1,#+512
   \       0x5C   0x.... 0x....      LDR.W    R0,??DataTable34_16
   \       0x60   0x.... 0x....      BL       HAL_GPIO_WritePin
   1367          
   1368          			m_lightReSendCnt = 10;
   \       0x64   0x200A             MOVS     R0,#+10
   \       0x66   0x.... 0x....      LDR.W    R1,??DataTable34_44
   \       0x6A   0x6008             STR      R0,[R1, #+0]
   1369          			m_light_Val = 0xBB;
   \       0x6C   0x20BB             MOVS     R0,#+187
   \       0x6E   0x.... 0x....      LDR.W    R1,??DataTable34_45
   \       0x72   0x6008             STR      R0,[R1, #+0]
   1370          		}
   1371          	}
   1372          }
                 ^
Warning[Pe940]: missing return statement at end of non-void function
          "ProcPktLight"
   \                     ??ProcPktLight_1: (+1)
   \       0x74   0xBD10             POP      {R4,PC}
   1373          
   1374          
   1375          //========================================================================

   \                                 In section .text, align 2, keep-with-next
   1376          int	ProcPktCmd			( const RFMPkt *pRFPkt )
   1377          //========================================================================
   1378          {
   \                     ProcPktCmd: (+1)
   \        0x0   0xB510             PUSH     {R4,LR}
   \        0x2   0x0004             MOVS     R4,R0
   1379          	if ( GetDbg() == 3 )		printf( "%s(%d)\n", __func__, __LINE__ );
                 	     ^
Warning[Pe223]: function "GetDbg" declared implicitly
   \        0x4   0x.... 0x....      BL       GetDbg
   \        0x8   0x2803             CMP      R0,#+3
   \        0xA   0xD107             BNE.N    ??ProcPktCmd_0
   \        0xC   0xF240 0x5263      MOVW     R2,#+1379
   \       0x10   0x.... 0x....      LDR.W    R1,??DataTable34_46
   \       0x14   0x.... 0x....      LDR.W    R0,??DataTable34
   \       0x18   0x.... 0x....      BL       printf
   1380          
   1381          	//	RSSI Check
   1382          	printf( "%s(%d) - %s\n", __func__, __LINE__, pRFPkt->dat.cmd.sCmd );
   \                     ??ProcPktCmd_0: (+1)
   \       0x1C   0xF114 0x0308      ADDS     R3,R4,#+8
   \       0x20   0xF240 0x5266      MOVW     R2,#+1382
   \       0x24   0x.... 0x....      LDR.W    R1,??DataTable34_46
   \       0x28   0x.... 0x....      LDR.W    R0,??DataTable34_47
   \       0x2C   0x.... 0x....      BL       printf
   1383          
   1384          	// 같은 편성 번호 차량 명령에만 반응한다. )
   1385          	if ((pRFPkt->dat.cmd.nSpare[0] != GetTrainSetIdx())) return 0;
   \       0x30   0x.... 0x....      BL       GetTrainSetIdx
   \       0x34   0xF994 0x1006      LDRSB    R1,[R4, #+6]
   \       0x38   0x4281             CMP      R1,R0
   \       0x3A   0xD001             BEQ.N    ??ProcPktCmd_1
   \       0x3C   0x2000             MOVS     R0,#+0
   \       0x3E   0xE010             B.N      ??ProcPktCmd_2
   1386          
   1387          	if ( g_nRSSI >= pRFPkt->dat.cmd.nRSSIOver&& (pRFPkt->dat.cmd.nSpare[0] == GetTrainSetIdx())) // 같은 편성 번호 차량 명령에만 반응한다. )
   \                     ??ProcPktCmd_1: (+1)
   \       0x40   0x.... 0x....      LDR.W    R0,??DataTable34_15
   \       0x44   0x6800             LDR      R0,[R0, #+0]
   \       0x46   0xF994 0x1004      LDRSB    R1,[R4, #+4]
   \       0x4A   0x4288             CMP      R0,R1
   \       0x4C   0xDB09             BLT.N    ??ProcPktCmd_3
   \       0x4E   0x.... 0x....      BL       GetTrainSetIdx
   \       0x52   0xF994 0x1006      LDRSB    R1,[R4, #+6]
   \       0x56   0x4281             CMP      R1,R0
   \       0x58   0xD103             BNE.N    ??ProcPktCmd_3
   1388          	{
   1389          		if ( pRFPkt->dat.cmd.nRsp == 1 )
   1390          		{
   1391          			//	명령 처리 동작 결과 응답.
   1392          
   1393          			//	ToDo
   1394          		}
   1395          
   1396          		//	RSSI값 확인 후 해당 범위 내에 있는 경우 명령 동작.
   1397          		ProcessCommand((char *)pRFPkt->dat.cmd.sCmd );
   \       0x5A   0xF114 0x0008      ADDS     R0,R4,#+8
   \       0x5E   0x.... 0x....      BL       ProcessCommand
   1398          	}
   1399          
   1400          }
                 ^
Warning[Pe940]: missing return statement at end of non-void function
          "ProcPktCmd"
   \                     ??ProcPktCmd_3: (+1)
   \                     ??ProcPktCmd_2: (+1)
   \       0x62   0xBD10             POP      {R4,PC}
   1401          
   1402          
   1403          //========================================================================

   \                                 In section .text, align 2, keep-with-next
   1404          int	ProcPktCmdRsp		( const RFMPkt *pRFPkt )
   1405          //========================================================================
   1406          {
   \                     ProcPktCmdRsp: (+1)
   \        0x0   0xB510             PUSH     {R4,LR}
   \        0x2   0x0004             MOVS     R4,R0
   1407          	if ( GetDbg() == 3 )		printf( "%s(%d)\n", __func__, __LINE__ );
                 	     ^
Warning[Pe223]: function "GetDbg" declared implicitly
   \        0x4   0x.... 0x....      BL       GetDbg
   \        0x8   0x2803             CMP      R0,#+3
   \        0xA   0xD106             BNE.N    ??ProcPktCmdRsp_0
   \        0xC   0xF240 0x527F      MOVW     R2,#+1407
   \       0x10   0x.... 0x....      LDR.W    R1,??DataTable34_48
   \       0x14   0x....             LDR.N    R0,??DataTable34
   \       0x16   0x.... 0x....      BL       printf
   1408          
   1409          	//	Command 처리결과 응답.
   1410          
   1411          	//	ToDo
   1412          }
                 ^
Warning[Pe940]: missing return statement at end of non-void function
          "ProcPktCmdRsp"
   \                     ??ProcPktCmdRsp_0: (+1)
   \       0x1A   0xBD10             POP      {R4,PC}
   1413          
   1414          //========================================================================

   \                                 In section .bss, align 4
   1415          uint8_t	s_bUpgrDataValid[(MaxUpgrDataPacket + 7) / 8];	//	4000];	//	Upgrade Data Valid Check
   \                     s_bUpgrDataValid:
   \        0x0                      DS8 1'024
   1416          //========================================================================
   1417          
   1418          //========================================================================

   \                                 In section .text, align 2, keep-with-next
   1419          int	ProcPktUpgr			( const RFMPkt *pRFPkt )
   1420          //========================================================================
   1421          {
   \                     ProcPktUpgr: (+1)
   \        0x0   0xE92D 0x4FF1      PUSH     {R0,R4-R11,LR}
   \        0x4   0xB088             SUB      SP,SP,#+32
   1422          	//========================================================================
   1423          	//	Upgrade Flash Image
   1424          	//========================================================================
   1425          
   1426          	if ( GetDbg() == 3 )		printf( "%s(%d)\n", __func__, __LINE__ );
                 	     ^
Warning[Pe223]: function "GetDbg" declared implicitly
   \        0x6   0x.... 0x....      BL       GetDbg
   \        0xA   0x2803             CMP      R0,#+3
   \        0xC   0xD106             BNE.N    ??ProcPktUpgr_0
   \        0xE   0xF240 0x5292      MOVW     R2,#+1426
   \       0x12   0x.... 0x....      LDR.W    R1,??DataTable34_49
   \       0x16   0x....             LDR.N    R0,??DataTable34
   \       0x18   0x.... 0x....      BL       printf
   1427          
   1428          	//========================================================================
   1429          	//	Data Flash영역에 Write
   1430          	const RFMPktUpgr	*pUpgr = &pRFPkt->dat.upgr;
   \                     ??ProcPktUpgr_0: (+1)
   \       0x1C   0x9808             LDR      R0,[SP, #+32]
   \       0x1E   0x1D04             ADDS     R4,R0,#+4
   1431          
   1432          	if ( pUpgr->baseAddr < 0x08080000 || 0x080FFFFF < pUpgr->baseAddr )
   \       0x20   0x6820             LDR      R0,[R4, #+0]
   \       0x22   0x.... 0x....      LDR.W    R5,??DataTable34_50
   \       0x26   0x42A8             CMP      R0,R5
   \       0x28   0xD303             BCC.N    ??ProcPktUpgr_1
   \       0x2A   0x6820             LDR      R0,[R4, #+0]
   \       0x2C   0xF1B0 0x6F01      CMP      R0,#+135266304
   \       0x30   0xD30A             BCC.N    ??ProcPktUpgr_2
   1433          	{
   1434          		printf("%s(%d) - Out Of Range - baseAddr(0x%08X)\n", __func__, __LINE__, pUpgr->baseAddr );
   \                     ??ProcPktUpgr_1: (+1)
   \       0x32   0x6823             LDR      R3,[R4, #+0]
   \       0x34   0xF240 0x529A      MOVW     R2,#+1434
   \       0x38   0x.... 0x....      LDR.W    R1,??DataTable34_49
   \       0x3C   0x.... 0x....      LDR.W    R0,??DataTable34_51
   \       0x40   0x.... 0x....      BL       printf
   1435          		return 0;
   \       0x44   0x2000             MOVS     R0,#+0
   \       0x46   0xE132             B.N      ??ProcPktUpgr_3
   1436          	}
   1437          
   1438          	//========================================================================
   1439          	//	RFM Packet
   1440          //	RFMPktUpgr	*pUpgr = (RFMPktUpgr *)pRFPkt->dat.upgr;
   1441          //	pUpgr->baseAddr		=	nAddrTarget;
   1442          //	pUpgr->totPkt		=	nPktTot;
   1443          //	pUpgr->idxPkt		=	nPktIdx;
   1444          //	pUpgr->nSize		=	nSize;
   1445          //	memcpy( pUpgr->data, sBuf, nSize );
   1446          
   1447          	//========================================================================
   1448          
   1449          	// 같은 편성 번호 차량 명령에만 반응한다. )
   1450          	if (pUpgr->nSpare2[0] != GetTrainSetIdx()) { return 0; }
   \                     ??ProcPktUpgr_2: (+1)
   \       0x48   0x.... 0x....      BL       GetTrainSetIdx
   \       0x4C   0xF894 0x103A      LDRB     R1,[R4, #+58]
   \       0x50   0x4281             CMP      R1,R0
   \       0x52   0xD001             BEQ.N    ??ProcPktUpgr_4
   \       0x54   0x2000             MOVS     R0,#+0
   \       0x56   0xE12A             B.N      ??ProcPktUpgr_3
   1451          
   1452          
   1453          	static int	s_rxPkt;
   1454          
   1455          	if ( pUpgr->idxPkt == 0 )
   \                     ??ProcPktUpgr_4: (+1)
   \       0x58   0x88E0             LDRH     R0,[R4, #+6]
   \       0x5A   0x2800             CMP      R0,#+0
   \       0x5C   0xD130             BNE.N    ??ProcPktUpgr_5
   1456          	{
   1457          		//	Start Uprade
   1458          		printf("%s(%d) - Start Upgrade\n", __func__, __LINE__ );
   \       0x5E   0xF240 0x52B2      MOVW     R2,#+1458
   \       0x62   0x....             LDR.N    R1,??DataTable34_49
   \       0x64   0x.... 0x....      LDR.W    R0,??DataTable34_52
   \       0x68   0x.... 0x....      BL       printf
   1459          
   1460          		if( pUpgr->bFlag & PktUpgrFlagRetry )
   \       0x6C   0x7A60             LDRB     R0,[R4, #+9]
   \       0x6E   0x07C0             LSLS     R0,R0,#+31
   \       0x70   0xD506             BPL.N    ??ProcPktUpgr_6
   1461          		{
   1462          			//	No Erase
   1463          			printf( "[%08d] Flash Erase - Skip ( Retry - Upgrade )\n", HAL_GetTick() );
   \       0x72   0x.... 0x....      BL       HAL_GetTick
   \       0x76   0x0001             MOVS     R1,R0
   \       0x78   0x....             LDR.N    R0,??DataTable34_53
   \       0x7A   0x.... 0x....      BL       printf
   \       0x7E   0xE01C             B.N      ??ProcPktUpgr_7
   1464          		}
   1465          		else
   1466          		{
   1467          			//========================================================================
   1468          			//	Flash Erase
   1469          	//		 __HAL_RCC_DBGMCU_CLK_ENABLE();
   1470          			 __HAL_DBGMCU_FREEZE_IWDG();
   \                     ??ProcPktUpgr_6: (+1)
   \       0x80   0x....             LDR.N    R0,??DataTable34_54
   \       0x82   0x6801             LDR      R1,[R0, #+0]
   \       0x84   0xF451 0x5180      ORRS     R1,R1,#0x1000
   \       0x88   0x6001             STR      R1,[R0, #+0]
   1471          	//		MX_IWDG_Disable();		//	Disable Watchdog
   1472          			printf( "[%08d] Flash Erase - Start\n", HAL_GetTick() );
   \       0x8A   0x.... 0x....      BL       HAL_GetTick
   \       0x8E   0x0001             MOVS     R1,R0
   \       0x90   0x....             LDR.N    R0,??DataTable34_55
   \       0x92   0x.... 0x....      BL       printf
   1473          	//        FLASH_If_Erase( ADDR_FLASH_IMGAPP );
   1474          			FLASH_If_Erase( ADDR_FLASH_IMGBOOT );		//	0x08080000
   \       0x96   0x0028             MOVS     R0,R5
   \       0x98   0x.... 0x....      BL       FLASH_If_Erase
   1475          			printf( "[%08d] Flash Erase - End\n", HAL_GetTick() );
   \       0x9C   0x.... 0x....      BL       HAL_GetTick
   \       0xA0   0x0001             MOVS     R1,R0
   \       0xA2   0x....             LDR.N    R0,??DataTable34_56
   \       0xA4   0x.... 0x....      BL       printf
   1476          	    	//========================================================================
   1477          
   1478          			memset( s_bUpgrDataValid, 0, sizeof(s_bUpgrDataValid) );
   \       0xA8   0xF44F 0x6580      MOV      R5,#+1024
   \       0xAC   0x2600             MOVS     R6,#+0
   \       0xAE   0x....             LDR.N    R7,??DataTable34_57
   \       0xB0   0x0032             MOVS     R2,R6
   \       0xB2   0x0029             MOVS     R1,R5
   \       0xB4   0x0038             MOVS     R0,R7
   \       0xB6   0x.... 0x....      BL       __aeabi_memset
   1479          		}
   1480          
   1481          		s_rxPkt = 0;
   \                     ??ProcPktUpgr_7: (+1)
   \       0xBA   0x2000             MOVS     R0,#+0
   \       0xBC   0x....             LDR.N    R1,??DataTable34_58
   \       0xBE   0x6008             STR      R0,[R1, #+0]
   1482          	}
   1483          
   1484          	s_rxPkt++;
   \                     ??ProcPktUpgr_5: (+1)
   \       0xC0   0x....             LDR.N    R6,??DataTable34_58
   \       0xC2   0x6830             LDR      R0,[R6, #+0]
   \       0xC4   0x1C40             ADDS     R0,R0,#+1
   \       0xC6   0x6030             STR      R0,[R6, #+0]
   1485          
   1486          	//========================================================================
   1487          	//	Write Upgrade Image Data
   1488          
   1489          	if ( FLASH_If_Write( pUpgr->baseAddr + (pUpgr->idxPkt * PktUpgrDataSize),
   1490          						(uint32_t *)pUpgr->data,
   1491          						pUpgr->nSize / 4 ) == FLASHIF_OK )
   \       0xC8   0x6820             LDR      R0,[R4, #+0]
   \       0xCA   0x2730             MOVS     R7,#+48
   \       0xCC   0x7A22             LDRB     R2,[R4, #+8]
   \       0xCE   0xB2D2             UXTB     R2,R2
   \       0xD0   0x0892             LSRS     R2,R2,#+2
   \       0xD2   0xB2D2             UXTB     R2,R2
   \       0xD4   0xF114 0x010A      ADDS     R1,R4,#+10
   \       0xD8   0x88E3             LDRH     R3,[R4, #+6]
   \       0xDA   0xFB07 0x0003      MLA      R0,R7,R3,R0
   \       0xDE   0x.... 0x....      BL       FLASH_If_Write
   \       0xE2   0x2800             CMP      R0,#+0
   \       0xE4   0xD111             BNE.N    ??ProcPktUpgr_8
   1492          	{
   1493          		//	Valid Check Data
   1494          		SET_BIT( s_bUpgrDataValid[pUpgr->idxPkt/8], (0x1 << (pUpgr->idxPkt % 8)) );
   \       0xE6   0x88E1             LDRH     R1,[R4, #+6]
   \       0xE8   0x2208             MOVS     R2,#+8
   \       0xEA   0x....             LDR.N    R0,??DataTable34_57
   \       0xEC   0x88E3             LDRH     R3,[R4, #+6]
   \       0xEE   0x10DB             ASRS     R3,R3,#+3
   \       0xF0   0x5CC3             LDRB     R3,[R0, R3]
   \       0xF2   0x2501             MOVS     R5,#+1
   \       0xF4   0xFB91 0xFCF2      SDIV     R12,R1,R2
   \       0xF8   0xFB02 0x111C      MLS      R1,R2,R12,R1
   \       0xFC   0xFA15 0xF101      LSLS     R1,R5,R1
   \      0x100   0x4319             ORRS     R1,R1,R3
   \      0x102   0x88E2             LDRH     R2,[R4, #+6]
   \      0x104   0x10D2             ASRS     R2,R2,#+3
   \      0x106   0x5481             STRB     R1,[R0, R2]
   \      0x108   0xE018             B.N      ??ProcPktUpgr_9
   1495          	}
   1496          	else /* An error occurred while writing to Flash memory */
   1497          	{
   1498          		/* End session */
   1499          		printf("%s(%d) - Error idx(%d)\n", __func__, __LINE__, pUpgr->idxPkt );
   \                     ??ProcPktUpgr_8: (+1)
   \      0x10A   0x88E3             LDRH     R3,[R4, #+6]
   \      0x10C   0xF240 0x52DB      MOVW     R2,#+1499
   \      0x110   0x....             LDR.N    R1,??DataTable34_49
   \      0x112   0x....             LDR.N    R0,??DataTable34_59
   \      0x114   0x.... 0x....      BL       printf
   1500          		CLEAR_BIT( s_bUpgrDataValid[pUpgr->idxPkt/8], (0x1 << (pUpgr->idxPkt % 8)) );	//	Clear
   \      0x118   0x88E1             LDRH     R1,[R4, #+6]
   \      0x11A   0x2208             MOVS     R2,#+8
   \      0x11C   0x....             LDR.N    R0,??DataTable34_57
   \      0x11E   0x88E3             LDRH     R3,[R4, #+6]
   \      0x120   0x10DB             ASRS     R3,R3,#+3
   \      0x122   0x5CC3             LDRB     R3,[R0, R3]
   \      0x124   0x2501             MOVS     R5,#+1
   \      0x126   0xFB91 0xFCF2      SDIV     R12,R1,R2
   \      0x12A   0xFB02 0x111C      MLS      R1,R2,R12,R1
   \      0x12E   0xFA15 0xF101      LSLS     R1,R5,R1
   \      0x132   0xEA33 0x0101      BICS     R1,R3,R1
   \      0x136   0x88E2             LDRH     R2,[R4, #+6]
   \      0x138   0x10D2             ASRS     R2,R2,#+3
   \      0x13A   0x5481             STRB     R1,[R0, R2]
   1501          	}
   1502          
   1503          	g_nStampRxPkt = HAL_GetTick();		//	Rx Pkt Stamp
   \                     ??ProcPktUpgr_9: (+1)
   \      0x13C   0x.... 0x....      BL       HAL_GetTick
   \      0x140   0x....             LDR.N    R1,??DataTable34_38
   \      0x142   0x6008             STR      R0,[R1, #+0]
   1504          	//========================================================================
   1505          
   1506          	//========================================================================
   1507          	if ( pUpgr->idxPkt == (pUpgr->totPkt - 1) )
   \      0x144   0x88E0             LDRH     R0,[R4, #+6]
   \      0x146   0x88A1             LDRH     R1,[R4, #+4]
   \      0x148   0x1E49             SUBS     R1,R1,#+1
   \      0x14A   0x4288             CMP      R0,R1
   \      0x14C   0xF040 0x80AF      BNE.W    ??ProcPktUpgr_10
   1508          	{
   1509          		//	End Upgrade
   1510          //		s_rxPkt++;
   1511          
   1512          		printf("%s(%d) - End Upgrade ( rxPkt : %d / totPkt : %d )\n", __func__, __LINE__,
   1513          					s_rxPkt, pUpgr->totPkt );
   \      0x150   0x....             LDR.N    R5,??DataTable34_49
   \      0x152   0x88A0             LDRH     R0,[R4, #+4]
   \      0x154   0x9000             STR      R0,[SP, #+0]
   \      0x156   0x6833             LDR      R3,[R6, #+0]
   \      0x158   0xF44F 0x62BD      MOV      R2,#+1512
   \      0x15C   0x0029             MOVS     R1,R5
   \      0x15E   0x....             LDR.N    R0,??DataTable34_60
   \      0x160   0x.... 0x....      BL       printf
   1514          
   1515          		int result = UpgrStatSuccess;
   \      0x164   0x2601             MOVS     R6,#+1
   1516          		for( int i = 0; i < pUpgr->totPkt; i++ )
   \      0x166   0x2000             MOVS     R0,#+0
   \                     ??ProcPktUpgr_11: (+1)
   \      0x168   0x88A1             LDRH     R1,[R4, #+4]
   \      0x16A   0x4288             CMP      R0,R1
   \      0x16C   0xDA13             BGE.N    ??ProcPktUpgr_12
   1517          		{
   1518          			if( READ_BIT( s_bUpgrDataValid[i / 8], (0x1 << (i % 8)) ) == 0 )
   \      0x16E   0x2108             MOVS     R1,#+8
   \      0x170   0x2208             MOVS     R2,#+8
   \      0x172   0xFB90 0xF2F2      SDIV     R2,R0,R2
   \      0x176   0x....             LDR.N    R3,??DataTable34_57
   \      0x178   0x5C9A             LDRB     R2,[R3, R2]
   \      0x17A   0x2301             MOVS     R3,#+1
   \      0x17C   0xFB90 0xFCF1      SDIV     R12,R0,R1
   \      0x180   0xFB01 0x011C      MLS      R1,R1,R12,R0
   \      0x184   0xFA13 0xF101      LSLS     R1,R3,R1
   \      0x188   0x420A             TST      R2,R1
   \      0x18A   0xD102             BNE.N    ??ProcPktUpgr_13
   1519          			{
   1520          				result = UpgrStatFailed;
   \      0x18C   0x2100             MOVS     R1,#+0
   \      0x18E   0x000E             MOVS     R6,R1
   1521          				break;
   \      0x190   0xE001             B.N      ??ProcPktUpgr_12
   1522          			}
   1523          		}
   \                     ??ProcPktUpgr_13: (+1)
   \      0x192   0x1C40             ADDS     R0,R0,#+1
   \      0x194   0xE7E8             B.N      ??ProcPktUpgr_11
   1524          
   1525          		//========================================================================
   1526          		if ( result == UpgrStatSuccess )//( s_rxPkt == pUpgr->totPkt )
   \                     ??ProcPktUpgr_12: (+1)
   \      0x196   0x2E01             CMP      R6,#+1
   \      0x198   0xD16D             BNE.N    ??ProcPktUpgr_14
   1527          		{
   1528          			//	Upgrade Success
   1529          
   1530          			char buf[10];
   1531          			int filesize = pUpgr->totPkt * PktUpgrDataSize;
   \      0x19A   0x88A0             LDRH     R0,[R4, #+4]
   \      0x19C   0xFB07 0xF700      MUL      R7,R7,R0
   \      0x1A0   0x9701             STR      R7,[SP, #+4]
   1532          
   1533          			printf("%s(%d) - Upgrade Success ( Size : %d )\n", __func__, __LINE__, filesize );
   \      0x1A2   0x9B01             LDR      R3,[SP, #+4]
   \      0x1A4   0xF240 0x52FD      MOVW     R2,#+1533
   \      0x1A8   0x0029             MOVS     R1,R5
   \      0x1AA   0x....             LDR.N    R0,??DataTable34_61
   \      0x1AC   0x.... 0x....      BL       printf
   1534          
   1535          			memset( buf, 0, sizeof( buf ) );
   \      0x1B0   0x200A             MOVS     R0,#+10
   \      0x1B2   0x9006             STR      R0,[SP, #+24]
   \      0x1B4   0x2000             MOVS     R0,#+0
   \      0x1B6   0x9005             STR      R0,[SP, #+20]
   \      0x1B8   0xAF02             ADD      R7,SP,#+8
   \      0x1BA   0x9A05             LDR      R2,[SP, #+20]
   \      0x1BC   0x9906             LDR      R1,[SP, #+24]
   \      0x1BE   0x0038             MOVS     R0,R7
   \      0x1C0   0x.... 0x....      BL       __aeabi_memset
   1536          
   1537          			buf[0] = 0xaa;
   \      0x1C4   0x20AA             MOVS     R0,#+170
   \      0x1C6   0xF88D 0x0008      STRB     R0,[SP, #+8]
   1538          			buf[1] = 0x55;
   \      0x1CA   0xAF02             ADD      R7,SP,#+8
   \      0x1CC   0x2055             MOVS     R0,#+85
   \      0x1CE   0x7078             STRB     R0,[R7, #+1]
   1539          			buf[2] = ( filesize >> 16 ) & 0xFF;
   \      0x1D0   0x9801             LDR      R0,[SP, #+4]
   \      0x1D2   0x1400             ASRS     R0,R0,#+16
   \      0x1D4   0x70B8             STRB     R0,[R7, #+2]
   1540          			buf[3] = ( filesize >> 8 ) & 0xFF;
   \      0x1D6   0x9801             LDR      R0,[SP, #+4]
   \      0x1D8   0x1200             ASRS     R0,R0,#+8
   \      0x1DA   0x70F8             STRB     R0,[R7, #+3]
   1541          			buf[4] = ( filesize >> 0 ) & 0xFF;
   \      0x1DC   0x9801             LDR      R0,[SP, #+4]
   \      0x1DE   0x7138             STRB     R0,[R7, #+4]
   1542          
   1543          		    M24_HAL_WriteBytes( &hi2c1, 0xA0, AddrEEPUpgrMGN1, (uint8_t *)buf, 5 );
   \      0x1E0   0x.... 0x....      LDR.W    R10,??DataTable34_62
   \      0x1E4   0x2005             MOVS     R0,#+5
   \      0x1E6   0x9000             STR      R0,[SP, #+0]
   \      0x1E8   0xAB02             ADD      R3,SP,#+8
   \      0x1EA   0x2220             MOVS     R2,#+32
   \      0x1EC   0x21A0             MOVS     R1,#+160
   \      0x1EE   0x4650             MOV      R0,R10
   \      0x1F0   0x.... 0x....      BL       M24_HAL_WriteBytes
   1544          
   1545          			memset( buf, 0, sizeof( buf ) );
   \      0x1F4   0xF05F 0x080A      MOVS     R8,#+10
   \      0x1F8   0xF05F 0x0900      MOVS     R9,#+0
   \      0x1FC   0xF10D 0x0B08      ADD      R11,SP,#+8
   \      0x200   0x464A             MOV      R2,R9
   \      0x202   0x4641             MOV      R1,R8
   \      0x204   0x4658             MOV      R0,R11
   \      0x206   0x.... 0x....      BL       __aeabi_memset
   1546          
   1547          		    M24_HAL_ReadBytes( &hi2c1, 0xA0, AddrEEPUpgrMGN1, (uint8_t *)buf, 5 );
   \      0x20A   0x2005             MOVS     R0,#+5
   \      0x20C   0x9000             STR      R0,[SP, #+0]
   \      0x20E   0xAB02             ADD      R3,SP,#+8
   \      0x210   0x2220             MOVS     R2,#+32
   \      0x212   0x21A0             MOVS     R1,#+160
   \      0x214   0x4650             MOV      R0,R10
   \      0x216   0x.... 0x....      BL       M24_HAL_ReadBytes
   1548          
   1549          		    filesize = ( buf[2] << 16 ) | ( buf[3] << 8 ) | ( buf[4] );
   \      0x21A   0x78B8             LDRB     R0,[R7, #+2]
   \      0x21C   0xF897 0xA003      LDRB     R10,[R7, #+3]
   \      0x220   0xEA5F 0x2A0A      LSLS     R10,R10,#+8
   \      0x224   0xEA5A 0x4A00      ORRS     R10,R10,R0, LSL #+16
   \      0x228   0x7938             LDRB     R0,[R7, #+4]
   \      0x22A   0xEA50 0x0A0A      ORRS     R10,R0,R10
   1550          
   1551          			printf( "%s(%d) - EEPROM [0,1] : 0x%02X 0x%02X / ( bin size : %d )\n", __func__, __LINE__, buf[0], buf[1], filesize );
   \      0x22E   0xF8CD 0xA004      STR      R10,[SP, #+4]
   \      0x232   0x7878             LDRB     R0,[R7, #+1]
   \      0x234   0x9000             STR      R0,[SP, #+0]
   \      0x236   0xF89D 0x3008      LDRB     R3,[SP, #+8]
   \      0x23A   0xF240 0x620F      MOVW     R2,#+1551
   \      0x23E   0x0029             MOVS     R1,R5
   \      0x240   0x....             LDR.N    R0,??DataTable34_63
   \      0x242   0x.... 0x....      BL       printf
   1552          
   1553          			HAL_Delay( 2000 );	//	Upgrade 결과전송 전 Delay
   \      0x246   0xF44F 0x60FA      MOV      R0,#+2000
   \      0x24A   0x.... 0x....      BL       HAL_Delay
   1554          
   1555          			//===========================================================================
   1556          			//	Send Upgrade Result
   1557          			SendUpgrStat( UpgrStatSuccess );	//	Upgrade 결과전송.
   \      0x24E   0x2001             MOVS     R0,#+1
   \      0x250   0x.... 0x....      BL       SendUpgrStat
   1558          			HAL_Delay( 100 );	//	Upgrade 결과전송 전 Delay
   \      0x254   0x2064             MOVS     R0,#+100
   \      0x256   0x.... 0x....      BL       HAL_Delay
   1559          			SendUpgrStat( UpgrStatSuccess );	//	Upgrade 결과전송.
   \      0x25A   0x2001             MOVS     R0,#+1
   \      0x25C   0x.... 0x....      BL       SendUpgrStat
   1560          			HAL_Delay( 100 );	//	Upgrade 결과전송 전 Delay
   \      0x260   0x2064             MOVS     R0,#+100
   \      0x262   0x.... 0x....      BL       HAL_Delay
   1561          			SendUpgrStat( UpgrStatSuccess );	//	Upgrade 결과전송.
   \      0x266   0x2001             MOVS     R0,#+1
   \      0x268   0x.... 0x....      BL       SendUpgrStat
   1562          
   1563          			//===========================================================================
   1564          			//	Reset
   1565          			cmd_reset(0, 0);
   \      0x26C   0x2100             MOVS     R1,#+0
   \      0x26E   0x2000             MOVS     R0,#+0
   \      0x270   0x.... 0x....      BL       cmd_reset
   \      0x274   0xE018             B.N      ??ProcPktUpgr_15
   1566          			//===========================================================================
   1567          		}
   1568          		else
   1569          		{
   1570          			HAL_Delay( 2000 );	//	Upgrade 결과전송 전 Delay
   \                     ??ProcPktUpgr_14: (+1)
   \      0x276   0xF44F 0x60FA      MOV      R0,#+2000
   \      0x27A   0x.... 0x....      BL       HAL_Delay
   1571          
   1572          			//===========================================================================
   1573          			//	Send Upgrade Result
   1574          			SendUpgrStat( UpgrStatFailed );		//	Upgrade 결과전송.
   \      0x27E   0x2000             MOVS     R0,#+0
   \      0x280   0x.... 0x....      BL       SendUpgrStat
   1575          			HAL_Delay( 100 );	//	Upgrade 결과전송 전 Delay
   \      0x284   0x2064             MOVS     R0,#+100
   \      0x286   0x.... 0x....      BL       HAL_Delay
   1576          			SendUpgrStat( UpgrStatFailed );	//	Upgrade 결과전송.
   \      0x28A   0x2000             MOVS     R0,#+0
   \      0x28C   0x.... 0x....      BL       SendUpgrStat
   1577          			HAL_Delay( 100 );	//	Upgrade 결과전송 전 Delay
   \      0x290   0x2064             MOVS     R0,#+100
   \      0x292   0x.... 0x....      BL       HAL_Delay
   1578          			SendUpgrStat( UpgrStatFailed );	//	Upgrade 결과전송.
   \      0x296   0x2000             MOVS     R0,#+0
   \      0x298   0x.... 0x....      BL       SendUpgrStat
   1579          
   1580          			//	Upgrade Failed
   1581          			printf("%s(%d) - Upgrade Failed\n", __func__, __LINE__ );
   \      0x29C   0xF240 0x622D      MOVW     R2,#+1581
   \      0x2A0   0x0029             MOVS     R1,R5
   \      0x2A2   0x....             LDR.N    R0,??DataTable34_64
   \      0x2A4   0x.... 0x....      BL       printf
   1582          		}
   1583          		//========================================================================
   1584          
   1585          		//========================================================================
   1586          		SetRFMMode( RFMModeNormal );	//	Normal 모드로 설정.
   \                     ??ProcPktUpgr_15: (+1)
   \      0x2A8   0x2000             MOVS     R0,#+0
   \      0x2AA   0x.... 0x....      BL       SetRFMMode
   1587          		//========================================================================
   1588          	}
   1589          }
                 ^
Warning[Pe940]: missing return statement at end of non-void function
          "ProcPktUpgr"
   \                     ??ProcPktUpgr_10: (+1)
   \                     ??ProcPktUpgr_3: (+1)
   \      0x2AE   0xB009             ADD      SP,SP,#+36
   \      0x2B0   0xE8BD 0x8FF0      POP      {R4-R11,PC}

   \                                 In section .bss, align 4
   \                     `ProcPktUpgr::s_rxPkt`:
   \        0x0                      DS8 4
   1590          
   1591          
   1592          //========================================================================

   \                                 In section .text, align 2, keep-with-next
   1593          int	ProcPktUpgrStat			( const RFMPkt *pRFPkt )
   1594          //========================================================================
   1595          {
   \                     ProcPktUpgrStat: (+1)
   \        0x0   0xB530             PUSH     {R4,R5,LR}
   \        0x2   0xB08D             SUB      SP,SP,#+52
   \        0x4   0x0004             MOVS     R4,R0
   1596          	//========================================================================
   1597          	//	Upgrade Status
   1598          	//========================================================================
   1599          
   1600          	//	Upgrade 결과 수신후 수신기 LCD창에 표시.
   1601          	if ( GetDbg() == 3 )		printf( "%s(%d)\n", __func__, __LINE__ );
                 	     ^
Warning[Pe223]: function "GetDbg" declared implicitly
   \        0x6   0x.... 0x....      BL       GetDbg
   \        0xA   0x2803             CMP      R0,#+3
   \        0xC   0xD105             BNE.N    ??ProcPktUpgrStat_0
   \        0xE   0xF240 0x6241      MOVW     R2,#+1601
   \       0x12   0x....             LDR.N    R1,??DataTable34_65
   \       0x14   0x....             LDR.N    R0,??DataTable34
   \       0x16   0x.... 0x....      BL       printf
   1602          
   1603          	char sBuf[50];
   1604          
   1605          	//========================================================================
   1606          	//	Data Flash영역에 Write
   1607          	RFMPktUpgrStat	*pUpgrStat = (RFMPktUpgrStat *)&pRFPkt->dat.upgrStat;
   \                     ??ProcPktUpgrStat_0: (+1)
   \       0x1A   0x1D25             ADDS     R5,R4,#+4
   1608          
   1609          	printf( "%s(%d) - %d\n", __func__, __LINE__, pUpgrStat->nResult );
   \       0x1C   0x782B             LDRB     R3,[R5, #+0]
   \       0x1E   0xF240 0x6249      MOVW     R2,#+1609
   \       0x22   0x....             LDR.N    R1,??DataTable34_65
   \       0x24   0x....             LDR.N    R0,??DataTable34_8
   \       0x26   0x.... 0x....      BL       printf
   1610          
   1611          	if ( pUpgrStat->nResult == UpgrStatSuccess )
   \       0x2A   0x7828             LDRB     R0,[R5, #+0]
   \       0x2C   0x2801             CMP      R0,#+1
   \       0x2E   0xD10B             BNE.N    ??ProcPktUpgrStat_1
   1612          	{
   1613          		//	송신기 : Upgr Success
   1614          
   1615          		sprintf(sBuf, "Success(%d/%d)", pUpgrStat->nTrainSet, pUpgrStat->nCarNo);
   \       0x30   0x796B             LDRB     R3,[R5, #+5]
   \       0x32   0x792A             LDRB     R2,[R5, #+4]
   \       0x34   0x....             LDR.N    R1,??DataTable34_66
   \       0x36   0x4668             MOV      R0,SP
   \       0x38   0x.... 0x....      BL       sprintf
   1616          		LCDPrintfXY( 0, 13, sBuf );
   \       0x3C   0x466A             MOV      R2,SP
   \       0x3E   0x210D             MOVS     R1,#+13
   \       0x40   0x2000             MOVS     R0,#+0
   \       0x42   0x.... 0x....      BL       LCDPrintfXY
   \       0x46   0xE00D             B.N      ??ProcPktUpgrStat_2
   1617          
   1618          //		HAL_Delay(2000);
   1619          	}
   1620          	else if( pUpgrStat->nResult == UpgrStatFailed )
   \                     ??ProcPktUpgrStat_1: (+1)
   \       0x48   0x7828             LDRB     R0,[R5, #+0]
   \       0x4A   0x2800             CMP      R0,#+0
   \       0x4C   0xD10A             BNE.N    ??ProcPktUpgrStat_2
   1621          	{
   1622          		//	송신기 : Upgr Failed
   1623          
   1624          		sprintf(sBuf, "Failed(%d/%d)", pUpgrStat->nTrainSet, pUpgrStat->nCarNo);
   \       0x4E   0x796B             LDRB     R3,[R5, #+5]
   \       0x50   0x792A             LDRB     R2,[R5, #+4]
   \       0x52   0x....             LDR.N    R1,??DataTable34_67
   \       0x54   0x4668             MOV      R0,SP
   \       0x56   0x.... 0x....      BL       sprintf
   1625          		LCDPrintfXY( 0, 13, sBuf );
   \       0x5A   0x466A             MOV      R2,SP
   \       0x5C   0x210D             MOVS     R1,#+13
   \       0x5E   0x2000             MOVS     R0,#+0
   \       0x60   0x.... 0x....      BL       LCDPrintfXY
   1626          
   1627          //		HAL_Delay(2000);
   1628          	}
   1629          
   1630          	return 1;
   \                     ??ProcPktUpgrStat_2: (+1)
   \       0x64   0x2001             MOVS     R0,#+1
   \       0x66   0xB00D             ADD      SP,SP,#+52
   \       0x68   0xBD30             POP      {R4,R5,PC}
   1631          }

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable24:
   \        0x0   0x....'....        DC32     g_nPktSeq

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable25:
   \        0x0   0x....'....        DC32     g_nPktSeq_2

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable25_1:
   \        0x0   0x....'....        DC32     `_MakeRFCmd::__func__`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable26:
   \        0x0   0x....'....        DC32     ?_0

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable26_1:
   \        0x0   0x....'....        DC32     `SendStatReq::__func__`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable26_2:
   \        0x0   0x....'....        DC32     m_lightTxSentCnt

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable26_3:
   \        0x0   0x....'....        DC32     m_light_Val

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable26_4:
   \        0x0   0x....'....        DC32     `SendStat::__func__`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable27:
   \        0x0   0x....'....        DC32     g_flagRspID

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable27_1:
   \        0x0   0x....'....        DC32     g_nManHopping

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable27_2:
   \        0x0   0x....'....        DC32     g_nRFMode

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable27_3:
   \        0x0   0x....'....        DC32     g_nDevFlag

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable29:
   \        0x0   0x....'....        DC32     ChTS1_1

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable29_1:
   \        0x0   0x....'....        DC32     `SendRouteReq::__func__`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable29_2:
   \        0x0   0x....'....        DC32     m_lightReSendCnt

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable30:
   \        0x0   0x....'....        DC32     `SendRouteRsp::__func__`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable31:
   \        0x0   0x0A 0x00          DC8      "\n",0x0,0x0   

   \              0x00 0x00

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable31_1:
   \        0x0   0x....'....        DC32     ?_3

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable32:
   \        0x0   0x....'....        DC32     ?_1

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable32_1:
   \        0x0   0x....'....        DC32     ChTx_1

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable32_2:
   \        0x0   0x....'....        DC32     ?_2

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable32_3:
   \        0x0   0x....'....        DC32     `SendPA::__func__`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable32_4:
   \        0x0   0x....'....        DC32     `SendCall::__func__`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable32_5:
   \        0x0   0x....'....        DC32     `SendLight::__func__`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable32_6:
   \        0x0   0x....'....        DC32     `SendRFCmdCh::__func__`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable32_7:
   \        0x0   0x....'....        DC32     `SendRFCmd::__func__`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable32_8:
   \        0x0   0x....'....        DC32     `SendRFCmdReset::__func__`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable32_9:
   \        0x0   0x....'....        DC32     `SendRFCmdCar::__func__`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable32_10:
   \        0x0   0x....'....        DC32     `SendRFCmdTS::__func__`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable32_11:
   \        0x0   0x....'....        DC32     `SendRFCmdRFMode::__func__`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable33:
   \        0x0   0x....'....        DC32     `SendOCCPA::__func__`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable33_1:
   \        0x0   0x....'....        DC32     `SendRFCmdDFUMode::__func__`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable33_2:
   \        0x0   0x....'....        DC32     `SendRFCmdUpgrade::__func__`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable34:
   \        0x0   0x....'....        DC32     ?_0

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable34_1:
   \        0x0   0x....'....        DC32     ?_4

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable34_2:
   \        0x0   0x....'....        DC32     ?_5

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable34_3:
   \        0x0   0x....'....        DC32     ?_6

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable34_4:
   \        0x0   0x....'....        DC32     ?_7

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable34_5:
   \        0x0   0x....'....        DC32     ?_8

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable34_6:
   \        0x0   0x....'....        DC32     ?_9

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable34_7:
   \        0x0   0x....'....        DC32     `SendUpgrStat::__func__`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable34_8:
   \        0x0   0x....'....        DC32     ?_10

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable34_9:
   \        0x0   0x....'....        DC32     g_idxTrainSet

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable34_10:
   \        0x0   0x....'....        DC32     g_nCarNo

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable34_11:
   \        0x0   0x....'....        DC32     ChTx_2

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable34_12:
   \        0x0   0x....'....        DC32     `ProcPktStatReq::__func__`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable34_13:
   \        0x0   0x....'....        DC32     m_RouteRunFlag

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable34_14:
   \        0x0   0x....'....        DC32     g_devStat

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable34_15:
   \        0x0   0x....'....        DC32     g_nRSSI

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable34_16:
   \        0x0   0x4002'1000        DC32     0x40021000

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable34_17:
   \        0x0   0x....'....        DC32     ?_11

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable34_18:
   \        0x0   0x....'....        DC32     ?_12

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable34_19:
   \        0x0   0x....'....        DC32     `ProcPktStat::__func__`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable34_20:
   \        0x0   0x....'....        DC32     g_bSetRspIDManual

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable34_21:
   \        0x0   0x....'....        DC32     `ProcPktRouteReq::__func__`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable34_22:
   \        0x0   0x....'....        DC32     ?_13

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable34_23:
   \        0x0   0x....'....        DC32     ?_14

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable34_24:
   \        0x0   0x....'....        DC32     m_RouteReq_OK

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable34_25:
   \        0x0   0x....'....        DC32     g_nStampRouteRsp

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable34_26:
   \        0x0   0x....'....        DC32     g_nIdxRouteFindNext

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable34_27:
   \        0x0   0x....'....        DC32     `ProcPktRouteRsp::__func__`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable34_28:
   \        0x0   0x....'....        DC32     ?_15

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable34_29:
   \        0x0   0x....'....        DC32     ?_16

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable34_30:
   \        0x0   0x....'....        DC32     `ProcPktCtrlPaCall::__func__`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable34_31:
   \        0x0   0x....'....        DC32     ?_17

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable34_32:
   \        0x0   0x....'....        DC32     ?_18

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable34_33:
   \        0x0   0x....'....        DC32     g_qBufAudioRx

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable34_34:
   \        0x0   0x....'....        DC32     ?_19

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable34_35:
   \        0x0   0x....'....        DC32     ?_20

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable34_36:
   \        0x0   0x....'....        DC32     ?_21

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable34_37:
   \        0x0   0x....'....        DC32     ?_22

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable34_38:
   \        0x0   0x....'....        DC32     g_nStampRxPkt

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable34_39:
   \        0x0   0x....'....        DC32     `ProcPktPA::__func__`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable34_40:
   \        0x0   0x4002'0400        DC32     0x40020400

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable34_41:
   \        0x0   0x....'....        DC32     `ProcPktCall::__func__`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable34_42:
   \        0x0   0x....'....        DC32     `ProcPktDevConn::__func__`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable34_43:
   \        0x0   0x....'....        DC32     `ProcPktLight::__func__`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable34_44:
   \        0x0   0x....'....        DC32     m_lightReSendCnt

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable34_45:
   \        0x0   0x....'....        DC32     m_light_Val

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable34_46:
   \        0x0   0x....'....        DC32     `ProcPktCmd::__func__`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable34_47:
   \        0x0   0x....'....        DC32     ?_24

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable34_48:
   \        0x0   0x....'....        DC32     `ProcPktCmdRsp::__func__`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable34_49:
   \        0x0   0x....'....        DC32     `ProcPktUpgr::__func__`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable34_50:
   \        0x0   0x0808'0000        DC32     0x8080000

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable34_51:
   \        0x0   0x....'....        DC32     ?_25

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable34_52:
   \        0x0   0x....'....        DC32     ?_26

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable34_53:
   \        0x0   0x....'....        DC32     ?_27

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable34_54:
   \        0x0   0xE004'2008        DC32     0xe0042008

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable34_55:
   \        0x0   0x....'....        DC32     ?_28

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable34_56:
   \        0x0   0x....'....        DC32     ?_29

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable34_57:
   \        0x0   0x....'....        DC32     s_bUpgrDataValid

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable34_58:
   \        0x0   0x....'....        DC32     `ProcPktUpgr::s_rxPkt`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable34_59:
   \        0x0   0x....'....        DC32     ?_30

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable34_60:
   \        0x0   0x....'....        DC32     ?_31

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable34_61:
   \        0x0   0x....'....        DC32     ?_32

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable34_62:
   \        0x0   0x....'....        DC32     hi2c1

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable34_63:
   \        0x0   0x....'....        DC32     ?_33

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable34_64:
   \        0x0   0x....'....        DC32     ?_34

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable34_65:
   \        0x0   0x....'....        DC32     `ProcPktUpgrStat::__func__`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable34_66:
   \        0x0   0x....'....        DC32     ?_35

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable34_67:
   \        0x0   0x....'....        DC32     ?_36

   \                                 In section .rodata, align 4
   \                     ?_0:
   \        0x0   0x25 0x73          DC8 "%s(%d)\012"

   \              0x28 0x25    

   \              0x64 0x29    

   \              0x0A 0x00

   \                                 In section .rodata, align 4
   \                     ?_1:
   \        0x0   0x53 0x65          DC8 "SeStReq:CC \012"

   \              0x53 0x74    

   \              0x52 0x65    

   \              0x71 0x3A    

   \              0x43 0x43    

   \              0x20 0x0A    

   \              0x00
   \        0xD                      DS8 3

   \                                 In section .rodata, align 4
   \                     ?_2:
   \        0x0   0x53 0x65          DC8 "SeReq:AA \012"

   \              0x52 0x65    

   \              0x71 0x3A    

   \              0x41 0x41    

   \              0x20 0x0A    

   \              0x00
   \        0xB                      DS8 1

   \                                 In section .rodata, align 4
   \                     ?_3:
   \        0x0   0x53 0x65          DC8 "SeRep:BB \012"

   \              0x52 0x65    

   \              0x70 0x3A    

   \              0x42 0x42    

   \              0x20 0x0A    

   \              0x00
   \        0xB                      DS8 1

   \                                 In section .rodata, align 4
   \                     ?_4:
   \        0x0   0x72 0x65          DC8 "reset"

   \              0x73 0x65    

   \              0x74 0x00
   \        0x6                      DS8 2

   \                                 In section .rodata, align 4
   \                     ?_5:
   \        0x0   0x63 0x61          DC8 "car %d"

   \              0x72 0x20    

   \              0x25 0x64    

   \              0x00
   \        0x7                      DS8 1

   \                                 In section .rodata, align 4
   \                     ?_6:
   \        0x0   0x74 0x73          DC8 "ts %d"

   \              0x20 0x25    

   \              0x64 0x00
   \        0x6                      DS8 2

   \                                 In section .rodata, align 4
   \                     ?_7:
   \        0x0   0x72 0x66          DC8 "rfmod %d"

   \              0x6D 0x6F    

   \              0x64 0x20    

   \              0x25 0x64    

   \              0x00
   \        0x9                      DS8 3

   \                                 In section .rodata, align 4
   \                     ?_8:
   \        0x0   0x73 0x74          DC8 "stboot"

   \              0x62 0x6F    

   \              0x6F 0x74    

   \              0x00
   \        0x7                      DS8 1

   \                                 In section .rodata, align 4
   \                     ?_9:
   \        0x0   0x75 0x70          DC8 "upgrade 1"

   \              0x67 0x72    

   \              0x61 0x64    

   \              0x65 0x20    

   \              0x31 0x00
   \        0xA                      DS8 2

   \                                 In section .rodata, align 4
   \                     ?_10:
   \        0x0   0x25 0x73          DC8 "%s(%d) - %d\012"

   \              0x28 0x25    

   \              0x64 0x29    

   \              0x20 0x2D    

   \              0x20 0x25    

   \              0x64 0x0A    

   \              0x00
   \        0xD                      DS8 3

   \                                 In section .rodata, align 4
   \                     ?_11:
   \        0x0   0x53 0x74          DC8 "StReq: Led_OFF \012"

   \              0x52 0x65    

   \              0x71 0x3A    

   \              0x20 0x4C    

   \              0x65 0x64    

   \              0x5F 0x4F    

   \              0x46 0x46    

   \              0x20 0x0A    

   \              0x00
   \       0x11                      DS8 3

   \                                 In section .rodata, align 4
   \                     ?_12:
   \        0x0   0x52 0x65          DC8 "Req: Led_ON \012"

   \              0x71 0x3A    

   \              0x20 0x4C    

   \              0x65 0x64    

   \              0x5F 0x4F    

   \              0x4E 0x20    

   \              0x0A 0x00
   \        0xE                      DS8 2

   \                                 In section .rodata, align 4
   \                     ?_13:
   \        0x0   0x52 0x65          DC8 "Req : %d\012"

   \              0x71 0x20    

   \              0x3A 0x20    

   \              0x25 0x64    

   \              0x0A 0x00
   \        0xA                      DS8 2

   \                                 In section .rodata, align 4
   \                     ?_14:
   \        0x0   0x52 0x65          DC8 "Req: Led_OFF \012"

   \              0x71 0x3A    

   \              0x20 0x4C    

   \              0x65 0x64    

   \              0x5F 0x4F    

   \              0x46 0x46    

   \              0x20 0x0A    

   \              0x00
   \        0xF                      DS8 1

   \                                 In section .rodata, align 4
   \                     ?_15:
   \        0x0   0x52 0x73          DC8 "Rsp : %d\012"

   \              0x70 0x20    

   \              0x3A 0x20    

   \              0x25 0x64    

   \              0x0A 0x00
   \        0xA                      DS8 2

   \                                 In section .rodata, align 4
   \                     ?_16:
   \        0x0   0x52 0x65          DC8 "Rep: Led_OFF \012"

   \              0x70 0x3A    

   \              0x20 0x4C    

   \              0x65 0x64    

   \              0x5F 0x4F    

   \              0x46 0x46    

   \              0x20 0x0A    

   \              0x00
   \        0xF                      DS8 1

   \                                 In section .rodata, align 4
   \                     ?_17:
   \        0x0   0x5B 0x53          DC8 "[Start]"

   \              0x74 0x61    

   \              0x72 0x74    

   \              0x5D 0x00

   \                                 In section .rodata, align 4
   \                     ?_18:
   \        0x0   0x5B 0x53          DC8 "[Stop]"

   \              0x74 0x6F    

   \              0x70 0x5D    

   \              0x00
   \        0x7                      DS8 1

   \                                 In section .rodata, align 4
   \                     ?_19:
   \        0x0   0x25 0x73          DC8 "%s:Invalid\012"

   \              0x3A 0x49    

   \              0x6E 0x76    

   \              0x61 0x6C    

   \              0x69 0x64    

   \              0x0A 0x00

   \                                 In section .rodata, align 4
   \                     ?_20:
   \        0x0   0x5B 0x50          DC8 "[PA]"

   \              0x41 0x5D    

   \              0x00
   \        0x5                      DS8 3

   \                                 In section .rodata, align 4
   \                     ?_21:
   \        0x0   0x5B 0x43          DC8 "[Call]"

   \              0x61 0x6C    

   \              0x6C 0x5D    

   \              0x00
   \        0x7                      DS8 1

   \                                 In section .rodata, align 4
   \                     ?_22:
   \        0x0   0x5B 0x4F          DC8 "[OccPa]"

   \              0x63 0x63    

   \              0x50 0x61    

   \              0x5D 0x00

   \                                 In section .rodata, align 2
   \        0x0   0x0A 0x00          DC8 "\012"

   \                                 In section .rodata, align 4
   \                     ?_24:
   \        0x0   0x25 0x73          DC8 "%s(%d) - %s\012"

   \              0x28 0x25    

   \              0x64 0x29    

   \              0x20 0x2D    

   \              0x20 0x25    

   \              0x73 0x0A    

   \              0x00
   \        0xD                      DS8 3

   \                                 In section .rodata, align 4
   \                     ?_25:
   \        0x0   0x25 0x73          DC8 "%s(%d) - Out Of Range - baseAddr(0x%08X)\012"

   \              0x28 0x25    

   \              0x64 0x29    

   \              0x20 0x2D    

   \              0x20 0x4F    

   \              0x75 0x74    

   \              0x20 0x4F    

   \              0x66 0x20    

   \              0x52 0x61    

   \              0x6E 0x67    

   \              0x65 0x20    

   \              0x2D 0x20    

   \              0x62 0x61    

   \              0x73 0x65    

   \              0x41 0x64    

   \              0x64 0x72    

   \              0x28 0x30    

   \              0x78 0x25    

   \              0x30 0x38    

   \              0x58 0x29    

   \              0x0A 0x00
   \       0x2A                      DS8 2

   \                                 In section .rodata, align 4
   \                     ?_26:
   \        0x0   0x25 0x73          DC8 "%s(%d) - Start Upgrade\012"

   \              0x28 0x25    

   \              0x64 0x29    

   \              0x20 0x2D    

   \              0x20 0x53    

   \              0x74 0x61    

   \              0x72 0x74    

   \              0x20 0x55    

   \              0x70 0x67    

   \              0x72 0x61    

   \              0x64 0x65    

   \              0x0A 0x00

   \                                 In section .rodata, align 4
   \                     ?_27:
   \        0x0   0x5B 0x25          DC8 "[%08d] Flash Erase - Skip ( Retry - Upgrade )\012"

   \              0x30 0x38    

   \              0x64 0x5D    

   \              0x20 0x46    

   \              0x6C 0x61    

   \              0x73 0x68    

   \              0x20 0x45    

   \              0x72 0x61    

   \              0x73 0x65    

   \              0x20 0x2D    

   \              0x20 0x53    

   \              0x6B 0x69    

   \              0x70 0x20    

   \              0x28 0x20    

   \              0x52 0x65    

   \              0x74 0x72    

   \              0x79 0x20    

   \              0x2D 0x20    

   \              0x55 0x70    

   \              0x67 0x72    

   \              0x61 0x64    

   \              0x65 0x20    

   \              0x29 0x0A    

   \              0x00
   \       0x2F                      DS8 1

   \                                 In section .rodata, align 4
   \                     ?_28:
   \        0x0   0x5B 0x25          DC8 "[%08d] Flash Erase - Start\012"

   \              0x30 0x38    

   \              0x64 0x5D    

   \              0x20 0x46    

   \              0x6C 0x61    

   \              0x73 0x68    

   \              0x20 0x45    

   \              0x72 0x61    

   \              0x73 0x65    

   \              0x20 0x2D    

   \              0x20 0x53    

   \              0x74 0x61    

   \              0x72 0x74    

   \              0x0A 0x00

   \                                 In section .rodata, align 4
   \                     ?_29:
   \        0x0   0x5B 0x25          DC8 "[%08d] Flash Erase - End\012"

   \              0x30 0x38    

   \              0x64 0x5D    

   \              0x20 0x46    

   \              0x6C 0x61    

   \              0x73 0x68    

   \              0x20 0x45    

   \              0x72 0x61    

   \              0x73 0x65    

   \              0x20 0x2D    

   \              0x20 0x45    

   \              0x6E 0x64    

   \              0x0A 0x00
   \       0x1A                      DS8 2

   \                                 In section .rodata, align 4
   \                     ?_30:
   \        0x0   0x25 0x73          DC8 "%s(%d) - Error idx(%d)\012"

   \              0x28 0x25    

   \              0x64 0x29    

   \              0x20 0x2D    

   \              0x20 0x45    

   \              0x72 0x72    

   \              0x6F 0x72    

   \              0x20 0x69    

   \              0x64 0x78    

   \              0x28 0x25    

   \              0x64 0x29    

   \              0x0A 0x00

   \                                 In section .rodata, align 4
   \                     ?_31:
   \        0x0   0x25 0x73          DC8 0x25, 0x73, 0x28, 0x25, 0x64, 0x29, 0x20, 0x2D

   \              0x28 0x25    

   \              0x64 0x29    

   \              0x20 0x2D
   \        0x8   0x20 0x45          DC8 0x20, 0x45, 0x6E, 0x64, 0x20, 0x55, 0x70, 0x67

   \              0x6E 0x64    

   \              0x20 0x55    

   \              0x70 0x67
   \       0x10   0x72 0x61          DC8 0x72, 0x61, 0x64, 0x65, 0x20, 0x28, 0x20, 0x72

   \              0x64 0x65    

   \              0x20 0x28    

   \              0x20 0x72
   \       0x18   0x78 0x50          DC8 0x78, 0x50, 0x6B, 0x74, 0x20, 0x3A, 0x20, 0x25

   \              0x6B 0x74    

   \              0x20 0x3A    

   \              0x20 0x25
   \       0x20   0x64 0x20          DC8 0x64, 0x20, 0x2F, 0x20, 0x74, 0x6F, 0x74, 0x50

   \              0x2F 0x20    

   \              0x74 0x6F    

   \              0x74 0x50
   \       0x28   0x6B 0x74          DC8 0x6B, 0x74, 0x20, 0x3A, 0x20, 0x25, 0x64, 0x20

   \              0x20 0x3A    

   \              0x20 0x25    

   \              0x64 0x20
   \       0x30   0x29 0x0A          DC8 0x29, 0x0A, 0

   \              0x00
   \       0x33                      DS8 1

   \                                 In section .rodata, align 4
   \                     ?_32:
   \        0x0   0x25 0x73          DC8 "%s(%d) - Upgrade Success ( Size : %d )\012"

   \              0x28 0x25    

   \              0x64 0x29    

   \              0x20 0x2D    

   \              0x20 0x55    

   \              0x70 0x67    

   \              0x72 0x61    

   \              0x64 0x65    

   \              0x20 0x53    

   \              0x75 0x63    

   \              0x63 0x65    

   \              0x73 0x73    

   \              0x20 0x28    

   \              0x20 0x53    

   \              0x69 0x7A    

   \              0x65 0x20    

   \              0x3A 0x20    

   \              0x25 0x64    

   \              0x20 0x29    

   \              0x0A 0x00

   \                                 In section .rodata, align 4
   \                     ?_33:
   \        0x0   0x25 0x73          DC8 0x25, 0x73, 0x28, 0x25, 0x64, 0x29, 0x20, 0x2D

   \              0x28 0x25    

   \              0x64 0x29    

   \              0x20 0x2D
   \        0x8   0x20 0x45          DC8 0x20, 0x45, 0x45, 0x50, 0x52, 0x4F, 0x4D, 0x20

   \              0x45 0x50    

   \              0x52 0x4F    

   \              0x4D 0x20
   \       0x10   0x5B 0x30          DC8 0x5B, 0x30, 0x2C, 0x31, 0x5D, 0x20, 0x3A, 0x20

   \              0x2C 0x31    

   \              0x5D 0x20    

   \              0x3A 0x20
   \       0x18   0x30 0x78          DC8 0x30, 0x78, 0x25, 0x30, 0x32, 0x58, 0x20, 0x30

   \              0x25 0x30    

   \              0x32 0x58    

   \              0x20 0x30
   \       0x20   0x78 0x25          DC8 0x78, 0x25, 0x30, 0x32, 0x58, 0x20, 0x2F, 0x20

   \              0x30 0x32    

   \              0x58 0x20    

   \              0x2F 0x20
   \       0x28   0x28 0x20          DC8 0x28, 0x20, 0x62, 0x69, 0x6E, 0x20, 0x73, 0x69

   \              0x62 0x69    

   \              0x6E 0x20    

   \              0x73 0x69
   \       0x30   0x7A 0x65          DC8 0x7A, 0x65, 0x20, 0x3A, 0x20, 0x25, 0x64, 0x20

   \              0x20 0x3A    

   \              0x20 0x25    

   \              0x64 0x20
   \       0x38   0x29 0x0A          DC8 0x29, 0x0A, 0

   \              0x00
   \       0x3B                      DS8 1

   \                                 In section .rodata, align 4
   \                     ?_34:
   \        0x0   0x25 0x73          DC8 "%s(%d) - Upgrade Failed\012"

   \              0x28 0x25    

   \              0x64 0x29    

   \              0x20 0x2D    

   \              0x20 0x55    

   \              0x70 0x67    

   \              0x72 0x61    

   \              0x64 0x65    

   \              0x20 0x46    

   \              0x61 0x69    

   \              0x6C 0x65    

   \              0x64 0x0A    

   \              0x00
   \       0x19                      DS8 3

   \                                 In section .rodata, align 4
   \                     ?_35:
   \        0x0   0x53 0x75          DC8 "Success(%d/%d)"

   \              0x63 0x63    

   \              0x65 0x73    

   \              0x73 0x28    

   \              0x25 0x64    

   \              0x2F 0x25    

   \              0x64 0x29    

   \              0x00
   \        0xF                      DS8 1

   \                                 In section .rodata, align 4
   \                     ?_36:
   \        0x0   0x46 0x61          DC8 "Failed(%d/%d)"

   \              0x69 0x6C    

   \              0x65 0x64    

   \              0x28 0x25    

   \              0x64 0x2F    

   \              0x25 0x64    

   \              0x29 0x00
   \        0xE                      DS8 2
   1632          

   Maximum stack usage in bytes:

   .cstack Function
   ------- --------
      16   ProcPktCall
        16   -> GetDbg
        16   -> GetDevID
        16   -> HAL_GPIO_WritePin
        16   -> HAL_GetTick
        16   -> RFM_Spk
        16   -> SetRFMMode
        16   -> printf
        16   -> qBufPut
       8   ProcPktCmd
         8   -> GetDbg
         8   -> GetTrainSetIdx
         8   -> ProcessCommand
         8   -> printf
       8   ProcPktCmdRsp
         8   -> GetDbg
         8   -> printf
      16   ProcPktCtrlPaCall
        16   -> GetChNearRFT
        16   -> GetDbg
        16   -> GetDevID
        16   -> HAL_GPIO_WritePin
        16   -> HAL_GetTick
        16   -> SetChPARFT
        16   -> SetRFMMode
        16   -> printf
        16   -> qBufClear
      16   ProcPktDevConn
        16   -> GetDbg
        16   -> GetDevID
        16   -> SetDevConn
        16   -> printf
       8   ProcPktLight
         8   -> GetDbg
         8   -> GetDevID
         8   -> HAL_GPIO_WritePin
         8   -> printf
      24   ProcPktPA
        24   -> GetDbg
        24   -> GetDevID
        24   -> GetTrainSetIdx
        24   -> HAL_GPIO_WritePin
        24   -> HAL_GetTick
        24   -> RFM_Spk
        24   -> SetRFMMode
        24   -> WriteI2CCodec
        24   -> printf
        24   -> qBufPut
      24   ProcPktRouteReq
        24   -> GetCarNo
        24   -> GetChRx
        24   -> GetDbg
        24   -> GetDevID
        24   -> GetTrainSetIdx
        24   -> HAL_GPIO_WritePin
        24   -> SendRouteRsp
        24   -> SetChRFMDown
        24   -> SetChRFMUp
        24   -> printf
      24   ProcPktRouteRsp
        24   -> GetChRx
        24   -> GetDbg
        24   -> GetDevID
        24   -> GetTrainSetIdx
        24   -> HAL_GPIO_WritePin
        24   -> HAL_GetTick
        24   -> SetChRFMDown
        24   -> SetChRFMUp
        24   -> printf
      16   ProcPktStat
        16   -> GetDbg
        16   -> GetTrainSetIdx
        16   -> SetStat
        16   -> UpdateStat
        16   -> printf
      24   ProcPktStatReq
        24   -> GetCarNo
        24   -> GetDbg
        24   -> GetDevID
        24   -> GetTrainSetIdx
        24   -> HAL_GPIO_WritePin
        24   -> HAL_GetTick
        24   -> SendStat
        24   -> SetStat
        24   -> printf
      72   ProcPktUpgr
        72   -> FLASH_If_Erase
        72   -> FLASH_If_Write
        72   -> GetDbg
        72   -> GetTrainSetIdx
        72   -> HAL_Delay
        72   -> HAL_GetTick
        72   -> M24_HAL_ReadBytes
        72   -> M24_HAL_WriteBytes
        72   -> SendUpgrStat
        72   -> SetRFMMode
        72   -> __aeabi_memset
        72   -> cmd_reset
        72   -> printf
      64   ProcPktUpgrStat
        64   -> GetDbg
        64   -> LCDPrintfXY
        64   -> printf
        64   -> sprintf
      88   SendCall
        88   -> GetChPA
        88   -> GetChPARFT
        88   -> SendPktCh
        88   -> _MakePktHdr2
        88   -> __aeabi_memset
        88   -> printf
      88   SendLight
        88   -> GetChPA
        88   -> SendPktCh
        88   -> _MakePktHdr2
        88   -> __aeabi_memset
        88   -> printf
       8   SendLightOff
         8   -> SendLight
       8   SendLightOn
         8   -> SendLight
      96   SendOCCPA
        96   -> GetChPA
        96   -> GetChPARFT
        96   -> GetChRFMUp
        96   -> SendPktCh
        96   -> _MakePktHdr2
        96   -> __aeabi_memset
        96   -> printf
      88   SendPA
        88   -> GetChPA
        88   -> GetChPARFT
        88   -> SendPktCh
        88   -> _MakePktHdr2
        88   -> __aeabi_memset
        88   -> printf
      80   SendRFCmd
        80   -> HAL_Delay
        80   -> SendPktCh
        80   -> _MakeRFCmd
        80   -> printf
     112   SendRFCmdCar
       112   -> SendRFCmd
       112   -> printf
       112   -> sprintf
      80   SendRFCmdCh
        80   -> SendPktCh
        80   -> _MakeRFCmd
        80   -> printf
       8   SendRFCmdDFUMode
         8   -> SendRFCmd
         8   -> printf
     112   SendRFCmdRFMode
       112   -> SendRFCmd
       112   -> printf
       112   -> sprintf
      72   SendRFCmdReset
        72   -> SendPktCh
        72   -> SendRFCmd
        72   -> _MakeRFCmd
        72   -> printf
     112   SendRFCmdTS
       112   -> SendRFCmd
       112   -> printf
       112   -> sprintf
       8   SendRFCmdUpgrade
         8   -> HAL_Delay
         8   -> SendRFCmd
         8   -> SendRFCmdCh
         8   -> SetUpgrReTry
         8   -> UpgrSendImageApp
         8   -> printf
      88   SendRouteReq
        88   -> GetCarNo
        88   -> GetChRx
        88   -> GetDbg
        88   -> GetDevID
        88   -> GetTrainSetIdx
        88   -> SendPktCh
        88   -> _MakePktHdr
        88   -> __aeabi_memset
        88   -> printf
      88   SendRouteRsp
        88   -> GetCarNo
        88   -> GetChRx
        88   -> GetDbg
        88   -> GetDevID
        88   -> GetRFMMode
        88   -> GetTrainSetIdx
        88   -> SendPktCh
        88   -> _MakePktHdr
        88   -> __aeabi_memset
        88   -> printf
      96   SendStat
        96   -> GetCarNo
        96   -> GetChRx
        96   -> GetDbg
        96   -> GetDevID
        96   -> GetTrainSetIdx
        96   -> HAL_Delay
        96   -> HAL_GetTick
        96   -> SendPktCh
        96   -> _MakePktHdr
        96   -> __aeabi_memset
        96   -> printf
      88   SendStatReq
        88   -> GetCarNo
        88   -> GetChNearRFM
        88   -> GetChRx
        88   -> GetDbg
        88   -> GetDevID
        88   -> GetTrainSetIdx
        88   -> SendPktCh
        88   -> _MakePktHdr
        88   -> __aeabi_memset
        88   -> printf
     104   SendUpgrData
       104   -> GetDevID
       104   -> GetTrainSetIdx
       104   -> GetUpgrReTry
       104   -> SendPktCh
       104   -> _MakePktHdr
       104   -> __aeabi_memcpy
       104   -> __aeabi_memset
      88   SendUpgrStat
        88   -> GetDevID
        88   -> HAL_Delay
        88   -> SendPktCh
        88   -> _MakePktHdr
        88   -> __aeabi_memset
        88   -> printf
      24   _MakePktHdr
        24   -> GetCarNo
        24   -> GetDevID
        24   -> GetTrainSetIdx
      16   _MakePktHdr2
        16   -> GetChPARFT
        16   -> GetChRx
        16   -> GetDevID
        16   -> GetRFMMode
        16   -> GetRFTID
        16   -> GetTrainSetIdx
      32   _MakeRFCmd
        32   -> GetDevID
        32   -> GetTrainSetIdx
        32   -> _MakePktHdr
        32   -> __aeabi_memset
        32   -> printf
        32   -> strcpy


   Section sizes:

   Bytes  Function/Label
   -----  --------------
       4  ??DataTable24
       4  ??DataTable25
       4  ??DataTable25_1
       4  ??DataTable26
       4  ??DataTable26_1
       4  ??DataTable26_2
       4  ??DataTable26_3
       4  ??DataTable26_4
       4  ??DataTable27
       4  ??DataTable27_1
       4  ??DataTable27_2
       4  ??DataTable27_3
       4  ??DataTable29
       4  ??DataTable29_1
       4  ??DataTable29_2
       4  ??DataTable30
       4  ??DataTable31
       4  ??DataTable31_1
       4  ??DataTable32
       4  ??DataTable32_1
       4  ??DataTable32_10
       4  ??DataTable32_11
       4  ??DataTable32_2
       4  ??DataTable32_3
       4  ??DataTable32_4
       4  ??DataTable32_5
       4  ??DataTable32_6
       4  ??DataTable32_7
       4  ??DataTable32_8
       4  ??DataTable32_9
       4  ??DataTable33
       4  ??DataTable33_1
       4  ??DataTable33_2
       4  ??DataTable34
       4  ??DataTable34_1
       4  ??DataTable34_10
       4  ??DataTable34_11
       4  ??DataTable34_12
       4  ??DataTable34_13
       4  ??DataTable34_14
       4  ??DataTable34_15
       4  ??DataTable34_16
       4  ??DataTable34_17
       4  ??DataTable34_18
       4  ??DataTable34_19
       4  ??DataTable34_2
       4  ??DataTable34_20
       4  ??DataTable34_21
       4  ??DataTable34_22
       4  ??DataTable34_23
       4  ??DataTable34_24
       4  ??DataTable34_25
       4  ??DataTable34_26
       4  ??DataTable34_27
       4  ??DataTable34_28
       4  ??DataTable34_29
       4  ??DataTable34_3
       4  ??DataTable34_30
       4  ??DataTable34_31
       4  ??DataTable34_32
       4  ??DataTable34_33
       4  ??DataTable34_34
       4  ??DataTable34_35
       4  ??DataTable34_36
       4  ??DataTable34_37
       4  ??DataTable34_38
       4  ??DataTable34_39
       4  ??DataTable34_4
       4  ??DataTable34_40
       4  ??DataTable34_41
       4  ??DataTable34_42
       4  ??DataTable34_43
       4  ??DataTable34_44
       4  ??DataTable34_45
       4  ??DataTable34_46
       4  ??DataTable34_47
       4  ??DataTable34_48
       4  ??DataTable34_49
       4  ??DataTable34_5
       4  ??DataTable34_50
       4  ??DataTable34_51
       4  ??DataTable34_52
       4  ??DataTable34_53
       4  ??DataTable34_54
       4  ??DataTable34_55
       4  ??DataTable34_56
       4  ??DataTable34_57
       4  ??DataTable34_58
       4  ??DataTable34_59
       4  ??DataTable34_6
       4  ??DataTable34_60
       4  ??DataTable34_61
       4  ??DataTable34_62
       4  ??DataTable34_63
       4  ??DataTable34_64
       4  ??DataTable34_65
       4  ??DataTable34_66
       4  ??DataTable34_67
       4  ??DataTable34_7
       4  ??DataTable34_8
       4  ??DataTable34_9
       8  ?_0
      16  ?_1
      16  ?_10
      20  ?_11
      16  ?_12
      12  ?_13
      16  ?_14
      12  ?_15
      16  ?_16
       8  ?_17
       8  ?_18
      12  ?_19
      12  ?_2
       8  ?_20
       8  ?_21
       8  ?_22
       2  ?_23
      16  ?_24
      44  ?_25
      24  ?_26
      48  ?_27
      28  ?_28
      28  ?_29
      12  ?_3
      24  ?_30
      52  ?_31
      40  ?_32
      60  ?_33
      28  ?_34
      16  ?_35
      16  ?_36
       8  ?_4
       8  ?_5
       8  ?_6
      12  ?_7
       8  ?_8
      12  ?_9
       4  ChTS1_1
       4  ChTx_1
       4  ChTx_2
     104  ProcPktCall
     100  ProcPktCmd
      28  ProcPktCmdRsp
     206  ProcPktCtrlPaCall
      70  ProcPktDevConn
     118  ProcPktLight
     172  ProcPktPA
     250  ProcPktRouteReq
     236  ProcPktRouteRsp
      94  ProcPktStat
     252  ProcPktStatReq
     692  ProcPktUpgr
     106  ProcPktUpgrStat
      92  SendCall
      66  SendLight
      26  SendLightOff
      26  SendLightOn
     106  SendOCCPA
      90  SendPA
      64  SendRFCmd
      46  SendRFCmdCar
      50  SendRFCmdCh
      30  SendRFCmdDFUMode
      46  SendRFCmdRFMode
      56  SendRFCmdReset
      46  SendRFCmdTS
      68  SendRFCmdUpgrade
     146  SendRouteReq
     164  SendRouteRsp
     208  SendStat
     144  SendStatReq
     152  SendUpgrData
     118  SendUpgrStat
     164  _MakePktHdr
     222  _MakePktHdr2
      84  _MakeRFCmd
       4  m_RouteReq_OK
       4  m_RouteRunFlag
       4  m_lightReSendCnt
       4  m_lightTxSentCnt
       4  m_light_Val
   1'024  s_bUpgrDataValid
       4  s_rxPkt
     444  -- Other

 
 1'044 bytes in section .bss
    16 bytes in section .data
 1'134 bytes in section .rodata
 5'046 bytes in section .text
 
 5'046 bytes of CODE  memory
 1'134 bytes of CONST memory
 1'060 bytes of DATA  memory

Errors: none
Warnings: 91
