###############################################################################
#
# IAR ANSI C/C++ Compiler V9.30.1.335/W64 for ARM         20/Sep/2022  11:09:54
# Copyright 1999-2022 IAR Systems AB.
#
#    Cpu mode          =  thumb
#    Endian            =  little
#    Source file       =  C:\D\Git_Hub\STM_IAR_SIL_Change\Library\rfm.c
#    Command line      =
#        -f C:\D\Git_Hub\STM_IAR_SIL_Change\EWARM\RFM\Obj\Library\rfm.o.rsp
#        (C:\D\Git_Hub\STM_IAR_SIL_Change\Library\rfm.c -D USE_HAL_DRIVER -D
#        STM32F407xx -lC C:\D\Git_Hub\STM_IAR_SIL_Change\EWARM\RFM\List\Library
#        -o C:\D\Git_Hub\STM_IAR_SIL_Change\EWARM\RFM\Obj\Library --no_cse
#        --no_unroll --no_inline --no_code_motion --no_tbaa --no_clustering
#        --no_scheduling --debug --endian=little --cpu=Cortex-M4 -e
#        --fpu=VFPv4_sp --dlib_config "C:\Program Files\IAR Systems\Embedded
#        Workbench 9.1\arm\inc\c\DLib_Config_Full.h" -I
#        C:\D\Git_Hub\STM_IAR_SIL_Change\EWARM/../USB_DEVICE/App\ -I
#        C:\D\Git_Hub\STM_IAR_SIL_Change\EWARM/../USB_DEVICE/Target\ -I
#        C:\D\Git_Hub\STM_IAR_SIL_Change\EWARM/../Core/Inc\ -I
#        C:\D\Git_Hub\STM_IAR_SIL_Change\EWARM/../Drivers/STM32F4xx_HAL_Driver/Inc\
#        -I
#        C:\D\Git_Hub\STM_IAR_SIL_Change\EWARM/../Drivers/STM32F4xx_HAL_Driver/Inc/Legacy\
#        -I
#        C:\D\Git_Hub\STM_IAR_SIL_Change\EWARM/../Middlewares/ST/STM32_USB_Device_Library/Core/Inc\
#        -I
#        C:\D\Git_Hub\STM_IAR_SIL_Change\EWARM/../Middlewares/ST/STM32_USB_Device_Library/Class/CDC/Inc\
#        -I
#        C:\D\Git_Hub\STM_IAR_SIL_Change\EWARM/../Drivers/CMSIS/Device/ST/STM32F4xx/Include\
#        -I C:\D\Git_Hub\STM_IAR_SIL_Change\EWARM/../Drivers/CMSIS/Include\ -I
#        C:\D\Git_Hub\STM_IAR_SIL_Change\EWARM/../Drivers/radio\ -I
#        C:\D\Git_Hub\STM_IAR_SIL_Change\EWARM/../Drivers/radio/Si446x\ -I
#        C:\D\Git_Hub\STM_IAR_SIL_Change\EWARM/../Drivers/display\ -I
#        C:\D\Git_Hub\STM_IAR_SIL_Change\EWARM/../Library\ -I
#        C:\D\Git_Hub\STM_IAR_SIL_Change\EWARM\..\Drivers\display\fonts\ -I
#        C:\D\Git_Hub\STM_IAR_SIL_Change\EWARM\..\Drivers\STM32F4xx_HAL_Driver\Src\
#        -On --use_c++_inline -I "C:\Program Files\IAR Systems\Embedded
#        Workbench 9.1\arm\CMSIS\Core\Include\\") --dependencies=n
#        C:\D\Git_Hub\STM_IAR_SIL_Change\EWARM\RFM\Obj\Library\rfm.o.d
#    Locale            =  C
#    List file         =
#        C:\D\Git_Hub\STM_IAR_SIL_Change\EWARM\RFM\List\Library\rfm.lst
#    Object file       =
#        C:\D\Git_Hub\STM_IAR_SIL_Change\EWARM\RFM\Obj\Library\rfm.o
#    Runtime model:       
#      __CPP_Runtime   =  1
#      __SystemLibrary =  DLib
#      __dlib_version  =  6
#
###############################################################################

C:\D\Git_Hub\STM_IAR_SIL_Change\Library\rfm.c
      1          /*------------------------------------------------------------------------------------------
      2          	Project			: RFM
      3          	Description		: 
      4          
      5          	Writer			: $Author: zlkit $
      6          	Revision		: $Rev: 1891 $
      7          	Date			: 2019. 10.
      8          	Copyright		: Piranti Corp.	( sw@piranti.co.kr )
      9          	 
     10          	Revision History 
     11          	1. 2019. 10.	: Created
     12          -------------------------------------------------------------------------------------------*/
     13          
     14          //========================================================================
     15          // Header
     16          #include "rfm.h"

  typedef unsigned char       BYTE;
                              ^
"C:\D\Git_Hub\STM_IAR_SIL_Change\Library\typedef.h",73  Warning[Pe301]: typedef
          name has already been declared (with same type)

  typedef unsigned short      WORD;
                              ^
"C:\D\Git_Hub\STM_IAR_SIL_Change\Library\typedef.h",77  Warning[Pe301]: typedef
          name has already been declared (with same type)

  	};
  	 ^
"C:\D\Git_Hub\STM_IAR_SIL_Change\Library\RFMProtocol.h",304  Warning[Pe040]: 
          expected an identifier

  	};
  	 ^
"C:\D\Git_Hub\STM_IAR_SIL_Change\Library\RFMProtocol.h",322  Warning[Pe040]: 
          expected an identifier

  	};
  	 ^
"C:\D\Git_Hub\STM_IAR_SIL_Change\Library\RFMProtocol.h",468  Warning[Pe040]: 
          expected an identifier

  	};
  	 ^
"C:\D\Git_Hub\STM_IAR_SIL_Change\Library\RFMProtocol.h",506  Warning[Pe040]: 
          expected an identifier

  	};
  	 ^
"C:\D\Git_Hub\STM_IAR_SIL_Change\Library\RFMProtocol.h",511  Warning[Pe040]: 
          expected an identifier

  	};
  	 ^
"C:\D\Git_Hub\STM_IAR_SIL_Change\Library\RFMProtocol.h",533  Warning[Pe040]: 
          expected an identifier

  	};
  	 ^
"C:\D\Git_Hub\STM_IAR_SIL_Change\Library\RFMProtocol.h",559  Warning[Pe040]: 
          expected an identifier

  	};
  	 ^
"C:\D\Git_Hub\STM_IAR_SIL_Change\Library\RFMProtocol.h",567  Warning[Pe040]: 
          expected an identifier
     17          
     18          #include "RFMProtocol.h"            //  DevNone
     19          
     20          #include "Adafruit_SSD1306.h"       //  I2C LCD
     21          
     22          #include "version.h"			    //	Version Info
     23          
     24          #include "main.h"

  # warning unrecognized compiler
    ^
"C:\D\Git_Hub\STM_IAR_SIL_Change\Drivers\radio\compiler_defs.h",744  Warning[Pa183]: 
          #warning directive: unrecognized compiler

  typedef unsigned char U8;
                        ^
"C:\D\Git_Hub\STM_IAR_SIL_Change\Drivers\radio\compiler_defs.h",788  Warning[Pe301]: 
          typedef name has already been declared (with same type)

  typedef unsigned int U16;
                       ^
"C:\D\Git_Hub\STM_IAR_SIL_Change\Drivers\radio\compiler_defs.h",789  Warning[Pe301]: 
          typedef name has already been declared (with same type)

  typedef unsigned long U32;
                        ^
"C:\D\Git_Hub\STM_IAR_SIL_Change\Drivers\radio\compiler_defs.h",790  Warning[Pe301]: 
          typedef name has already been declared (with same type)

  typedef signed char S8;
                      ^
"C:\D\Git_Hub\STM_IAR_SIL_Change\Drivers\radio\compiler_defs.h",792  Warning[Pe301]: 
          typedef name has already been declared (with same type)

  typedef signed int S16;
                     ^
"C:\D\Git_Hub\STM_IAR_SIL_Change\Drivers\radio\compiler_defs.h",793  Warning[Pe301]: 
          typedef name has already been declared (with same type)

  typedef signed long S32;
                      ^
"C:\D\Git_Hub\STM_IAR_SIL_Change\Drivers\radio\compiler_defs.h",794  Warning[Pe301]: 
          typedef name has already been declared (with same type)

  typedef bit BIT;
              ^
"C:\D\Git_Hub\STM_IAR_SIL_Change\Drivers\radio\compiler_defs.h",820  Warning[Pe301]: 
          typedef name has already been declared (with same type)
     25          
     26          #include "audio.h"                  //  WriteI2CCodec()
     27          
     28          #include "serial.h"					//  SerialInit()
     29          
     30          #include "keypad.h"					//	GetKey()
     31          
     32          #if defined(_WIN32)
     33          #else
     34          #include "radio.h"					//  bRadio_Check_Tx_RX()
     35          #include "si446x_api_lib.h"			//	Si446xCmd
     36          #endif
     37          
     38          #include "ProcPkt.h"				//	nTxPkt
     39          
     40          #include "adpcm.h"					//	ADPCM Codec
     41          
     42          //========================================================================
     43          // Define
     44          
     45          //========================================================================
     46          

   \                                 In section .bss, align 4
     47          int		g_nDevID		=	DevNone;			//  Device ID ( 1 : RF900M / 2 : RF900T )
   \                     g_nDevID:
   \        0x0                      DS8 4
     48          

   \                                 In section .bss, align 4
     49          int		g_nDevFlag		=	DevFlagNone;		//  Device Flag ( Light )
   \                     g_nDevFlag:
   \        0x0                      DS8 4
     50          

   \                                 In section .bss, align 4
     51          int		g_idxTrainSet	=	0;	  				//  Train Set Index
   \                     g_idxTrainSet:
   \        0x0                      DS8 4

   \                                 In section .bss, align 4
     52          int		g_nCarNo		=	0;	  				//  Car Number
   \                     g_nCarNo:
   \        0x0                      DS8 4
     53          

   \                                 In section .data, align 4
     54          int		g_nChRx			=	_ChTS1_1;			//  RF Rx Channel
   \                     g_nChRx:
   \        0x0   0x0000'0015        DC32 21
     55          

   \                                 In section .data, align 4
     56          int	 	g_nSpkLevel		=	DefaultSpkVol;		//  Default (1) - 0(Mute) / 1 / 2(Normal) / 3
   \                     g_nSpkLevel:
   \        0x0   0x0000'0001        DC32 1
     57          

   \                                 In section .bss, align 4
     58          int	 	g_nRFMMode 		=	RFMModeNormal;		//  eRFMMode
   \                     g_nRFMMode:
   \        0x0                      DS8 4
     59          

   \                                 In section .bss, align 4
     60          int		g_offsetCA		=	0;					//	충돌회피 Offset ( msec ) ( 0 ~ 1000 )
   \                     g_offsetCA:
   \        0x0                      DS8 4
     61          

   \                                 In section .bss, align 4
     62          int		g_nStampRxPkt	=	0;					//	방송/통화 Stamp
   \                     g_nStampRxPkt:
   \        0x0                      DS8 4
     63          

   \                                 In section .bss, align 4
     64          int		g_nRSSI			=	0;					//	RSSI Value
   \                     g_nRSSI:
   \        0x0                      DS8 4
     65          
     66          #if defined(USE_RF_COMM_MODE)

   \                                 In section .bss, align 4
     67          int		g_nRFMode		=	0;					//	RF Mode 무선 중계 모드. eRFMode ( RFMode1 / RFMode2 )
   \                     g_nRFMode:
   \        0x0                      DS8 4
     68          #endif
     69          
     70          #if defined(USE_HOP_MANUAL)

   \                                 In section .bss, align 4
     71          int		g_nManHopping	=	0;					//	On(1) / Off(2) / Unused(0 : Other)
   \                     g_nManHopping:
   \        0x0                      DS8 4
     72          #endif	//	defined(USE_HOP_MANUAL)
     73          
     74          //	Device Stat

   \                                 In section .bss, align 4
     75          RFMDevStat		g_devStat[ MaxCarNo ] = { 0, };
   \                     g_devStat:
   \        0x0                      DS8 484
     76          
     77          
     78          
     79          //========================================================================
     80          
     81          //========================================================================
     82          // Function
     83          
     84          //========================================================================

   \                                 In section .text, align 2, keep-with-next
     85          int GetDevID    ( void )
     86          //========================================================================
     87          {
     88          	return g_nDevID;
   \                     GetDevID: (+1)
   \        0x0   0x.... 0x....      LDR.W    R0,??DataTable45
   \        0x4   0x6800             LDR      R0,[R0, #+0]
   \        0x6   0x4770             BX       LR
     89          }
     90          
     91          //========================================================================

   \                                 In section .text, align 2, keep-with-next
     92          void SetDevID    ( int nDevID )
     93          //========================================================================
     94          {
   \                     SetDevID: (+1)
   \        0x0   0xB510             PUSH     {R4,LR}
   \        0x2   0x0004             MOVS     R4,R0
     95          	printf( "%s : %s(%d)\n", __func__,
                 	^
Warning[Pe223]: function "printf" declared implicitly
     96          							( nDevID == DevRF900M )? "RFM":"RFT",
     97          							nDevID );
   \        0x4   0x2C01             CMP      R4,#+1
   \        0x6   0xD101             BNE.N    ??SetDevID_0
   \        0x8   0x....             ADR.N    R2,??DataTable16
   \        0xA   0xE000             B.N      ??SetDevID_1
   \                     ??SetDevID_0: (+1)
   \        0xC   0x....             ADR.N    R2,??DataTable16_1
   \                     ??SetDevID_1: (+1)
   \        0xE   0x0023             MOVS     R3,R4
   \       0x10   0x.... 0x....      LDR.W    R1,??DataTable39
   \       0x14   0x.... 0x....      LDR.W    R0,??DataTable39_1
   \       0x18   0x.... 0x....      BL       printf
     98          	g_nDevID = nDevID;
   \       0x1C   0x.... 0x....      LDR.W    R0,??DataTable45
   \       0x20   0x6004             STR      R4,[R0, #+0]
     99          }
   \       0x22   0xBD10             POP      {R4,PC}
    100          
    101          //========================================================================

   \                                 In section .text, align 2, keep-with-next
    102          int		GetRFMMode	( void )
    103          //========================================================================
    104          {
    105          	return g_nRFMMode;
   \                     GetRFMMode: (+1)
   \        0x0   0x.... 0x....      LDR.W    R0,??DataTable40
   \        0x4   0x6800             LDR      R0,[R0, #+0]
   \        0x6   0x4770             BX       LR
    106          }
    107          
    108          //========================================================================

   \                                 In section .text, align 2, keep-with-next
    109          void	SetRFMMode	( int nRFMMode )
    110          //========================================================================
    111          {
   \                     SetRFMMode: (+1)
   \        0x0   0xB538             PUSH     {R3-R5,LR}
   \        0x2   0x0004             MOVS     R4,R0
    112          	if ( g_nRFMMode != nRFMMode && nRFMMode == RFMModeNormal )
   \        0x4   0x.... 0x....      LDR.W    R5,??DataTable40
   \        0x8   0x6828             LDR      R0,[R5, #+0]
   \        0xA   0x42A0             CMP      R0,R4
   \        0xC   0xD003             BEQ.N    ??SetRFMMode_0
   \        0xE   0x2C00             CMP      R4,#+0
   \       0x10   0xD101             BNE.N    ??SetRFMMode_0
    113          	{
    114          		//	타 모드에서 Normal 모드로 변경시 상태정보 ID Flag값 유지.
    115          		ReloadStampStat();
   \       0x12   0x.... 0x....      BL       ReloadStampStat
    116          	}
    117          
    118          	if ( g_nRFMMode != nRFMMode )
   \                     ??SetRFMMode_0: (+1)
   \       0x16   0x6828             LDR      R0,[R5, #+0]
   \       0x18   0x42A0             CMP      R0,R4
   \       0x1A   0xD006             BEQ.N    ??SetRFMMode_1
    119          	{
    120          		//	타 모드에서 Normal 모드로 변경시 상태정보 ID Flag값 유지.
    121          		printf( "%s", StrRFMMode( nRFMMode ) );
                 		^
Warning[Pe223]: function "printf" declared implicitly
   \       0x1C   0x0020             MOVS     R0,R4
   \       0x1E   0x.... 0x....      BL       StrRFMMode
   \       0x22   0x0001             MOVS     R1,R0
   \       0x24   0x....             ADR.N    R0,??DataTable20
   \       0x26   0x.... 0x....      BL       printf
    122          	}
    123          
    124          	g_nRFMMode = nRFMMode;
   \                     ??SetRFMMode_1: (+1)
   \       0x2A   0x602C             STR      R4,[R5, #+0]
    125          }
   \       0x2C   0xBD31             POP      {R0,R4,R5,PC}
    126          
    127          //========================================================================

   \                                 In section .text, align 2, keep-with-next
    128          char	*StrRFMMode		( int nRFMMode )
    129          //========================================================================
    130          {
   \                     StrRFMMode: (+1)
   \        0x0   0x0001             MOVS     R1,R0
    131          	switch( nRFMMode )
   \        0x2   0x2900             CMP      R1,#+0
   \        0x4   0xD006             BEQ.N    ??StrRFMMode_0
   \        0x6   0x2902             CMP      R1,#+2
   \        0x8   0xD00A             BEQ.N    ??StrRFMMode_1
   \        0xA   0xD306             BCC.N    ??StrRFMMode_2
   \        0xC   0x2904             CMP      R1,#+4
   \        0xE   0xD00D             BEQ.N    ??StrRFMMode_3
   \       0x10   0xD309             BCC.N    ??StrRFMMode_4
   \       0x12   0xE00E             B.N      ??StrRFMMode_5
    132          	{
    133          	case RFMModeNormal:		return "[Normal]";
   \                     ??StrRFMMode_0: (+1)
   \       0x14   0x.... 0x....      LDR.W    R0,??DataTable40_1
   \       0x18   0xE00D             B.N      ??StrRFMMode_6
    134          	case RFMModeTx:			return "[Tx]";
   \                     ??StrRFMMode_2: (+1)
   \       0x1A   0x.... 0x....      LDR.W    R0,??DataTable41
   \       0x1E   0xE00A             B.N      ??StrRFMMode_6
    135          	case RFMModeRx:			return "[Rx]";
   \                     ??StrRFMMode_1: (+1)
   \       0x20   0x.... 0x....      LDR.W    R0,??DataTable41_1
   \       0x24   0xE007             B.N      ??StrRFMMode_6
    136          	case RFMModeOcc:		return "[Occ]";
   \                     ??StrRFMMode_4: (+1)
   \       0x26   0x.... 0x....      LDR.W    R0,??DataTable41_2
   \       0x2A   0xE004             B.N      ??StrRFMMode_6
    137          	case RFMModeUpgr:		return "[Upgr]";
   \                     ??StrRFMMode_3: (+1)
   \       0x2C   0x.... 0x....      LDR.W    R0,??DataTable41_3
   \       0x30   0xE001             B.N      ??StrRFMMode_6
    138          	default:				return "[N/A]";
   \                     ??StrRFMMode_5: (+1)
   \       0x32   0x.... 0x....      LDR.W    R0,??DataTable46
   \                     ??StrRFMMode_6: (+1)
   \       0x36   0x4770             BX       LR
    139          	}
    140          }
    141          
    142          //========================================================================

   \                                 In section .text, align 2, keep-with-next
    143          int	GetRFTID( void )	//	송신기 ID
    144          //========================================================================
    145          {
    146          	//	송신기 ID 얻기.
    147          	//========================================================================
    148          	//	송신기 #1 / #2
    149          	//	ChTx_1			=	8,			//	* CH8 : 송신기#1 - (Car No : 11)
    150          	//	ChTx_2			=	9,			//	* CH9 : 송신기#2 - (Car No : 12)
    151          	if ( g_nCarNo == RFTCarNo1 ) return 1;			//	11
   \                     GetRFTID: (+1)
   \        0x0   0x.... 0x....      LDR.W    R0,??DataTable42_4
   \        0x4   0x6801             LDR      R1,[R0, #+0]
   \        0x6   0x290B             CMP      R1,#+11
   \        0x8   0xD101             BNE.N    ??GetRFTID_0
   \        0xA   0x2001             MOVS     R0,#+1
   \        0xC   0xE005             B.N      ??GetRFTID_1
    152          	else if ( g_nCarNo == RFTCarNo2 ) return 2;		//	12
   \                     ??GetRFTID_0: (+1)
   \        0xE   0x6800             LDR      R0,[R0, #+0]
   \       0x10   0x280C             CMP      R0,#+12
   \       0x12   0xD101             BNE.N    ??GetRFTID_2
   \       0x14   0x2002             MOVS     R0,#+2
   \       0x16   0xE000             B.N      ??GetRFTID_1
    153          	else return 0;
   \                     ??GetRFTID_2: (+1)
   \       0x18   0x2000             MOVS     R0,#+0
   \                     ??GetRFTID_1: (+1)
   \       0x1A   0x4770             BX       LR
    154          	//========================================================================
    155          }
    156          
    157          //========================================================================

   \                                 In section .text, align 2, keep-with-next
    158          int GetChRx( void )
    159          //========================================================================
    160          {
   \                     GetChRx: (+1)
   \        0x0   0xB580             PUSH     {R7,LR}
    161          	//	Get Self Rx Channel
    162          
    163          	//========================================================================
    164          #if defined(USE_CH_ISO_DEV)
    165          
    166          	if ( GetDevID() == DevRF900T )
   \        0x2   0x.... 0x....      BL       GetDevID
   \        0x6   0x2802             CMP      R0,#+2
   \        0x8   0xD10E             BNE.N    ??GetChRx_0
    167          	{
    168          		//========================================================================
    169          		//	송신기 #1 / #2
    170          		//	ChTx_1			=	8,				//	* CH8 : 송신기#1 - (Car No : 11)
    171          		//	ChTx_2			=	ChTx_1+ChGap,	//	* CH9 : 송신기#2 - (Car No : 12)
    172          		return ChTx_1 + ( ( g_nCarNo + 1) % 2 )*ChGap;	// 현재 호차 채널
   \        0xA   0x.... 0x....      LDR.W    R0,??DataTable42_4
   \        0xE   0x6801             LDR      R1,[R0, #+0]
   \       0x10   0x1C49             ADDS     R1,R1,#+1
   \       0x12   0x2202             MOVS     R2,#+2
   \       0x14   0x.... 0x....      LDR.W    R0,??DataTable42_5
   \       0x18   0x6800             LDR      R0,[R0, #+0]
   \       0x1A   0xFB91 0xF3F2      SDIV     R3,R1,R2
   \       0x1E   0xFB02 0x1113      MLS      R1,R2,R3,R1
   \       0x22   0xEB10 0x0081      ADDS     R0,R0,R1, LSL #+2
   \       0x26   0xE01F             B.N      ??GetChRx_1
    173          		//========================================================================
    174          	}
    175          	else if ( GetDevID() == DevRF900M )
   \                     ??GetChRx_0: (+1)
   \       0x28   0x.... 0x....      BL       GetDevID
   \       0x2C   0x2801             CMP      R0,#+1
   \       0x2E   0xD11B             BNE.N    ??GetChRx_2
    176          	{
    177          		if( g_nRFMode == RFMode2 )//#if defined(USE_COMM_MODE_CH_GRP)
   \       0x30   0x.... 0x....      LDR.W    R0,??DataTable42_6
   \       0x34   0x6800             LDR      R0,[R0, #+0]
   \       0x36   0x2802             CMP      R0,#+2
   \       0x38   0xD10C             BNE.N    ??GetChRx_3
    178          		{
    179          			//	그룹주파수 모드. - [ 1, 2 ] [ 3, 4 ] ...
    180          			return ChTS1_1 + (( g_nCarNo - 1 )/2)*ChGap;	// 현재 호차 채널
   \       0x3A   0x.... 0x....      LDR.W    R0,??DataTable42_7
   \       0x3E   0x6800             LDR      R0,[R0, #+0]
   \       0x40   0x.... 0x....      LDR.W    R1,??DataTable42_4
   \       0x44   0x6809             LDR      R1,[R1, #+0]
   \       0x46   0x1E49             SUBS     R1,R1,#+1
   \       0x48   0x2202             MOVS     R2,#+2
   \       0x4A   0xFB91 0xF1F2      SDIV     R1,R1,R2
   \       0x4E   0xEB10 0x0081      ADDS     R0,R0,R1, LSL #+2
   \       0x52   0xE009             B.N      ??GetChRx_1
    181          		}
    182          		else	//	#else
    183          		{
    184          			//========================================================================
    185          			//	수신기.
    186          			//	ChTS1_1			=	11,			//	* CH11 : 1편성 ( 1호차 )
    187          			//	ChTS1_2			=	12,			//	* CH12 : 1편성 ( 2호차 )
    188          			//
    189          			//		...
    190          			//
    191          			//	ChTS1_10		=	20,			//	* CH20 : 1편성 ( 10호차 )
    192          			return ChTS1_1 + ( g_nCarNo - 1 )*ChGap;	// 현재 호차 채널
   \                     ??GetChRx_3: (+1)
   \       0x54   0x.... 0x....      LDR.W    R0,??DataTable42_7
   \       0x58   0x6800             LDR      R0,[R0, #+0]
   \       0x5A   0x.... 0x....      LDR.W    R1,??DataTable42_4
   \       0x5E   0x6809             LDR      R1,[R1, #+0]
   \       0x60   0x1E49             SUBS     R1,R1,#+1
   \       0x62   0xEB10 0x0081      ADDS     R0,R0,R1, LSL #+2
   \       0x66   0xE7FF             B.N      ??GetChRx_1
    193          			//========================================================================
    194          		}	//	#endif
    195          	}
    196          
    197          #else
    198          	//========================================================================
    199          	//	CH1 : 1, 3, 5
    200          	//	CH2 :  2, 4, 6
    201          	return ChTS1_1 + g_idxTrainSet * 2 + ( ( g_nCarNo + 1 ) % 2 );	// 현재 호차 채널
    202          #endif
    203          	//========================================================================
    204          }
                 ^
Warning[Pe940]: missing return statement at end of non-void function "GetChRx"
   \                     ??GetChRx_2: (+1)
   \                     ??GetChRx_1: (+1)
   \       0x68   0xBD02             POP      {R1,PC}
    205          
    206          //========================================================================

   \                                 In section .text, align 2, keep-with-next
    207          int		GetChOtherRFT	( void )			//	타 송신기 채널.
    208          //========================================================================
    209          {
    210          	//========================================================================
    211          	//	송신기 #1 / #2
    212          	//	ChTx_1			=	8,				//	* CH8 : 송신기#1 - (Car No : 11)
    213          	//	ChTx_2			=	9,				//	* CH9 : 송신기#2 - (Car No : 12)
    214          //	return ChTx_1 + ( g_nCarNo % 2 );		// Self 송신기 채널
    215          	return ChTx_1 + ( ( g_nCarNo ) % 2 )*ChGap;	// Other 송신기 채널
   \                     GetChOtherRFT: (+1)
   \        0x0   0x2102             MOVS     R1,#+2
   \        0x2   0x.... 0x....      LDR.W    R2,??DataTable42_4
   \        0x6   0x.... 0x....      LDR.W    R0,??DataTable42_5
   \        0xA   0x6800             LDR      R0,[R0, #+0]
   \        0xC   0x6813             LDR      R3,[R2, #+0]
   \        0xE   0x6812             LDR      R2,[R2, #+0]
   \       0x10   0xFB92 0xF2F1      SDIV     R2,R2,R1
   \       0x14   0xFB01 0x3112      MLS      R1,R1,R2,R3
   \       0x18   0xEB10 0x0081      ADDS     R0,R0,R1, LSL #+2
   \       0x1C   0x4770             BX       LR
    216          	//========================================================================
    217          }
    218          
    219          
    220          //========================================================================

   \                                 In section .text, align 2, keep-with-next
    221          int		IsNearRFT	( void )			//	가까운 송신기 존재 유무 확인.
    222          //========================================================================
    223          {
   \                     IsNearRFT: (+1)
   \        0x0   0xB470             PUSH     {R4-R6}
    224          	int nCh = ChTS1_1;		//	Default
   \        0x2   0x.... 0x....      LDR.W    R0,??DataTable42_7
   \        0x6   0x6800             LDR      R0,[R0, #+0]
    225          
    226          	//	가장가까운 호차 검색.
    227          	int nMaxRSSI = 0;
   \        0x8   0x2100             MOVS     R1,#+0
    228          	for ( int idx = 1; idx <= 10; idx++ )
   \        0xA   0x2201             MOVS     R2,#+1
   \                     ??IsNearRFT_0: (+1)
   \        0xC   0x2A0B             CMP      R2,#+11
   \        0xE   0xDA17             BGE.N    ??IsNearRFT_1
    229          	{
    230          		//	Car #1 ~ #10
    231          		if ( g_devStat[idx].nRSSI > nMaxRSSI )
   \       0x10   0x2325             MOVS     R3,#+37
   \       0x12   0x.... 0x....      LDR.W    R4,??DataTable48
   \       0x16   0xFB03 0xF502      MUL      R5,R3,R2
   \       0x1A   0xEB04 0x0605      ADD      R6,R4,R5
   \       0x1E   0xF8D6 0x501D      LDR      R5,[R6, #+29]
   \       0x22   0x42A9             CMP      R1,R5
   \       0x24   0xDA0A             BGE.N    ??IsNearRFT_2
    232          		{
    233          			nCh = g_devStat[idx].stat.nChRx;		//	채널 설정.
   \       0x26   0xFB03 0xF502      MUL      R5,R3,R2
   \       0x2A   0x4425             ADD      R5,R4,R5
   \       0x2C   0x7AAD             LDRB     R5,[R5, #+10]
   \       0x2E   0x0028             MOVS     R0,R5
    234          			nMaxRSSI = g_devStat[idx].nRSSI;
   \       0x30   0xFB03 0xF302      MUL      R3,R3,R2
   \       0x34   0x441C             ADD      R4,R4,R3
   \       0x36   0xF8D4 0x301D      LDR      R3,[R4, #+29]
   \       0x3A   0x0019             MOVS     R1,R3
    235          		}
    236          	}
   \                     ??IsNearRFT_2: (+1)
   \       0x3C   0x1C52             ADDS     R2,R2,#+1
   \       0x3E   0xE7E5             B.N      ??IsNearRFT_0
    237          
    238          	return nCh;
   \                     ??IsNearRFT_1: (+1)
   \       0x40   0xBC70             POP      {R4-R6}
   \       0x42   0x4770             BX       LR
    239          }
    240          
    241          
    242          //========================================================================

   \                                 In section .text, align 2, keep-with-next
    243          int		GetChNearRFT	( int nMinRSSI )			//	가장 가까운 송신기 채널.
    244          //========================================================================
    245          {
   \                     GetChNearRFT: (+1)
   \        0x0   0xB4F0             PUSH     {R4-R7}
   \        0x2   0x0001             MOVS     R1,R0
    246          	int nCh = 0;		//	Default
   \        0x4   0x2000             MOVS     R0,#+0
    247          
    248          	//	가장가까운 송신기 검색.
    249          	int nMaxRSSI = 0;
   \        0x6   0x2200             MOVS     R2,#+0
    250          	for ( int idx = 11; idx <= 12; idx++ )			//	송신기 채널 검색.
   \        0x8   0x230B             MOVS     R3,#+11
   \                     ??GetChNearRFT_0: (+1)
   \        0xA   0x2B0D             CMP      R3,#+13
   \        0xC   0xDA17             BGE.N    ??GetChNearRFT_1
    251          	{
    252          		//	Car #1 ~ #10
    253          		if ( g_devStat[idx].nRSSI > nMaxRSSI )
   \        0xE   0x2425             MOVS     R4,#+37
   \       0x10   0x.... 0x....      LDR.W    R5,??DataTable48
   \       0x14   0xFB04 0xF603      MUL      R6,R4,R3
   \       0x18   0xEB05 0x0706      ADD      R7,R5,R6
   \       0x1C   0xF8D7 0x601D      LDR      R6,[R7, #+29]
   \       0x20   0x42B2             CMP      R2,R6
   \       0x22   0xDA0A             BGE.N    ??GetChNearRFT_2
    254          		{
    255          			nCh = g_devStat[idx].stat.nChRx;		//	채널 설정.
   \       0x24   0xFB04 0xF603      MUL      R6,R4,R3
   \       0x28   0x442E             ADD      R6,R5,R6
   \       0x2A   0x7AB6             LDRB     R6,[R6, #+10]
   \       0x2C   0x0030             MOVS     R0,R6
    256          			nMaxRSSI = g_devStat[idx].nRSSI;
   \       0x2E   0xFB04 0xF403      MUL      R4,R4,R3
   \       0x32   0x4425             ADD      R5,R5,R4
   \       0x34   0xF8D5 0x401D      LDR      R4,[R5, #+29]
   \       0x38   0x0022             MOVS     R2,R4
    257          		}
    258          	}
   \                     ??GetChNearRFT_2: (+1)
   \       0x3A   0x1C5B             ADDS     R3,R3,#+1
   \       0x3C   0xE7E5             B.N      ??GetChNearRFT_0
    259          
    260          	if ( nMinRSSI > nMaxRSSI )
   \                     ??GetChNearRFT_1: (+1)
   \       0x3E   0x428A             CMP      R2,R1
   \       0x40   0xDA01             BGE.N    ??GetChNearRFT_3
    261          	{
    262          		//	RSSI값이 한계 이상 낮은경우 선택 X
    263          		nCh = 0;
   \       0x42   0x2300             MOVS     R3,#+0
   \       0x44   0x0018             MOVS     R0,R3
    264          	}
    265          
    266          	return nCh;
   \                     ??GetChNearRFT_3: (+1)
   \       0x46   0xBCF0             POP      {R4-R7}
   \       0x48   0x4770             BX       LR
    267          }
    268          
    269          //========================================================================

   \                                 In section .text, align 2, keep-with-next
    270          int		GetChNearRFM	( void )			//	가장 가까운 수신기 채널.
    271          //========================================================================
    272          {
   \                     GetChNearRFM: (+1)
   \        0x0   0xB470             PUSH     {R4-R6}
    273          	int nCh = ChTS1_1;		//	Default
   \        0x2   0x.... 0x....      LDR.W    R0,??DataTable42_7
   \        0x6   0x6800             LDR      R0,[R0, #+0]
    274          
    275          	//	가장가까운 호차 검색.
    276          	int nMaxRSSI = 0;
   \        0x8   0x2100             MOVS     R1,#+0
    277          	for ( int idx = 1; idx <= 10; idx++ )
   \        0xA   0x2201             MOVS     R2,#+1
   \                     ??GetChNearRFM_0: (+1)
   \        0xC   0x2A0B             CMP      R2,#+11
   \        0xE   0xDA17             BGE.N    ??GetChNearRFM_1
    278          	{
    279          		//	Car #1 ~ #10
    280          		if ( g_devStat[idx].nRSSI > nMaxRSSI )
   \       0x10   0x2325             MOVS     R3,#+37
   \       0x12   0x.... 0x....      LDR.W    R4,??DataTable48
   \       0x16   0xFB03 0xF502      MUL      R5,R3,R2
   \       0x1A   0xEB04 0x0605      ADD      R6,R4,R5
   \       0x1E   0xF8D6 0x501D      LDR      R5,[R6, #+29]
   \       0x22   0x42A9             CMP      R1,R5
   \       0x24   0xDA0A             BGE.N    ??GetChNearRFM_2
    281          		{
    282          			nCh = g_devStat[idx].stat.nChRx;		//	채널 설정.
   \       0x26   0xFB03 0xF502      MUL      R5,R3,R2
   \       0x2A   0x4425             ADD      R5,R4,R5
   \       0x2C   0x7AAD             LDRB     R5,[R5, #+10]
   \       0x2E   0x0028             MOVS     R0,R5
    283          			nMaxRSSI = g_devStat[idx].nRSSI;
   \       0x30   0xFB03 0xF302      MUL      R3,R3,R2
   \       0x34   0x441C             ADD      R4,R4,R3
   \       0x36   0xF8D4 0x301D      LDR      R3,[R4, #+29]
   \       0x3A   0x0019             MOVS     R1,R3
    284          		}
    285          	}
   \                     ??GetChNearRFM_2: (+1)
   \       0x3C   0x1C52             ADDS     R2,R2,#+1
   \       0x3E   0xE7E5             B.N      ??GetChNearRFM_0
    286          
    287          	return nCh;
   \                     ??GetChNearRFM_1: (+1)
   \       0x40   0xBC70             POP      {R4-R6}
   \       0x42   0x4770             BX       LR
    288          }
    289          
    290          //========================================================================
    291          //	방송채널 : 송신기에서 수신기로 송신할 방송채널 설정.

   \                                 In section .data, align 4
    292          int		g_nChPA	=	_ChTS1_1;		//	Default
   \                     g_nChPA:
   \        0x0   0x0000'0015        DC32 21
    293          
    294          //========================================================================

   \                                 In section .text, align 2, keep-with-next
    295          void	SetChPA( int nCh )
    296          //========================================================================
    297          {
    298          	//	방송채널 설정.
    299          	g_nChPA	= nCh;
   \                     SetChPA: (+1)
   \        0x0   0x.... 0x....      LDR.W    R1,??DataTable48_2
   \        0x4   0x6008             STR      R0,[R1, #+0]
    300          }
   \        0x6   0x4770             BX       LR
    301          
    302          //========================================================================

   \                                 In section .text, align 2, keep-with-next
    303          int		GetChPA( void )
    304          //========================================================================
    305          {
    306          	//	방송채널 설정.
    307          	return g_nChPA;
   \                     GetChPA: (+1)
   \        0x0   0x.... 0x....      LDR.W    R0,??DataTable48_2
   \        0x4   0x6800             LDR      R0,[R0, #+0]
   \        0x6   0x4770             BX       LR
    308          }
    309          
    310          //========================================================================

   \                                 In section .text, align 2, keep-with-next
    311          int		GetCh2Car( int nCh )	//	채널 -> 호차정보 변환.
    312          //========================================================================
    313          {
   \                     GetCh2Car: (+1)
   \        0x0   0x0001             MOVS     R1,R0
    314          	//	채널 -> 호차정보.
    315          	int nCar;
    316          	if ( nCh == ChTx_1 )		nCar = RFTCarNo1;	//	송신기#1
   \        0x2   0x.... 0x....      LDR.W    R0,??DataTable42_5
   \        0x6   0x6800             LDR      R0,[R0, #+0]
   \        0x8   0x4281             CMP      R1,R0
   \        0xA   0xD101             BNE.N    ??GetCh2Car_0
   \        0xC   0x200B             MOVS     R0,#+11
   \        0xE   0xE00E             B.N      ??GetCh2Car_1
    317          	else if ( nCh == ChTx_2 )	nCar = RFTCarNo2;	//	송신기#2
   \                     ??GetCh2Car_0: (+1)
   \       0x10   0x.... 0x....      LDR.W    R0,??DataTable45_1
   \       0x14   0x6800             LDR      R0,[R0, #+0]
   \       0x16   0x4281             CMP      R1,R0
   \       0x18   0xD101             BNE.N    ??GetCh2Car_2
   \       0x1A   0x200C             MOVS     R0,#+12
   \       0x1C   0xE007             B.N      ??GetCh2Car_1
    318          	else
    319          	{
    320          		//	ChTS1_1 - 21	:	1호차.
    321          		//	1 ~ 10호차.
    322          		nCar = ( nCh - ChTS1_1 ) / ChGap + 1;
   \                     ??GetCh2Car_2: (+1)
   \       0x1E   0x.... 0x....      LDR.W    R0,??DataTable42_7
   \       0x22   0x6800             LDR      R0,[R0, #+0]
   \       0x24   0x1A08             SUBS     R0,R1,R0
   \       0x26   0x2204             MOVS     R2,#+4
   \       0x28   0xFB90 0xF0F2      SDIV     R0,R0,R2
   \       0x2C   0x1C40             ADDS     R0,R0,#+1
    323          	}
    324          
    325          	return nCar;
   \                     ??GetCh2Car_1: (+1)
   \       0x2E   0x4770             BX       LR
    326          }
    327          
    328          
    329          

   \                                 In section .bss, align 4
    330          int		g_nChRFT	=	0;		//	Default
   \                     g_nChRFT:
   \        0x0                      DS8 4
    331          
    332          //========================================================================

   \                                 In section .text, align 2, keep-with-next
    333          void	SetChPARFT( int nCh )	//	가까운 송신기 채널(방송/통화용) 설정.
    334          //========================================================================
    335          {
    336          	//	방송채널 설정.
    337          	g_nChRFT	= nCh;
   \                     SetChPARFT: (+1)
   \        0x0   0x.... 0x....      LDR.W    R1,??DataTable49
   \        0x4   0x6008             STR      R0,[R1, #+0]
    338          }
   \        0x6   0x4770             BX       LR
    339          
    340          //========================================================================

   \                                 In section .text, align 2, keep-with-next
    341          int		GetChPARFT( void )		//	가까운 송신기 채널(방송/통화용) 설정.
    342          //========================================================================
    343          {
    344          	//	방송채널 설정.
    345          	return g_nChRFT;
   \                     GetChPARFT: (+1)
   \        0x0   0x.... 0x....      LDR.W    R0,??DataTable49
   \        0x4   0x6800             LDR      R0,[R0, #+0]
   \        0x6   0x4770             BX       LR
    346          }
    347          
    348          #if defined(USE_ROUTE_REQ)
    349          

   \                                 In section .bss, align 4
    350          int		g_nChRFMUp		=	0;		//	Default
   \                     g_nChRFMUp:
   \        0x0                      DS8 4

   \                                 In section .bss, align 4
    351          int		g_nChRFMDown	=	0;		//	Default
   \                     g_nChRFMDown:
   \        0x0                      DS8 4
    352          

   \                                 In section .bss, align 4
    353          int		g_nStampRouteRsp		=	0;	//	Route Rsp TimeStamp
   \                     g_nStampRouteRsp:
   \        0x0                      DS8 4

   \                                 In section .bss, align 4
    354          int		g_nIdxRouteFindNext		=	0;	//	Next호차 Find Index / Route Rsp 수신시 Reset
   \                     g_nIdxRouteFindNext:
   \        0x0                      DS8 4
    355          
    356          //========================================================================

   \                                 In section .text, align 2, keep-with-next
    357          void	SetChRFMUp( int nCh )	//	가까운 수신기 채널 ( Up )
    358          //========================================================================
    359          {
    360          	//	방송채널 설정.
    361          	g_nChRFMUp	= nCh;
   \                     SetChRFMUp: (+1)
   \        0x0   0x.... 0x....      LDR.W    R1,??DataTable49_1
   \        0x4   0x6008             STR      R0,[R1, #+0]
    362          }
   \        0x6   0x4770             BX       LR
    363          
    364          //========================================================================

   \                                 In section .text, align 2, keep-with-next
    365          int		GetChRFMUp( void )		//	가까운 수신기 채널 ( Up )
    366          //========================================================================
    367          {
    368          	//	방송채널 설정.
    369          	return g_nChRFMUp;
   \                     GetChRFMUp: (+1)
   \        0x0   0x.... 0x....      LDR.W    R0,??DataTable49_1
   \        0x4   0x6800             LDR      R0,[R0, #+0]
   \        0x6   0x4770             BX       LR
    370          }
    371          
    372          //========================================================================

   \                                 In section .text, align 2, keep-with-next
    373          void	SetChRFMDown( int nCh )	//	가까운 수신기 채널 ( Down )
    374          //========================================================================
    375          {
    376          	//	방송채널 설정.
    377          	g_nChRFMDown	= nCh;
   \                     SetChRFMDown: (+1)
   \        0x0   0x.... 0x....      LDR.W    R1,??DataTable49_2
   \        0x4   0x6008             STR      R0,[R1, #+0]
    378          }
   \        0x6   0x4770             BX       LR
    379          
    380          //========================================================================

   \                                 In section .text, align 2, keep-with-next
    381          int		GetChRFMDown( void )	//	가까운 수신기 채널 ( Down )
    382          //========================================================================
    383          {
    384          	//	방송채널 설정.
    385          	return g_nChRFMDown;
   \                     GetChRFMDown: (+1)
   \        0x0   0x.... 0x....      LDR.W    R0,??DataTable49_2
   \        0x4   0x6800             LDR      R0,[R0, #+0]
   \        0x6   0x4770             BX       LR
    386          }
    387          
    388          
    389          #endif
    390          
    391          //========================================================================
    392          
    393          #include "eeprom.h"    //  EEPROM
    394          
    395          //========================================================================

   \                                 In section .text, align 2, keep-with-next
    396          int		LoadTrainSetIdx	( void )
    397          //========================================================================
    398          {
   \                     LoadTrainSetIdx: (+1)
   \        0x0   0xB51C             PUSH     {R2-R4,LR}
    399              uint8_t     idxTrainSet = 0;
   \        0x2   0x2000             MOVS     R0,#+0
   \        0x4   0xF88D 0x0004      STRB     R0,[SP, #+4]
    400          
    401              if ( HAL_OK != HAL_I2C_IsDeviceReady( &hi2c1, (uint16_t)( 0x50 << 1 ), 2, 2 ) )
   \        0x8   0x.... 0x....      LDR.W    R4,??DataTable46_1
   \        0xC   0x2302             MOVS     R3,#+2
   \        0xE   0x2202             MOVS     R2,#+2
   \       0x10   0x21A0             MOVS     R1,#+160
   \       0x12   0x0020             MOVS     R0,R4
   \       0x14   0x.... 0x....      BL       HAL_I2C_IsDeviceReady
   \       0x18   0x2800             CMP      R0,#+0
   \       0x1A   0xD00A             BEQ.N    ??LoadTrainSetIdx_0
    402              {
    403                  printf( "%s(%d) - EEPROM Error\n", __func__, __LINE__ );
                         ^
Warning[Pe223]: function "printf" declared implicitly
   \       0x1C   0xF240 0x1293      MOVW     R2,#+403
   \       0x20   0x.... 0x....      LDR.W    R1,??DataTable46_2
   \       0x24   0x.... 0x....      LDR.W    R0,??DataTable46_3
   \       0x28   0x.... 0x....      BL       printf
    404          
    405                  return -1;
   \       0x2C   0xF05F 0x30FF      MOVS     R0,#+4294967295
   \       0x30   0xE02F             B.N      ??LoadTrainSetIdx_1
    406              }
    407          
    408          //    M24_HAL_ReadBytes( &hi2c1, 0xA0, 0x10, (uint8_t *)&idxTrainSet, 1 );
    409              M24_HAL_ReadBytes( &hi2c1, 0xA0, AddrEEPTrainSet, (uint8_t *)&idxTrainSet, 1 );
   \                     ??LoadTrainSetIdx_0: (+1)
   \       0x32   0x2001             MOVS     R0,#+1
   \       0x34   0x9000             STR      R0,[SP, #+0]
   \       0x36   0xAB01             ADD      R3,SP,#+4
   \       0x38   0x2210             MOVS     R2,#+16
   \       0x3A   0x21A0             MOVS     R1,#+160
   \       0x3C   0x0020             MOVS     R0,R4
   \       0x3E   0x.... 0x....      BL       M24_HAL_ReadBytes
    410          
    411              if ( GetDbg() > 0 )
                          ^
Warning[Pe223]: function "GetDbg" declared implicitly
   \       0x42   0x.... 0x....      BL       GetDbg
   \       0x46   0x2801             CMP      R0,#+1
   \       0x48   0xDB09             BLT.N    ??LoadTrainSetIdx_2
    412              	printf( "%s(%d) - %d\n", __func__, __LINE__, idxTrainSet );
                     	^
Warning[Pe223]: function "printf" declared implicitly
   \       0x4A   0xF89D 0x3004      LDRB     R3,[SP, #+4]
   \       0x4E   0xF44F 0x72CE      MOV      R2,#+412
   \       0x52   0x.... 0x....      LDR.W    R1,??DataTable46_2
   \       0x56   0x.... 0x....      LDR.W    R0,??DataTable46_4
   \       0x5A   0x.... 0x....      BL       printf
    413          
    414              //========================================================================
    415          #if defined(USE_ODD_TS_CH_SHIFT)
    416              if( (idxTrainSet%2) == 1 )
   \                     ??LoadTrainSetIdx_2: (+1)
   \       0x5E   0xF89D 0x0004      LDRB     R0,[SP, #+4]
   \       0x62   0x2102             MOVS     R1,#+2
   \       0x64   0xFB90 0xF2F1      SDIV     R2,R0,R1
   \       0x68   0xFB01 0x0012      MLS      R0,R1,R2,R0
   \       0x6C   0x2801             CMP      R0,#+1
   \       0x6E   0xD10E             BNE.N    ??LoadTrainSetIdx_3
    417              {
    418              	//	홀수 편성 채널 ( Shift ChGap/2 )
    419              	ChTx_1		=	ChTx_1 + (ChGap/2);
   \       0x70   0x.... 0x....      LDR.W    R0,??DataTable42_5
   \       0x74   0x6801             LDR      R1,[R0, #+0]
   \       0x76   0x1C89             ADDS     R1,R1,#+2
   \       0x78   0x6001             STR      R1,[R0, #+0]
    420              	ChTx_2		=	ChTx_2 + (ChGap/2);
   \       0x7A   0x.... 0x....      LDR.W    R0,??DataTable45_1
   \       0x7E   0x6801             LDR      R1,[R0, #+0]
   \       0x80   0x1C89             ADDS     R1,R1,#+2
   \       0x82   0x6001             STR      R1,[R0, #+0]
    421                  ChTS1_1		= 	ChTS1_1 + (ChGap/2);
   \       0x84   0x.... 0x....      LDR.W    R0,??DataTable42_7
   \       0x88   0x6801             LDR      R1,[R0, #+0]
   \       0x8A   0x1C89             ADDS     R1,R1,#+2
   \       0x8C   0x6001             STR      R1,[R0, #+0]
    422              }
    423          #endif
    424              //========================================================================
    425          
    426          
    427              return idxTrainSet;
   \                     ??LoadTrainSetIdx_3: (+1)
   \       0x8E   0xF89D 0x0004      LDRB     R0,[SP, #+4]
   \                     ??LoadTrainSetIdx_1: (+1)
   \       0x92   0xBD16             POP      {R1,R2,R4,PC}
    428          }
    429          
    430          
    431          //========================================================================

   \                                 In section .text, align 2, keep-with-next
    432          int		GetTrainSetIdx		( void )
    433          //========================================================================
    434          {
   \                     GetTrainSetIdx: (+1)
   \        0x0   0xB510             PUSH     {R4,LR}
    435          	static int s_bOnce 			=	0;
    436          
    437          	if ( s_bOnce == 0 )
   \        0x2   0x.... 0x....      LDR.W    R4,??DataTable47
   \        0x6   0x6820             LDR      R0,[R4, #+0]
   \        0x8   0x2800             CMP      R0,#+0
   \        0xA   0xD106             BNE.N    ??GetTrainSetIdx_0
    438          	{
    439          		//	초기로딩시 I2C에서 Load
    440          		g_idxTrainSet = LoadTrainSetIdx();
   \        0xC   0x.... 0x....      BL       LoadTrainSetIdx
   \       0x10   0x.... 0x....      LDR.W    R1,??DataTable48_3
   \       0x14   0x6008             STR      R0,[R1, #+0]
    441          		s_bOnce = 1;
   \       0x16   0x2001             MOVS     R0,#+1
   \       0x18   0x6020             STR      R0,[R4, #+0]
    442          	}
    443          
    444          	return g_idxTrainSet;
   \                     ??GetTrainSetIdx_0: (+1)
   \       0x1A   0x.... 0x....      LDR.W    R0,??DataTable48_3
   \       0x1E   0x6800             LDR      R0,[R0, #+0]
   \       0x20   0xBD10             POP      {R4,PC}
    445          }

   \                                 In section .bss, align 4
   \                     `GetTrainSetIdx::s_bOnce`:
   \        0x0                      DS8 4
    446          
    447          
    448          //========================================================================

   \                                 In section .text, align 2, keep-with-next
    449          void	SetTrainSetIdx	( int idxTrainSet )
    450          //========================================================================
    451          {
   \                     SetTrainSetIdx: (+1)
   \        0x0   0xB511             PUSH     {R0,R4,LR}
   \        0x2   0xB081             SUB      SP,SP,#+4
    452          	g_idxTrainSet = idxTrainSet;
   \        0x4   0x9801             LDR      R0,[SP, #+4]
   \        0x6   0x.... 0x....      LDR.W    R1,??DataTable48_3
   \        0xA   0x6008             STR      R0,[R1, #+0]
    453          
    454              if ( HAL_OK != HAL_I2C_IsDeviceReady( &hi2c1, (uint16_t)( 0x50 << 1 ), 2, 2 ) )
   \        0xC   0x.... 0x....      LDR.W    R4,??DataTable46_1
   \       0x10   0x2302             MOVS     R3,#+2
   \       0x12   0x2202             MOVS     R2,#+2
   \       0x14   0x21A0             MOVS     R1,#+160
   \       0x16   0x0020             MOVS     R0,R4
   \       0x18   0x.... 0x....      BL       HAL_I2C_IsDeviceReady
   \       0x1C   0x2800             CMP      R0,#+0
   \       0x1E   0xD008             BEQ.N    ??SetTrainSetIdx_0
    455              {
    456                  printf( "%s(%d) - EEPROM Error\n", __func__, __LINE__ );
                         ^
Warning[Pe223]: function "printf" declared implicitly
   \       0x20   0xF44F 0x72E4      MOV      R2,#+456
   \       0x24   0x.... 0x....      LDR.W    R1,??DataTable48_4
   \       0x28   0x.... 0x....      LDR.W    R0,??DataTable46_3
   \       0x2C   0x.... 0x....      BL       printf
    457          
    458                  return ;
   \       0x30   0xE014             B.N      ??SetTrainSetIdx_1
    459              }
    460          
    461              if ( GetDbg() > 0 )
                          ^
Warning[Pe223]: function "GetDbg" declared implicitly
   \                     ??SetTrainSetIdx_0: (+1)
   \       0x32   0x.... 0x....      BL       GetDbg
   \       0x36   0x2801             CMP      R0,#+1
   \       0x38   0xDB08             BLT.N    ??SetTrainSetIdx_2
    462              	printf( "%s(%d) - %d\n", __func__, __LINE__, idxTrainSet );
                     	^
Warning[Pe223]: function "printf" declared implicitly
   \       0x3A   0x9B01             LDR      R3,[SP, #+4]
   \       0x3C   0xF44F 0x72E7      MOV      R2,#+462
   \       0x40   0x.... 0x....      LDR.W    R1,??DataTable48_4
   \       0x44   0x.... 0x....      LDR.W    R0,??DataTable46_4
   \       0x48   0x.... 0x....      BL       printf
    463          //    M24_HAL_WriteBytes( &hi2c1, 0xA0, 0x10, (uint8_t *)&idxTrainSet, 1 );
    464              M24_HAL_WriteBytes( &hi2c1, 0xA0, AddrEEPTrainSet, (uint8_t *)&idxTrainSet, 1 );
   \                     ??SetTrainSetIdx_2: (+1)
   \       0x4C   0x2001             MOVS     R0,#+1
   \       0x4E   0x9000             STR      R0,[SP, #+0]
   \       0x50   0xAB01             ADD      R3,SP,#+4
   \       0x52   0x2210             MOVS     R2,#+16
   \       0x54   0x21A0             MOVS     R1,#+160
   \       0x56   0x0020             MOVS     R0,R4
   \       0x58   0x.... 0x....      BL       M24_HAL_WriteBytes
    465          }
   \                     ??SetTrainSetIdx_1: (+1)
   \       0x5C   0xBD13             POP      {R0,R1,R4,PC}
    466          
    467          #if defined(USE_RF_COMM_MODE)
    468          
    469          //========================================================================

   \                                 In section .text, align 2, keep-with-next
    470          int		GetRFMode	( void )
    471          //========================================================================
    472          {
   \                     GetRFMode: (+1)
   \        0x0   0xB51C             PUSH     {R2-R4,LR}
    473              uint8_t     nRFMode = 0;
   \        0x2   0x2000             MOVS     R0,#+0
   \        0x4   0xF88D 0x0004      STRB     R0,[SP, #+4]
    474          
    475              if ( HAL_OK != HAL_I2C_IsDeviceReady( &hi2c1, (uint16_t)( 0x50 << 1 ), 2, 2 ) )
   \        0x8   0x.... 0x....      LDR.W    R4,??DataTable46_1
   \        0xC   0x2302             MOVS     R3,#+2
   \        0xE   0x2202             MOVS     R2,#+2
   \       0x10   0x21A0             MOVS     R1,#+160
   \       0x12   0x0020             MOVS     R0,R4
   \       0x14   0x.... 0x....      BL       HAL_I2C_IsDeviceReady
   \       0x18   0x2800             CMP      R0,#+0
   \       0x1A   0xD00A             BEQ.N    ??GetRFMode_0
    476              {
    477                  printf( "%s(%d) - EEPROM Error\n", __func__, __LINE__ );
                         ^
Warning[Pe223]: function "printf" declared implicitly
   \       0x1C   0xF240 0x12DD      MOVW     R2,#+477
   \       0x20   0x.... 0x....      LDR.W    R1,??DataTable48_5
   \       0x24   0x.... 0x....      LDR.W    R0,??DataTable46_3
   \       0x28   0x.... 0x....      BL       printf
    478          
    479                  return -1;
   \       0x2C   0xF05F 0x30FF      MOVS     R0,#+4294967295
   \       0x30   0xE022             B.N      ??GetRFMode_1
    480              }
    481          
    482              M24_HAL_ReadBytes( &hi2c1, 0xA0, AddrEEPRFMode, (uint8_t *)&nRFMode, 1 );
   \                     ??GetRFMode_0: (+1)
   \       0x32   0x2001             MOVS     R0,#+1
   \       0x34   0x9000             STR      R0,[SP, #+0]
   \       0x36   0xAB01             ADD      R3,SP,#+4
   \       0x38   0x2230             MOVS     R2,#+48
   \       0x3A   0x21A0             MOVS     R1,#+160
   \       0x3C   0x0020             MOVS     R0,R4
   \       0x3E   0x.... 0x....      BL       M24_HAL_ReadBytes
    483          
    484              if ( nRFMode > RFModeMax || nRFMode < 1 ) nRFMode = RFModeDefault;	//	Default Hop Man
   \       0x42   0xF89D 0x0004      LDRB     R0,[SP, #+4]
   \       0x46   0x2803             CMP      R0,#+3
   \       0x48   0xDA03             BGE.N    ??GetRFMode_2
   \       0x4A   0xF89D 0x0004      LDRB     R0,[SP, #+4]
   \       0x4E   0x2800             CMP      R0,#+0
   \       0x50   0xD102             BNE.N    ??GetRFMode_3
   \                     ??GetRFMode_2: (+1)
   \       0x52   0x2001             MOVS     R0,#+1
   \       0x54   0xF88D 0x0004      STRB     R0,[SP, #+4]
    485          
    486              if ( GetDbg() > 0 )
                          ^
Warning[Pe223]: function "GetDbg" declared implicitly
   \                     ??GetRFMode_3: (+1)
   \       0x58   0x.... 0x....      BL       GetDbg
   \       0x5C   0x2801             CMP      R0,#+1
   \       0x5E   0xDB09             BLT.N    ??GetRFMode_4
    487              	printf( "%s(%d) - %d\n", __func__, __LINE__, nRFMode );
                     	^
Warning[Pe223]: function "printf" declared implicitly
   \       0x60   0xF89D 0x3004      LDRB     R3,[SP, #+4]
   \       0x64   0xF240 0x12E7      MOVW     R2,#+487
   \       0x68   0x.... 0x....      LDR.W    R1,??DataTable48_5
   \       0x6C   0x.... 0x....      LDR.W    R0,??DataTable46_4
   \       0x70   0x.... 0x....      BL       printf
    488          
    489              return nRFMode;
   \                     ??GetRFMode_4: (+1)
   \       0x74   0xF89D 0x0004      LDRB     R0,[SP, #+4]
   \                     ??GetRFMode_1: (+1)
   \       0x78   0xBD16             POP      {R1,R2,R4,PC}
    490          }
    491          
    492          //========================================================================

   \                                 In section .text, align 2, keep-with-next
    493          void	SetRFMode	( int nRFMode )
    494          //========================================================================
    495          {
   \                     SetRFMode: (+1)
   \        0x0   0xB511             PUSH     {R0,R4,LR}
   \        0x2   0xB081             SUB      SP,SP,#+4
    496              if ( HAL_OK != HAL_I2C_IsDeviceReady( &hi2c1, (uint16_t)( 0x50 << 1 ), 2, 2 ) )
   \        0x4   0x.... 0x....      LDR.W    R4,??DataTable46_1
   \        0x8   0x2302             MOVS     R3,#+2
   \        0xA   0x2202             MOVS     R2,#+2
   \        0xC   0x21A0             MOVS     R1,#+160
   \        0xE   0x0020             MOVS     R0,R4
   \       0x10   0x.... 0x....      BL       HAL_I2C_IsDeviceReady
   \       0x14   0x2800             CMP      R0,#+0
   \       0x16   0xD008             BEQ.N    ??SetRFMode_0
    497              {
    498                  printf( "%s(%d) - EEPROM Error\n", __func__, __LINE__ );
                         ^
Warning[Pe223]: function "printf" declared implicitly
   \       0x18   0xF44F 0x72F9      MOV      R2,#+498
   \       0x1C   0x.... 0x....      LDR.W    R1,??DataTable48_6
   \       0x20   0x.... 0x....      LDR.W    R0,??DataTable46_3
   \       0x24   0x.... 0x....      BL       printf
    499          
    500                  return ;
   \       0x28   0xE014             B.N      ??SetRFMode_1
    501              }
    502          
    503              if ( GetDbg() > 0 )
                          ^
Warning[Pe223]: function "GetDbg" declared implicitly
   \                     ??SetRFMode_0: (+1)
   \       0x2A   0x.... 0x....      BL       GetDbg
   \       0x2E   0x2801             CMP      R0,#+1
   \       0x30   0xDB08             BLT.N    ??SetRFMode_2
    504              	printf( "%s(%d) - %d\n", __func__, __LINE__, nRFMode );
                     	^
Warning[Pe223]: function "printf" declared implicitly
   \       0x32   0x9B01             LDR      R3,[SP, #+4]
   \       0x34   0xF44F 0x72FC      MOV      R2,#+504
   \       0x38   0x.... 0x....      LDR.W    R1,??DataTable48_6
   \       0x3C   0x.... 0x....      LDR.W    R0,??DataTable46_4
   \       0x40   0x.... 0x....      BL       printf
    505          
    506              M24_HAL_WriteBytes( &hi2c1, 0xA0, AddrEEPRFMode, (uint8_t *)&nRFMode, 1 );
   \                     ??SetRFMode_2: (+1)
   \       0x44   0x2001             MOVS     R0,#+1
   \       0x46   0x9000             STR      R0,[SP, #+0]
   \       0x48   0xAB01             ADD      R3,SP,#+4
   \       0x4A   0x2230             MOVS     R2,#+48
   \       0x4C   0x21A0             MOVS     R1,#+160
   \       0x4E   0x0020             MOVS     R0,R4
   \       0x50   0x.... 0x....      BL       M24_HAL_WriteBytes
    507          }
   \                     ??SetRFMode_1: (+1)
   \       0x54   0xBD13             POP      {R0,R1,R4,PC}
    508          
    509          #endif
    510          
    511          #if defined(USE_HOP_MANUAL)
    512          
    513          //========================================================================

   \                                 In section .text, align 2, keep-with-next
    514          int		GetManHop	( void )
    515          //========================================================================
    516          {
   \                     GetManHop: (+1)
   \        0x0   0xB51C             PUSH     {R2-R4,LR}
    517              uint8_t     nManHop = 0;
   \        0x2   0x2000             MOVS     R0,#+0
   \        0x4   0xF88D 0x0004      STRB     R0,[SP, #+4]
    518          
    519              if ( HAL_OK != HAL_I2C_IsDeviceReady( &hi2c1, (uint16_t)( 0x50 << 1 ), 2, 2 ) )
   \        0x8   0x.... 0x....      LDR.W    R4,??DataTable46_1
   \        0xC   0x2302             MOVS     R3,#+2
   \        0xE   0x2202             MOVS     R2,#+2
   \       0x10   0x21A0             MOVS     R1,#+160
   \       0x12   0x0020             MOVS     R0,R4
   \       0x14   0x.... 0x....      BL       HAL_I2C_IsDeviceReady
   \       0x18   0x2800             CMP      R0,#+0
   \       0x1A   0xD00A             BEQ.N    ??GetManHop_0
    520              {
    521                  printf( "%s(%d) - EEPROM Error\n", __func__, __LINE__ );
                         ^
Warning[Pe223]: function "printf" declared implicitly
   \       0x1C   0xF240 0x2209      MOVW     R2,#+521
   \       0x20   0x.... 0x....      LDR.W    R1,??DataTable49_4
   \       0x24   0x.... 0x....      LDR.W    R0,??DataTable46_3
   \       0x28   0x.... 0x....      BL       printf
    522          
    523                  return -1;
   \       0x2C   0xF05F 0x30FF      MOVS     R0,#+4294967295
   \       0x30   0xE01E             B.N      ??GetManHop_1
    524              }
    525          
    526          //    M24_HAL_ReadBytes( &hi2c1, 0xA0, 0x0D, (uint8_t *)&nManHop, 1 );
    527              M24_HAL_ReadBytes( &hi2c1, 0xA0, AddrEEPManHop, (uint8_t *)&nManHop, 1 );
   \                     ??GetManHop_0: (+1)
   \       0x32   0x2001             MOVS     R0,#+1
   \       0x34   0x9000             STR      R0,[SP, #+0]
   \       0x36   0xAB01             ADD      R3,SP,#+4
   \       0x38   0x220D             MOVS     R2,#+13
   \       0x3A   0x21A0             MOVS     R1,#+160
   \       0x3C   0x0020             MOVS     R0,R4
   \       0x3E   0x.... 0x....      BL       M24_HAL_ReadBytes
    528          
    529          //    if ( nManHop > 2 || nManHop < 0 ) nManHop = 0;
    530              if ( nManHop > 2 || nManHop < 0 ) nManHop = DEFAULT_HOP_MAN_VAL;	//	Default Hop Man
                                                 ^
Warning[Pe186]: pointless comparison of unsigned integer with zero
   \       0x42   0xF89D 0x0004      LDRB     R0,[SP, #+4]
   \       0x46   0x2803             CMP      R0,#+3
   \       0x48   0xDB02             BLT.N    ??GetManHop_2
   \       0x4A   0x2002             MOVS     R0,#+2
   \       0x4C   0xF88D 0x0004      STRB     R0,[SP, #+4]
    531          
    532              if ( GetDbg() > 0 )
                          ^
Warning[Pe223]: function "GetDbg" declared implicitly
   \                     ??GetManHop_2: (+1)
   \       0x50   0x.... 0x....      BL       GetDbg
   \       0x54   0x2801             CMP      R0,#+1
   \       0x56   0xDB09             BLT.N    ??GetManHop_3
    533              	printf( "%s(%d) - %d\n", __func__, __LINE__, nManHop );
                     	^
Warning[Pe223]: function "printf" declared implicitly
   \       0x58   0xF89D 0x3004      LDRB     R3,[SP, #+4]
   \       0x5C   0xF240 0x2215      MOVW     R2,#+533
   \       0x60   0x.... 0x....      LDR.W    R1,??DataTable49_4
   \       0x64   0x.... 0x....      LDR.W    R0,??DataTable46_4
   \       0x68   0x.... 0x....      BL       printf
    534          
    535              return nManHop;
   \                     ??GetManHop_3: (+1)
   \       0x6C   0xF89D 0x0004      LDRB     R0,[SP, #+4]
   \                     ??GetManHop_1: (+1)
   \       0x70   0xBD16             POP      {R1,R2,R4,PC}
    536          }
    537          
    538          //========================================================================

   \                                 In section .text, align 2, keep-with-next
    539          void	SetManHop	( int nManHop )
    540          //========================================================================
    541          {
   \                     SetManHop: (+1)
   \        0x0   0xB511             PUSH     {R0,R4,LR}
   \        0x2   0xB081             SUB      SP,SP,#+4
    542              if ( HAL_OK != HAL_I2C_IsDeviceReady( &hi2c1, (uint16_t)( 0x50 << 1 ), 2, 2 ) )
   \        0x4   0x.... 0x....      LDR.W    R4,??DataTable46_1
   \        0x8   0x2302             MOVS     R3,#+2
   \        0xA   0x2202             MOVS     R2,#+2
   \        0xC   0x21A0             MOVS     R1,#+160
   \        0xE   0x0020             MOVS     R0,R4
   \       0x10   0x.... 0x....      BL       HAL_I2C_IsDeviceReady
   \       0x14   0x2800             CMP      R0,#+0
   \       0x16   0xD008             BEQ.N    ??SetManHop_0
    543              {
    544                  printf( "%s(%d) - EEPROM Error\n", __func__, __LINE__ );
                         ^
Warning[Pe223]: function "printf" declared implicitly
   \       0x18   0xF44F 0x7208      MOV      R2,#+544
   \       0x1C   0x.... 0x....      LDR.W    R1,??DataTable49_5
   \       0x20   0x.... 0x....      LDR.W    R0,??DataTable46_3
   \       0x24   0x.... 0x....      BL       printf
    545          
    546                  return ;
   \       0x28   0xE014             B.N      ??SetManHop_1
    547              }
    548          
    549              if ( GetDbg() > 0 )
                          ^
Warning[Pe223]: function "GetDbg" declared implicitly
   \                     ??SetManHop_0: (+1)
   \       0x2A   0x.... 0x....      BL       GetDbg
   \       0x2E   0x2801             CMP      R0,#+1
   \       0x30   0xDB08             BLT.N    ??SetManHop_2
    550              	printf( "%s(%d) - %d\n", __func__, __LINE__, nManHop );
                     	^
Warning[Pe223]: function "printf" declared implicitly
   \       0x32   0x9B01             LDR      R3,[SP, #+4]
   \       0x34   0xF240 0x2226      MOVW     R2,#+550
   \       0x38   0x.... 0x....      LDR.W    R1,??DataTable49_5
   \       0x3C   0x.... 0x....      LDR.W    R0,??DataTable46_4
   \       0x40   0x.... 0x....      BL       printf
    551          
    552          //    M24_HAL_WriteBytes( &hi2c1, 0xA0, 0x0D, (uint8_t *)&nManHop, 1 );
    553              M24_HAL_WriteBytes( &hi2c1, 0xA0, AddrEEPManHop, (uint8_t *)&nManHop, 1 );
   \                     ??SetManHop_2: (+1)
   \       0x44   0x2001             MOVS     R0,#+1
   \       0x46   0x9000             STR      R0,[SP, #+0]
   \       0x48   0xAB01             ADD      R3,SP,#+4
   \       0x4A   0x220D             MOVS     R2,#+13
   \       0x4C   0x21A0             MOVS     R1,#+160
   \       0x4E   0x0020             MOVS     R0,R4
   \       0x50   0x.... 0x....      BL       M24_HAL_WriteBytes
    554          }
   \                     ??SetManHop_1: (+1)
   \       0x54   0xBD13             POP      {R0,R1,R4,PC}
    555          
    556          #endif	//	defined(USE_HOP_MANUAL)
    557          
    558          //========================================================================

   \                                 In section .text, align 2, keep-with-next
    559          int		LoadCarNo		( void )
    560          //========================================================================
    561          {
   \                     LoadCarNo: (+1)
   \        0x0   0xB51C             PUSH     {R2-R4,LR}
    562              uint8_t     nCarNo = 0;
   \        0x2   0x2000             MOVS     R0,#+0
   \        0x4   0xF88D 0x0004      STRB     R0,[SP, #+4]
    563          
    564              if ( HAL_OK != HAL_I2C_IsDeviceReady( &hi2c1, (uint16_t)( 0x50 << 1 ), 2, 2 ) )
   \        0x8   0x.... 0x....      LDR.W    R4,??DataTable46_1
   \        0xC   0x2302             MOVS     R3,#+2
   \        0xE   0x2202             MOVS     R2,#+2
   \       0x10   0x21A0             MOVS     R1,#+160
   \       0x12   0x0020             MOVS     R0,R4
   \       0x14   0x.... 0x....      BL       HAL_I2C_IsDeviceReady
   \       0x18   0x2800             CMP      R0,#+0
   \       0x1A   0xD00A             BEQ.N    ??LoadCarNo_0
    565              {
    566                  printf( "%s(%d) - EEPROM Error\n", __func__, __LINE__ );
                         ^
Warning[Pe223]: function "printf" declared implicitly
   \       0x1C   0xF240 0x2236      MOVW     R2,#+566
   \       0x20   0x.... 0x....      LDR.W    R1,??DataTable49_6
   \       0x24   0x.... 0x....      LDR.W    R0,??DataTable46_3
   \       0x28   0x.... 0x....      BL       printf
    567          
    568                  return -1;
   \       0x2C   0xF05F 0x30FF      MOVS     R0,#+4294967295
   \       0x30   0xE01C             B.N      ??LoadCarNo_1
    569              }
    570          
    571          //    M24_HAL_ReadBytes( &hi2c1, 0xA0, 0x0E, (uint8_t *)&nCarNo, 1 );
    572              M24_HAL_ReadBytes( &hi2c1, 0xA0, AddrEEPCarNo, (uint8_t *)&nCarNo, 1 );
   \                     ??LoadCarNo_0: (+1)
   \       0x32   0x2001             MOVS     R0,#+1
   \       0x34   0x9000             STR      R0,[SP, #+0]
   \       0x36   0xAB01             ADD      R3,SP,#+4
   \       0x38   0x220E             MOVS     R2,#+14
   \       0x3A   0x21A0             MOVS     R1,#+160
   \       0x3C   0x0020             MOVS     R0,R4
   \       0x3E   0x.... 0x....      BL       M24_HAL_ReadBytes
    573          
    574              if ( GetDbg() > 0 )
                          ^
Warning[Pe223]: function "GetDbg" declared implicitly
   \       0x42   0x.... 0x....      BL       GetDbg
   \       0x46   0x2801             CMP      R0,#+1
   \       0x48   0xDB09             BLT.N    ??LoadCarNo_2
    575              	printf( "%s(%d) - %d\n", __func__, __LINE__, nCarNo );
                     	^
Warning[Pe223]: function "printf" declared implicitly
   \       0x4A   0xF89D 0x3004      LDRB     R3,[SP, #+4]
   \       0x4E   0xF240 0x223F      MOVW     R2,#+575
   \       0x52   0x.... 0x....      LDR.W    R1,??DataTable49_6
   \       0x56   0x.... 0x....      LDR.W    R0,??DataTable46_4
   \       0x5A   0x.... 0x....      BL       printf
    576          
    577              g_nCarNo = nCarNo;
   \                     ??LoadCarNo_2: (+1)
   \       0x5E   0xF89D 0x0004      LDRB     R0,[SP, #+4]
   \       0x62   0x.... 0x....      LDR.W    R1,??DataTable42_4
   \       0x66   0x6008             STR      R0,[R1, #+0]
    578          
    579              return nCarNo;
   \       0x68   0xF89D 0x0004      LDRB     R0,[SP, #+4]
   \                     ??LoadCarNo_1: (+1)
   \       0x6C   0xBD16             POP      {R1,R2,R4,PC}
    580          }
    581          
    582          //========================================================================

   \                                 In section .text, align 2, keep-with-next
    583          int		GetCarNo		( void )
    584          //========================================================================
    585          {
   \                     GetCarNo: (+1)
   \        0x0   0xB510             PUSH     {R4,LR}
    586          	static int s_bOnce = 0;
    587          
    588          	if ( s_bOnce == 0 )
   \        0x2   0x.... 0x....      LDR.W    R4,??DataTable49_7
   \        0x6   0x6820             LDR      R0,[R4, #+0]
   \        0x8   0x2800             CMP      R0,#+0
   \        0xA   0xD106             BNE.N    ??GetCarNo_0
    589          	{
    590          		//	초기로딩시 I2C에서 Load
    591          		g_nCarNo = LoadCarNo();
   \        0xC   0x.... 0x....      BL       LoadCarNo
   \       0x10   0x.... 0x....      LDR.W    R1,??DataTable42_4
   \       0x14   0x6008             STR      R0,[R1, #+0]
    592          		s_bOnce = 1;
   \       0x16   0x2001             MOVS     R0,#+1
   \       0x18   0x6020             STR      R0,[R4, #+0]
    593          	}
    594          
    595          	return g_nCarNo;
   \                     ??GetCarNo_0: (+1)
   \       0x1A   0x.... 0x....      LDR.W    R0,??DataTable42_4
   \       0x1E   0x6800             LDR      R0,[R0, #+0]
   \       0x20   0xBD10             POP      {R4,PC}
    596          }

   \                                 In section .bss, align 4
   \                     `GetCarNo::s_bOnce`:
   \        0x0                      DS8 4
    597          
    598          //========================================================================

   \                                 In section .text, align 2, keep-with-next
    599          void	SetCarNo		( int nCarNo )
    600          //========================================================================
    601          {
   \                     SetCarNo: (+1)
   \        0x0   0xB511             PUSH     {R0,R4,LR}
   \        0x2   0xB081             SUB      SP,SP,#+4
    602              if ( HAL_OK != HAL_I2C_IsDeviceReady( &hi2c1, (uint16_t)( 0x50 << 1 ), 2, 2 ) )
   \        0x4   0x.... 0x....      LDR.W    R4,??DataTable46_1
   \        0x8   0x2302             MOVS     R3,#+2
   \        0xA   0x2202             MOVS     R2,#+2
   \        0xC   0x21A0             MOVS     R1,#+160
   \        0xE   0x0020             MOVS     R0,R4
   \       0x10   0x.... 0x....      BL       HAL_I2C_IsDeviceReady
   \       0x14   0x2800             CMP      R0,#+0
   \       0x16   0xD008             BEQ.N    ??SetCarNo_0
    603              {
    604                  printf( "%s(%d) - EEPROM Error\n", __func__, __LINE__ );
                         ^
Warning[Pe223]: function "printf" declared implicitly
   \       0x18   0xF44F 0x7217      MOV      R2,#+604
   \       0x1C   0x.... 0x....      LDR.W    R1,??DataTable49_8
   \       0x20   0x.... 0x....      LDR.W    R0,??DataTable46_3
   \       0x24   0x.... 0x....      BL       printf
    605          
    606                  return ;
   \       0x28   0xE018             B.N      ??SetCarNo_1
    607              }
    608          
    609          	if ( GetDbg() > 0 )
                 	     ^
Warning[Pe223]: function "GetDbg" declared implicitly
   \                     ??SetCarNo_0: (+1)
   \       0x2A   0x.... 0x....      BL       GetDbg
   \       0x2E   0x2801             CMP      R0,#+1
   \       0x30   0xDB08             BLT.N    ??SetCarNo_2
    610              	printf( "%s(%d) - %d\n", __func__, __LINE__, nCarNo );
                     	^
Warning[Pe223]: function "printf" declared implicitly
   \       0x32   0x9B01             LDR      R3,[SP, #+4]
   \       0x34   0xF240 0x2262      MOVW     R2,#+610
   \       0x38   0x.... 0x....      LDR.W    R1,??DataTable49_8
   \       0x3C   0x.... 0x....      LDR.W    R0,??DataTable46_4
   \       0x40   0x.... 0x....      BL       printf
    611          
    612          	g_nCarNo = nCarNo;
   \                     ??SetCarNo_2: (+1)
   \       0x44   0x9801             LDR      R0,[SP, #+4]
   \       0x46   0x.... 0x....      LDR.W    R1,??DataTable42_4
   \       0x4A   0x6008             STR      R0,[R1, #+0]
    613          
    614          //    M24_HAL_WriteBytes( &hi2c1, 0xA0, 0x0E, (uint8_t *)&nCarNo, 1 );
    615              M24_HAL_WriteBytes( &hi2c1, 0xA0, AddrEEPCarNo, (uint8_t *)&nCarNo, 1 );
   \       0x4C   0x2001             MOVS     R0,#+1
   \       0x4E   0x9000             STR      R0,[SP, #+0]
   \       0x50   0xAB01             ADD      R3,SP,#+4
   \       0x52   0x220E             MOVS     R2,#+14
   \       0x54   0x21A0             MOVS     R1,#+160
   \       0x56   0x0020             MOVS     R0,R4
   \       0x58   0x.... 0x....      BL       M24_HAL_WriteBytes
    616          }
   \                     ??SetCarNo_1: (+1)
   \       0x5C   0xBD13             POP      {R0,R1,R4,PC}
    617          
    618          //========================================================================

   \                                 In section .text, align 2, keep-with-next
    619          int		GetSpkVol	    ( void )
    620          //========================================================================
    621          {
   \                     GetSpkVol: (+1)
   \        0x0   0xB51C             PUSH     {R2-R4,LR}
    622              uint8_t     nSpkVol = 0;
   \        0x2   0x2000             MOVS     R0,#+0
   \        0x4   0xF88D 0x0004      STRB     R0,[SP, #+4]
    623          
    624              if ( HAL_OK != HAL_I2C_IsDeviceReady( &hi2c1, (uint16_t)( 0x50 << 1 ), 2, 2 ) )
   \        0x8   0x.... 0x....      LDR.W    R4,??DataTable46_1
   \        0xC   0x2302             MOVS     R3,#+2
   \        0xE   0x2202             MOVS     R2,#+2
   \       0x10   0x21A0             MOVS     R1,#+160
   \       0x12   0x0020             MOVS     R0,R4
   \       0x14   0x.... 0x....      BL       HAL_I2C_IsDeviceReady
   \       0x18   0x2800             CMP      R0,#+0
   \       0x1A   0xD00A             BEQ.N    ??GetSpkVol_0
    625              {
    626                  printf( "%s(%d) - EEPROM Error\n", __func__, __LINE__ );
                         ^
Warning[Pe223]: function "printf" declared implicitly
   \       0x1C   0xF240 0x2272      MOVW     R2,#+626
   \       0x20   0x.... 0x....      LDR.W    R1,??DataTable49_9
   \       0x24   0x.... 0x....      LDR.W    R0,??DataTable46_3
   \       0x28   0x.... 0x....      BL       printf
    627          
    628                  return -1;
   \       0x2C   0xF05F 0x30FF      MOVS     R0,#+4294967295
   \       0x30   0xE013             B.N      ??GetSpkVol_1
    629              }
    630          
    631          //    M24_HAL_ReadBytes( &hi2c1, 0xA0, 0x0F, (uint8_t *)&nSpkVol, 1 );
    632              M24_HAL_ReadBytes( &hi2c1, 0xA0, AddrEEPSpkVol, (uint8_t *)&nSpkVol, 1 );
   \                     ??GetSpkVol_0: (+1)
   \       0x32   0x2001             MOVS     R0,#+1
   \       0x34   0x9000             STR      R0,[SP, #+0]
   \       0x36   0xAB01             ADD      R3,SP,#+4
   \       0x38   0x220F             MOVS     R2,#+15
   \       0x3A   0x21A0             MOVS     R1,#+160
   \       0x3C   0x0020             MOVS     R0,R4
   \       0x3E   0x.... 0x....      BL       M24_HAL_ReadBytes
    633          
    634              printf( "%s(%d) - %d\n", __func__, __LINE__, nSpkVol );
                     ^
Warning[Pe223]: function "printf" declared implicitly
   \       0x42   0xF89D 0x3004      LDRB     R3,[SP, #+4]
   \       0x46   0xF240 0x227A      MOVW     R2,#+634
   \       0x4A   0x.... 0x....      LDR.W    R1,??DataTable49_9
   \       0x4E   0x.... 0x....      LDR.W    R0,??DataTable46_4
   \       0x52   0x.... 0x....      BL       printf
    635          
    636              return nSpkVol;
   \       0x56   0xF89D 0x0004      LDRB     R0,[SP, #+4]
   \                     ??GetSpkVol_1: (+1)
   \       0x5A   0xBD16             POP      {R1,R2,R4,PC}
    637          }
    638          
    639          //========================================================================

   \                                 In section .text, align 2, keep-with-next
    640          void	SetSpkVol	    ( int nSpkVol )
    641          //========================================================================
    642          {
   \                     SetSpkVol: (+1)
   \        0x0   0xB511             PUSH     {R0,R4,LR}
   \        0x2   0xB081             SUB      SP,SP,#+4
    643              if ( HAL_OK != HAL_I2C_IsDeviceReady( &hi2c1, (uint16_t)( 0x50 << 1 ), 2, 2 ) )
   \        0x4   0x.... 0x....      LDR.W    R4,??DataTable46_1
   \        0x8   0x2302             MOVS     R3,#+2
   \        0xA   0x2202             MOVS     R2,#+2
   \        0xC   0x21A0             MOVS     R1,#+160
   \        0xE   0x0020             MOVS     R0,R4
   \       0x10   0x.... 0x....      BL       HAL_I2C_IsDeviceReady
   \       0x14   0x2800             CMP      R0,#+0
   \       0x16   0xD008             BEQ.N    ??SetSpkVol_0
    644              {
    645                  printf( "%s(%d) - EEPROM Error\n", __func__, __LINE__ );
                         ^
Warning[Pe223]: function "printf" declared implicitly
   \       0x18   0xF240 0x2285      MOVW     R2,#+645
   \       0x1C   0x.... 0x....      LDR.W    R1,??DataTable49_10
   \       0x20   0x.... 0x....      LDR.W    R0,??DataTable46_3
   \       0x24   0x.... 0x....      BL       printf
    646          
    647                  return ;
   \       0x28   0xE01B             B.N      ??SetSpkVol_1
    648              }
    649          
    650              printf( "%s(%d) - %d\n", __func__, __LINE__, nSpkVol );
                     ^
Warning[Pe223]: function "printf" declared implicitly
   \                     ??SetSpkVol_0: (+1)
   \       0x2A   0x9B01             LDR      R3,[SP, #+4]
   \       0x2C   0xF240 0x228A      MOVW     R2,#+650
   \       0x30   0x.... 0x....      LDR.W    R1,??DataTable49_10
   \       0x34   0x.... 0x....      LDR.W    R0,??DataTable46_4
   \       0x38   0x.... 0x....      BL       printf
    651          
    652          //    M24_HAL_WriteBytes( &hi2c1, 0xA0, 0x0F, (uint8_t *)&nSpkVol, 1 );
    653              M24_HAL_WriteBytes( &hi2c1, 0xA0, AddrEEPSpkVol, (uint8_t *)&nSpkVol, 1 );
   \       0x3C   0x2001             MOVS     R0,#+1
   \       0x3E   0x9000             STR      R0,[SP, #+0]
   \       0x40   0xAB01             ADD      R3,SP,#+4
   \       0x42   0x220F             MOVS     R2,#+15
   \       0x44   0x21A0             MOVS     R1,#+160
   \       0x46   0x0020             MOVS     R0,R4
   \       0x48   0x.... 0x....      BL       M24_HAL_WriteBytes
    654          
    655              //========================================================================
    656              //	Codec MAX9860ETG+
    657              if ( HAL_OK == HAL_I2C_IsDeviceReady( &hi2c1, (uint16_t)( 0x10 << 1 ), 2, 2 ) )
   \       0x4C   0x2302             MOVS     R3,#+2
   \       0x4E   0x2202             MOVS     R2,#+2
   \       0x50   0x2120             MOVS     R1,#+32
   \       0x52   0x0020             MOVS     R0,R4
   \       0x54   0x.... 0x....      BL       HAL_I2C_IsDeviceReady
   \       0x58   0x2800             CMP      R0,#+0
   \       0x5A   0xD102             BNE.N    ??SetSpkVol_2
    658              {
    659              	AudioSpkVol( nSpkVol );
   \       0x5C   0x9801             LDR      R0,[SP, #+4]
   \       0x5E   0x.... 0x....      BL       AudioSpkVol
    660              }
    661          }
   \                     ??SetSpkVol_2: (+1)
   \                     ??SetSpkVol_1: (+1)
   \       0x62   0xBD13             POP      {R0,R1,R4,PC}
    662          
    663          
    664          //========================================================================

   \                                 In section .text, align 2, keep-with-next
    665          int		GetMicVol	    ( void )
    666          //========================================================================
    667          {
   \                     GetMicVol: (+1)
   \        0x0   0xB51C             PUSH     {R2-R4,LR}
    668              uint8_t     nMicVol = 0;
   \        0x2   0x2000             MOVS     R0,#+0
   \        0x4   0xF88D 0x0004      STRB     R0,[SP, #+4]
    669          
    670              if ( HAL_OK != HAL_I2C_IsDeviceReady( &hi2c1, (uint16_t)( 0x50 << 1 ), 2, 2 ) )
   \        0x8   0x.... 0x....      LDR.W    R4,??DataTable46_1
   \        0xC   0x2302             MOVS     R3,#+2
   \        0xE   0x2202             MOVS     R2,#+2
   \       0x10   0x21A0             MOVS     R1,#+160
   \       0x12   0x0020             MOVS     R0,R4
   \       0x14   0x.... 0x....      BL       HAL_I2C_IsDeviceReady
   \       0x18   0x2800             CMP      R0,#+0
   \       0x1A   0xD00A             BEQ.N    ??GetMicVol_0
    671              {
    672                  printf( "%s(%d) - EEPROM Error\n", __func__, __LINE__ );
                         ^
Warning[Pe223]: function "printf" declared implicitly
   \       0x1C   0xF44F 0x7228      MOV      R2,#+672
   \       0x20   0x.... 0x....      LDR.W    R1,??DataTable50
   \       0x24   0x.... 0x....      LDR.W    R0,??DataTable46_3
   \       0x28   0x.... 0x....      BL       printf
    673          
    674                  return -1;
   \       0x2C   0xF05F 0x30FF      MOVS     R0,#+4294967295
   \       0x30   0xE013             B.N      ??GetMicVol_1
    675              }
    676          
    677          //    M24_HAL_ReadBytes( &hi2c1, 0xA0, 0x0F, (uint8_t *)&nSpkVol, 1 );
    678              M24_HAL_ReadBytes( &hi2c1, 0xA0, AddrEEPMicVol, (uint8_t *)&nMicVol, 1 );
   \                     ??GetMicVol_0: (+1)
   \       0x32   0x2001             MOVS     R0,#+1
   \       0x34   0x9000             STR      R0,[SP, #+0]
   \       0x36   0xAB01             ADD      R3,SP,#+4
   \       0x38   0x220C             MOVS     R2,#+12
   \       0x3A   0x21A0             MOVS     R1,#+160
   \       0x3C   0x0020             MOVS     R0,R4
   \       0x3E   0x.... 0x....      BL       M24_HAL_ReadBytes
    679          
    680              printf( "%s(%d) - %d\n", __func__, __LINE__, nMicVol );
                     ^
Warning[Pe223]: function "printf" declared implicitly
   \       0x42   0xF89D 0x3004      LDRB     R3,[SP, #+4]
   \       0x46   0xF44F 0x722A      MOV      R2,#+680
   \       0x4A   0x.... 0x....      LDR.W    R1,??DataTable50
   \       0x4E   0x.... 0x....      LDR.W    R0,??DataTable46_4
   \       0x52   0x.... 0x....      BL       printf
    681          
    682              return nMicVol;
   \       0x56   0xF89D 0x0004      LDRB     R0,[SP, #+4]
   \                     ??GetMicVol_1: (+1)
   \       0x5A   0xBD16             POP      {R1,R2,R4,PC}
    683          }
    684          
    685          //========================================================================

   \                                 In section .text, align 2, keep-with-next
    686          void	SetMicVol	    ( int nMicVol )
    687          //========================================================================
    688          {
   \                     SetMicVol: (+1)
   \        0x0   0xB511             PUSH     {R0,R4,LR}
   \        0x2   0xB081             SUB      SP,SP,#+4
    689              if ( HAL_OK != HAL_I2C_IsDeviceReady( &hi2c1, (uint16_t)( 0x50 << 1 ), 2, 2 ) )
   \        0x4   0x.... 0x....      LDR.W    R4,??DataTable46_1
   \        0x8   0x2302             MOVS     R3,#+2
   \        0xA   0x2202             MOVS     R2,#+2
   \        0xC   0x21A0             MOVS     R1,#+160
   \        0xE   0x0020             MOVS     R0,R4
   \       0x10   0x.... 0x....      BL       HAL_I2C_IsDeviceReady
   \       0x14   0x2800             CMP      R0,#+0
   \       0x16   0xD008             BEQ.N    ??SetMicVol_0
    690              {
    691                  printf( "%s(%d) - EEPROM Error\n", __func__, __LINE__ );
                         ^
Warning[Pe223]: function "printf" declared implicitly
   \       0x18   0xF240 0x22B3      MOVW     R2,#+691
   \       0x1C   0x.... 0x....      LDR.W    R1,??DataTable51_1
   \       0x20   0x.... 0x....      LDR.W    R0,??DataTable46_3
   \       0x24   0x.... 0x....      BL       printf
    692          
    693                  return ;
   \       0x28   0xE01B             B.N      ??SetMicVol_1
    694              }
    695          
    696              printf( "%s(%d) - %d\n", __func__, __LINE__, nMicVol );
                     ^
Warning[Pe223]: function "printf" declared implicitly
   \                     ??SetMicVol_0: (+1)
   \       0x2A   0x9B01             LDR      R3,[SP, #+4]
   \       0x2C   0xF44F 0x722E      MOV      R2,#+696
   \       0x30   0x.... 0x....      LDR.W    R1,??DataTable51_1
   \       0x34   0x.... 0x....      LDR.W    R0,??DataTable46_4
   \       0x38   0x.... 0x....      BL       printf
    697          
    698          //    M24_HAL_WriteBytes( &hi2c1, 0xA0, 0x0F, (uint8_t *)&nSpkVol, 1 );
    699              M24_HAL_WriteBytes( &hi2c1, 0xA0, AddrEEPMicVol, (uint8_t *)&nMicVol, 1 );
   \       0x3C   0x2001             MOVS     R0,#+1
   \       0x3E   0x9000             STR      R0,[SP, #+0]
   \       0x40   0xAB01             ADD      R3,SP,#+4
   \       0x42   0x220C             MOVS     R2,#+12
   \       0x44   0x21A0             MOVS     R1,#+160
   \       0x46   0x0020             MOVS     R0,R4
   \       0x48   0x.... 0x....      BL       M24_HAL_WriteBytes
    700          
    701              //========================================================================
    702              //	Codec MAX9860ETG+
    703              if ( HAL_OK == HAL_I2C_IsDeviceReady( &hi2c1, (uint16_t)( 0x10 << 1 ), 2, 2 ) )
   \       0x4C   0x2302             MOVS     R3,#+2
   \       0x4E   0x2202             MOVS     R2,#+2
   \       0x50   0x2120             MOVS     R1,#+32
   \       0x52   0x0020             MOVS     R0,R4
   \       0x54   0x.... 0x....      BL       HAL_I2C_IsDeviceReady
   \       0x58   0x2800             CMP      R0,#+0
   \       0x5A   0xD102             BNE.N    ??SetMicVol_2
    704              {
    705              	AudioMicVol( nMicVol );
   \       0x5C   0x9801             LDR      R0,[SP, #+4]
   \       0x5E   0x.... 0x....      BL       AudioMicVol
    706              }
    707          }
   \                     ??SetMicVol_2: (+1)
   \                     ??SetMicVol_1: (+1)
   \       0x62   0xBD13             POP      {R0,R1,R4,PC}
    708          //========================================================================
    709          
    710          
    711          //========================================================================

   \                                 In section .text, align 2, keep-with-next
    712          void RF_RSSI( void )
    713          //========================================================================
    714          {
   \                     RF_RSSI: (+1)
   \        0x0   0xB51F             PUSH     {R0-R4,LR}
    715              //  Send RF Ping Packet.
    716          //    return;
    717          //
    718              //  Get Modem Status.
    719              si446x_get_modem_status_fast_clear_read();
   \        0x2   0x.... 0x....      BL       si446x_get_modem_status_fast_clear_read
    720          //	si446x_get_modem_status(0xff);
    721          
    722              if ( GetDbg() > 0 )
                          ^
Warning[Pe223]: function "GetDbg" declared implicitly
   \        0x6   0x.... 0x....      BL       GetDbg
   \        0xA   0x2801             CMP      R0,#+1
   \        0xC   0xDB10             BLT.N    ??RF_RSSI_0
    723              {
    724                  printf( "%s(%d) - ant1:%d / ant2:%d / curr:%d / latch:%d\n", __func__, __LINE__,
                         ^
Warning[Pe223]: function "printf" declared implicitly
    725                          Si446xCmd.GET_MODEM_STATUS.ANT1_RSSI,
    726                          Si446xCmd.GET_MODEM_STATUS.ANT2_RSSI,
    727                          Si446xCmd.GET_MODEM_STATUS.CURR_RSSI,
    728                          Si446xCmd.GET_MODEM_STATUS.LATCH_RSSI
    729                  );
   \        0xE   0x.... 0x....      LDR.W    R0,??DataTable51_2
   \       0x12   0x78C1             LDRB     R1,[R0, #+3]
   \       0x14   0x9102             STR      R1,[SP, #+8]
   \       0x16   0x7881             LDRB     R1,[R0, #+2]
   \       0x18   0x9101             STR      R1,[SP, #+4]
   \       0x1A   0x7941             LDRB     R1,[R0, #+5]
   \       0x1C   0x9100             STR      R1,[SP, #+0]
   \       0x1E   0x7903             LDRB     R3,[R0, #+4]
   \       0x20   0xF44F 0x7235      MOV      R2,#+724
   \       0x24   0x.... 0x....      LDR.W    R1,??DataTable51_3
   \       0x28   0x.... 0x....      LDR.W    R0,??DataTable51_4
   \       0x2C   0x.... 0x....      BL       printf
    730              }
    731          
    732              uint16_t rssi;
    733          
    734              rssi = Si446xCmd.GET_MODEM_STATUS.LATCH_RSSI;
   \                     ??RF_RSSI_0: (+1)
   \       0x30   0x.... 0x....      LDR.W    R0,??DataTable51_2
   \       0x34   0x78C4             LDRB     R4,[R0, #+3]
    735          
    736              if ( rssi > 200 )                        LCDRSSI( 5 );  //  RSSI 5
   \       0x36   0x0020             MOVS     R0,R4
   \       0x38   0xB280             UXTH     R0,R0
   \       0x3A   0x28C9             CMP      R0,#+201
   \       0x3C   0xDB03             BLT.N    ??RF_RSSI_1
   \       0x3E   0x2005             MOVS     R0,#+5
   \       0x40   0x.... 0x....      BL       LCDRSSI
   \       0x44   0xE036             B.N      ??RF_RSSI_2
    737              else if ( 160 < rssi && rssi <= 200 )    LCDRSSI( 4 );  //  RSSI 4
   \                     ??RF_RSSI_1: (+1)
   \       0x46   0x0020             MOVS     R0,R4
   \       0x48   0xB280             UXTH     R0,R0
   \       0x4A   0x28A1             CMP      R0,#+161
   \       0x4C   0xDB07             BLT.N    ??RF_RSSI_3
   \       0x4E   0x0020             MOVS     R0,R4
   \       0x50   0xB280             UXTH     R0,R0
   \       0x52   0x28C9             CMP      R0,#+201
   \       0x54   0xDA03             BGE.N    ??RF_RSSI_3
   \       0x56   0x2004             MOVS     R0,#+4
   \       0x58   0x.... 0x....      BL       LCDRSSI
   \       0x5C   0xE02A             B.N      ??RF_RSSI_2
    738              else if ( 130 < rssi && rssi <= 160 )    LCDRSSI( 3 );  //  RSSI 3
   \                     ??RF_RSSI_3: (+1)
   \       0x5E   0x0020             MOVS     R0,R4
   \       0x60   0xB280             UXTH     R0,R0
   \       0x62   0x2883             CMP      R0,#+131
   \       0x64   0xDB07             BLT.N    ??RF_RSSI_4
   \       0x66   0x0020             MOVS     R0,R4
   \       0x68   0xB280             UXTH     R0,R0
   \       0x6A   0x28A1             CMP      R0,#+161
   \       0x6C   0xDA03             BGE.N    ??RF_RSSI_4
   \       0x6E   0x2003             MOVS     R0,#+3
   \       0x70   0x.... 0x....      BL       LCDRSSI
   \       0x74   0xE01E             B.N      ??RF_RSSI_2
    739              else if ( 100 < rssi && rssi <= 130 )    LCDRSSI( 2 );  //  RSSI 2
   \                     ??RF_RSSI_4: (+1)
   \       0x76   0x0020             MOVS     R0,R4
   \       0x78   0xB280             UXTH     R0,R0
   \       0x7A   0x2865             CMP      R0,#+101
   \       0x7C   0xDB07             BLT.N    ??RF_RSSI_5
   \       0x7E   0x0020             MOVS     R0,R4
   \       0x80   0xB280             UXTH     R0,R0
   \       0x82   0x2883             CMP      R0,#+131
   \       0x84   0xDA03             BGE.N    ??RF_RSSI_5
   \       0x86   0x2002             MOVS     R0,#+2
   \       0x88   0x.... 0x....      BL       LCDRSSI
   \       0x8C   0xE012             B.N      ??RF_RSSI_2
    740              else if ( 85 < rssi && rssi <= 100 )     LCDRSSI( 1 );  //  RSSI 1
   \                     ??RF_RSSI_5: (+1)
   \       0x8E   0x0020             MOVS     R0,R4
   \       0x90   0xB280             UXTH     R0,R0
   \       0x92   0x2856             CMP      R0,#+86
   \       0x94   0xDB07             BLT.N    ??RF_RSSI_6
   \       0x96   0x0020             MOVS     R0,R4
   \       0x98   0xB280             UXTH     R0,R0
   \       0x9A   0x2865             CMP      R0,#+101
   \       0x9C   0xDA03             BGE.N    ??RF_RSSI_6
   \       0x9E   0x2001             MOVS     R0,#+1
   \       0xA0   0x.... 0x....      BL       LCDRSSI
   \       0xA4   0xE006             B.N      ??RF_RSSI_2
    741              else if ( rssi <= 85 )                   LCDRSSI( 0 );  //  RSSI 0
   \                     ??RF_RSSI_6: (+1)
   \       0xA6   0x0020             MOVS     R0,R4
   \       0xA8   0xB280             UXTH     R0,R0
   \       0xAA   0x2856             CMP      R0,#+86
   \       0xAC   0xDA02             BGE.N    ??RF_RSSI_2
   \       0xAE   0x2000             MOVS     R0,#+0
   \       0xB0   0x.... 0x....      BL       LCDRSSI
    742          }
   \                     ??RF_RSSI_2: (+1)
   \       0xB4   0xBD1F             POP      {R0-R4,PC}
    743          
    744          //========================================================================

   \                                 In section .text, align 2, keep-with-next
    745          void	RFM_Spk			( int bOnOff )		//	1(On) / 0(Off)
    746          //========================================================================
    747          {
   \                     RFM_Spk: (+1)
   \        0x0   0xB510             PUSH     {R4,LR}
   \        0x2   0x0004             MOVS     R4,R0
    748          	if( GetDbg() > 1 )
                 	    ^
Warning[Pe223]: function "GetDbg" declared implicitly
   \        0x4   0x.... 0x....      BL       GetDbg
   \        0x8   0x2802             CMP      R0,#+2
   \        0xA   0xDB08             BLT.N    ??RFM_Spk_0
    749          		printf("%s(%d) - %d\n", __func__, __LINE__, bOnOff);
                 		^
Warning[Pe223]: function "printf" declared implicitly
   \        0xC   0x0023             MOVS     R3,R4
   \        0xE   0xF240 0x22ED      MOVW     R2,#+749
   \       0x12   0x.... 0x....      LDR.W    R1,??DataTable51_5
   \       0x16   0x.... 0x....      LDR.W    R0,??DataTable46_4
   \       0x1A   0x.... 0x....      BL       printf
    750          
    751              if ( bOnOff )
   \                     ??RFM_Spk_0: (+1)
   \       0x1E   0x2C00             CMP      R4,#+0
   \       0x20   0xD006             BEQ.N    ??RFM_Spk_1
    752              {
    753                  //  Spk Relay On
    754                  HAL_GPIO_WritePin( SPK_ON_GPIO_Port, SPK_ON_Pin, GPIO_PIN_SET );
   \       0x22   0x2201             MOVS     R2,#+1
   \       0x24   0x2120             MOVS     R1,#+32
   \       0x26   0x.... 0x....      LDR.W    R0,??DataTable51_6
   \       0x2A   0x.... 0x....      BL       HAL_GPIO_WritePin
   \       0x2E   0xE005             B.N      ??RFM_Spk_2
    755              }
    756              else
    757              {
    758                  //  Spk Relay Off
    759                  HAL_GPIO_WritePin( SPK_ON_GPIO_Port, SPK_ON_Pin, GPIO_PIN_RESET );
   \                     ??RFM_Spk_1: (+1)
   \       0x30   0x2200             MOVS     R2,#+0
   \       0x32   0x2120             MOVS     R1,#+32
   \       0x34   0x.... 0x....      LDR.W    R0,??DataTable51_6
   \       0x38   0x.... 0x....      BL       HAL_GPIO_WritePin
    760              }
    761          }
   \                     ??RFM_Spk_2: (+1)
   \       0x3C   0xBD10             POP      {R4,PC}
    762          
    763          //========================================================================

   \                                 In section .text, align 2, keep-with-next
    764          void PrintVerInfo( void )
    765          //========================================================================
    766          {
   \                     PrintVerInfo: (+1)
   \        0x0   0xB538             PUSH     {R3-R5,LR}
   \        0x2   0xB090             SUB      SP,SP,#+64
    767              //  Print Version Info
    768          
    769              const char* logo_string = "RFM";
   \        0x4   0x....             ADR.N    R5,??DataTable42
    770          
    771              printf( "\n\n" );
                     ^
Warning[Pe223]: function "printf" declared implicitly
   \        0x6   0x....             ADR.N    R0,??DataTable42_1
   \        0x8   0x.... 0x....      BL       printf
    772              printf( "%s\n", logo_string );
   \        0xC   0x0029             MOVS     R1,R5
   \        0xE   0x....             ADR.N    R0,??DataTable42_2
   \       0x10   0x.... 0x....      BL       printf
    773              printf( "Version = %s(%s - %s)\n", APP_VER, __DATE__, __TIME__ );
   \       0x14   0x.... 0x....      LDR.W    R4,??DataTable51_7
   \       0x18   0x.... 0x....      LDR.W    R3,??DataTable51_8
   \       0x1C   0x.... 0x....      LDR.W    R2,??DataTable51_9
   \       0x20   0x0021             MOVS     R1,R4
   \       0x22   0x.... 0x....      LDR.W    R0,??DataTable51_10
   \       0x26   0x.... 0x....      BL       printf
    774          
    775              //  LCD Display
    776              if( GetDevID() == DevRF900T )
   \       0x2A   0x.... 0x....      BL       GetDevID
   \       0x2E   0x2802             CMP      R0,#+2
   \       0x30   0xD10E             BNE.N    ??PrintVerInfo_0
    777              {
    778                  char sBuf[2][32];
    779          
    780                  sprintf( sBuf[0], "RFM v%s", APP_VER );
                         ^
Warning[Pe223]: function "sprintf" declared implicitly
   \       0x32   0x0022             MOVS     R2,R4
   \       0x34   0x.... 0x....      LDR.W    R1,??DataTable51_11
   \       0x38   0x4668             MOV      R0,SP
   \       0x3A   0x.... 0x....      BL       sprintf
    781                  //        sprintf( sBuf[1], "%s", __DATE__, __TIME__ );
    782          
    783                  LCDClear();
   \       0x3E   0x.... 0x....      BL       LCDClear
    784                  LCDSetCursor( 10, 10 );
   \       0x42   0x210A             MOVS     R1,#+10
   \       0x44   0x200A             MOVS     R0,#+10
   \       0x46   0x.... 0x....      BL       LCDSetCursor
    785                  LCDPrintf( sBuf[0] );
   \       0x4A   0x4668             MOV      R0,SP
   \       0x4C   0x.... 0x....      BL       LCDPrintf
    786                  //        LCDSetCursor( 0, 20 );
    787                  //        LCDPrintf( sBuf[1] );
    788              }
    789          }
   \                     ??PrintVerInfo_0: (+1)
   \       0x50   0xB011             ADD      SP,SP,#+68
   \       0x52   0xBD30             POP      {R4,R5,PC}
    790          
    791          //========================================================================
    792          //
    793          //	Command
    794          //
    795          //========================================================================
    796          
    797          #include "menu.h"      //  g_cntTrainSet
    798          
    799          
    800          //========================================================================

   \                                 In section .text, align 2, keep-with-next
    801          int cmd_ts      ( int argc, char * argv[] )
    802          //========================================================================
    803          {
   \                     cmd_ts: (+1)
   \        0x0   0xB538             PUSH     {R3-R5,LR}
   \        0x2   0x0004             MOVS     R4,R0
   \        0x4   0x000D             MOVS     R5,R1
    804              //	ts [train set] ( 0 ~ 9 )
    805              int 		nTrainSet = 0;
   \        0x6   0x2000             MOVS     R0,#+0
   \        0x8   0x9000             STR      R0,[SP, #+0]
    806          
    807              if( argc <= 1 )
   \        0xA   0x2C02             CMP      R4,#+2
   \        0xC   0xDA09             BGE.N    ??cmd_ts_0
    808              {
    809                  printf( "Train Set : %d\n", 100 + GetTrainSetIdx() );
                         ^
Warning[Pe223]: function "printf" declared implicitly
   \        0xE   0x.... 0x....      BL       GetTrainSetIdx
   \       0x12   0x3064             ADDS     R0,R0,#+100
   \       0x14   0x0001             MOVS     R1,R0
   \       0x16   0x.... 0x....      LDR.W    R0,??DataTable51_12
   \       0x1A   0x.... 0x....      BL       printf
    810          
    811              	return 0;
   \       0x1E   0x2000             MOVS     R0,#+0
   \       0x20   0xE01C             B.N      ??cmd_ts_1
    812              }
    813          
    814              switch ( argc )
   \                     ??cmd_ts_0: (+1)
   \       0x22   0x2C02             CMP      R4,#+2
   \       0x24   0xD104             BNE.N    ??cmd_ts_2
    815              {
    816              case 2:		sscanf( argv[1], "%d", &nTrainSet );	        //	cmd [channel]
                            		^
Warning[Pe223]: function "sscanf" declared implicitly
   \       0x26   0x466A             MOV      R2,SP
   \       0x28   0x....             ADR.N    R1,??DataTable42_3
   \       0x2A   0x6868             LDR      R0,[R5, #+4]
   \       0x2C   0x.... 0x....      BL       sscanf
    817                  break;
    818              }
    819          
    820              if ( nTrainSet < 0 || MaxTrainSet <= nTrainSet )  nTrainSet = 0;
   \                     ??cmd_ts_2: (+1)
   \       0x30   0x9800             LDR      R0,[SP, #+0]
   \       0x32   0x2800             CMP      R0,#+0
   \       0x34   0xD402             BMI.N    ??cmd_ts_3
   \       0x36   0x9800             LDR      R0,[SP, #+0]
   \       0x38   0x2814             CMP      R0,#+20
   \       0x3A   0xDB01             BLT.N    ??cmd_ts_4
   \                     ??cmd_ts_3: (+1)
   \       0x3C   0x2000             MOVS     R0,#+0
   \       0x3E   0x9000             STR      R0,[SP, #+0]
    821          
    822             	printf( "%s(%d) - Train Set : %d\n", __func__, __LINE__, nTrainSet + 100 );
                    	^
Warning[Pe223]: function "printf" declared implicitly
   \                     ??cmd_ts_4: (+1)
   \       0x40   0x9B00             LDR      R3,[SP, #+0]
   \       0x42   0x3364             ADDS     R3,R3,#+100
   \       0x44   0xF240 0x3236      MOVW     R2,#+822
   \       0x48   0x.... 0x....      LDR.W    R1,??DataTable51_13
   \       0x4C   0x.... 0x....      LDR.W    R0,??DataTable52
   \       0x50   0x.... 0x....      BL       printf
    823          
    824              SetTrainSetIdx( nTrainSet );
   \       0x54   0x9800             LDR      R0,[SP, #+0]
   \       0x56   0x.... 0x....      BL       SetTrainSetIdx
    825          
    826              return 0;
   \       0x5A   0x2000             MOVS     R0,#+0
   \                     ??cmd_ts_1: (+1)
   \       0x5C   0xBD32             POP      {R1,R4,R5,PC}
    827          }
    828          
    829          //========================================================================

   \                                 In section .text, align 2, keep-with-next
    830          int cmd_ch      ( int argc, char * argv[] )
    831          //========================================================================
    832          {
   \                     cmd_ch: (+1)
   \        0x0   0xB538             PUSH     {R3-R5,LR}
   \        0x2   0x0004             MOVS     R4,R0
   \        0x4   0x000D             MOVS     R5,R1
    833              //	ch [channel] ( 0 ~ 9 )
    834              int 		nCh = 0;
   \        0x6   0x2000             MOVS     R0,#+0
   \        0x8   0x9000             STR      R0,[SP, #+0]
    835          
    836              if( argc <= 1 )
   \        0xA   0x2C02             CMP      R4,#+2
   \        0xC   0xDA08             BGE.N    ??cmd_ch_0
    837              {
    838                  printf( "RF Channel: %d\n", GetChRx() );
                         ^
Warning[Pe223]: function "printf" declared implicitly
   \        0xE   0x.... 0x....      BL       GetChRx
   \       0x12   0x0001             MOVS     R1,R0
   \       0x14   0x.... 0x....      LDR.W    R0,??DataTable51_14
   \       0x18   0x.... 0x....      BL       printf
    839          
    840              	return 0;
   \       0x1C   0x2000             MOVS     R0,#+0
   \       0x1E   0xE01F             B.N      ??cmd_ch_1
    841              }
    842          
    843              switch ( argc )
   \                     ??cmd_ch_0: (+1)
   \       0x20   0x2C02             CMP      R4,#+2
   \       0x22   0xD104             BNE.N    ??cmd_ch_2
    844              {
    845              case 2:		sscanf( argv[1], "%d", &nCh );	        //	cmd [channel]
                            		^
Warning[Pe223]: function "sscanf" declared implicitly
   \       0x24   0x466A             MOV      R2,SP
   \       0x26   0x....             ADR.N    R1,??DataTable42_3
   \       0x28   0x6868             LDR      R0,[R5, #+4]
   \       0x2A   0x.... 0x....      BL       sscanf
    846          //	case 2:		sText = argv[1];						//	sscanf( argv[1], "%s", sText );		//	cmd [Text] 
    847                  break;
    848              }
    849          
    850              if ( nCh < 0 || MaxTrainSet <= nCh )  nCh = 0;
   \                     ??cmd_ch_2: (+1)
   \       0x2E   0x9800             LDR      R0,[SP, #+0]
   \       0x30   0x2800             CMP      R0,#+0
   \       0x32   0xD402             BMI.N    ??cmd_ch_3
   \       0x34   0x9800             LDR      R0,[SP, #+0]
   \       0x36   0x2814             CMP      R0,#+20
   \       0x38   0xDB01             BLT.N    ??cmd_ch_4
   \                     ??cmd_ch_3: (+1)
   \       0x3A   0x2000             MOVS     R0,#+0
   \       0x3C   0x9000             STR      R0,[SP, #+0]
    851          
    852              if ( GetDbg() > 0 )
                          ^
Warning[Pe223]: function "GetDbg" declared implicitly
   \                     ??cmd_ch_4: (+1)
   \       0x3E   0x.... 0x....      BL       GetDbg
   \       0x42   0x2801             CMP      R0,#+1
   \       0x44   0xDB08             BLT.N    ??cmd_ch_5
    853              	printf( "%s(%d) - Channel : %d\n", __func__, __LINE__, nCh );
                     	^
Warning[Pe223]: function "printf" declared implicitly
   \       0x46   0x9B00             LDR      R3,[SP, #+0]
   \       0x48   0xF240 0x3255      MOVW     R2,#+853
   \       0x4C   0x.... 0x....      LDR.W    R1,??DataTable51_15
   \       0x50   0x.... 0x....      LDR.W    R0,??DataTable54
   \       0x54   0x.... 0x....      BL       printf
    854          
    855              SetTrainSetIdx( nCh );
   \                     ??cmd_ch_5: (+1)
   \       0x58   0x9800             LDR      R0,[SP, #+0]
   \       0x5A   0x.... 0x....      BL       SetTrainSetIdx
    856          
    857          	return 0;
   \       0x5E   0x2000             MOVS     R0,#+0
   \                     ??cmd_ch_1: (+1)
   \       0x60   0xBD32             POP      {R1,R4,R5,PC}
    858          }
    859          
    860          
    861          //========================================================================

   \                                 In section .text, align 2, keep-with-next
    862          int cmd_car     ( int argc, char * argv[] )
    863          //========================================================================
    864          {
   \                     cmd_car: (+1)
   \        0x0   0xB538             PUSH     {R3-R5,LR}
   \        0x2   0x0004             MOVS     R4,R0
   \        0x4   0x000D             MOVS     R5,R1
    865              //	car [Car No] ( 0 ~ 9 )
    866              int 		nCar = 0;
   \        0x6   0x2000             MOVS     R0,#+0
   \        0x8   0x9000             STR      R0,[SP, #+0]
    867          
    868              if( argc <= 1 )
   \        0xA   0x2C02             CMP      R4,#+2
   \        0xC   0xDA08             BGE.N    ??cmd_car_0
    869              {
    870                  printf( "Car No : %d\n", GetCarNo() );
                         ^
Warning[Pe223]: function "printf" declared implicitly
   \        0xE   0x.... 0x....      BL       GetCarNo
   \       0x12   0x0001             MOVS     R1,R0
   \       0x14   0x.... 0x....      LDR.W    R0,??DataTable51_16
   \       0x18   0x.... 0x....      BL       printf
    871          
    872                  return 0;
   \       0x1C   0x2000             MOVS     R0,#+0
   \       0x1E   0xE01B             B.N      ??cmd_car_1
    873              }
    874          
    875              switch ( argc )
   \                     ??cmd_car_0: (+1)
   \       0x20   0x2C02             CMP      R4,#+2
   \       0x22   0xD104             BNE.N    ??cmd_car_2
    876              {
    877              case 2:		sscanf( argv[1], "%d", &nCar );	        //	cmd [Car No]
                            		^
Warning[Pe223]: function "sscanf" declared implicitly
   \       0x24   0x466A             MOV      R2,SP
   \       0x26   0x....             ADR.N    R1,??DataTable42_3
   \       0x28   0x6868             LDR      R0,[R5, #+4]
   \       0x2A   0x.... 0x....      BL       sscanf
    878          //	case 2:		sText = argv[1];						//	sscanf( argv[1], "%s", sText );		//	cmd [Text] 
    879                  break;
    880              }
    881          
    882              if ( nCar < 0 || MaxCarNo < nCar )  nCar = 0;
   \                     ??cmd_car_2: (+1)
   \       0x2E   0x9800             LDR      R0,[SP, #+0]
   \       0x30   0x2800             CMP      R0,#+0
   \       0x32   0xD402             BMI.N    ??cmd_car_3
   \       0x34   0x9800             LDR      R0,[SP, #+0]
   \       0x36   0x280E             CMP      R0,#+14
   \       0x38   0xDB01             BLT.N    ??cmd_car_4
   \                     ??cmd_car_3: (+1)
   \       0x3A   0x2000             MOVS     R0,#+0
   \       0x3C   0x9000             STR      R0,[SP, #+0]
    883          
    884              printf( "%s(%d) - Car No : %d\n", __func__, __LINE__, nCar );
                     ^
Warning[Pe223]: function "printf" declared implicitly
   \                     ??cmd_car_4: (+1)
   \       0x3E   0x9B00             LDR      R3,[SP, #+0]
   \       0x40   0xF44F 0x725D      MOV      R2,#+884
   \       0x44   0x.... 0x....      LDR.W    R1,??DataTable51_17
   \       0x48   0x.... 0x....      LDR.W    R0,??DataTable55
   \       0x4C   0x.... 0x....      BL       printf
    885          
    886              SetCarNo( nCar );
   \       0x50   0x9800             LDR      R0,[SP, #+0]
   \       0x52   0x.... 0x....      BL       SetCarNo
    887          
    888          	return 0;
   \       0x56   0x2000             MOVS     R0,#+0
   \                     ??cmd_car_1: (+1)
   \       0x58   0xBD32             POP      {R1,R4,R5,PC}
    889          }
    890          
    891          
    892          //========================================================================

   \                                 In section .text, align 2, keep-with-next
    893          int cmd_hop     ( int argc, char * argv[] )
    894          //========================================================================
    895          {
   \                     cmd_hop: (+1)
   \        0x0   0xB538             PUSH     {R3-R5,LR}
   \        0x2   0x0004             MOVS     R4,R0
   \        0x4   0x000D             MOVS     R5,R1
    896              //	car [Car No] ( 0 ~ 9 )
    897              int 		nManHop = 0;
   \        0x6   0x2000             MOVS     R0,#+0
   \        0x8   0x9000             STR      R0,[SP, #+0]
    898          
    899              switch ( argc )
   \        0xA   0x2C02             CMP      R4,#+2
   \        0xC   0xD104             BNE.N    ??cmd_hop_0
    900              {
    901              case 2:		sscanf( argv[1], "%d", &nManHop );	        //	cmd [Car No]
                            		^
Warning[Pe223]: function "sscanf" declared implicitly
   \        0xE   0x466A             MOV      R2,SP
   \       0x10   0x....             ADR.N    R1,??DataTable42_3
   \       0x12   0x6868             LDR      R0,[R5, #+4]
   \       0x14   0x.... 0x....      BL       sscanf
    902          //	case 2:		sText = argv[1];						//	sscanf( argv[1], "%s", sText );		//	cmd [Text]
    903                  break;
    904              }
    905          
    906          //  g_nManHopping;		//	On(1) / Off(2) / Unused(0 : Other)
    907              if ( nManHop < 0 || 2 < nManHop )  nManHop = 0;
   \                     ??cmd_hop_0: (+1)
   \       0x18   0x9800             LDR      R0,[SP, #+0]
   \       0x1A   0x2800             CMP      R0,#+0
   \       0x1C   0xD402             BMI.N    ??cmd_hop_1
   \       0x1E   0x9800             LDR      R0,[SP, #+0]
   \       0x20   0x2803             CMP      R0,#+3
   \       0x22   0xDB01             BLT.N    ??cmd_hop_2
   \                     ??cmd_hop_1: (+1)
   \       0x24   0x2000             MOVS     R0,#+0
   \       0x26   0x9000             STR      R0,[SP, #+0]
    908          
    909              printf( "%s(%d) - Manual Hop : %d\n", __func__, __LINE__, nManHop );
                     ^
Warning[Pe223]: function "printf" declared implicitly
   \                     ??cmd_hop_2: (+1)
   \       0x28   0x9B00             LDR      R3,[SP, #+0]
   \       0x2A   0xF240 0x328D      MOVW     R2,#+909
   \       0x2E   0x.... 0x....      LDR.W    R1,??DataTable51_18
   \       0x32   0x.... 0x....      LDR.W    R0,??DataTable51_19
   \       0x36   0x.... 0x....      BL       printf
    910          
    911              g_nManHopping = nManHop;
   \       0x3A   0x9800             LDR      R0,[SP, #+0]
   \       0x3C   0x.... 0x....      LDR.W    R1,??DataTable55_1
   \       0x40   0x6008             STR      R0,[R1, #+0]
    912              SetManHop( nManHop );
   \       0x42   0x9800             LDR      R0,[SP, #+0]
   \       0x44   0x.... 0x....      BL       SetManHop
    913          }
                 ^
Warning[Pe940]: missing return statement at end of non-void function "cmd_hop"
   \       0x48   0xBD32             POP      {R1,R4,R5,PC}
    914          
    915          
    916          //========================================================================

   \                                 In section .text, align 2, keep-with-next
    917          int cmd_rfmod     ( int argc, char * argv[] )
    918          //========================================================================
    919          {
   \                     cmd_rfmod: (+1)
   \        0x0   0xB538             PUSH     {R3-R5,LR}
   \        0x2   0x0004             MOVS     R4,R0
   \        0x4   0x000D             MOVS     R5,R1
    920              int 		nRFMode = 0;
   \        0x6   0x2000             MOVS     R0,#+0
   \        0x8   0x9000             STR      R0,[SP, #+0]
    921          
    922              switch ( argc )
   \        0xA   0x2C02             CMP      R4,#+2
   \        0xC   0xD104             BNE.N    ??cmd_rfmod_0
    923              {
    924              case 2:		sscanf( argv[1], "%d", &nRFMode );	        //	cmd [Car No]
                            		^
Warning[Pe223]: function "sscanf" declared implicitly
   \        0xE   0x466A             MOV      R2,SP
   \       0x10   0x....             ADR.N    R1,??DataTable42_3
   \       0x12   0x6868             LDR      R0,[R5, #+4]
   \       0x14   0x.... 0x....      BL       sscanf
    925          //	case 2:		sText = argv[1];						//	sscanf( argv[1], "%s", sText );		//	cmd [Text]
    926                  break;
    927              }
    928          
    929          //  g_nManHopping;		//	On(1) / Off(2) / Unused(0 : Other)
    930              if ( nRFMode < 1 || RFModeMax < nRFMode )  nRFMode = RFModeDefault;
   \                     ??cmd_rfmod_0: (+1)
   \       0x18   0x9800             LDR      R0,[SP, #+0]
   \       0x1A   0x2801             CMP      R0,#+1
   \       0x1C   0xDB02             BLT.N    ??cmd_rfmod_1
   \       0x1E   0x9800             LDR      R0,[SP, #+0]
   \       0x20   0x2803             CMP      R0,#+3
   \       0x22   0xDB01             BLT.N    ??cmd_rfmod_2
   \                     ??cmd_rfmod_1: (+1)
   \       0x24   0x2001             MOVS     R0,#+1
   \       0x26   0x9000             STR      R0,[SP, #+0]
    931          
    932              printf( "%s(%d) - RFMode : %d\n", __func__, __LINE__, nRFMode );
                     ^
Warning[Pe223]: function "printf" declared implicitly
   \                     ??cmd_rfmod_2: (+1)
   \       0x28   0x9B00             LDR      R3,[SP, #+0]
   \       0x2A   0xF44F 0x7269      MOV      R2,#+932
   \       0x2E   0x.... 0x....      LDR.W    R1,??DataTable51_20
   \       0x32   0x.... 0x....      LDR.W    R0,??DataTable51_21
   \       0x36   0x.... 0x....      BL       printf
    933          
    934              g_nRFMode = nRFMode;
   \       0x3A   0x9800             LDR      R0,[SP, #+0]
   \       0x3C   0x.... 0x....      LDR.W    R1,??DataTable56
   \       0x40   0x6008             STR      R0,[R1, #+0]
    935              SetRFMode( nRFMode );
   \       0x42   0x9800             LDR      R0,[SP, #+0]
   \       0x44   0x.... 0x....      BL       SetRFMode
    936          }
                 ^
Warning[Pe940]: missing return statement at end of non-void function
          "cmd_rfmod"
   \       0x48   0xBD32             POP      {R1,R4,R5,PC}
    937          
    938          //========================================================================

   \                                 In section .text, align 2, keep-with-next
    939          int cmd_swinfo    ( int argc, char * argv[] )
    940          //========================================================================
    941          {
   \                     cmd_swinfo: (+1)
   \        0x0   0xB538             PUSH     {R3-R5,LR}
   \        0x2   0x0004             MOVS     R4,R0
   \        0x4   0x000D             MOVS     R5,R1
    942              printf( "[S/W Info]\n" );
                     ^
Warning[Pe223]: function "printf" declared implicitly
   \        0x6   0x.... 0x....      LDR.W    R0,??DataTable51_22
   \        0xA   0x.... 0x....      BL       printf
    943              printf( " - Boot : %d Byte\n", FLASH_If_GetBootSize() );
                                                    ^
Warning[Pe223]: function "FLASH_If_GetBootSize" declared implicitly
   \        0xE   0x.... 0x....      BL       FLASH_If_GetBootSize
   \       0x12   0x0001             MOVS     R1,R0
   \       0x14   0x.... 0x....      LDR.W    R0,??DataTable51_23
   \       0x18   0x.... 0x....      BL       printf
    944              printf( " - App : %d Byte\n", FLASH_If_GetAppSize() );
                                                   ^
Warning[Pe223]: function "FLASH_If_GetAppSize" declared implicitly
   \       0x1C   0x.... 0x....      BL       FLASH_If_GetAppSize
   \       0x20   0x0001             MOVS     R1,R0
   \       0x22   0x.... 0x....      LDR.W    R0,??DataTable55_2
   \       0x26   0x.... 0x....      BL       printf
    945          }
                 ^
Warning[Pe940]: missing return statement at end of non-void function
          "cmd_swinfo"
   \       0x2A   0xBD32             POP      {R1,R4,R5,PC}
    946          
    947          //========================================================================

   \                                 In section .text, align 2, keep-with-next
    948          int cmd_info    ( int argc, char * argv[] )
    949          //========================================================================
    950          {
   \                     cmd_info: (+1)
   \        0x0   0xB5F8             PUSH     {R3-R7,LR}
   \        0x2   0x0004             MOVS     R4,R0
   \        0x4   0x000D             MOVS     R5,R1
    951              //	info - Train Setting Config
    952              uint8_t		nBuf[10];
    953              int 		nCh = 0;
   \        0x6   0x2600             MOVS     R6,#+0
    954              uint16_t	nData;
    955          
    956              printf( "[Setting]\n" );
                     ^
Warning[Pe223]: function "printf" declared implicitly
   \        0x8   0x.... 0x....      LDR.W    R0,??DataTable51_24
   \        0xC   0x.... 0x....      BL       printf
    957              printf( " - Train Set : %d\n", 100 + GetTrainSetIdx() );
   \       0x10   0x.... 0x....      BL       GetTrainSetIdx
   \       0x14   0x3064             ADDS     R0,R0,#+100
   \       0x16   0x0001             MOVS     R1,R0
   \       0x18   0x.... 0x....      LDR.W    R0,??DataTable52_1
   \       0x1C   0x.... 0x....      BL       printf
    958              printf( " - Car No : %d\n", GetCarNo() );
   \       0x20   0x.... 0x....      BL       GetCarNo
   \       0x24   0x0001             MOVS     R1,R0
   \       0x26   0x.... 0x....      LDR.W    R0,??DataTable52_2
   \       0x2A   0x.... 0x....      BL       printf
    959              printf( " - RF Channel: %d\n", GetChRx() );
   \       0x2E   0x.... 0x....      BL       GetChRx
   \       0x32   0x0001             MOVS     R1,R0
   \       0x34   0x.... 0x....      LDR.W    R0,??DataTable52_3
   \       0x38   0x.... 0x....      BL       printf
    960              printf( " - Mode : %s(%d)\n", StrRFMMode( GetRFMMode() ), GetRFMMode()  );	//	Normal / Tx / Rx / Upgrade
   \       0x3C   0x.... 0x....      BL       GetRFMMode
   \       0x40   0x0007             MOVS     R7,R0
   \       0x42   0x.... 0x....      BL       GetRFMMode
   \       0x46   0x.... 0x....      BL       StrRFMMode
   \       0x4A   0x003A             MOVS     R2,R7
   \       0x4C   0x0001             MOVS     R1,R0
   \       0x4E   0x.... 0x....      LDR.W    R0,??DataTable52_4
   \       0x52   0x.... 0x....      BL       printf
    961              printf( " - GetChNearRFM() : %d\n", GetChNearRFM() );
   \       0x56   0x.... 0x....      BL       GetChNearRFM
   \       0x5A   0x0001             MOVS     R1,R0
   \       0x5C   0x.... 0x....      LDR.W    R0,??DataTable52_5
   \       0x60   0x.... 0x....      BL       printf
    962              printf( " - GetChNearRFT() : %d\n", GetChNearRFT( 190 ) );
   \       0x64   0x20BE             MOVS     R0,#+190
   \       0x66   0x.... 0x....      BL       GetChNearRFT
   \       0x6A   0x0001             MOVS     R1,R0
   \       0x6C   0x.... 0x....      LDR.W    R0,??DataTable52_6
   \       0x70   0x.... 0x....      BL       printf
    963              printf( " - GetChPARFT() : %d\n", GetChPARFT() );
   \       0x74   0x.... 0x....      BL       GetChPARFT
   \       0x78   0x0001             MOVS     R1,R0
   \       0x7A   0x.... 0x....      LDR.W    R0,??DataTable53
   \       0x7E   0x.... 0x....      BL       printf
    964              printf( " - GetChPA() : %d\n", GetChPA() );
   \       0x82   0x.... 0x....      BL       GetChPA
   \       0x86   0x0001             MOVS     R1,R0
   \       0x88   0x.... 0x....      LDR.W    R0,??DataTable53_1
   \       0x8C   0x.... 0x....      BL       printf
    965              printf( " - GetChRFMUp() : %d\n", GetChRFMUp() );
   \       0x90   0x.... 0x....      BL       GetChRFMUp
   \       0x94   0x0001             MOVS     R1,R0
   \       0x96   0x.... 0x....      LDR.W    R0,??DataTable53_2
   \       0x9A   0x.... 0x....      BL       printf
    966              printf( " - GetChRFMDown() : %d\n", GetChRFMDown() );
   \       0x9E   0x.... 0x....      BL       GetChRFMDown
   \       0xA2   0x0001             MOVS     R1,R0
   \       0xA4   0x.... 0x....      LDR.W    R0,??DataTable56_1
   \       0xA8   0x.... 0x....      BL       printf
    967          }
                 ^
Warning[Pe940]: missing return statement at end of non-void function "cmd_info"

      uint8_t		nBuf[10];
             		^
"C:\D\Git_Hub\STM_IAR_SIL_Change\Library\rfm.c",952  Warning[Pe177]: variable
          "nBuf" was declared but never referenced

      int 		nCh = 0;
          		^
"C:\D\Git_Hub\STM_IAR_SIL_Change\Library\rfm.c",953  Warning[Pe177]: variable
          "nCh" was declared but never referenced

      uint16_t	nData;
              	^
"C:\D\Git_Hub\STM_IAR_SIL_Change\Library\rfm.c",954  Warning[Pe177]: variable
          "nData" was declared but never referenced
   \       0xAC   0xBDF2             POP      {R1,R4-R7,PC}
    968          
    969          
    970          //========================================================================

   \                                 In section .text, align 2, keep-with-next
    971          int cmd_rfstat    ( int argc, char * argv[] )
    972          //========================================================================
    973          {
   \                     cmd_rfstat: (+1)
   \        0x0   0xB538             PUSH     {R3-R5,LR}
   \        0x2   0x0004             MOVS     R4,R0
   \        0x4   0x000D             MOVS     R5,R1
    974              //	rfstat - RF Tx / Rx Status
    975              printf( "[RF Info] Tx : %d / Rx : %d\n", nTxPkt, nRxPkt );
                     ^
Warning[Pe223]: function "printf" declared implicitly
   \        0x6   0x.... 0x....      LDR.W    R0,??DataTable54_1
   \        0xA   0x6802             LDR      R2,[R0, #+0]
   \        0xC   0x.... 0x....      LDR.W    R0,??DataTable54_2
   \       0x10   0x6801             LDR      R1,[R0, #+0]
   \       0x12   0x.... 0x....      LDR.W    R0,??DataTable56_2
   \       0x16   0x.... 0x....      BL       printf
    976          }
                 ^
Warning[Pe940]: missing return statement at end of non-void function
          "cmd_rfstat"
   \       0x1A   0xBD32             POP      {R1,R4,R5,PC}
    977          
    978          #if defined(USE_TEST_RF_TX_LOOP)
    979          //========================================================================
    980          int cmd_rftx    ( int argc, char * argv[] )
    981          //========================================================================
    982          {
    983              //	RF Tx
    984              int 	nCh		=	0;
    985          
    986              switch ( argc )
    987              {
    988              case 2:		sscanf( argv[1], "%d", &nCh );	        //	ID
    989          //	case 2:		sText = argv[1];						//	sscanf( argv[1], "%s", sText );		//	cmd [Text]
    990                  break;
    991              }
    992          
    993              printf( "%s(%d) - CH(%d)\n", __func__, __LINE__, nCh );
    994          
    995              uint8_t sBuf[100];
    996              int nCnt = 0;
    997          
    998              while ( 1 )
    999              {
   1000              	if ( ( nCnt % 300 ) == 0 )
   1001              	{
   1002              		printf(".");
   1003          
   1004          			//	RFM(Board) Status LED
   1005          			HAL_GPIO_TogglePin ( LED_ST_GPIO_Port, LED_ST_Pin );
   1006              	}
   1007          
   1008              	//*
   1009              	SendPktCh(nCh, sBuf, 64);
   1010              	HAL_Delay(3);
   1011          
   1012              	//	Watchdog Reload
   1013              	__HAL_IWDG_RELOAD_COUNTER(&hiwdg);
   1014          
   1015              	/*/
   1016          
   1017              	SendPktCh(7, sBuf, 64);	//	Reserved
   1018          
   1019              	SendPktCh(ChRFT, sBuf, 64);
   1020          
   1021              	SendPktCh(ChTS2_1, sBuf, 64);	//	21
   1022          
   1023              	SendPktCh(nCh, sBuf, 64);
   1024          
   1025              	//*/
                     	 ^
Warning[Pe009]: nested comment is not allowed
   1026          
   1027              	nCnt++;
   1028              }
   1029          }
   1030          #endif
   1031          
   1032          //========================================================================

   \                                 In section .text, align 2, keep-with-next
   1033          int cmd_txpwr    ( int argc, char * argv[] )
   1034          //========================================================================
   1035          {
   \                     cmd_txpwr: (+1)
   \        0x0   0xB538             PUSH     {R3-R5,LR}
   \        0x2   0x0004             MOVS     R4,R0
   \        0x4   0x000D             MOVS     R5,R1
   1036              //	RF Tx
   1037              uint8_t		nPwr	=	0x7F;
   \        0x6   0x207F             MOVS     R0,#+127
   \        0x8   0xF88D 0x0000      STRB     R0,[SP, #+0]
   1038          
   1039              switch ( argc )
   \        0xC   0x2C02             CMP      R4,#+2
   \        0xE   0xD104             BNE.N    ??cmd_txpwr_0
   1040              {
   1041              case 2:		sscanf( argv[1], "%d", &nPwr );	        //	ID
                            		^
Warning[Pe223]: function "sscanf" declared implicitly
   \       0x10   0x466A             MOV      R2,SP
   \       0x12   0x....             ADR.N    R1,??DataTable48_1
   \       0x14   0x6868             LDR      R0,[R5, #+4]
   \       0x16   0x.... 0x....      BL       sscanf
   1042          //	case 2:		sText = argv[1];						//	sscanf( argv[1], "%s", sText );		//	cmd [Text]
   1043                  break;
   1044              }
   1045          
   1046              printf( "%s(%d) - Tx Pwr(%d)\n", __func__, __LINE__, nPwr );
                     ^
Warning[Pe223]: function "printf" declared implicitly
   \                     ??cmd_txpwr_0: (+1)
   \       0x1A   0xF89D 0x3000      LDRB     R3,[SP, #+0]
   \       0x1E   0xF240 0x4216      MOVW     R2,#+1046
   \       0x22   0x.... 0x....      LDR.W    R1,??DataTable54_3
   \       0x26   0x.... 0x....      LDR.W    R0,??DataTable56_3
   \       0x2A   0x.... 0x....      BL       printf
   1047          
   1048              vRadio_Set_TxPower( nPwr );
   \       0x2E   0xF89D 0x0000      LDRB     R0,[SP, #+0]
   \       0x32   0x.... 0x....      BL       vRadio_Set_TxPower
   1049          }
                 ^
Warning[Pe940]: missing return statement at end of non-void function
          "cmd_txpwr"
   \       0x36   0xBD32             POP      {R1,R4,R5,PC}
   1050          
   1051          //========================================================================

   \                                 In section .text, align 2, keep-with-next
   1052          int cmd_rspid     ( int argc, char * argv[] )
   1053          //========================================================================
   1054          {
   \                     cmd_rspid: (+1)
   \        0x0   0xB53E             PUSH     {R1-R5,LR}
   \        0x2   0x0004             MOVS     R4,R0
   \        0x4   0x000D             MOVS     R5,R1
   1055              //	rspid [Car No] [0/1]
   1056              int 		nID 	= 0;
   \        0x6   0x2000             MOVS     R0,#+0
   \        0x8   0x9000             STR      R0,[SP, #+0]
   1057              int 		nSet 	= 0;
   \        0xA   0x2000             MOVS     R0,#+0
   \        0xC   0x9001             STR      R0,[SP, #+4]
   1058          
   1059              switch ( argc )
   \        0xE   0x0020             MOVS     R0,R4
   \       0x10   0x2802             CMP      R0,#+2
   \       0x12   0xD006             BEQ.N    ??cmd_rspid_0
   \       0x14   0x2803             CMP      R0,#+3
   \       0x16   0xD109             BNE.N    ??cmd_rspid_1
   1060              {
   1061              case 3:		sscanf( argv[2], "%d", &nSet );	        //	Set
                            		^
Warning[Pe223]: function "sscanf" declared implicitly
   \                     ??cmd_rspid_2: (+1)
   \       0x18   0xAA01             ADD      R2,SP,#+4
   \       0x1A   0x....             ADR.N    R1,??DataTable48_1
   \       0x1C   0x68A8             LDR      R0,[R5, #+8]
   \       0x1E   0x.... 0x....      BL       sscanf
   1062              case 2:		sscanf( argv[1], "%d", &nID );	        //	ID
   \                     ??cmd_rspid_0: (+1)
   \       0x22   0x466A             MOV      R2,SP
   \       0x24   0x....             ADR.N    R1,??DataTable48_1
   \       0x26   0x6868             LDR      R0,[R5, #+4]
   \       0x28   0x.... 0x....      BL       sscanf
   1063          //	case 2:		sText = argv[1];						//	sscanf( argv[1], "%s", sText );		//	cmd [Text]
   1064                  break;
   1065              }
   1066          
   1067              if ( nID < 0 || MaxCarNo < nID )
   \                     ??cmd_rspid_1: (+1)
   \       0x2C   0x9800             LDR      R0,[SP, #+0]
   \       0x2E   0x2800             CMP      R0,#+0
   \       0x30   0xD402             BMI.N    ??cmd_rspid_3
   \       0x32   0x9800             LDR      R0,[SP, #+0]
   \       0x34   0x280E             CMP      R0,#+14
   \       0x36   0xDB09             BLT.N    ??cmd_rspid_4
   1068              {
   1069              	printf("%s(%d) - return\n", __func__, __LINE__);
                     	^
Warning[Pe223]: function "printf" declared implicitly
   \                     ??cmd_rspid_3: (+1)
   \       0x38   0xF240 0x422D      MOVW     R2,#+1069
   \       0x3C   0x.... 0x....      LDR.W    R1,??DataTable56_4
   \       0x40   0x.... 0x....      LDR.W    R0,??DataTable56_5
   \       0x44   0x.... 0x....      BL       printf
   1070              	return 0;
   \       0x48   0x2000             MOVS     R0,#+0
   \       0x4A   0xE035             B.N      ??cmd_rspid_5
   1071              }
   1072          
   1073              //	ID Flag Manual 설정.
   1074              g_bSetRspIDManual = 1;
   \                     ??cmd_rspid_4: (+1)
   \       0x4C   0x2001             MOVS     R0,#+1
   \       0x4E   0x.... 0x....      LDR.W    R1,??DataTable56_6
   \       0x52   0x6008             STR      R0,[R1, #+0]
   1075          
   1076              if ( nSet )
   \       0x54   0x9801             LDR      R0,[SP, #+4]
   \       0x56   0x2800             CMP      R0,#+0
   \       0x58   0xD011             BEQ.N    ??cmd_rspid_6
   1077              {
   1078              	//	Set ID Flag
   1079              	g_flagRspID |= ( 0x1 << nID );
   \       0x5A   0x.... 0x....      LDR.W    R1,??DataTable56_7
   \       0x5E   0x880A             LDRH     R2,[R1, #+0]
   \       0x60   0x2301             MOVS     R3,#+1
   \       0x62   0x9800             LDR      R0,[SP, #+0]
   \       0x64   0x4083             LSLS     R3,R3,R0
   \       0x66   0x431A             ORRS     R2,R3,R2
   \       0x68   0x800A             STRH     R2,[R1, #+0]
   1080          		g_devStat[nID].nRSSI = 200;
   \       0x6A   0x....             LDR.N    R1,??DataTable48
   \       0x6C   0x9A00             LDR      R2,[SP, #+0]
   \       0x6E   0x2025             MOVS     R0,#+37
   \       0x70   0x4342             MULS     R2,R0,R2
   \       0x72   0xEB01 0x0002      ADD      R0,R1,R2
   \       0x76   0x21C8             MOVS     R1,#+200
   \       0x78   0xF8C0 0x101D      STR      R1,[R0, #+29]
   \       0x7C   0xE010             B.N      ??cmd_rspid_7
   1081              }
   1082              else
   1083              {
   1084              	//	Clear ID Flag
   1085              	g_flagRspID &= ~( 0x1 << nID );
   \                     ??cmd_rspid_6: (+1)
   \       0x7E   0x.... 0x....      LDR.W    R1,??DataTable56_7
   \       0x82   0x880A             LDRH     R2,[R1, #+0]
   \       0x84   0x2301             MOVS     R3,#+1
   \       0x86   0x9800             LDR      R0,[SP, #+0]
   \       0x88   0x4083             LSLS     R3,R3,R0
   \       0x8A   0x439A             BICS     R2,R2,R3
   \       0x8C   0x800A             STRH     R2,[R1, #+0]
   1086          		g_devStat[nID].nRSSI = 0;
   \       0x8E   0x....             LDR.N    R1,??DataTable48
   \       0x90   0x9A00             LDR      R2,[SP, #+0]
   \       0x92   0x2025             MOVS     R0,#+37
   \       0x94   0x4342             MULS     R2,R0,R2
   \       0x96   0xEB01 0x0002      ADD      R0,R1,R2
   \       0x9A   0x2100             MOVS     R1,#+0
   \       0x9C   0xF8C0 0x101D      STR      R1,[R0, #+29]
   1087              }
   1088          
   1089              printf( "%s(%d) - ID Flag : 0x%04X\n", __func__, __LINE__, g_flagRspID );
                     ^
Warning[Pe223]: function "printf" declared implicitly
   \                     ??cmd_rspid_7: (+1)
   \       0xA0   0x.... 0x....      LDR.W    R0,??DataTable56_7
   \       0xA4   0x8803             LDRH     R3,[R0, #+0]
   \       0xA6   0xF240 0x4241      MOVW     R2,#+1089
   \       0xAA   0x.... 0x....      LDR.W    R1,??DataTable56_4
   \       0xAE   0x.... 0x....      LDR.W    R0,??DataTable56_8
   \       0xB2   0x.... 0x....      BL       printf
   1090          
   1091          	return 1;
   \       0xB6   0x2001             MOVS     R0,#+1
   \                     ??cmd_rspid_5: (+1)
   \       0xB8   0xBD3E             POP      {R1-R5,PC}
   1092          }
   1093          
   1094          
   1095          //========================================================================

   \                                 In section .text, align 2, keep-with-next
   1096          int cmd_OccPa     ( int argc, char * argv[] )
   1097          //========================================================================
   1098          {
   \                     cmd_OccPa: (+1)
   \        0x0   0xB57C             PUSH     {R2-R6,LR}
   \        0x2   0x0004             MOVS     R4,R0
   \        0x4   0x000D             MOVS     R5,R1
   1099          	//========================================================================
   1100              //	occ [1(start)/0(stop)]	-	대승객방송
   1101          
   1102          	printf("%s(%d)\n", __func__, __LINE__ );
                 	^
Warning[Pe223]: function "printf" declared implicitly
   \        0x6   0x.... 0x....      LDR.W    R6,??DataTable56_9
   \        0xA   0xF240 0x424E      MOVW     R2,#+1102
   \        0xE   0x0031             MOVS     R1,R6
   \       0x10   0x.... 0x....      LDR.W    R0,??DataTable56_10
   \       0x14   0x.... 0x....      BL       printf
   1103          
   1104          	//	대승객방송 시작/종료
   1105              int 		nOnOff 	= 0;
   \       0x18   0x2000             MOVS     R0,#+0
   \       0x1A   0x9000             STR      R0,[SP, #+0]
   1106          
   1107              switch ( argc )
   \       0x1C   0x2C02             CMP      R4,#+2
   \       0x1E   0xD104             BNE.N    ??cmd_OccPa_0
   1108              {
   1109              case 2:		sscanf( argv[1], "%d", &nOnOff );	    //	On/Off
                            		^
Warning[Pe223]: function "sscanf" declared implicitly
   \       0x20   0x466A             MOV      R2,SP
   \       0x22   0x....             ADR.N    R1,??DataTable48_1
   \       0x24   0x6868             LDR      R0,[R5, #+4]
   \       0x26   0x.... 0x....      BL       sscanf
   1110                  break;
   1111              }
   1112          
   1113              if ( nOnOff == 1 )
   \                     ??cmd_OccPa_0: (+1)
   \       0x2A   0x9800             LDR      R0,[SP, #+0]
   \       0x2C   0x2801             CMP      R0,#+1
   \       0x2E   0xD11D             BNE.N    ??cmd_OccPa_1
   1114              {
   1115              	printf("%s(%d) - Start\n", __func__, __LINE__ );
   \       0x30   0xF240 0x425B      MOVW     R2,#+1115
   \       0x34   0x0031             MOVS     R1,R6
   \       0x36   0x.... 0x....      LDR.W    R0,??DataTable56_11
   \       0x3A   0x.... 0x....      BL       printf
   1116          
   1117              	//	OCC Mode
   1118              	SetRFMMode( RFMModeOcc );
   \       0x3E   0x2003             MOVS     R0,#+3
   \       0x40   0x.... 0x....      BL       SetRFMMode
   1119          
   1120          #if USE_RFM_OCC_PA
   1121          
   1122          #else
   1123              	//	Audio Loopback On
   1124          		AudioDMALoopback();
   1125          #endif
   1126          
   1127          		// 조명 On
   1128          		HAL_GPIO_WritePin ( LIGHT_ON_GPIO_Port, LIGHT_ON_Pin, GPIO_PIN_SET );
   \       0x44   0x.... 0x....      LDR.W    R6,??DataTable56_12
   \       0x48   0x2201             MOVS     R2,#+1
   \       0x4A   0xF44F 0x7100      MOV      R1,#+512
   \       0x4E   0x0030             MOVS     R0,R6
   \       0x50   0x.... 0x....      BL       HAL_GPIO_WritePin
   1129          
   1130          		//	Spk On
   1131          		HAL_GPIO_WritePin( SPK_ON_GPIO_Port, SPK_ON_Pin, GPIO_PIN_SET );
   \       0x54   0x2201             MOVS     R2,#+1
   \       0x56   0x2120             MOVS     R1,#+32
   \       0x58   0x0030             MOVS     R0,R6
   \       0x5A   0x.... 0x....      BL       HAL_GPIO_WritePin
   1132          
   1133          		//  수신기 Spk Relay On
   1134          		HAL_GPIO_WritePin( AUDIO_ON_GPIO_Port, AUDIO_ON_Pin, GPIO_PIN_SET );
   \       0x5E   0x2201             MOVS     R2,#+1
   \       0x60   0xF44F 0x7180      MOV      R1,#+256
   \       0x64   0x0030             MOVS     R0,R6
   \       0x66   0x.... 0x....      BL       HAL_GPIO_WritePin
   \       0x6A   0xE016             B.N      ??cmd_OccPa_2
   1135              }
   1136              else
   1137              {
   1138              	printf("%s(%d) - Stop\n", __func__, __LINE__ );
   \                     ??cmd_OccPa_1: (+1)
   \       0x6C   0xF240 0x4272      MOVW     R2,#+1138
   \       0x70   0x0031             MOVS     R1,R6
   \       0x72   0x.... 0x....      LDR.W    R0,??DataTable56_13
   \       0x76   0x.... 0x....      BL       printf
   1139          
   1140              	//	Normal Mode
   1141              	SetRFMMode( RFMModeNormal );
   \       0x7A   0x2000             MOVS     R0,#+0
   \       0x7C   0x.... 0x....      BL       SetRFMMode
   1142          
   1143          #if USE_RFM_OCC_PA
   1144          
   1145          #else
   1146              	//	Audio Loopback Off
   1147              	AudioDMARFM();
   1148          #endif
   1149          
   1150              	//	Spk Off.
   1151          		HAL_GPIO_WritePin( SPK_ON_GPIO_Port, SPK_ON_Pin, GPIO_PIN_RESET );
   \       0x80   0x.... 0x....      LDR.W    R6,??DataTable56_12
   \       0x84   0x2200             MOVS     R2,#+0
   \       0x86   0x2120             MOVS     R1,#+32
   \       0x88   0x0030             MOVS     R0,R6
   \       0x8A   0x.... 0x....      BL       HAL_GPIO_WritePin
   1152          
   1153          		//  수신기 Spk Relay Off
   1154          		HAL_GPIO_WritePin( AUDIO_ON_GPIO_Port, AUDIO_ON_Pin, GPIO_PIN_RESET );
   \       0x8E   0x2200             MOVS     R2,#+0
   \       0x90   0xF44F 0x7180      MOV      R1,#+256
   \       0x94   0x0030             MOVS     R0,R6
   \       0x96   0x.... 0x....      BL       HAL_GPIO_WritePin
   1155              }
   1156          }
                 ^
Warning[Pe940]: missing return statement at end of non-void function
          "cmd_OccPa"
   \                     ??cmd_OccPa_2: (+1)
   \       0x9A   0xBD76             POP      {R1,R2,R4-R6,PC}
   1157          
   1158          
   1159          //========================================================================
   1160          //		RFM I2S Callback
   1161          //========================================================================
   1162          
   1163          
   1164          //========================================================================
   1165          //	interpolation compress ( 보간압축 )
   1166          #if defined( USE_AUDIO_INTERPOL_COMPRESS )	//	보간압축사용.
   1167          
   1168          #define	FRAME_ENC_SIZE		(I2S_DMA_LOOP_SIZE * AUDIO_COMPR_RATE)
   1169          
   1170          static int16_t	bufAudioEnc[FRAME_ENC_SIZE * 2];	//	Rx
   1171          static int16_t	bufAudioDec[FRAME_ENC_SIZE * 2];	//	Tx
   1172          
   1173          #elif defined( USE_AUDIO_ADPCM )	//	ADPCM 사용. - 1/4 압축
   1174          
   1175          #define	FRAME_ENC_SIZE		(I2S_DMA_LOOP_SIZE * 4)		//	1/4 압축
   1176          

   \                                 In section .bss, align 4
   1177          static int16_t	bufAudioEnc[FRAME_ENC_SIZE * 2];	//	Rx
   \                     bufAudioEnc:
   \        0x0                      DS8 480

   \                                 In section .bss, align 4
   1178          static int16_t	bufAudioDec[FRAME_ENC_SIZE * 2];	//	Tx
   \                     bufAudioDec:
   \        0x0                      DS8 480
   1179          

   \                                 In section .text, align 2, keep-with-next
   1180          signed short lowpass_Filter(signed short input)
   1181          {
   \                     lowpass_Filter: (+1)
   \        0x0   0x0001             MOVS     R1,R0
   1182          	static signed short last_sample=0;
   1183          	signed short retvalue = ((input + (last_sample * 7)) >> 3);
   \        0x2   0x.... 0x....      LDR.W    R2,??DataTable56_14
   \        0x6   0xF9B2 0x0000      LDRSH    R0,[R2, #+0]
   \        0xA   0x2307             MOVS     R3,#+7
   \        0xC   0xFB10 0xF003      SMULBB   R0,R0,R3
   \       0x10   0xFA00 0xF081      SXTAH    R0,R0,R1
   \       0x14   0x10C0             ASRS     R0,R0,#+3
   1184          	last_sample = retvalue;
   \       0x16   0x8010             STRH     R0,[R2, #+0]
   1185          	return retvalue;
   \       0x18   0xB200             SXTH     R0,R0
   \       0x1A   0x4770             BX       LR
   1186          }

   \                                 In section .bss, align 2
   \                     `lowpass_Filter::last_sample`:
   \        0x0                      DS8 2
   1187          
   1188          #endif	//
   1189          //========================================================================
   1190          

   \                                 In section .data, align 4
   1191          static int bRxBuffering = 1;	//  Rx Buffering. ( Packet 4 ~ Packet 0)
   \                     bRxBuffering:
   \        0x0   0x0000'0001        DC32 1
   1192          
   1193          //========================================================================

   \                                 In section .text, align 2, keep-with-next
   1194          void RFM_I2SEx_TxRxCpltCallback( I2S_HandleTypeDef *hi2s )
   1195          //========================================================================
   1196          {
   \                     RFM_I2SEx_TxRxCpltCallback: (+1)
   \        0x0   0xE92D 0x4FF8      PUSH     {R3-R11,LR}
   \        0x4   0x0004             MOVS     R4,R0
   1197          	static int 	idx = 0;
   1198          	int16_t		*pAudioTx;
   1199          	int16_t		*pAudioRx;
   1200          
   1201          	{
   1202          #if defined( USE_AUDIO_INTERPOL_COMPRESS )	|| defined( USE_AUDIO_ADPCM ) //	보간압축사용 or ADPCM 사용.
   1203          
   1204          		pAudioTx = &bufAudioDec[FRAME_ENC_SIZE * idx];
   \        0x6   0x26F0             MOVS     R6,#+240
   \        0x8   0x.... 0x....      LDR.W    R7,??DataTable56_15
   \        0xC   0x.... 0x....      LDR.W    R10,??DataTable56_16
   \       0x10   0x6838             LDR      R0,[R7, #+0]
   \       0x12   0x4370             MULS     R0,R6,R0
   \       0x14   0xEB0A 0x0800      ADD      R8,R10,R0
   1205          		pAudioRx = &bufAudioEnc[FRAME_ENC_SIZE * (( idx + 1 ) % 2)];
   \       0x18   0x6838             LDR      R0,[R7, #+0]
   \       0x1A   0x1C40             ADDS     R0,R0,#+1
   \       0x1C   0x2102             MOVS     R1,#+2
   \       0x1E   0x.... 0x....      LDR.W    R5,??DataTable56_17
   \       0x22   0xFB90 0xF2F1      SDIV     R2,R0,R1
   \       0x26   0xFB01 0x0012      MLS      R0,R1,R2,R0
   \       0x2A   0x4370             MULS     R0,R6,R0
   \       0x2C   0xEB05 0x0900      ADD      R9,R5,R0
   1206          
   1207          		HAL_I2SEx_TransmitReceive_DMA( &hi2s3,
   1208          										pAudioTx,	//	Tx
                 										^
Warning[Pe167]: argument of type "int16_t *" is incompatible with parameter of
          type "uint16_t *"
   1209          										pAudioRx,	//	Rx
                 										^
Warning[Pe167]: argument of type "int16_t *" is incompatible with parameter of
          type "uint16_t *"
   1210          										FRAME_ENC_SIZE ); // 32byte
   \       0x30   0x2378             MOVS     R3,#+120
   \       0x32   0x464A             MOV      R2,R9
   \       0x34   0x4641             MOV      R1,R8
   \       0x36   0x.... 0x....      LDR.W    R0,??DataTable56_18
   \       0x3A   0x.... 0x....      BL       HAL_I2SEx_TransmitReceive_DMA
   1211          
   1212          		pAudioRx = &bufAudioEnc[FRAME_ENC_SIZE * idx];
   \       0x3E   0x6838             LDR      R0,[R7, #+0]
   \       0x40   0x4370             MULS     R0,R6,R0
   \       0x42   0x4405             ADD      R5,R5,R0
   1213          		idx = ( idx + 1 ) % 2;
   \       0x44   0x6838             LDR      R0,[R7, #+0]
   \       0x46   0x1C40             ADDS     R0,R0,#+1
   \       0x48   0x2102             MOVS     R1,#+2
   \       0x4A   0xFB90 0xF2F1      SDIV     R2,R0,R1
   \       0x4E   0xFB01 0x0012      MLS      R0,R1,R2,R0
   \       0x52   0x6038             STR      R0,[R7, #+0]
   1214          		pAudioTx = &bufAudioDec[FRAME_ENC_SIZE * idx];
   \       0x54   0x6838             LDR      R0,[R7, #+0]
   \       0x56   0xFB06 0xF600      MUL      R6,R6,R0
   \       0x5A   0x4456             ADD      R6,R10,R6
   1215          
   1216          #else
   1217          
   1218          		pAudioTx = &t_audio_buff[I2S_DMA_LOOP_SIZE * idx];
   1219          		pAudioRx = &r_audio_buff[I2S_DMA_LOOP_SIZE * (( idx + 1 ) % 2)];
   1220          
   1221          		HAL_I2SEx_TransmitReceive_DMA( 	&hi2s3,
   1222          										pAudioTx,
   1223          										pAudioRx,
   1224          										I2S_DMA_LOOP_SIZE ); // 32byte
   1225          
   1226          		pAudioRx = &r_audio_buff[I2S_DMA_LOOP_SIZE * idx];
   1227          		idx = ( idx + 1 ) % 2;
   1228          		pAudioTx = &t_audio_buff[I2S_DMA_LOOP_SIZE * idx];
   1229          
   1230          #endif
   1231          	}
   1232          
   1233          	{
   1234          		//========================================================================
   1235          		//  송신기.
   1236          
   1237          		//  r_audio_buff -> RF-Tx
   1238          
   1239          		if ( qBufCnt( &g_qBufAudioTx ) < ( ( I2S_DMA_LOOP_SIZE * 2 ) * ( I2S_DMA_LOOP_QCNT - 1 ) ) )
   \       0x5C   0x.... 0x....      LDR.W    R7,??DataTable56_19
   \       0x60   0x0038             MOVS     R0,R7
   \       0x62   0x.... 0x....      BL       qBufCnt
   \       0x66   0xF5B0 0x7FD2      CMP      R0,#+420
   \       0x6A   0xDA28             BGE.N    ??RFM_I2SEx_TxRxCpltCallback_0
   1240          		{
   1241          			//  printf ( "P" );
   1242          			//  memset( r_audio_buff, idx, 64 );		//  Data Setting
   1243          
   1244          			//========================================================================
   1245          #if defined( USE_AUDIO_INTERPOL_COMPRESS )	//	보간압축사용.
   1246          
   1247          			//	Encoding : 8 KHz -> 2 KHz
   1248          			int i;
   1249          			for( i = 0; i < I2S_DMA_LOOP_SIZE; i++ )
   1250          			{
   1251          				r_audio_buff[ i ] = pAudioRx[ i * AUDIO_COMPR_RATE ];
   1252          			}
   1253          
   1254          			qBufPut( &g_qBufAudioTx, (uint8_t *)r_audio_buff, ( I2S_DMA_LOOP_SIZE * 2 ) );
   1255          
   1256          #elif defined( USE_AUDIO_ADPCM )	//	ADPCM 사용. - 1/4 압축
   1257          
   1258          			//	ADPCM : 16 bit -> 4 bit
   1259          			int i;
   1260          			uint8_t *pABuf = (uint8_t *)r_audio_buff;
   \       0x6C   0x.... 0x....      LDR.W    R8,??DataTable56_20
   \       0x70   0x46C1             MOV      R9,R8
   1261          			for( i = 0; i < I2S_DMA_LOOP_SIZE*2; i++ )
   \       0x72   0xF05F 0x0A00      MOVS     R10,#+0
   \                     ??RFM_I2SEx_TxRxCpltCallback_1: (+1)
   \       0x76   0xF1BA 0x0F3C      CMP      R10,#+60
   \       0x7A   0xDA1B             BGE.N    ??RFM_I2SEx_TxRxCpltCallback_2
   1262          			{
   1263          				//*
   1264          				pABuf[i] = (uint8_t)((uint8_t)((ADPCM_Encode(lowpass_Filter((int16_t)pAudioRx[i*2])<<1)&(0x0F))<<4)
   1265          								| (uint8_t)(ADPCM_Encode(lowpass_Filter((int16_t)pAudioRx[i*2+1])<<1)&0x0F));
   \       0x7C   0xF935 0x002A      LDRSH    R0,[R5, R10, LSL #+2]
   \       0x80   0x.... 0x....      BL       lowpass_Filter
   \       0x84   0xB200             SXTH     R0,R0
   \       0x86   0x0040             LSLS     R0,R0,#+1
   \       0x88   0x.... 0x....      BL       ADPCM_Encode
   \       0x8C   0x4683             MOV      R11,R0
   \       0x8E   0xEB05 0x008A      ADD      R0,R5,R10, LSL #+2
   \       0x92   0xF9B0 0x0002      LDRSH    R0,[R0, #+2]
   \       0x96   0x.... 0x....      BL       lowpass_Filter
   \       0x9A   0xB200             SXTH     R0,R0
   \       0x9C   0x0040             LSLS     R0,R0,#+1
   \       0x9E   0x.... 0x....      BL       ADPCM_Encode
   \       0xA2   0xF010 0x000F      ANDS     R0,R0,#0xF
   \       0xA6   0xEA50 0x100B      ORRS     R0,R0,R11, LSL #+4
   \       0xAA   0xF809 0x000A      STRB     R0,[R9, R10]
   1266          				/*/
   1267          				pABuf[i] = (uint8_t)((uint8_t)((ADPCM_Encode((int16_t)pAudioRx[i*2])&(0x0F))<<4)
   1268          								| (uint8_t)(ADPCM_Encode((int16_t)pAudioRx[i*2+1])&0x0F));
   1269          				//	*/
   1270          			}
   \       0xAE   0xF11A 0x0A01      ADDS     R10,R10,#+1
   \       0xB2   0xE7E0             B.N      ??RFM_I2SEx_TxRxCpltCallback_1
   1271          
   1272          			qBufPut( &g_qBufAudioTx, (uint8_t *)r_audio_buff, ( I2S_DMA_LOOP_SIZE * 2 ) );
   \                     ??RFM_I2SEx_TxRxCpltCallback_2: (+1)
   \       0xB4   0x223C             MOVS     R2,#+60
   \       0xB6   0x4641             MOV      R1,R8
   \       0xB8   0x0038             MOVS     R0,R7
   \       0xBA   0x.... 0x....      BL       qBufPut
   1273          
   1274          #else	//
   1275          			//========================================================================
   1276          			//	Queue Put
   1277          			qBufPut( &g_qBufAudioTx, (uint8_t *)pAudioRx, ( I2S_DMA_LOOP_SIZE * 2 ) );
   1278          #endif
   1279          		}
   1280          
   1281          		/*
   1282          
   1283          		//========================================================================
   1284          		//  Audio In -> Audio Out Loop
   1285          		memcpy( t_audio_buff, r_audio_buff, 64 );
   1286          
   1287          		/*/
                 		^
Warning[Pe009]: nested comment is not allowed
   1288          
   1289          #if defined( USE_AUDIO_INTERPOL_COMPRESS ) || defined( USE_AUDIO_ADPCM )	//	보간압축사용 or ACPCM 사용
   1290          		memset( pAudioTx, 0, FRAME_ENC_SIZE * 2 );	//	Tx
                 		^
Warning[Pe223]: function "memset" declared implicitly
   \                     ??RFM_I2SEx_TxRxCpltCallback_0: (+1)
   \       0xBE   0x22F0             MOVS     R2,#+240
   \       0xC0   0x2100             MOVS     R1,#+0
   \       0xC2   0x0030             MOVS     R0,R6
   \       0xC4   0x.... 0x....      BL       memset
   1291          #else
   1292          		memset( pAudioTx, 0, I2S_DMA_LOOP_SIZE * 2 );
   1293          #endif
   1294          
   1295          		//========================================================================
   1296          		//  Rx Buffering ( Packet Count : 0 ~ 4 )
   1297          		//  RF-Rx -> t_audio_buff
   1298          		if ( bRxBuffering )
   \       0xC8   0x.... 0x....      LDR.W    R7,??DataTable56_21
   \       0xCC   0x6838             LDR      R0,[R7, #+0]
   \       0xCE   0x2800             CMP      R0,#+0
   \       0xD0   0xD00A             BEQ.N    ??RFM_I2SEx_TxRxCpltCallback_3
   1299          		{
   1300          			//  Buffering
   1301          			if ( qBufCnt( &g_qBufAudioRx ) > ( ( I2S_DMA_LOOP_SIZE * 2 ) * 3 ) )
   \       0xD2   0x.... 0x....      LDR.W    R0,??DataTable56_22
   \       0xD6   0x.... 0x....      BL       qBufCnt
   \       0xDA   0x28B5             CMP      R0,#+181
   \       0xDC   0xDB04             BLT.N    ??RFM_I2SEx_TxRxCpltCallback_3
   1302          			{
   1303          				//  패킷이 4개 이상인경우 버퍼링 종료.
   1304          				bRxBuffering = 0;
   \       0xDE   0x2000             MOVS     R0,#+0
   \       0xE0   0x6038             STR      R0,[R7, #+0]
   1305          
   1306          				printf ( "F" );	 //  버퍼링종료 ( Buffering End - Buffer Full )
                 				^
Warning[Pe223]: function "printf" declared implicitly
   \       0xE2   0x....             ADR.N    R0,??DataTable49_3
   \       0xE4   0x.... 0x....      BL       printf
   1307          			}
   1308          		}
   1309          
   1310          		if ( bRxBuffering == 0 )
   \                     ??RFM_I2SEx_TxRxCpltCallback_3: (+1)
   \       0xE8   0x6838             LDR      R0,[R7, #+0]
   \       0xEA   0x2800             CMP      R0,#+0
   \       0xEC   0xD12A             BNE.N    ??RFM_I2SEx_TxRxCpltCallback_4
   1311          		{
   1312          			//  Rx Audio Out
   1313          			if ( qBufCnt( &g_qBufAudioRx ) >= ( I2S_DMA_LOOP_SIZE * 2 ) )
   \       0xEE   0x.... 0x....      LDR.W    R8,??DataTable56_22
   \       0xF2   0x4640             MOV      R0,R8
   \       0xF4   0x.... 0x....      BL       qBufCnt
   \       0xF8   0x283C             CMP      R0,#+60
   \       0xFA   0xDB1C             BLT.N    ??RFM_I2SEx_TxRxCpltCallback_5
   1314          			{
   1315          				//	printf ( "G" );
   1316          				//  Queue Audio Data
   1317          
   1318          #if defined( USE_AUDIO_INTERPOL_COMPRESS )	//	보간압축사용.
   1319          
   1320          				qBufGet( &g_qBufAudioRx, (uint8_t*)t_audio_buff, ( I2S_DMA_LOOP_SIZE * 2 ) );
   1321          
   1322          				int dtVal;	//	sample 보간.
   1323          				static int16_t nlastSample = 0;
   1324          
   1325          				//	Decoding : 2 KHz -> 8 KHz
   1326          				int i;
   1327          				for( i = 0; i < FRAME_ENC_SIZE; i++ )
   1328          				{
   1329          					if ( i % AUDIO_COMPR_RATE == 0 )
   1330          					{
   1331          						if ( i == 0 )
   1332          						{
   1333          							pAudioTx[ i ] = nlastSample;	//	t_audio_buff[i / AUDIO_COMPR_RATE];
   1334          						}
   1335          						else
   1336          						{
   1337          							pAudioTx[ i ] = t_audio_buff[i / AUDIO_COMPR_RATE - 1];
   1338          						}
   1339          						dtVal = (t_audio_buff[(i / AUDIO_COMPR_RATE)] - pAudioTx[ i ]) / AUDIO_COMPR_RATE;
   1340          
   1341          						if( (i + AUDIO_COMPR_RATE) == FRAME_ENC_SIZE ) nlastSample = t_audio_buff[(i / AUDIO_COMPR_RATE)];		//	Last Sample
   1342          					}
   1343          					else
   1344          					{
   1345          						//	sample간 보간.
   1346          						pAudioTx[ i ] = pAudioTx[ i - 1 ] + dtVal;
   1347          					}
   1348          			//		outBuf[ i ] = bufAudioDec[i / AUDIO_COMPR_RATE];
   1349          				}
   1350          
   1351          #elif defined( USE_AUDIO_ADPCM )	//	ADPCM 사용. - 1/4 압축
   1352          
   1353          				qBufGet( &g_qBufAudioRx, (uint8_t*)t_audio_buff, ( I2S_DMA_LOOP_SIZE * 2 ) );
   \       0xFC   0x.... 0x....      LDR.W    R9,??DataTable56_23
   \      0x100   0x223C             MOVS     R2,#+60
   \      0x102   0x4649             MOV      R1,R9
   \      0x104   0x4640             MOV      R0,R8
   \      0x106   0x.... 0x....      BL       qBufGet
   1354          
   1355          				uint8_t *pABuf = (uint8_t *)t_audio_buff;
   1356          				//	Decoding : 4 bit -> 16 bit
   1357          				int i;
   1358          				for( i = 0; i < FRAME_ENC_SIZE/2; i++ )
   \      0x10A   0x2700             MOVS     R7,#+0
   \                     ??RFM_I2SEx_TxRxCpltCallback_6: (+1)
   \      0x10C   0x2F3C             CMP      R7,#+60
   \      0x10E   0xDA19             BGE.N    ??RFM_I2SEx_TxRxCpltCallback_4
   1359          				{
   1360          					pAudioTx[i*2] = (uint16_t)ADPCM_Decode((uint8_t)((pABuf[i]&(0xF0)))>>4);
   \      0x110   0xF819 0x0007      LDRB     R0,[R9, R7]
   \      0x114   0xB2C0             UXTB     R0,R0
   \      0x116   0x0900             LSRS     R0,R0,#+4
   \      0x118   0x.... 0x....      BL       ADPCM_Decode
   \      0x11C   0xF826 0x0027      STRH     R0,[R6, R7, LSL #+2]
   1361          					pAudioTx[i*2+1] = (uint16_t)ADPCM_Decode((uint8_t)(pABuf[i]&0x0F));
   \      0x120   0xF819 0x0007      LDRB     R0,[R9, R7]
   \      0x124   0xF010 0x000F      ANDS     R0,R0,#0xF
   \      0x128   0x.... 0x....      BL       ADPCM_Decode
   \      0x12C   0xEB06 0x0187      ADD      R1,R6,R7, LSL #+2
   \      0x130   0x8048             STRH     R0,[R1, #+2]
   1362          				}
   \      0x132   0x1C7F             ADDS     R7,R7,#+1
   \      0x134   0xE7EA             B.N      ??RFM_I2SEx_TxRxCpltCallback_6
   1363          
   1364          #else	//
   1365          
   1366          				qBufGet( &g_qBufAudioRx, (uint8_t*)pAudioTx, ( I2S_DMA_LOOP_SIZE * 2 ) );
   1367          
   1368          #endif
   1369          			}
   1370          			else
   1371          			{
   1372          				printf ( "B" );	 //  버퍼링시작 ( Buffering )
                 				^
Warning[Pe223]: function "printf" declared implicitly
   \                     ??RFM_I2SEx_TxRxCpltCallback_5: (+1)
   \      0x136   0x....             ADR.N    R0,??DataTable51
   \      0x138   0x.... 0x....      BL       printf
   1373          				//  Data
   1374          				bRxBuffering = 1;
   \      0x13C   0x2001             MOVS     R0,#+1
   \      0x13E   0x6038             STR      R0,[R7, #+0]
   1375          
   1376          #if defined( USE_AUDIO_ADPCM )	//	ADPCM 사용. - 1/4 압축
   1377          				ADPCM_ClearDecodeBuf();
   \      0x140   0x.... 0x....      BL       ADPCM_ClearDecodeBuf
   1378          #endif
   1379          
   1380          			}
   1381          		}
   1382          		//  */
   1383          	}
   1384          }
   \                     ??RFM_I2SEx_TxRxCpltCallback_4: (+1)
   \      0x144   0xE8BD 0x8FF1      POP      {R0,R4-R11,PC}

   \                                 In section .bss, align 4
   \                     `RFM_I2SEx_TxRxCpltCallback::idx`:
   \        0x0                      DS8 4
   1385          
   1386          
   1387          //========================================================================
   1388          //		RFM Procedure
   1389          //========================================================================
   1390          
   1391          //========================================================================

   \                                 In section .text, align 2, keep-with-next
   1392          int InitRFM( void )
   1393          //========================================================================
   1394          {
   \                     InitRFM: (+1)
   \        0x0   0xB5F8             PUSH     {R3-R7,LR}
   \        0x2   0xB086             SUB      SP,SP,#+24
   1395          	printf( "%s(%d)\n", __func__, __LINE__ );
                 	^
Warning[Pe223]: function "printf" declared implicitly
   \        0x4   0x.... 0x....      LDR.W    R4,??DataTable56_24
   \        0x8   0xF240 0x5273      MOVW     R2,#+1395
   \        0xC   0x0021             MOVS     R1,R4
   \        0xE   0x.... 0x....      LDR.W    R0,??DataTable56_10
   \       0x12   0x.... 0x....      BL       printf
   1396          
   1397          	//========================================================================
   1398          	I2C_BusScan( &hi2c1 );
   \       0x16   0x.... 0x....      LDR.W    R6,??DataTable56_25
   \       0x1A   0x0030             MOVS     R0,R6
   \       0x1C   0x.... 0x....      BL       I2C_BusScan
   1399          	I2C_BusScan( &hi2c3 );
   \       0x20   0x.... 0x....      LDR.W    R5,??DataTable56_26
   \       0x24   0x0028             MOVS     R0,R5
   \       0x26   0x.... 0x....      BL       I2C_BusScan
   1400          
   1401          	//========================================================================
   1402          	//	Car Number 설정.
   1403          	g_flagRspID |= (0x1 << GetCarNo());		//	자신의 ID Flag 설정.
   \       0x2A   0x.... 0x....      BL       GetCarNo
   \       0x2E   0x.... 0x....      LDR.W    R1,??DataTable56_7
   \       0x32   0x880A             LDRH     R2,[R1, #+0]
   \       0x34   0x2301             MOVS     R3,#+1
   \       0x36   0xFA13 0xF000      LSLS     R0,R3,R0
   \       0x3A   0x4310             ORRS     R0,R0,R2
   \       0x3C   0x8008             STRH     R0,[R1, #+0]
   1404          
   1405          	//========================================================================
   1406          	//	Codec MAX9860ETG+
   1407          	if ( HAL_OK == HAL_I2C_IsDeviceReady( &hi2c1, (uint16_t)( 0x10 << 1 ), 2, 2 ) )
   \       0x3E   0x2302             MOVS     R3,#+2
   \       0x40   0x2202             MOVS     R2,#+2
   \       0x42   0x2120             MOVS     R1,#+32
   \       0x44   0x0030             MOVS     R0,R6
   \       0x46   0x.... 0x....      BL       HAL_I2C_IsDeviceReady
   \       0x4A   0x2800             CMP      R0,#+0
   \       0x4C   0xD129             BNE.N    ??InitRFM_0
   1408          	{
   1409          		//  Read Rev.
   1410          		char buf[10];
   1411          		int cntRetry;
   1412          
   1413          		cntRetry = 0;
   \       0x4E   0x2700             MOVS     R7,#+0
   1414          
   1415          		memset( buf, 0, sizeof( buf ) );
                 		^
Warning[Pe223]: function "memset" declared implicitly
   \       0x50   0x220A             MOVS     R2,#+10
   \       0x52   0x2100             MOVS     R1,#+0
   \       0x54   0xA803             ADD      R0,SP,#+12
   \       0x56   0x.... 0x....      BL       memset
   1416          		while ( HAL_I2C_Mem_Read( &hi2c1, (uint16_t)( 0x10 << 1 ), (uint16_t)0xFF, I2C_MEMADD_SIZE_8BIT, buf, (uint16_t)1, 1000 ) != HAL_OK && cntRetry < 10 ) cntRetry++;
                 		                                                                                                 ^
Warning[Pe167]: argument of type "char *" is incompatible with parameter of
          type "uint8_t *"
   \                     ??InitRFM_1: (+1)
   \       0x5A   0xF44F 0x707A      MOV      R0,#+1000
   \       0x5E   0x9002             STR      R0,[SP, #+8]
   \       0x60   0x2001             MOVS     R0,#+1
   \       0x62   0x9001             STR      R0,[SP, #+4]
   \       0x64   0xA803             ADD      R0,SP,#+12
   \       0x66   0x9000             STR      R0,[SP, #+0]
   \       0x68   0x2301             MOVS     R3,#+1
   \       0x6A   0x22FF             MOVS     R2,#+255
   \       0x6C   0x2120             MOVS     R1,#+32
   \       0x6E   0x0030             MOVS     R0,R6
   \       0x70   0x.... 0x....      BL       HAL_I2C_Mem_Read
   \       0x74   0x2800             CMP      R0,#+0
   \       0x76   0xD003             BEQ.N    ??InitRFM_2
   \       0x78   0x2F0A             CMP      R7,#+10
   \       0x7A   0xDA01             BGE.N    ??InitRFM_2
   \       0x7C   0x1C7F             ADDS     R7,R7,#+1
   \       0x7E   0xE7EC             B.N      ??InitRFM_1
   1417          
   1418          		printf( "%s(%d) - Codec ( MAX9860ETG+ ) / Rev. 0x%02X\n", __func__, __LINE__, buf[0] );
   \                     ??InitRFM_2: (+1)
   \       0x80   0xF89D 0x300C      LDRB     R3,[SP, #+12]
   \       0x84   0xF240 0x528A      MOVW     R2,#+1418
   \       0x88   0x0021             MOVS     R1,R4
   \       0x8A   0x.... 0x....      LDR.W    R0,??DataTable56_27
   \       0x8E   0x.... 0x....      BL       printf
   1419          
   1420          		//========================================================================
   1421          		//  Codec 초기화.
   1422          		InitCodecMAX9860();
   \       0x92   0x.... 0x....      BL       InitCodecMAX9860
   1423          
   1424          		//========================================================================
   1425          		//	Init Audio ( I2S PCM )
   1426          		AudioInit();
   \       0x96   0x.... 0x....      BL       AudioInit
   1427          
   1428          		//========================================================================
   1429          		//	I2S Callback 등록.
   1430          		SetCallbackI2STxRxCplt( RFM_I2SEx_TxRxCpltCallback );
   \       0x9A   0x.... 0x....      LDR.W    R0,??DataTable56_28
   \       0x9E   0x.... 0x....      BL       SetCallbackI2STxRxCplt
   1431          //		HAL_I2SEx_TransmitReceive_DMA( &hi2s3, (uint16_t*)sine_table, (uint16_t*)bufAudio, 256 );
   1432          
   1433          		//========================================================================
   1434          	}
   1435          
   1436          	//========================================================================
   1437          	//	편성번호 Load
   1438          	if ( HAL_OK == HAL_I2C_IsDeviceReady( &hi2c1, (uint16_t)( 0x50 << 1 ), 2, 2 ) )
   \                     ??InitRFM_0: (+1)
   \       0xA2   0x2302             MOVS     R3,#+2
   \       0xA4   0x2202             MOVS     R2,#+2
   \       0xA6   0x21A0             MOVS     R1,#+160
   \       0xA8   0x0030             MOVS     R0,R6
   \       0xAA   0x.... 0x....      BL       HAL_I2C_IsDeviceReady
   \       0xAE   0x2800             CMP      R0,#+0
   \       0xB0   0xD11A             BNE.N    ??InitRFM_3
   1439          	{
   1440          		printf( "%s(%d) - EEPROM OK\n", __func__, __LINE__ );
   \       0xB2   0xF44F 0x62B4      MOV      R2,#+1440
   \       0xB6   0x0021             MOVS     R1,R4
   \       0xB8   0x.... 0x....      LDR.W    R0,??DataTable56_29
   \       0xBC   0x.... 0x....      BL       printf
   1441          		TestEEPROM( &hi2c1 ); //  Test EEPROM
   \       0xC0   0x0030             MOVS     R0,R6
   \       0xC2   0x.... 0x....      BL       TestEEPROM
   1442          
   1443          		//========================================================================
   1444          		//  Read TrainSet
   1445          		uint8_t	 idxTrainSet;
   1446          		idxTrainSet = GetTrainSetIdx();
   \       0xC6   0x.... 0x....      BL       GetTrainSetIdx
   \       0xCA   0x0006             MOVS     R6,R0
   1447          
   1448          		if ( idxTrainSet < 0 || idxTrainSet >= MaxTrainSet )
                 		                 ^
Warning[Pe186]: pointless comparison of unsigned integer with zero
   \       0xCC   0x0030             MOVS     R0,R6
   \       0xCE   0xB2C0             UXTB     R0,R0
   \       0xD0   0x2814             CMP      R0,#+20
   \       0xD2   0xDB05             BLT.N    ??InitRFM_4
   1449          		{
   1450          			idxTrainSet = 0;
   \       0xD4   0x2000             MOVS     R0,#+0
   \       0xD6   0x0006             MOVS     R6,R0
   1451          
   1452          			SetTrainSetIdx( idxTrainSet );
   \       0xD8   0x0030             MOVS     R0,R6
   \       0xDA   0xB2C0             UXTB     R0,R0
   \       0xDC   0x.... 0x....      BL       SetTrainSetIdx
   1453          		}
   1454          
   1455          		g_idxTrainSet = idxTrainSet;
   \                     ??InitRFM_4: (+1)
   \       0xE0   0xB2F6             UXTB     R6,R6
   \       0xE2   0x.... 0x....      LDR.W    R0,??DataTable56_30
   \       0xE6   0x6006             STR      R6,[R0, #+0]
   1456          	}
   1457          
   1458          	//========================================================================
   1459          	//	OLED
   1460          	if ( HAL_OK == HAL_I2C_IsDeviceReady( &hi2c3, (uint16_t)( SSD1306_I2C_ADDRESS ), 2, 2 ) )
   \                     ??InitRFM_3: (+1)
   \       0xE8   0x2302             MOVS     R3,#+2
   \       0xEA   0x2202             MOVS     R2,#+2
   \       0xEC   0x2178             MOVS     R1,#+120
   \       0xEE   0x0028             MOVS     R0,R5
   \       0xF0   0x.... 0x....      BL       HAL_I2C_IsDeviceReady
   \       0xF4   0x2800             CMP      R0,#+0
   \       0xF6   0xD140             BNE.N    ??InitRFM_5
   1461          	{
   1462          		//========================================================================
   1463          		//	OLED가 연결되어있음.
   1464          		SetDevID( DevRF900T );	 //  송신기.
   \       0xF8   0x2002             MOVS     R0,#+2
   \       0xFA   0x.... 0x....      BL       SetDevID
   1465          
   1466          		//	LCD Init
   1467          		LCDInit();
   \       0xFE   0x.... 0x....      BL       LCDInit
   1468          
   1469          		LCDClear();
   \      0x102   0x.... 0x....      BL       LCDClear
   1470          		LCDDrawRect( 0, 0, 128, 32, 1 );
   \      0x106   0x2001             MOVS     R0,#+1
   \      0x108   0x9000             STR      R0,[SP, #+0]
   \      0x10A   0x2320             MOVS     R3,#+32
   \      0x10C   0x2280             MOVS     R2,#+128
   \      0x10E   0x2100             MOVS     R1,#+0
   \      0x110   0x2000             MOVS     R0,#+0
   \      0x112   0x.... 0x....      BL       LCDDrawRect
   1471          
   1472          		HAL_Delay( 500 );
   \      0x116   0xF44F 0x70FA      MOV      R0,#+500
   \      0x11A   0x.... 0x....      BL       HAL_Delay
   1473          
   1474          		//  LCD : 메뉴 화면.
   1475          		LCDMenu();
   \      0x11E   0x.... 0x....      BL       LCDMenu
   1476          
   1477          		//  LCD :   편성 : 100
   1478          		//========================================================================
   1479          		//  편성 : XXX
   1480          		UpdateLCDMain();
   \      0x122   0x.... 0x....      BL       UpdateLCDMain
   1481          
   1482          		//  LCD : Light Icon
   1483          		LCDLight( 0 );
   \      0x126   0x2000             MOVS     R0,#+0
   \      0x128   0x.... 0x....      BL       LCDLight
   1484          
   1485          		//========================================================================
   1486          		//  Spk Vol Set
   1487          		//  Default (1) - 0(Mute) / 1 / 2(Normal) / 3
   1488          
   1489          		int	 nSpkVol;
   1490          		nSpkVol = GetSpkVol();
   \      0x12C   0x.... 0x....      BL       GetSpkVol
   \      0x130   0x0005             MOVS     R5,R0
   1491          
   1492          		if ( nSpkVol < 0 || nSpkVol > MaxSpkVol )
   \      0x132   0x2D00             CMP      R5,#+0
   \      0x134   0xD401             BMI.N    ??InitRFM_6
   \      0x136   0x2D04             CMP      R5,#+4
   \      0x138   0xDB04             BLT.N    ??InitRFM_7
   1493          		{
   1494          			nSpkVol = DefaultSpkVol;
   \                     ??InitRFM_6: (+1)
   \      0x13A   0x2001             MOVS     R0,#+1
   \      0x13C   0x0005             MOVS     R5,R0
   1495          			SetSpkVol( nSpkVol );
   \      0x13E   0x0028             MOVS     R0,R5
   \      0x140   0x.... 0x....      BL       SetSpkVol
   1496          		}
   1497          
   1498          		g_nSpkLevel = nSpkVol;
   \                     ??InitRFM_7: (+1)
   \      0x144   0x.... 0x....      LDR.W    R0,??DataTable56_31
   \      0x148   0x6005             STR      R5,[R0, #+0]
   1499          
   1500          		//  LCD : Spk Icon
   1501          		LCDSpeaker( g_nSpkLevel );		//  Spk Icon : Spk On
   \      0x14A   0x6800             LDR      R0,[R0, #+0]
   \      0x14C   0x.... 0x....      BL       LCDSpeaker
   1502          
   1503          		//========================================================================
   1504          		//  Mic Vol Set
   1505          		//  Default (5) - 0 ~ 9
   1506          
   1507          		int	 nMicVol;
   1508          		nMicVol = GetMicVol();
   \      0x150   0x.... 0x....      BL       GetMicVol
   \      0x154   0x0006             MOVS     R6,R0
   1509          
   1510          		if ( nMicVol < 0 || nMicVol > MaxMicVol )
   \      0x156   0x2E00             CMP      R6,#+0
   \      0x158   0xD401             BMI.N    ??InitRFM_8
   \      0x15A   0x2E0A             CMP      R6,#+10
   \      0x15C   0xDB04             BLT.N    ??InitRFM_9
   1511          		{
   1512          			nMicVol = DefaultMicVol;
   \                     ??InitRFM_8: (+1)
   \      0x15E   0x2005             MOVS     R0,#+5
   \      0x160   0x0006             MOVS     R6,R0
   1513          			SetMicVol( nMicVol );
   \      0x162   0x0030             MOVS     R0,R6
   \      0x164   0x.... 0x....      BL       SetMicVol
   1514          		}
   1515          
   1516          		//========================================================================
   1517          #if defined(USE_AUDIO_INTERPOL_COMPRESS) || defined( USE_AUDIO_ADPCM )
   1518          		//	보간압축 or ADPCM 사용시 음량 Level 조절.
   1519          		WriteI2CCodec( 0x0B, 0x60 );	//  10 ( +18 dB )
   \                     ??InitRFM_9: (+1)
   \      0x168   0x2160             MOVS     R1,#+96
   \      0x16A   0x200B             MOVS     R0,#+11
   \      0x16C   0x.... 0x....      BL       WriteI2CCodec
   1520          #endif
   1521          
   1522          #if defined(USE_HOP_MANUAL)
   1523          		//	g_nManHopping;		//	On(1) / Off(2) / Unused(0 : Other)
   1524          		g_nManHopping	=	2;	//	Hopping Diable
   \      0x170   0x2002             MOVS     R0,#+2
   \      0x172   0x.... 0x....      LDR.W    R1,??DataTable55_1
   \      0x176   0x6008             STR      R0,[R1, #+0]
   \      0x178   0xE013             B.N      ??InitRFM_10
   1525          #endif	//	defined(USE_HOP_MANUAL)
   1526          
   1527          	}
   1528          	else
   1529          	{
   1530          		//========================================================================
   1531          		//	OLED가 없으면 -> 수신기
   1532          		SetDevID( DevRF900M );	 //  수신기.
   \                     ??InitRFM_5: (+1)
   \      0x17A   0x2001             MOVS     R0,#+1
   \      0x17C   0x.... 0x....      BL       SetDevID
   1533          
   1534          		//  수신기 스피커 레벨 변경.
   1535          		//	20.09.01 - 2호선 24칸차량설정.
   1536          		WriteI2CCodec( 0x09, 0x06 );	//  0x06 ( 0 )
   \      0x180   0x2106             MOVS     R1,#+6
   \      0x182   0x2009             MOVS     R0,#+9
   \      0x184   0x.... 0x....      BL       WriteI2CCodec
   1537          
   1538          #if defined(USE_HOP_MANUAL)
   1539          		//	g_nManHopping;		//	On(1) / Off(2) / Unused(0 : Other)
   1540          		g_nManHopping	=	GetManHop();	//	Hopping Diable
   \      0x188   0x.... 0x....      LDR.W    R5,??DataTable55_1
   \      0x18C   0x.... 0x....      BL       GetManHop
   \      0x190   0x6028             STR      R0,[R5, #+0]
   1541          
   1542          		printf("%s(%d) - Man Hopping ( %d )\n", __func__, __LINE__, g_nManHopping );
   \      0x192   0x682B             LDR      R3,[R5, #+0]
   \      0x194   0xF240 0x6206      MOVW     R2,#+1542
   \      0x198   0x0021             MOVS     R1,R4
   \      0x19A   0x.... 0x....      LDR.W    R0,??DataTable56_32
   \      0x19E   0x.... 0x....      BL       printf
   1543          #endif	//	defined(USE_HOP_MANUAL)
   1544          
   1545          	}
   1546          	//========================================================================
   1547          
   1548          #if defined(USE_RF_COMM_MODE)
   1549          		//	g_nManHopping;		//	On(1) / Off(2) / Unused(0 : Other)
   1550          		g_nRFMode	=	GetRFMode();	//	Hopping Diable
   \                     ??InitRFM_10: (+1)
   \      0x1A2   0x.... 0x....      LDR.W    R5,??DataTable56
   \      0x1A6   0x.... 0x....      BL       GetRFMode
   \      0x1AA   0x6028             STR      R0,[R5, #+0]
   1551          
   1552          		printf("%s(%d) - RFMode ( %d )\n", __func__, __LINE__, g_nRFMode );
   \      0x1AC   0x682B             LDR      R3,[R5, #+0]
   \      0x1AE   0xF44F 0x62C2      MOV      R2,#+1552
   \      0x1B2   0x0021             MOVS     R1,R4
   \      0x1B4   0x.... 0x....      LDR.W    R0,??DataTable56_33
   \      0x1B8   0x.... 0x....      BL       printf
   1553          #endif	//	defined(USE_HOP_MANUAL)
   1554          
   1555          #if defined(USE_RFT_ONLY_RX_SPK_ON)
   1556          
   1557          	if ( GetDevID() == DevRF900T )
   \      0x1BC   0x.... 0x....      BL       GetDevID
   \      0x1C0   0x2802             CMP      R0,#+2
   \      0x1C2   0xD102             BNE.N    ??InitRFM_11
   1558          	{
   1559          		//  송신기 : 수신중이 아닌경우 SPK OFF
   1560          //		HAL_GPIO_WritePin( SPK_ON_GPIO_Port, SPK_ON_Pin, GPIO_PIN_RESET );
   1561          		RFM_Spk(0);
   \      0x1C4   0x2000             MOVS     R0,#+0
   \      0x1C6   0x.... 0x....      BL       RFM_Spk
   1562          	}
   1563          
   1564          #endif
   1565          
   1566          
   1567          #if defined(USE_RADIO_SI4463)
   1568          
   1569          	//========================================================================
   1570          	//	Drivers/si4463
   1571          	RF_Init();
   1572          	RF_Info();
   1573          
   1574          #else
   1575          
   1576          	//========================================================================
   1577          	//	Drivers/radio
   1578          	vRadio_Init ();
   \                     ??InitRFM_11: (+1)
   \      0x1CA   0x.... 0x....      BL       vRadio_Init
   1579          
   1580          	//========================================================================
   1581          	vRadio_Init ();		//	FIXME : 일부 송신기가 2회 초기화를 해야 초기화되는 경우가 있음.
   \      0x1CE   0x.... 0x....      BL       vRadio_Init
   1582          	//========================================================================
   1583          
   1584          	si446x_part_info ();
   \      0x1D2   0x.... 0x....      BL       si446x_part_info
   1585          
   1586          	printf ( "=========================\n" );
   \      0x1D6   0x.... 0x....      LDR.W    R0,??DataTable56_34
   \      0x1DA   0x.... 0x....      BL       printf
   1587          	printf ( "%08x\n", Si446xCmd.PART_INFO.CHIPREV );
   \      0x1DE   0x.... 0x....      LDR.W    R5,??DataTable56_35
   \      0x1E2   0x....             LDR.N    R6,??DataTable51_2
   \      0x1E4   0x7831             LDRB     R1,[R6, #+0]
   \      0x1E6   0x0028             MOVS     R0,R5
   \      0x1E8   0x.... 0x....      BL       printf
   1588          	printf ( "%08x\n", Si446xCmd.PART_INFO.PART );
   \      0x1EC   0x6871             LDR      R1,[R6, #+4]
   \      0x1EE   0x0028             MOVS     R0,R5
   \      0x1F0   0x.... 0x....      BL       printf
   1589          	printf ( "%08x\n", Si446xCmd.PART_INFO.PBUILD );
   \      0x1F4   0x7A31             LDRB     R1,[R6, #+8]
   \      0x1F6   0x0028             MOVS     R0,R5
   \      0x1F8   0x.... 0x....      BL       printf
   1590          	printf ( "%08x\n", Si446xCmd.PART_INFO.ID );
   \      0x1FC   0x68F1             LDR      R1,[R6, #+12]
   \      0x1FE   0x0028             MOVS     R0,R5
   \      0x200   0x.... 0x....      BL       printf
   1591          	printf ( "%08x\n", Si446xCmd.PART_INFO.CUSTOMER );
   \      0x204   0x7C31             LDRB     R1,[R6, #+16]
   \      0x206   0x0028             MOVS     R0,R5
   \      0x208   0x.... 0x....      BL       printf
   1592          	printf ( "%08x\n", Si446xCmd.PART_INFO.ROMID );
   \      0x20C   0x7C71             LDRB     R1,[R6, #+17]
   \      0x20E   0x0028             MOVS     R0,R5
   \      0x210   0x.... 0x....      BL       printf
   1593          	printf ( "-------------------------\n" );
   \      0x214   0x.... 0x....      LDR.W    R0,??DataTable56_36
   \      0x218   0x.... 0x....      BL       printf
   1594          
   1595          #endif
   1596          
   1597          	//========================================================================
   1598          	//	Radio 초기화 이후 채널 설정해줌.
   1599          	{
   1600          		//========================================================================
   1601          		//  Radio Channel 설정.
   1602          		pRadioConfiguration->Radio_ChannelNumber = g_idxTrainSet;
   \      0x21C   0x.... 0x....      LDR.W    R0,??DataTable56_37
   \      0x220   0x.... 0x....      LDR.W    R1,??DataTable56_30
   \      0x224   0x680A             LDR      R2,[R1, #+0]
   \      0x226   0x6803             LDR      R3,[R0, #+0]
   \      0x228   0x711A             STRB     R2,[R3, #+4]
   1603          		printf("%s(%d) - Radio Ch(%d) / g_idxTrainSet(%d)\n", __func__, __LINE__,
   1604          				pRadioConfiguration->Radio_ChannelNumber, g_idxTrainSet );
   \      0x22A   0x6809             LDR      R1,[R1, #+0]
   \      0x22C   0x9100             STR      R1,[SP, #+0]
   \      0x22E   0x6800             LDR      R0,[R0, #+0]
   \      0x230   0x7903             LDRB     R3,[R0, #+4]
   \      0x232   0xF240 0x6243      MOVW     R2,#+1603
   \      0x236   0x0021             MOVS     R1,R4
   \      0x238   0x.... 0x....      LDR.W    R0,??DataTable56_38
   \      0x23C   0x.... 0x....      BL       printf
   1605          	}
   1606          
   1607          	//========================================================================
   1608          	//	Random seed 설정.
   1609          	//	편성 & 호차 & TickCount로 설정.
   1610          
   1611          	srand( HAL_GetTick() * 100 + GetTrainSetIdx() * 10 + GetCarNo() );
                 	^
Warning[Pe223]: function "srand" declared implicitly
   \      0x240   0x.... 0x....      BL       HAL_GetTick
   \      0x244   0x0005             MOVS     R5,R0
   \      0x246   0x.... 0x....      BL       GetTrainSetIdx
   \      0x24A   0x0006             MOVS     R6,R0
   \      0x24C   0x.... 0x....      BL       GetCarNo
   \      0x250   0x2264             MOVS     R2,#+100
   \      0x252   0x210A             MOVS     R1,#+10
   \      0x254   0x434E             MULS     R6,R1,R6
   \      0x256   0xFB02 0x6505      MLA      R5,R2,R5,R6
   \      0x25A   0x1945             ADDS     R5,R0,R5
   \      0x25C   0x0028             MOVS     R0,R5
   \      0x25E   0x.... 0x....      BL       srand
   1612          
   1613          	//	Set Offset
   1614          	g_offsetCA = rand() % 1000;
                 	             ^
Warning[Pe223]: function "rand" declared implicitly
   \      0x262   0x.... 0x....      BL       rand
   \      0x266   0xF44F 0x717A      MOV      R1,#+1000
   \      0x26A   0x.... 0x....      LDR.W    R5,??DataTable56_39
   \      0x26E   0xFB90 0xF2F1      SDIV     R2,R0,R1
   \      0x272   0xFB01 0x0012      MLS      R0,R1,R2,R0
   \      0x276   0x6028             STR      R0,[R5, #+0]
   1615          	printf( "%s(%d) - offsetCA( %d )\n", __func__, __LINE__, g_offsetCA );
   \      0x278   0x682B             LDR      R3,[R5, #+0]
   \      0x27A   0xF240 0x624F      MOVW     R2,#+1615
   \      0x27E   0x0021             MOVS     R1,R4
   \      0x280   0x.... 0x....      LDR.W    R0,??DataTable56_40
   \      0x284   0x.... 0x....      BL       printf
   1616          
   1617          	//	초기 시작 Delay
   1618          	HAL_Delay(g_offsetCA);
   \      0x288   0x6828             LDR      R0,[R5, #+0]
   \      0x28A   0x.... 0x....      BL       HAL_Delay
   1619          
   1620          	//========================================================================
   1621          }
                 ^
Warning[Pe940]: missing return statement at end of non-void function "InitRFM"
   \      0x28E   0xB007             ADD      SP,SP,#+28
   \      0x290   0xBDF0             POP      {R4-R7,PC}
   1622          
   1623          //========================================================================

   \                                 In section .text, align 2, keep-with-next
   1624          int RFM_main( void )
   1625          //========================================================================
   1626          {
   \                     RFM_main: (+1)
   \        0x0   0xB510             PUSH     {R4,LR}
   1627          	printf( "%s(%d)\n", __func__, __LINE__ );
                 	^
Warning[Pe223]: function "printf" declared implicitly
   \        0x2   0xF240 0x625B      MOVW     R2,#+1627
   \        0x6   0x.... 0x....      LDR.W    R1,??DataTable56_41
   \        0xA   0x.... 0x....      LDR.W    R0,??DataTable56_10
   \        0xE   0x.... 0x....      BL       printf
   1628          
   1629          	InitRFM();
   \       0x12   0x.... 0x....      BL       InitRFM
   1630          
   1631          	//========================================================================
   1632          	//	Radio Spi
   1633          #if 0
   1634          
   1635          	TestProcPkt();		//	RFM Main
   1636          
   1637          #endif
   1638          
   1639          #if defined(USE_TEST_RF_TX_LOOP)
   1640          	//========================================================================
   1641          	//cmd_rftx( int argc, char * argv[] )
   1642          //	ProcessCommand( "tx 0" );
   1643          
   1644          	char *argv[] = {"tx", "0"};
   1645          	cmd_rftx( 2, argv );
   1646          
   1647          #endif
   1648          
   1649          	InitProcPkt();
   \       0x16   0x.... 0x....      BL       InitProcPkt
   1650          
   1651          	int nTick;
   1652          
   1653          	/* Infinite main loop */
   1654          	while ( 1 )
   1655          	{
   1656          		nTick = HAL_GetTick();
   \                     ??RFM_main_0: (+1)
   \       0x1A   0x.... 0x....      BL       HAL_GetTick
   \       0x1E   0x0004             MOVS     R4,R0
   1657          
   1658          		if ( GetDevID() == DevRF900T )
   \       0x20   0x.... 0x....      BL       GetDevID
   \       0x24   0x2802             CMP      R0,#+2
   \       0x26   0xD105             BNE.N    ??RFM_main_1
   1659          		{
   1660          			//	송신기 - KeyPad 동작.
   1661          			LoopProcKey( nTick );
   \       0x28   0x0020             MOVS     R0,R4
   \       0x2A   0x.... 0x....      BL       LoopProcKey
   1662          
   1663          			//	ADC Power : Battery
   1664          			LoopProcAdc( nTick );
                 			^
Warning[Pe223]: function "LoopProcAdc" declared implicitly
   \       0x2E   0x0020             MOVS     R0,R4
   \       0x30   0x.... 0x....      BL       LoopProcAdc
   1665          		}
   1666          
   1667          		//	Loop RFM
   1668          		LoopProcRFM( nTick );
   \                     ??RFM_main_1: (+1)
   \       0x34   0x0020             MOVS     R0,R4
   \       0x36   0x.... 0x....      BL       LoopProcRFM
   1669          
   1670          		//	Loop Process ( CLI )
   1671          		LoopProcCLI();
                 		^
Warning[Pe223]: function "LoopProcCLI" declared implicitly
   \       0x3A   0x.... 0x....      BL       LoopProcCLI
   1672          
   1673          		//	Loop Proc Packet : RF Packet
   1674          		LoopProcPkt( nTick );
   \       0x3E   0x0020             MOVS     R0,R4
   \       0x40   0x.... 0x....      BL       LoopProcPkt
   1675          
   1676          		//	Loop Proc Main Watchdog Count Reload
   1677          		LoopProcMain( nTick );
   \       0x44   0x0020             MOVS     R0,R4
   \       0x46   0x.... 0x....      BL       LoopProcMain
   \       0x4A   0xE7E6             B.N      ??RFM_main_0
   1678          	}
   1679          }
   1680          
   1681          
   1682          //========================================================================

   \                                 In section .text, align 2, keep-with-next
   1683          void LoopProcRFM ( int nTick )
   1684          //========================================================================
   1685          {
   \                     LoopProcRFM: (+1)
   \        0x0   0xE92D 0x41F8      PUSH     {R3-R8,LR}
   \        0x4   0xB095             SUB      SP,SP,#+84
   \        0x6   0x0004             MOVS     R4,R0
   1686          	RFMPkt	bufRFTx;
   1687          
   1688          	//========================================================================
   1689          	//  Transmit - 송신기
   1690          	if ( GetDevID() == DevRF900T )
   \        0x8   0x.... 0x....      BL       GetDevID
   \        0xC   0x2802             CMP      R0,#+2
   \        0xE   0xF040 0x809A      BNE.W    ??LoopProcRFM_0
   1691          	{
   1692          		if( GetRFMMode() != RFMModeRx )
   \       0x12   0x.... 0x....      BL       GetRFMMode
   \       0x16   0x2802             CMP      R0,#+2
   \       0x18   0xD050             BEQ.N    ??LoopProcRFM_1
   1693          		{
   1694          			if( GetKey(eKeyPtt) || GetKey(eKeySos) )
   \       0x1A   0x2006             MOVS     R0,#+6
   \       0x1C   0x.... 0x....      BL       GetKey
   \       0x20   0x2800             CMP      R0,#+0
   \       0x22   0xD104             BNE.N    ??LoopProcRFM_2
   \       0x24   0x2007             MOVS     R0,#+7
   \       0x26   0x.... 0x....      BL       GetKey
   \       0x2A   0x2800             CMP      R0,#+0
   \       0x2C   0xD046             BEQ.N    ??LoopProcRFM_1
   1695          			{
   1696          				// PTT Key가 눌려있을시 전송.
   1697          				if( qBufCnt( &g_qBufAudioTx ) >= ( I2S_DMA_LOOP_SIZE * 2 ) )
   \                     ??LoopProcRFM_2: (+1)
   \       0x2E   0x.... 0x....      LDR.W    R5,??DataTable56_19
   \       0x32   0x0028             MOVS     R0,R5
   \       0x34   0x.... 0x....      BL       qBufCnt
   \       0x38   0x283C             CMP      R0,#+60
   \       0x3A   0xDB3F             BLT.N    ??LoopProcRFM_1
   1698          				{
   1699          					//		printf ( "G" );
   1700          					qBufGet( &g_qBufAudioTx, (uint8_t*)bufRFTx.dat.data, ( I2S_DMA_LOOP_SIZE * 2 ) );
   \       0x3C   0x223C             MOVS     R2,#+60
   \       0x3E   0xA906             ADD      R1,SP,#+24
   \       0x40   0x0028             MOVS     R0,R5
   \       0x42   0x.... 0x....      BL       qBufGet
   1701          
   1702          #if defined(USE_HOPPING)
   1703          					//========================================================================
   1704          					//	Packet Header
   1705          #if defined( USE_CH_ISO_DEV )
   1706          					//	Header #2
   1707          					if( GetKey(eKeyPtt) )
   \       0x46   0x2006             MOVS     R0,#+6
   \       0x48   0x.... 0x....      BL       GetKey
   \       0x4C   0x2800             CMP      R0,#+0
   \       0x4E   0xD004             BEQ.N    ??LoopProcRFM_3
   1708          					{
   1709          						_MakePktHdr2( &bufRFTx, PktPA );
   \       0x50   0x2102             MOVS     R1,#+2
   \       0x52   0xA805             ADD      R0,SP,#+20
   \       0x54   0x.... 0x....      BL       _MakePktHdr2
   \       0x58   0xE003             B.N      ??LoopProcRFM_4
   1710          					}
   1711          					else
   1712          					{
   1713          						_MakePktHdr2( &bufRFTx, PktCall );
   \                     ??LoopProcRFM_3: (+1)
   \       0x5A   0x2103             MOVS     R1,#+3
   \       0x5C   0xA805             ADD      R0,SP,#+20
   \       0x5E   0x.... 0x....      BL       _MakePktHdr2
   1714          					}
   1715          
   1716          #else
   1717          					if( GetKey(eKeyPtt) )
   1718          					{
   1719          						_MakePktHdr( &bufRFTx, GetDevID(), 0xFF, sizeof( RFMPktCtrlPACall ), PktPA );
   1720          					}
   1721          					else
   1722          					{
   1723          						_MakePktHdr( &bufRFTx, GetDevID(), 0xFF, sizeof( RFMPktCtrlPACall ), PktCall );
   1724          					}
   1725          #endif
   1726          
   1727          #else
   1728          					//  송신기 -> 수신기
   1729          					bufRFTx.hdr.addrSrc = GetDevID();		//  Src : 송신기 DevRF900T
   1730          
   1731          					if( GetKey(eKeyPtt) )	// bPTTOnOff )
   1732          					{
   1733          						//  송신기 -> 수신기
   1734          						bufRFTx.hdr.addrDest	=	DevRF900M;		 //  Dest : 수신기
   1735          					}
   1736          					else
   1737          					{
   1738          						//  송신기 -> 송신기
   1739          						bufRFTx.hdr.addrDest	=	DevRF900T;		 //  Dest : 수신기
   1740          					}
   1741          
   1742          					if( GetKey(eKeyPtt) )	bufRFTx.hdr.nPktCmd = PktPA;	//  송신기 -> 수신기
   1743          					else					bufRFTx.hdr.nPktCmd = PktCall;	//  송신기 -> 송신기
   1744          #endif
   1745          
   1746          #if defined( USE_CH_ISO_DEV )
   1747          					if( GetKey(eKeyPtt) )
   \                     ??LoopProcRFM_4: (+1)
   \       0x62   0x2006             MOVS     R0,#+6
   \       0x64   0x.... 0x....      BL       GetKey
   \       0x68   0x2800             CMP      R0,#+0
   \       0x6A   0xD013             BEQ.N    ??LoopProcRFM_5
   1748          					{
   1749          						//========================================================================
   1750          						//	PA
   1751          
   1752          						if ( GetChPARFT() != 0 )
   \       0x6C   0x.... 0x....      BL       GetChPARFT
   \       0x70   0x2800             CMP      R0,#+0
   \       0x72   0xD005             BEQ.N    ??LoopProcRFM_6
   1753          						{
   1754          							//	송신기에 전송.
   1755          							SendPktCh( GetChPARFT(), (uint8_t *)&bufRFTx,
                 							                         ^
Warning[Pe167]: argument of type "uint8_t *" is incompatible with parameter of
          type "char const *"
   1756          								(U8)sizeof( RFMPktHdr ) + sizeof( RFMPktCtrlPACall ) );
   \       0x74   0x.... 0x....      BL       GetChPARFT
   \       0x78   0x2208             MOVS     R2,#+8
   \       0x7A   0xA905             ADD      R1,SP,#+20
   \       0x7C   0x.... 0x....      BL       SendPktCh
   1757          						}
   1758          
   1759          						SendPktCh( GetChPA(), (uint8_t *)&bufRFTx,
                 						                      ^
Warning[Pe167]: argument of type "uint8_t *" is incompatible with parameter of
          type "char const *"
   1760          							pRadioConfiguration->Radio_PacketLength );
   \                     ??LoopProcRFM_6: (+1)
   \       0x80   0x.... 0x....      BL       GetChPA
   \       0x84   0x.... 0x....      LDR.W    R1,??DataTable56_37
   \       0x88   0x6809             LDR      R1,[R1, #+0]
   \       0x8A   0x794A             LDRB     R2,[R1, #+5]
   \       0x8C   0xA905             ADD      R1,SP,#+20
   \       0x8E   0x.... 0x....      BL       SendPktCh
   \       0x92   0xE013             B.N      ??LoopProcRFM_1
   1761          					}
   1762          					else
   1763          					{
   1764          						//========================================================================
   1765          						//	Call
   1766          						if ( GetChPARFT() != 0 )
   \                     ??LoopProcRFM_5: (+1)
   \       0x94   0x.... 0x....      BL       GetChPARFT
   \       0x98   0x2800             CMP      R0,#+0
   \       0x9A   0xD006             BEQ.N    ??LoopProcRFM_7
   1767          						{
   1768          							//	송신기에 직접 전송.
   1769          							SendPktCh( GetChPARFT(), (uint8_t *)&bufRFTx,
                 							                         ^
Warning[Pe167]: argument of type "uint8_t *" is incompatible with parameter of
          type "char const *"
   1770          								(U8)sizeof( RFMPktHdr ) + sizeof( RFMPktCtrlPACall ) );
   \       0x9C   0x.... 0x....      BL       GetChPARFT
   \       0xA0   0x2208             MOVS     R2,#+8
   \       0xA2   0xA905             ADD      R1,SP,#+20
   \       0xA4   0x.... 0x....      BL       SendPktCh
   \       0xA8   0xE008             B.N      ??LoopProcRFM_1
   1771          						}
   1772          						else
   1773          						{
   1774          							//	수신기를 통해 전송.
   1775          							SendPktCh( GetChPA(), (uint8_t *)&bufRFTx,
                 							                      ^
Warning[Pe167]: argument of type "uint8_t *" is incompatible with parameter of
          type "char const *"
   1776          								pRadioConfiguration->Radio_PacketLength );
   \                     ??LoopProcRFM_7: (+1)
   \       0xAA   0x.... 0x....      BL       GetChPA
   \       0xAE   0x.... 0x....      LDR.W    R1,??DataTable56_37
   \       0xB2   0x6809             LDR      R1,[R1, #+0]
   \       0xB4   0x794A             LDRB     R2,[R1, #+5]
   \       0xB6   0xA905             ADD      R1,SP,#+20
   \       0xB8   0x.... 0x....      BL       SendPktCh
   1777          						}
   1778          					}
   1779          
   1780          #else
   1781          					SendPacket( (uint8_t *)&bufRFTx,
   1782          						pRadioConfiguration->Radio_PacketLength );
   1783          #endif
   1784          				}
   1785          			}
   1786          		}
   1787          
   1788          		//========================================================================
   1789          		static int nOldRFMMode = 0;
   1790          
   1791          		int nRFMMode = GetRFMMode();
   \                     ??LoopProcRFM_1: (+1)
   \       0xBC   0x.... 0x....      BL       GetRFMMode
   \       0xC0   0x0005             MOVS     R5,R0
   1792          		if( nRFMMode != nOldRFMMode )
   \       0xC2   0x.... 0x....      LDR.W    R6,??DataTable56_42
   \       0xC6   0x6830             LDR      R0,[R6, #+0]
   \       0xC8   0x4285             CMP      R5,R0
   \       0xCA   0xD034             BEQ.N    ??LoopProcRFM_8
   1793          		{
   1794          			switch ( nRFMMode )
   \       0xCC   0x0028             MOVS     R0,R5
   \       0xCE   0x2800             CMP      R0,#+0
   \       0xD0   0xD020             BEQ.N    ??LoopProcRFM_9
   \       0xD2   0x2802             CMP      R0,#+2
   \       0xD4   0xD12E             BNE.N    ??LoopProcRFM_10
   1795          			{
   1796          			case RFMModeRx:
   1797          				LCDSetCursor( 20, 13 );
   \                     ??LoopProcRFM_11: (+1)
   \       0xD6   0x210D             MOVS     R1,#+13
   \       0xD8   0x2014             MOVS     R0,#+20
   \       0xDA   0x.... 0x....      BL       LCDSetCursor
   1798          				if ( IsMenuMaint() )
   \       0xDE   0x.... 0x....      BL       IsMenuMaint
   \       0xE2   0x2800             CMP      R0,#+0
   \       0xE4   0xD011             BEQ.N    ??LoopProcRFM_12
   1799          				{
   1800          					//	Maint Mode : 송신채널 표시.
   1801          					char sBuf[20];
   1802          					sprintf( sBuf, "수신중(%d/%d)", GetCh2Car(GetChNearRFM()), GetChNearRFM() );	//	Channel -> Car
                 					^
Warning[Pe223]: function "sprintf" declared implicitly
   \       0xE6   0x.... 0x....      BL       GetChNearRFM
   \       0xEA   0x0007             MOVS     R7,R0
   \       0xEC   0x.... 0x....      BL       GetChNearRFM
   \       0xF0   0x.... 0x....      BL       GetCh2Car
   \       0xF4   0x0002             MOVS     R2,R0
   \       0xF6   0x003B             MOVS     R3,R7
   \       0xF8   0x.... 0x....      LDR.W    R1,??DataTable56_43
   \       0xFC   0x4668             MOV      R0,SP
   \       0xFE   0x.... 0x....      BL       sprintf
   1803          					LCDPrintf( sBuf );
   \      0x102   0x4668             MOV      R0,SP
   \      0x104   0x.... 0x....      BL       LCDPrintf
   \      0x108   0xE003             B.N      ??LoopProcRFM_13
   1804          				}
   1805          				else
   1806          				{
   1807          					LCDPrintf( "수신중..." );
   \                     ??LoopProcRFM_12: (+1)
   \      0x10A   0x.... 0x....      LDR.W    R0,??DataTable56_44
   \      0x10E   0x.... 0x....      BL       LCDPrintf
   1808          				}
   1809          				break;
   \                     ??LoopProcRFM_13: (+1)
   \      0x112   0xE00F             B.N      ??LoopProcRFM_10
   1810          
   1811          			case RFMModeNormal:
   1812          				//========================================================================
   1813          				//  편성 : XXX
   1814          				UpdateLCDMain();
   \                     ??LoopProcRFM_9: (+1)
   \      0x114   0x.... 0x....      BL       UpdateLCDMain
   1815          				//	송신기 Speaker Mute
   1816          #if defined(USE_RFT_ONLY_RX_SPK_ON)
   1817          				if ( GetDevID() == DevRF900T )
   \      0x118   0x.... 0x....      BL       GetDevID
   \      0x11C   0x2802             CMP      R0,#+2
   \      0x11E   0xD109             BNE.N    ??LoopProcRFM_14
   1818          				{
   1819          					//  송신기 : 수신중이 아닌경우 SPK OFF
   1820          					RFM_Spk(0);
   \      0x120   0x2000             MOVS     R0,#+0
   \      0x122   0x.... 0x....      BL       RFM_Spk
   1821          
   1822          					//  Red LED Off
   1823          					HAL_GPIO_WritePin ( LED_ON_B_GPIO_Port, LED_ON_B_Pin, GPIO_PIN_RESET ); //  RED LED
   \      0x126   0x2200             MOVS     R2,#+0
   \      0x128   0xF44F 0x4180      MOV      R1,#+16384
   \      0x12C   0x.... 0x....      LDR.W    R0,??DataTable56_45
   \      0x130   0x.... 0x....      BL       HAL_GPIO_WritePin
   1824          				}
   1825          #endif
   1826          				break;
   1827          			}
   1828          
   1829          			nOldRFMMode = nRFMMode;
   \                     ??LoopProcRFM_14: (+1)
   \                     ??LoopProcRFM_10: (+1)
   \      0x134   0x6035             STR      R5,[R6, #+0]
   1830          		}
   1831          
   1832          		//========================================================================
   1833          		//	상태정보 모니터링중 - 상태정보값 갱신.
   1834          		if( GetRFMMode() == RFMModeNormal )
   \                     ??LoopProcRFM_8: (+1)
   \      0x136   0x.... 0x....      BL       GetRFMMode
   \      0x13A   0x2800             CMP      R0,#+0
   \      0x13C   0xD144             BNE.N    ??LoopProcRFM_15
   1835          		{
   1836          			UpdateLCDMonitor( nTick );		//	LCD : 모니터링 상태 Update
   \      0x13E   0x0020             MOVS     R0,R4
   \      0x140   0x.... 0x....      BL       UpdateLCDMonitor
   \      0x144   0xE040             B.N      ??LoopProcRFM_15
   1837          		}
   1838          	}
   1839          	//========================================================================
   1840          	//  RFM - 수신기 - 대승객방송
   1841          	else if ( GetDevID() == DevRF900M )
   \                     ??LoopProcRFM_0: (+1)
   \      0x146   0x.... 0x....      BL       GetDevID
   \      0x14A   0x2801             CMP      R0,#+1
   \      0x14C   0xD13C             BNE.N    ??LoopProcRFM_15
   1842          	{
   1843          		if( GetRFMMode() == RFMModeOcc )
   \      0x14E   0x.... 0x....      BL       GetRFMMode
   \      0x152   0x2803             CMP      R0,#+3
   \      0x154   0xD138             BNE.N    ??LoopProcRFM_15
   1844          		{
   1845          			//	대승객 방송 모드인 경우 대승객 방송 음성 송출.
   1846          			if( qBufCnt( &g_qBufAudioTx ) >= ( I2S_DMA_LOOP_SIZE * 2 ) )
   \      0x156   0x.... 0x....      LDR.W    R5,??DataTable56_19
   \      0x15A   0x0028             MOVS     R0,R5
   \      0x15C   0x.... 0x....      BL       qBufCnt
   \      0x160   0x283C             CMP      R0,#+60
   \      0x162   0xDB31             BLT.N    ??LoopProcRFM_15
   1847          			{
   1848          				//		printf ( "G" );
   1849          				//========================================================================
   1850          				//	Audio ( 대승객방송 음성 )
   1851          				qBufGet( &g_qBufAudioTx, (uint8_t*)bufRFTx.dat.data, ( I2S_DMA_LOOP_SIZE * 2 ) );
   \      0x164   0x223C             MOVS     R2,#+60
   \      0x166   0xA906             ADD      R1,SP,#+24
   \      0x168   0x0028             MOVS     R0,R5
   \      0x16A   0x.... 0x....      BL       qBufGet
   1852          				//	Audio Loopback ( 대승객방송 음성 )
   1853          				qBufPut( &g_qBufAudioRx, (uint8_t*)bufRFTx.dat.data, ( I2S_DMA_LOOP_SIZE * 2 ) );
   \      0x16E   0x223C             MOVS     R2,#+60
   \      0x170   0xA906             ADD      R1,SP,#+24
   \      0x172   0x.... 0x....      LDR.W    R0,??DataTable56_22
   \      0x176   0x.... 0x....      BL       qBufPut
   1854          
   1855          				//========================================================================
   1856          				//	Packet Header	-	OCC PA 전송
   1857          
   1858          				//	Header #2
   1859          				_MakePktHdr2( &bufRFTx, PktPA );
   \      0x17A   0x2102             MOVS     R1,#+2
   \      0x17C   0xA805             ADD      R0,SP,#+20
   \      0x17E   0x.... 0x....      BL       _MakePktHdr2
   1860          
   1861          				if( GetChRx() == ChTS1_1 )	//	1호차 수신기
   \      0x182   0x.... 0x....      BL       GetChRx
   \      0x186   0x.... 0x....      LDR.W    R1,??DataTable56_46
   \      0x18A   0x6809             LDR      R1,[R1, #+0]
   \      0x18C   0x4288             CMP      R0,R1
   \      0x18E   0xD10A             BNE.N    ??LoopProcRFM_16
   1862          				{
   1863          					//	1 -> 2 ... -> 10
   1864          					SendPktCh( GetChPA() + 1, (uint8_t *)&bufRFTx,
                 					                          ^
Warning[Pe167]: argument of type "uint8_t *" is incompatible with parameter of
          type "char const *"
   1865          						pRadioConfiguration->Radio_PacketLength );
   \      0x190   0x.... 0x....      BL       GetChPA
   \      0x194   0x.... 0x....      LDR.W    R1,??DataTable56_37
   \      0x198   0x6809             LDR      R1,[R1, #+0]
   \      0x19A   0x794A             LDRB     R2,[R1, #+5]
   \      0x19C   0xA905             ADD      R1,SP,#+20
   \      0x19E   0x1C40             ADDS     R0,R0,#+1
   \      0x1A0   0x.... 0x....      BL       SendPktCh
   \      0x1A4   0xE009             B.N      ??LoopProcRFM_17
   1866          				}
   1867          				else
   1868          				{
   1869          					// 10 -> 9 ... -> 1
   1870          					SendPktCh( GetChPA() - 1, (uint8_t *)&bufRFTx,
                 					                          ^
Warning[Pe167]: argument of type "uint8_t *" is incompatible with parameter of
          type "char const *"
   1871          						pRadioConfiguration->Radio_PacketLength );
   \                     ??LoopProcRFM_16: (+1)
   \      0x1A6   0x.... 0x....      BL       GetChPA
   \      0x1AA   0x.... 0x....      LDR.W    R1,??DataTable56_37
   \      0x1AE   0x6809             LDR      R1,[R1, #+0]
   \      0x1B0   0x794A             LDRB     R2,[R1, #+5]
   \      0x1B2   0xA905             ADD      R1,SP,#+20
   \      0x1B4   0x1E40             SUBS     R0,R0,#+1
   \      0x1B6   0x.... 0x....      BL       SendPktCh
   1872          				}
   1873          
   1874          				// 조명 On
   1875          				HAL_GPIO_WritePin ( LIGHT_ON_GPIO_Port, LIGHT_ON_Pin, GPIO_PIN_SET );
   \                     ??LoopProcRFM_17: (+1)
   \      0x1BA   0x2201             MOVS     R2,#+1
   \      0x1BC   0xF44F 0x7100      MOV      R1,#+512
   \      0x1C0   0x.... 0x....      LDR.W    R0,??DataTable56_12
   \      0x1C4   0x.... 0x....      BL       HAL_GPIO_WritePin
   1876          				//========================================================================
   1877          			}
   1878          		}
   1879          	}
   1880          
   1881          	//========================================================================
   1882          	//	수신중 해제
   1883          	if ( (nTick - g_nStampRxPkt) > TIMEOUT_RXSTAT && GetRFMMode() == RFMModeRx
   1884          			&& ( GetRFMMode() != RFMModeOcc )		//	OCC Mode - Skip
   1885          			&& ( GetRFMMode() != RFMModeUpgr )		//	Upgrade Mode - Skip
   1886          		)
   \                     ??LoopProcRFM_15: (+1)
   \      0x1C8   0xF240 0x35E9      MOVW     R5,#+1001
   \      0x1CC   0x.... 0x....      LDR.W    R6,??DataTable56_47
   \      0x1D0   0x6830             LDR      R0,[R6, #+0]
   \      0x1D2   0x1A20             SUBS     R0,R4,R0
   \      0x1D4   0x42A8             CMP      R0,R5
   \      0x1D6   0xDB23             BLT.N    ??LoopProcRFM_18
   \      0x1D8   0x.... 0x....      BL       GetRFMMode
   \      0x1DC   0x2802             CMP      R0,#+2
   \      0x1DE   0xD11F             BNE.N    ??LoopProcRFM_18
   \      0x1E0   0x.... 0x....      BL       GetRFMMode
   \      0x1E4   0x2803             CMP      R0,#+3
   \      0x1E6   0xD01B             BEQ.N    ??LoopProcRFM_18
   \      0x1E8   0x.... 0x....      BL       GetRFMMode
   \      0x1EC   0x2804             CMP      R0,#+4
   \      0x1EE   0xD017             BEQ.N    ??LoopProcRFM_18
   1887          	{
   1888          		// Rx 패킷이 500 ms 없을 경우 수신모드 해제
   1889          		SetRFMMode( RFMModeNormal );
   \      0x1F0   0x2000             MOVS     R0,#+0
   \      0x1F2   0x.... 0x....      BL       SetRFMMode
   1890          
   1891          		//  수신기 Spk Relay Off
   1892          		HAL_GPIO_WritePin( AUDIO_ON_GPIO_Port, AUDIO_ON_Pin, GPIO_PIN_RESET );
   \      0x1F6   0x2200             MOVS     R2,#+0
   \      0x1F8   0xF44F 0x7180      MOV      R1,#+256
   \      0x1FC   0x.... 0x....      LDR.W    R0,??DataTable56_12
   \      0x200   0x.... 0x....      BL       HAL_GPIO_WritePin
   1893          
   1894          #if defined(USE_RFT_ONLY_RX_SPK_ON)
   1895          		if ( GetDevID() == DevRF900T )
   \      0x204   0x.... 0x....      BL       GetDevID
   \      0x208   0x2802             CMP      R0,#+2
   \      0x20A   0xD102             BNE.N    ??LoopProcRFM_19
   1896          		{
   1897          			//  송신기 : 수신중이 아닌경우 SPK OFF
   1898          //			HAL_GPIO_WritePin( SPK_ON_GPIO_Port, SPK_ON_Pin, GPIO_PIN_RESET );
   1899          			RFM_Spk(0);
   \      0x20C   0x2000             MOVS     R0,#+0
   \      0x20E   0x.... 0x....      BL       RFM_Spk
   1900          		}
   1901          #endif
   1902          
   1903          		//  Red LED Off
   1904          		HAL_GPIO_WritePin ( LED_ON_B_GPIO_Port, LED_ON_B_Pin, GPIO_PIN_RESET ); //  RED LED
   \                     ??LoopProcRFM_19: (+1)
   \      0x212   0x2200             MOVS     R2,#+0
   \      0x214   0xF44F 0x4180      MOV      R1,#+16384
   \      0x218   0x.... 0x....      LDR.W    R0,??DataTable56_45
   \      0x21C   0x.... 0x....      BL       HAL_GPIO_WritePin
   1905          	}
   1906          
   1907          	//========================================================================
   1908          	//  수신기 Standby GPIO 제어 : 모듈동작시 1초간격 Blink
   1909          	static int s_nTickStandby;
   1910          
   1911          	if ( nTick - s_nTickStandby >= 1000 )
   \                     ??LoopProcRFM_18: (+1)
   \      0x220   0x.... 0x....      LDR.W    R7,??DataTable56_48
   \      0x224   0x6838             LDR      R0,[R7, #+0]
   \      0x226   0x1A20             SUBS     R0,R4,R0
   \      0x228   0xF5B0 0x7F7A      CMP      R0,#+1000
   \      0x22C   0xDB1B             BLT.N    ??LoopProcRFM_20
   1912          	{
   1913          		//	Standby GPIO Toggle
   1914          		if ( GetRFMMode() == RFMModeRx )
   \      0x22E   0x.... 0x....      BL       GetRFMMode
   \      0x232   0x2802             CMP      R0,#+2
   \      0x234   0xD105             BNE.N    ??LoopProcRFM_21
   1915          		{
   1916          			//  수신기:수신중 LED On ( Standby LED On )
   1917          			HAL_GPIO_WritePin( STANDBY_GPIO_Port, STANDBY_Pin, GPIO_PIN_SET );
   \      0x236   0x2201             MOVS     R2,#+1
   \      0x238   0x2180             MOVS     R1,#+128
   \      0x23A   0x....             LDR.N    R0,??DataTable56_12
   \      0x23C   0x.... 0x....      BL       HAL_GPIO_WritePin
   \      0x240   0xE009             B.N      ??LoopProcRFM_22
   1918          		}
   1919          		else
   1920          		{
   1921          			//  Standby LED Toggle
   1922          			HAL_GPIO_TogglePin( STANDBY_GPIO_Port, STANDBY_Pin );
   \                     ??LoopProcRFM_21: (+1)
   \      0x242   0x2180             MOVS     R1,#+128
   \      0x244   0x....             LDR.N    R0,??DataTable56_12
   \      0x246   0x.... 0x....      BL       HAL_GPIO_TogglePin
   1923          
   1924          			//	RFM(Board) Status LED
   1925          			HAL_GPIO_TogglePin ( LED_ST_GPIO_Port, LED_ST_Pin );
   \      0x24A   0xF44F 0x4100      MOV      R1,#+32768
   \      0x24E   0x.... 0x....      LDR.W    R0,??DataTable56_49
   \      0x252   0x.... 0x....      BL       HAL_GPIO_TogglePin
   1926          		}
   1927          
   1928          		if ( GetRFMMode() == RFMModeNormal )
   \                     ??LoopProcRFM_22: (+1)
   \      0x256   0x.... 0x....      BL       GetRFMMode
   \      0x25A   0x2800             CMP      R0,#+0
   \      0x25C   0xD102             BNE.N    ??LoopProcRFM_23
   1929          		{
   1930          			//	Normal 모드인 경우 상태정보 갱신.
   1931          		    //	Reflash Status
   1932          		    ReflashStat( nTick );	//	상태정보 갱신.
   \      0x25E   0x0020             MOVS     R0,R4
   \      0x260   0x.... 0x....      BL       ReflashStat
   1933          		}
   1934          
   1935          #if defined(USE_SEND_STATUS)	//	상태 정보 전송.
   1936          		//========================================================================
   1937          		if ( GetRFMMode() == RFMModeNormal )
   1938          		{
   1939          		    SendStat(0);		//	상태정보전송.
   1940          
   1941          		    //	Reflash Status
   1942          		    ReflashStat( nTick );	//	상태정보 갱신.
   1943          		}
   1944          		//========================================================================
   1945          #endif
   1946          		s_nTickStandby = nTick;
   \                     ??LoopProcRFM_23: (+1)
   \      0x264   0x603C             STR      R4,[R7, #+0]
   1947          	}
   1948          
   1949          #if defined(TIMEOUT_UPGRADE)
   1950          
   1951          	//========================================================================
   1952          	//	Upgrade Mode 진입후 5분간 Rx가 없는경우 Normal모드로 변경.
   1953          	if ( ( GetDevID() == DevRF900M )						//	수신기.
   1954          		&& ( ( nTick - g_nStampRxPkt ) > (TIMEOUT_UPGRADE * 1000) )	//	Timeout
   1955          		&& ( GetRFMMode() == RFMModeUpgr )
   1956          		)
   \                     ??LoopProcRFM_20: (+1)
   \      0x266   0x.... 0x....      BL       GetDevID
   \      0x26A   0x2801             CMP      R0,#+1
   \      0x26C   0xD118             BNE.N    ??LoopProcRFM_24
   \      0x26E   0x6830             LDR      R0,[R6, #+0]
   \      0x270   0x1A20             SUBS     R0,R4,R0
   \      0x272   0x.... 0x....      LDR.W    R1,??DataTable56_50
   \      0x276   0x4288             CMP      R0,R1
   \      0x278   0xDB12             BLT.N    ??LoopProcRFM_24
   \      0x27A   0x.... 0x....      BL       GetRFMMode
   \      0x27E   0x2804             CMP      R0,#+4
   \      0x280   0xD10E             BNE.N    ??LoopProcRFM_24
   1957          	{
   1958          		//========================================================================
   1959          		//	Normal 모드로 변경.
   1960          		SetRFMMode( RFMModeNormal );	//	Normal Mode 로 변경
   \      0x282   0x2000             MOVS     R0,#+0
   \      0x284   0x.... 0x....      BL       SetRFMMode
   1961          		//========================================================================
   1962          
   1963          		//  RF 수신 Start
   1964          		g_nChRx = GetChRx();	//	ChTS1_1 + g_idxTrainSet * 2 + ((g_nCarNo+1) % 2);	// 현재 호차 채널
   \      0x288   0x.... 0x....      LDR.W    R6,??DataTable56_51
   \      0x28C   0x.... 0x....      BL       GetChRx
   \      0x290   0x6030             STR      R0,[R6, #+0]
   1965          
   1966          		vRadio_StartRX(
   1967          			g_nChRx,	//g_idxTrainSet,	//		pRadioConfiguration->Radio_ChannelNumber,
   1968          			pRadioConfiguration->Radio_PacketLength );
   \      0x292   0x....             LDR.N    R0,??DataTable56_37
   \      0x294   0x6800             LDR      R0,[R0, #+0]
   \      0x296   0x7941             LDRB     R1,[R0, #+5]
   \      0x298   0x6830             LDR      R0,[R6, #+0]
   \      0x29A   0xB2C0             UXTB     R0,R0
   \      0x29C   0x.... 0x....      BL       vRadio_StartRX
   1969          	}
   1970          
   1971          #endif
   1972          
   1973          #if defined(USE_STAT_REQ)	//	송신기 : 상태 정보 요청 100 msec간격.
   1974          	//========================================================================
   1975          	//	송신기 장치 상태정보 요청.
   1976          	static int oldTickStatReq = 0;
   1977          	static int s_idxCh = 0;
   1978          
   1979          	if	( 	GetDevID() == DevRF900T						//	송신기
   1980          			&&	GetRFMMode() == RFMModeNormal			//	Normal모드 : 상태정보 요청.
   1981          			)
   \                     ??LoopProcRFM_24: (+1)
   \      0x2A0   0x.... 0x....      BL       GetDevID
   \      0x2A4   0x2802             CMP      R0,#+2
   \      0x2A6   0xD13C             BNE.N    ??LoopProcRFM_25
   \      0x2A8   0x.... 0x....      BL       GetRFMMode
   \      0x2AC   0x2800             CMP      R0,#+0
   \      0x2AE   0xD138             BNE.N    ??LoopProcRFM_25
   1982          	{
   1983          #if defined(USE_ROUTE_REQ_RFM)//	수신기에서 요청의 경우 송신기가 요청하지 않음.
   1984          #else
   1985          #if defined(USE_ROUTE_REQ)	//	송신기 : Route 정보 요청.
   1986          		static int oldTickRouteReq = 0;
   1987          
   1988          		if( (nTick - oldTickRouteReq ) > (TIME_ROUTE_REQ * 1000) )
   1989          		{
   1990          			//	송신기 -> 수신기 : Route 정보 요청.
   1991          			SendRouteReq( GetChNearRFM() );		//	가까운 수신기로 Route정보 요청.
   1992          
   1993          			oldTickRouteReq = nTick + 1000;		//	1초 이후 부터 시작.
   1994          			oldTickStatReq = nTick + 1000;		//	1초 이후 부터 시작.
   1995          		}
   1996          		else
   1997          #endif		//	defined(USE_ROUTE_REQ)	//	송신기 : Route 정보 요청.
   1998          #endif
   1999          		if	( (nTick - oldTickStatReq) > TIME_STAT_REQ )	//	주기 : 300 msec
   \      0x2B0   0x....             LDR.N    R6,??DataTable56_52
   \      0x2B2   0x6830             LDR      R0,[R6, #+0]
   \      0x2B4   0x1A20             SUBS     R0,R4,R0
   \      0x2B6   0xF240 0x112D      MOVW     R1,#+301
   \      0x2BA   0x4288             CMP      R0,R1
   \      0x2BC   0xDB31             BLT.N    ??LoopProcRFM_25
   2000          		{
   2001          			//	상태정보 요청.
   2002          			if ( s_idxCh < MaxRFMNo )
   \      0x2BE   0x....             LDR.N    R7,??DataTable56_53
   \      0x2C0   0x6838             LDR      R0,[R7, #+0]
   \      0x2C2   0x280A             CMP      R0,#+10
   \      0x2C4   0xDA07             BGE.N    ??LoopProcRFM_26
   2003          			{
   2004          				//========================================================================
   2005          				//	수신기 상태정보
   2006          				SendStatReq( ChTS1_1 + (s_idxCh*ChGap) );
   \      0x2C6   0x....             LDR.N    R0,??DataTable56_46
   \      0x2C8   0x6800             LDR      R0,[R0, #+0]
   \      0x2CA   0x6839             LDR      R1,[R7, #+0]
   \      0x2CC   0xEB10 0x0081      ADDS     R0,R0,R1, LSL #+2
   \      0x2D0   0x.... 0x....      BL       SendStatReq
   \      0x2D4   0xE01C             B.N      ??LoopProcRFM_27
   2007          			}
   2008          			else
   2009          			{
   2010          				//========================================================================
   2011          				//	송신기 상태정보
   2012          				if( ChTx_1 + ( s_idxCh % 2 )*ChGap != GetChRx() )
   \                     ??LoopProcRFM_26: (+1)
   \      0x2D6   0xF05F 0x0802      MOVS     R8,#+2
   \      0x2DA   0x.... 0x....      BL       GetChRx
   \      0x2DE   0x....             LDR.N    R1,??DataTable56_54
   \      0x2E0   0x680A             LDR      R2,[R1, #+0]
   \      0x2E2   0x683B             LDR      R3,[R7, #+0]
   \      0x2E4   0xF8D7 0xC000      LDR      R12,[R7, #+0]
   \      0x2E8   0xFB9C 0xFCF8      SDIV     R12,R12,R8
   \      0x2EC   0xFB08 0x381C      MLS      R8,R8,R12,R3
   \      0x2F0   0xEB12 0x0288      ADDS     R2,R2,R8, LSL #+2
   \      0x2F4   0x4282             CMP      R2,R0
   \      0x2F6   0xD00B             BEQ.N    ??LoopProcRFM_27
   2013          				{
   2014          					//	타 송신기에 상태정보 요청.
   2015          					SendStatReq( ChTx_1 + ( s_idxCh % 2 )*ChGap );
   \      0x2F8   0x2202             MOVS     R2,#+2
   \      0x2FA   0x6808             LDR      R0,[R1, #+0]
   \      0x2FC   0x6839             LDR      R1,[R7, #+0]
   \      0x2FE   0x683B             LDR      R3,[R7, #+0]
   \      0x300   0xFB93 0xF3F2      SDIV     R3,R3,R2
   \      0x304   0xFB02 0x1213      MLS      R2,R2,R3,R1
   \      0x308   0xEB10 0x0082      ADDS     R0,R0,R2, LSL #+2
   \      0x30C   0x.... 0x....      BL       SendStatReq
   2016          				}
   2017          			}
   2018          
   2019          	//		if ( s_idxCh == 0 )
   2020          	//		{
   2021          	//		    //	Reflash Status
   2022          	//		    ReflashStat( nTick );	//	상태정보 갱신.
   2023          	//		}
   2024          
   2025          			s_idxCh = ( s_idxCh + 1 ) % ( MaxRFMNo + 2 );	//	MaxRFMNo : 10 + 2(송신기 2채널)
   \                     ??LoopProcRFM_27: (+1)
   \      0x310   0x6838             LDR      R0,[R7, #+0]
   \      0x312   0x1C40             ADDS     R0,R0,#+1
   \      0x314   0x210C             MOVS     R1,#+12
   \      0x316   0xFB90 0xF2F1      SDIV     R2,R0,R1
   \      0x31A   0xFB01 0x0012      MLS      R0,R1,R2,R0
   \      0x31E   0x6038             STR      R0,[R7, #+0]
   2026          
   2027          			oldTickStatReq = nTick;
   \      0x320   0x6034             STR      R4,[R6, #+0]
   2028          		}
   2029          	}
   2030          #endif
   2031          
   2032          
   2033          #if defined(USE_ROUTE_REQ_RFM)	//	수신기 Route 요청.
   2034          	static int oldTickRouteReq = 0;
   2035          
   2036          	static int s_ChkRsp = 0;
   2037          
   2038          	if	( 	GetDevID() == DevRF900M						//	수신기
   2039          			&&	GetRFMMode() == RFMModeNormal			//	Normal모드 : 상태정보 요청.
   2040          			)
   \                     ??LoopProcRFM_25: (+1)
   \      0x322   0x.... 0x....      BL       GetDevID
   \      0x326   0x2801             CMP      R0,#+1
   \      0x328   0xD142             BNE.N    ??LoopProcRFM_28
   \      0x32A   0x.... 0x....      BL       GetRFMMode
   \      0x32E   0x2800             CMP      R0,#+0
   \      0x330   0xD13E             BNE.N    ??LoopProcRFM_28
   2041          	{
   2042          
   2043          		if( (nTick - oldTickRouteReq ) > (TIME_ROUTE_REQ * 1000) )
   \      0x332   0x....             LDR.N    R6,??DataTable56_55
   \      0x334   0x6830             LDR      R0,[R6, #+0]
   \      0x336   0x1A20             SUBS     R0,R4,R0
   \      0x338   0x42A8             CMP      R0,R5
   \      0x33A   0xDB0C             BLT.N    ??LoopProcRFM_29
   2044          		{
   2045          			//	수신기 -> 수신기 : Route 정보 요청.
   2046          			//	1 -> 2
   2047          			//		 2 -> 3
   2048          			//			  3 -> 4
   2049          			if ( g_nCarNo != 10 )	//	10호차 Skip
   \      0x33C   0x....             LDR.N    R0,??DataTable56_56
   \      0x33E   0x6800             LDR      R0,[R0, #+0]
   \      0x340   0x280A             CMP      R0,#+10
   \      0x342   0xD004             BEQ.N    ??LoopProcRFM_30
   2050          			{
   2051          				//	다음번 수신기에 정보 요청
   2052          				SendRouteReq( GetChRx() + ChGap );		//
   \      0x344   0x.... 0x....      BL       GetChRx
   \      0x348   0x1D00             ADDS     R0,R0,#+4
   \      0x34A   0x.... 0x....      BL       SendRouteReq
   2053          
   2054          				//	Timeout 발생시 그 다음 수신기로 정보 요청.
   2055          			}
   2056          
   2057          			oldTickRouteReq = nTick;			//	1초 이후 부터 시작.
   \                     ??LoopProcRFM_30: (+1)
   \      0x34E   0x6034             STR      R4,[R6, #+0]
   2058          			s_ChkRsp = 1;
   \      0x350   0x2001             MOVS     R0,#+1
   \      0x352   0x....             LDR.N    R1,??DataTable56_57
   \      0x354   0x6008             STR      R0,[R1, #+0]
   2059          		}
   2060          
   2061          		if( s_ChkRsp == 1
   2062          				&& (nTick - oldTickRouteReq ) > 100		//	송신후 응답시간 ( 100 msec )
   2063          				&& ( g_nCarNo != 9 && g_nCarNo != 10 )	//	다음호차 검색은 9/10호차 Skip
   2064          				)
   \                     ??LoopProcRFM_29: (+1)
   \      0x356   0x....             LDR.N    R5,??DataTable56_57
   \      0x358   0x6828             LDR      R0,[R5, #+0]
   \      0x35A   0x2801             CMP      R0,#+1
   \      0x35C   0xD128             BNE.N    ??LoopProcRFM_28
   \      0x35E   0x6830             LDR      R0,[R6, #+0]
   \      0x360   0x1A20             SUBS     R0,R4,R0
   \      0x362   0x2865             CMP      R0,#+101
   \      0x364   0xDB24             BLT.N    ??LoopProcRFM_28
   \      0x366   0x....             LDR.N    R6,??DataTable56_56
   \      0x368   0x6830             LDR      R0,[R6, #+0]
   \      0x36A   0x2809             CMP      R0,#+9
   \      0x36C   0xD020             BEQ.N    ??LoopProcRFM_28
   \      0x36E   0x6830             LDR      R0,[R6, #+0]
   \      0x370   0x280A             CMP      R0,#+10
   \      0x372   0xD01D             BEQ.N    ??LoopProcRFM_28
   2065          		{
   2066          			//	다음 호차검색
   2067          
   2068          			if ( ( nTick - g_nStampRouteRsp ) > TIMEOUT_RECV_ROUTE * 1000 )
   \      0x374   0x....             LDR.N    R0,??DataTable56_58
   \      0x376   0x6800             LDR      R0,[R0, #+0]
   \      0x378   0x1A20             SUBS     R0,R4,R0
   \      0x37A   0xF242 0x7111      MOVW     R1,#+10001
   \      0x37E   0x4288             CMP      R0,R1
   \      0x380   0xDB14             BLT.N    ??LoopProcRFM_31
   2069          			{
   2070          				//	Timeout 발생시.
   2071          				//	다음호차부터  ~ 10까지 상태정보 전송 검색.
   2072          
   2073          				//	g_nIdxRouteFindNext	Index 증가하면서 10호차 까지 상태정보 검색.
   2074          				//	[1] [2-X] ->[3] ->[4] ... -> [10]
   2075          				SendRouteReq( GetChRx() + (2 + g_nIdxRouteFindNext) * ChGap );
   \      0x382   0x.... 0x....      BL       GetChRx
   \      0x386   0x....             LDR.N    R7,??DataTable56_59
   \      0x388   0x6839             LDR      R1,[R7, #+0]
   \      0x38A   0x1C89             ADDS     R1,R1,#+2
   \      0x38C   0xEB10 0x0081      ADDS     R0,R0,R1, LSL #+2
   \      0x390   0x.... 0x....      BL       SendRouteReq
   2076          
   2077          				if ( ( g_nCarNo + 2 + g_nIdxRouteFindNext ) > 10 )
   \      0x394   0x6831             LDR      R1,[R6, #+0]
   \      0x396   0x6838             LDR      R0,[R7, #+0]
   \      0x398   0x1841             ADDS     R1,R0,R1
   \      0x39A   0x1C89             ADDS     R1,R1,#+2
   \      0x39C   0x290B             CMP      R1,#+11
   \      0x39E   0xDB02             BLT.N    ??LoopProcRFM_32
   2078          					g_nIdxRouteFindNext = 0;
   \      0x3A0   0x2000             MOVS     R0,#+0
   \      0x3A2   0x6038             STR      R0,[R7, #+0]
   \      0x3A4   0xE002             B.N      ??LoopProcRFM_31
   2079          				else
   2080          					g_nIdxRouteFindNext++;
   \                     ??LoopProcRFM_32: (+1)
   \      0x3A6   0x6838             LDR      R0,[R7, #+0]
   \      0x3A8   0x1C40             ADDS     R0,R0,#+1
   \      0x3AA   0x6038             STR      R0,[R7, #+0]
   2081          			}
   2082          			s_ChkRsp = 0;
   \                     ??LoopProcRFM_31: (+1)
   \      0x3AC   0x2000             MOVS     R0,#+0
   \      0x3AE   0x6028             STR      R0,[R5, #+0]
   2083          		}
   2084          	}
   2085          
   2086          #endif
   2087          
   2088          }
   \                     ??LoopProcRFM_28: (+1)
   \      0x3B0   0xB016             ADD      SP,SP,#+88
   \      0x3B2   0xE8BD 0x81F0      POP      {R4-R8,PC}

   \                                 In section .bss, align 4
   \                     `LoopProcRFM{2}{3}::nOldRFMMode`:
   \        0x0                      DS8 4

   \                                 In section .bss, align 4
   \                     `LoopProcRFM::s_nTickStandby`:
   \        0x0                      DS8 4

   \                                 In section .bss, align 4
   \                     `LoopProcRFM::oldTickStatReq`:
   \        0x0                      DS8 4

   \                                 In section .bss, align 4
   \                     `LoopProcRFM::s_idxCh`:
   \        0x0                      DS8 4

   \                                 In section .bss, align 4
   \                     `LoopProcRFM::oldTickRouteReq`:
   \        0x0                      DS8 4

   \                                 In section .bss, align 4
   \                     `LoopProcRFM::s_ChkRsp`:
   \        0x0                      DS8 4
   2089          
   2090          //========================================================================

   \                                 In section .text, align 2, keep-with-next
   2091          void UpdateStat( RFMPktStat *pStat )
   2092          //========================================================================
   2093          {
   \                     UpdateStat: (+1)
   \        0x0   0xB5FE             PUSH     {R1-R7,LR}
   \        0x2   0x0004             MOVS     R4,R0
   2094          	//	버전정보 갱신.
   2095          	if ( pStat == NULL ) return ;
   \        0x4   0x2C00             CMP      R4,#+0
   \        0x6   0xD029             BEQ.N    ??UpdateStat_0
   2096          
   2097          	if ( 0 < pStat->nCarNo && pStat->nCarNo <= MaxCarNo )
   \                     ??UpdateStat_1: (+1)
   \        0x8   0x7B60             LDRB     R0,[R4, #+13]
   \        0xA   0x2800             CMP      R0,#+0
   \        0xC   0xD026             BEQ.N    ??UpdateStat_2
   \        0xE   0x7B60             LDRB     R0,[R4, #+13]
   \       0x10   0x280E             CMP      R0,#+14
   \       0x12   0xDA23             BGE.N    ??UpdateStat_2
   2098          	{
   2099          		int idx = pStat->nCarNo;
   \       0x14   0x7B65             LDRB     R5,[R4, #+13]
   2100          
   2101          		//========================================================================
   2102          		//	상태정보 갱신.
   2103          		memcpy( &g_devStat[idx].stat, pStat, sizeof(RFMPktStat) );
                 		^
Warning[Pe223]: function "memcpy" declared implicitly
   \       0x16   0x2625             MOVS     R6,#+37
   \       0x18   0x....             LDR.N    R7,??DataTable56_60
   \       0x1A   0x2219             MOVS     R2,#+25
   \       0x1C   0x0021             MOVS     R1,R4
   \       0x1E   0xFB06 0xF005      MUL      R0,R6,R5
   \       0x22   0x4438             ADD      R0,R7,R0
   \       0x24   0x.... 0x....      BL       memcpy
   2104          
   2105          		//========================================================================
   2106          		//	RSSI 갱신
   2107          		g_devStat[idx].nRSSI = g_nRSSI;
   \       0x28   0xFB06 0xF005      MUL      R0,R6,R5
   \       0x2C   0x4438             ADD      R0,R7,R0
   \       0x2E   0x....             LDR.N    R1,??DataTable56_61
   \       0x30   0x6809             LDR      R1,[R1, #+0]
   \       0x32   0xF8C0 0x101D      STR      R1,[R0, #+29]
   2108          
   2109          		//========================================================================
   2110          		//	버전정보 갱신.
   2111          
   2112          #if defined( USE_COMM_MODE_CH_GRP )
   2113          		sprintf(_sVerList[idx], "%02d:%d/R%d,%03d", idx,
                 		^
Warning[Pe223]: function "sprintf" declared implicitly
   2114          				pStat->ver_build,
   2115          				pStat->nRFMode,
   2116          				g_devStat[idx].nRSSI
   2117          				);
   \       0x36   0xFB06 0xF605      MUL      R6,R6,R5
   \       0x3A   0xEB07 0x0106      ADD      R1,R7,R6
   \       0x3E   0xF8D1 0x001D      LDR      R0,[R1, #+29]
   \       0x42   0x9001             STR      R0,[SP, #+4]
   \       0x44   0x7DE0             LDRB     R0,[R4, #+23]
   \       0x46   0x9000             STR      R0,[SP, #+0]
   \       0x48   0x8A63             LDRH     R3,[R4, #+18]
   \       0x4A   0x002A             MOVS     R2,R5
   \       0x4C   0x....             LDR.N    R1,??DataTable56_62
   \       0x4E   0x....             LDR.N    R0,??DataTable56_63
   \       0x50   0x2614             MOVS     R6,#+20
   \       0x52   0xFB06 0xF605      MUL      R6,R6,R5
   \       0x56   0x4430             ADD      R0,R0,R6
   \       0x58   0x.... 0x....      BL       sprintf
   2118          #elif defined( USE_HOP_MANUAL )
   2119          		sprintf(_sVerList[idx], "%02d:v%d/hop(%d)", idx,
   2120          				pStat->ver_build,
   2121          				pStat->nManHop
   2122          				);
   2123          #else
   2124          		sprintf(_sVerList[idx], "%02d:v%d.%d.%d.%d", idx,
   2125          				pStat->ver_main,
   2126          				pStat->ver_sub,
   2127          				pStat->ver_det,
   2128          				pStat->ver_build
   2129          				);
   2130          #endif
   2131          	}
   2132          }
   \                     ??UpdateStat_2: (+1)
   \                     ??UpdateStat_0: (+1)
   \       0x5C   0xBDF7             POP      {R0-R2,R4-R7,PC}
   2133          
   2134          //========================================================================

   \                                 In section .text, align 2, keep-with-next
   2135          void SetStat( int nRspID )
   2136          //========================================================================
   2137          {
   \                     SetStat: (+1)
   \        0x0   0xB510             PUSH     {R4,LR}
   \        0x2   0x0004             MOVS     R4,R0
   2138          	//	상태정보 저장.
   2139          	//	상태정보 수신 시간 저장.
   2140          
   2141          	//	장치 응답 Flag 설정.
   2142          	g_flagRspID	|= ( 0x1 << nRspID );
   \        0x4   0x....             LDR.N    R0,??DataTable56_7
   \        0x6   0x8801             LDRH     R1,[R0, #+0]
   \        0x8   0x2201             MOVS     R2,#+1
   \        0xA   0x40A2             LSLS     R2,R2,R4
   \        0xC   0x4311             ORRS     R1,R2,R1
   \        0xE   0x8001             STRH     R1,[R0, #+0]
   2143          
   2144          	//	TimeStamp 저장.
   2145          //DEL	stampStat[nRspID] = HAL_GetTick();
   2146          	g_devStat[nRspID].stampRx = HAL_GetTick();
   \       0x10   0x.... 0x....      BL       HAL_GetTick
   \       0x14   0x....             LDR.N    R1,??DataTable56_60
   \       0x16   0x2225             MOVS     R2,#+37
   \       0x18   0xFB02 0xF204      MUL      R2,R2,R4
   \       0x1C   0x4411             ADD      R1,R1,R2
   \       0x1E   0xF8C1 0x0019      STR      R0,[R1, #+25]
   2147          }
   \       0x22   0xBD10             POP      {R4,PC}
   2148          
   2149          //========================================================================

   \                                 In section .text, align 2, keep-with-next
   2150          void ReflashStat( int nTick )
   2151          //========================================================================
   2152          {
   \                     ReflashStat: (+1)
   \        0x0   0xB570             PUSH     {R4-R6,LR}
   \        0x2   0x0004             MOVS     R4,R0
   2153          	//	상태정보 갱신.
   2154          	//	Timeout 초과 상태정보 Disable
   2155          	if( g_bSetRspIDManual )
   \        0x4   0x....             LDR.N    R0,??DataTable56_6
   \        0x6   0x6800             LDR      R0,[R0, #+0]
   \        0x8   0x2800             CMP      R0,#+0
   \        0xA   0xD126             BNE.N    ??ReflashStat_0
   2156          	{
   2157          		//	ID 수동설정모드인 경우 return
   2158          		return ;
   2159          	}
   2160          
   2161          	int idx;
   2162          
   2163          	for( idx = 0; idx < MaxCarNo; idx++ )
   \                     ??ReflashStat_1: (+1)
   \        0xC   0x2500             MOVS     R5,#+0
   \                     ??ReflashStat_2: (+1)
   \        0xE   0x2D0D             CMP      R5,#+13
   \       0x10   0xDA23             BGE.N    ??ReflashStat_3
   2164          	{
   2165          		if ( GetCarNo() == idx )
   \       0x12   0x.... 0x....      BL       GetCarNo
   \       0x16   0x42A8             CMP      R0,R5
   \       0x18   0xD01D             BEQ.N    ??ReflashStat_4
   2166          		{
   2167          			//	자신의 ID Skip
   2168          			continue;
   2169          		}
   2170          
   2171          		if ( ( nTick - g_devStat[idx].stampRx ) > TIMEOUT_RECV_STATUS * 1000 )
   \                     ??ReflashStat_5: (+1)
   \       0x1A   0x2025             MOVS     R0,#+37
   \       0x1C   0x....             LDR.N    R1,??DataTable56_60
   \       0x1E   0xFB00 0xF205      MUL      R2,R0,R5
   \       0x22   0xEB01 0x0302      ADD      R3,R1,R2
   \       0x26   0xF8D3 0x2019      LDR      R2,[R3, #+25]
   \       0x2A   0x1AA2             SUBS     R2,R4,R2
   \       0x2C   0xF640 0x73A1      MOVW     R3,#+4001
   \       0x30   0x429A             CMP      R2,R3
   \       0x32   0xDB10             BLT.N    ??ReflashStat_4
   2172          		{
   2173          			g_flagRspID &= ~( 0x1 << idx );
   \       0x34   0x....             LDR.N    R2,??DataTable56_7
   \       0x36   0x8813             LDRH     R3,[R2, #+0]
   \       0x38   0x2601             MOVS     R6,#+1
   \       0x3A   0x40AE             LSLS     R6,R6,R5
   \       0x3C   0x43B3             BICS     R3,R3,R6
   \       0x3E   0x8013             STRH     R3,[R2, #+0]
   2174          
   2175          			//========================================================================
   2176          			//	Timeout 발생시 RSSI값 초기화.
   2177          			g_devStat[idx].nRSSI 	= 	0;
   \       0x40   0x2200             MOVS     R2,#+0
   \       0x42   0xFB00 0xF305      MUL      R3,R0,R5
   \       0x46   0x440B             ADD      R3,R1,R3
   \       0x48   0xF8C3 0x201D      STR      R2,[R3, #+29]
   2178          			g_devStat[idx].nNearCh 	= 	0;	//	nNearCh 초기화.
   \       0x4C   0xFB00 0xF005      MUL      R0,R0,R5
   \       0x50   0x4408             ADD      R0,R1,R0
   \       0x52   0xF8C0 0x2021      STR      R2,[R0, #+33]
   2179          			//========================================================================
   2180          		}
   2181          	}
   \                     ??ReflashStat_4: (+1)
   \       0x56   0x1C6D             ADDS     R5,R5,#+1
   \       0x58   0xE7D9             B.N      ??ReflashStat_2
   2182          }
   \                     ??ReflashStat_3: (+1)
   \                     ??ReflashStat_0: (+1)
   \       0x5A   0xBD70             POP      {R4-R6,PC}
   2183          
   2184          
   2185          //========================================================================

   \                                 In section .text, align 2, keep-with-next
   2186          void ReloadStampStat( void )
   2187          //========================================================================
   2188          {
   \                     ReloadStampStat: (+1)
   \        0x0   0xB538             PUSH     {R3-R5,LR}
   2189          	//	상태정보 시간 갱신.
   2190          	//	-> 상태정보 시간 최신값으로 유지.
   2191          	//	-> 방송/통화 중 상태정보 전송을 하지 않기 때문에 방송통화 이후에 상태정보가 Reset되는 현상 방지.
   2192          
   2193          	int nStamp = HAL_GetTick();
   \        0x2   0x.... 0x....      BL       HAL_GetTick
   \        0x6   0x0004             MOVS     R4,R0
   2194          
   2195          	int idx;
   2196          
   2197          	for( idx = 0; idx < 16; idx++ )
   \        0x8   0x2500             MOVS     R5,#+0
   \                     ??ReloadStampStat_0: (+1)
   \        0xA   0x2D10             CMP      R5,#+16
   \        0xC   0xDA0E             BGE.N    ??ReloadStampStat_1
   2198          	{
   2199          		if( g_flagRspID & ( 0x1 << idx ) )
   \        0xE   0x....             LDR.N    R0,??DataTable56_7
   \       0x10   0x8800             LDRH     R0,[R0, #+0]
   \       0x12   0x2101             MOVS     R1,#+1
   \       0x14   0x40A9             LSLS     R1,R1,R5
   \       0x16   0x4208             TST      R0,R1
   \       0x18   0xD006             BEQ.N    ??ReloadStampStat_2
   2200          		{
   2201          			g_devStat[idx].stampRx = nStamp;
   \       0x1A   0x....             LDR.N    R0,??DataTable56_60
   \       0x1C   0x2125             MOVS     R1,#+37
   \       0x1E   0xFB01 0xF105      MUL      R1,R1,R5
   \       0x22   0x4408             ADD      R0,R0,R1
   \       0x24   0xF8C0 0x4019      STR      R4,[R0, #+25]
   2202          		}
   2203          	}
   \                     ??ReloadStampStat_2: (+1)
   \       0x28   0x1C6D             ADDS     R5,R5,#+1
   \       0x2A   0xE7EE             B.N      ??ReloadStampStat_0
   2204          
   2205          	g_nStampRouteRsp = HAL_GetTick();		//	Normal 모드로 전환시 응답 시간 Reset
   \                     ??ReloadStampStat_1: (+1)
   \       0x2C   0x.... 0x....      BL       HAL_GetTick
   \       0x30   0x....             LDR.N    R1,??DataTable56_58
   \       0x32   0x6008             STR      R0,[R1, #+0]
   2206          }
   \       0x34   0xBD31             POP      {R0,R4,R5,PC}

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable16:
   \        0x0   0x52 0x46          DC8      "RFM"          

   \              0x4D 0x00

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable16_1:
   \        0x0   0x52 0x46          DC8      "RFT"          

   \              0x54 0x00

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable20:
   \        0x0   0x25 0x73          DC8      0x25, 0x73, 0x00, 0x00

   \              0x00 0x00

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable39:
   \        0x0   0x....'....        DC32     `SetDevID::__func__`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable39_1:
   \        0x0   0x....'....        DC32     ?_0

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable40:
   \        0x0   0x....'....        DC32     g_nRFMMode

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable40_1:
   \        0x0   0x....'....        DC32     ?_4

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable41:
   \        0x0   0x....'....        DC32     ?_5

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable41_1:
   \        0x0   0x....'....        DC32     ?_6

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable41_2:
   \        0x0   0x....'....        DC32     ?_7

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable41_3:
   \        0x0   0x....'....        DC32     ?_8

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable42:
   \        0x0   0x52 0x46          DC8      "RFM"          

   \              0x4D 0x00

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable42_1:
   \        0x0   0x0A 0x0A          DC8      0x0A, 0x0A, 0x00, 0x00

   \              0x00 0x00

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable42_2:
   \        0x0   0x25 0x73          DC8      "%s\n"         

   \              0x0A 0x00

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable42_3:
   \        0x0   0x25 0x64          DC8      0x25, 0x64, 0x00, 0x00

   \              0x00 0x00

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable42_4:
   \        0x0   0x....'....        DC32     g_nCarNo

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable42_5:
   \        0x0   0x....'....        DC32     ChTx_1

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable42_6:
   \        0x0   0x....'....        DC32     g_nRFMode

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable42_7:
   \        0x0   0x....'....        DC32     ChTS1_1

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable45:
   \        0x0   0x....'....        DC32     g_nDevID

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable45_1:
   \        0x0   0x....'....        DC32     ChTx_2

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable46:
   \        0x0   0x....'....        DC32     ?_9

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable46_1:
   \        0x0   0x....'....        DC32     hi2c1

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable46_2:
   \        0x0   0x....'....        DC32     `LoadTrainSetIdx::__func__`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable46_3:
   \        0x0   0x....'....        DC32     ?_10

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable46_4:
   \        0x0   0x....'....        DC32     ?_11

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable47:
   \        0x0   0x....'....        DC32     `GetTrainSetIdx::s_bOnce`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable48:
   \        0x0   0x....'....        DC32     g_devStat

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable48_1:
   \        0x0   0x25 0x64          DC8      0x25, 0x64, 0x00, 0x00

   \              0x00 0x00

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable48_2:
   \        0x0   0x....'....        DC32     g_nChPA

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable48_3:
   \        0x0   0x....'....        DC32     g_idxTrainSet

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable48_4:
   \        0x0   0x....'....        DC32     `SetTrainSetIdx::__func__`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable48_5:
   \        0x0   0x....'....        DC32     `GetRFMode::__func__`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable48_6:
   \        0x0   0x....'....        DC32     `SetRFMode::__func__`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable49:
   \        0x0   0x....'....        DC32     g_nChRFT

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable49_1:
   \        0x0   0x....'....        DC32     g_nChRFMUp

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable49_2:
   \        0x0   0x....'....        DC32     g_nChRFMDown

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable49_3:
   \        0x0   0x46 0x00          DC8      "F",0x0,0x0    

   \              0x00 0x00

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable49_4:
   \        0x0   0x....'....        DC32     `GetManHop::__func__`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable49_5:
   \        0x0   0x....'....        DC32     `SetManHop::__func__`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable49_6:
   \        0x0   0x....'....        DC32     `LoadCarNo::__func__`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable49_7:
   \        0x0   0x....'....        DC32     `GetCarNo::s_bOnce`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable49_8:
   \        0x0   0x....'....        DC32     `SetCarNo::__func__`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable49_9:
   \        0x0   0x....'....        DC32     `GetSpkVol::__func__`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable49_10:
   \        0x0   0x....'....        DC32     `SetSpkVol::__func__`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable50:
   \        0x0   0x....'....        DC32     `GetMicVol::__func__`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable51:
   \        0x0   0x42 0x00          DC8      "B",0x0,0x0    

   \              0x00 0x00

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable51_1:
   \        0x0   0x....'....        DC32     `SetMicVol::__func__`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable51_2:
   \        0x0   0x....'....        DC32     Si446xCmd

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable51_3:
   \        0x0   0x....'....        DC32     `RF_RSSI::__func__`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable51_4:
   \        0x0   0x....'....        DC32     ?_12

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable51_5:
   \        0x0   0x....'....        DC32     `RFM_Spk::__func__`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable51_6:
   \        0x0   0x4002'1000        DC32     0x40021000

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable51_7:
   \        0x0   0x....'....        DC32     ?_16

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable51_8:
   \        0x0   0x....'....        DC32     ?_18

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable51_9:
   \        0x0   0x....'....        DC32     ?_17

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable51_10:
   \        0x0   0x....'....        DC32     ?_15

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable51_11:
   \        0x0   0x....'....        DC32     ?_19

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable51_12:
   \        0x0   0x....'....        DC32     ?_20

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable51_13:
   \        0x0   0x....'....        DC32     `cmd_ts::__func__`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable51_14:
   \        0x0   0x....'....        DC32     ?_23

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable51_15:
   \        0x0   0x....'....        DC32     `cmd_ch::__func__`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable51_16:
   \        0x0   0x....'....        DC32     ?_25

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable51_17:
   \        0x0   0x....'....        DC32     `cmd_car::__func__`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable51_18:
   \        0x0   0x....'....        DC32     `cmd_hop::__func__`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable51_19:
   \        0x0   0x....'....        DC32     ?_27

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable51_20:
   \        0x0   0x....'....        DC32     `cmd_rfmod::__func__`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable51_21:
   \        0x0   0x....'....        DC32     ?_28

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable51_22:
   \        0x0   0x....'....        DC32     ?_29

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable51_23:
   \        0x0   0x....'....        DC32     ?_30

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable51_24:
   \        0x0   0x....'....        DC32     ?_32

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable52:
   \        0x0   0x....'....        DC32     ?_22

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable52_1:
   \        0x0   0x....'....        DC32     ?_33

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable52_2:
   \        0x0   0x....'....        DC32     ?_34

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable52_3:
   \        0x0   0x....'....        DC32     ?_35

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable52_4:
   \        0x0   0x....'....        DC32     ?_36

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable52_5:
   \        0x0   0x....'....        DC32     ?_37

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable52_6:
   \        0x0   0x....'....        DC32     ?_38

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable53:
   \        0x0   0x....'....        DC32     ?_39

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable53_1:
   \        0x0   0x....'....        DC32     ?_40

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable53_2:
   \        0x0   0x....'....        DC32     ?_41

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable54:
   \        0x0   0x....'....        DC32     ?_24

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable54_1:
   \        0x0   0x....'....        DC32     nRxPkt

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable54_2:
   \        0x0   0x....'....        DC32     nTxPkt

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable54_3:
   \        0x0   0x....'....        DC32     `cmd_txpwr::__func__`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable55:
   \        0x0   0x....'....        DC32     ?_26

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable55_1:
   \        0x0   0x....'....        DC32     g_nManHopping

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable55_2:
   \        0x0   0x....'....        DC32     ?_31

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable56:
   \        0x0   0x....'....        DC32     g_nRFMode

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable56_1:
   \        0x0   0x....'....        DC32     ?_42

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable56_2:
   \        0x0   0x....'....        DC32     ?_43

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable56_3:
   \        0x0   0x....'....        DC32     ?_44

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable56_4:
   \        0x0   0x....'....        DC32     `cmd_rspid::__func__`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable56_5:
   \        0x0   0x....'....        DC32     ?_45

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable56_6:
   \        0x0   0x....'....        DC32     g_bSetRspIDManual

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable56_7:
   \        0x0   0x....'....        DC32     g_flagRspID

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable56_8:
   \        0x0   0x....'....        DC32     ?_46

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable56_9:
   \        0x0   0x....'....        DC32     `cmd_OccPa::__func__`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable56_10:
   \        0x0   0x....'....        DC32     ?_47

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable56_11:
   \        0x0   0x....'....        DC32     ?_48

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable56_12:
   \        0x0   0x4002'1000        DC32     0x40021000

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable56_13:
   \        0x0   0x....'....        DC32     ?_49

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable56_14:
   \        0x0   0x....'....        DC32     `lowpass_Filter::last_sample`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable56_15:
   \        0x0   0x....'....        DC32     `RFM_I2SEx_TxRxCpltCallback::idx`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable56_16:
   \        0x0   0x....'....        DC32     bufAudioDec

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable56_17:
   \        0x0   0x....'....        DC32     bufAudioEnc

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable56_18:
   \        0x0   0x....'....        DC32     hi2s3

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable56_19:
   \        0x0   0x....'....        DC32     g_qBufAudioTx

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable56_20:
   \        0x0   0x....'....        DC32     r_audio_buff

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable56_21:
   \        0x0   0x....'....        DC32     bRxBuffering

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable56_22:
   \        0x0   0x....'....        DC32     g_qBufAudioRx

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable56_23:
   \        0x0   0x....'....        DC32     t_audio_buff

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable56_24:
   \        0x0   0x....'....        DC32     `InitRFM::__func__`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable56_25:
   \        0x0   0x....'....        DC32     hi2c1

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable56_26:
   \        0x0   0x....'....        DC32     hi2c3

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable56_27:
   \        0x0   0x....'....        DC32     ?_52

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable56_28:
   \        0x0   0x....'....        DC32     RFM_I2SEx_TxRxCpltCallback

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable56_29:
   \        0x0   0x....'....        DC32     ?_53

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable56_30:
   \        0x0   0x....'....        DC32     g_idxTrainSet

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable56_31:
   \        0x0   0x....'....        DC32     g_nSpkLevel

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable56_32:
   \        0x0   0x....'....        DC32     ?_54

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable56_33:
   \        0x0   0x....'....        DC32     ?_55

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable56_34:
   \        0x0   0x....'....        DC32     ?_56

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable56_35:
   \        0x0   0x....'....        DC32     ?_57

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable56_36:
   \        0x0   0x....'....        DC32     ?_58

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable56_37:
   \        0x0   0x....'....        DC32     pRadioConfiguration

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable56_38:
   \        0x0   0x....'....        DC32     ?_59

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable56_39:
   \        0x0   0x....'....        DC32     g_offsetCA

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable56_40:
   \        0x0   0x....'....        DC32     ?_60

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable56_41:
   \        0x0   0x....'....        DC32     `RFM_main::__func__`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable56_42:
   \        0x0   0x....'....        DC32     `LoopProcRFM{2}{3}::nOldRFMMode`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable56_43:
   \        0x0   0x....'....        DC32     ?_61

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable56_44:
   \        0x0   0x....'....        DC32     ?_62

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable56_45:
   \        0x0   0x4002'0400        DC32     0x40020400

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable56_46:
   \        0x0   0x....'....        DC32     ChTS1_1

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable56_47:
   \        0x0   0x....'....        DC32     g_nStampRxPkt

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable56_48:
   \        0x0   0x....'....        DC32     `LoopProcRFM::s_nTickStandby`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable56_49:
   \        0x0   0x4002'0C00        DC32     0x40020c00

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable56_50:
   \        0x0   0x0004'93E1        DC32     0x493e1

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable56_51:
   \        0x0   0x....'....        DC32     g_nChRx

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable56_52:
   \        0x0   0x....'....        DC32     `LoopProcRFM::oldTickStatReq`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable56_53:
   \        0x0   0x....'....        DC32     `LoopProcRFM::s_idxCh`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable56_54:
   \        0x0   0x....'....        DC32     ChTx_1

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable56_55:
   \        0x0   0x....'....        DC32     `LoopProcRFM::oldTickRouteReq`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable56_56:
   \        0x0   0x....'....        DC32     g_nCarNo

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable56_57:
   \        0x0   0x....'....        DC32     `LoopProcRFM::s_ChkRsp`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable56_58:
   \        0x0   0x....'....        DC32     g_nStampRouteRsp

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable56_59:
   \        0x0   0x....'....        DC32     g_nIdxRouteFindNext

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable56_60:
   \        0x0   0x....'....        DC32     g_devStat

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable56_61:
   \        0x0   0x....'....        DC32     g_nRSSI

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable56_62:
   \        0x0   0x....'....        DC32     ?_63

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable56_63:
   \        0x0   0x....'....        DC32     _sVerList

   \                                 In section .rodata, align 4
   \                     ?_0:
   \        0x0   0x25 0x73          DC8 "%s : %s(%d)\012"

   \              0x20 0x3A    

   \              0x20 0x25    

   \              0x73 0x28    

   \              0x25 0x64    

   \              0x29 0x0A    

   \              0x00
   \        0xD                      DS8 3

   \                                 In section .rodata, align 4
   \        0x0   0x52 0x46          DC8 "RFM"

   \              0x4D 0x00

   \                                 In section .rodata, align 4
   \        0x0   0x52 0x46          DC8 "RFT"

   \              0x54 0x00

   \                                 In section .rodata, align 4
   \        0x0   0x25 0x73          DC8 "%s"

   \              0x00
   \        0x3                      DS8 1

   \                                 In section .rodata, align 4
   \                     ?_4:
   \        0x0   0x5B 0x4E          DC8 "[Normal]"

   \              0x6F 0x72    

   \              0x6D 0x61    

   \              0x6C 0x5D    

   \              0x00
   \        0x9                      DS8 3

   \                                 In section .rodata, align 4
   \                     ?_5:
   \        0x0   0x5B 0x54          DC8 "[Tx]"

   \              0x78 0x5D    

   \              0x00
   \        0x5                      DS8 3

   \                                 In section .rodata, align 4
   \                     ?_6:
   \        0x0   0x5B 0x52          DC8 "[Rx]"

   \              0x78 0x5D    

   \              0x00
   \        0x5                      DS8 3

   \                                 In section .rodata, align 4
   \                     ?_7:
   \        0x0   0x5B 0x4F          DC8 "[Occ]"

   \              0x63 0x63    

   \              0x5D 0x00
   \        0x6                      DS8 2

   \                                 In section .rodata, align 4
   \                     ?_8:
   \        0x0   0x5B 0x55          DC8 "[Upgr]"

   \              0x70 0x67    

   \              0x72 0x5D    

   \              0x00
   \        0x7                      DS8 1

   \                                 In section .rodata, align 4
   \                     ?_9:
   \        0x0   0x5B 0x4E          DC8 "[N/A]"

   \              0x2F 0x41    

   \              0x5D 0x00
   \        0x6                      DS8 2

   \                                 In section .rodata, align 4
   \                     ?_10:
   \        0x0   0x25 0x73          DC8 "%s(%d) - EEPROM Error\012"

   \              0x28 0x25    

   \              0x64 0x29    

   \              0x20 0x2D    

   \              0x20 0x45    

   \              0x45 0x50    

   \              0x52 0x4F    

   \              0x4D 0x20    

   \              0x45 0x72    

   \              0x72 0x6F    

   \              0x72 0x0A    

   \              0x00
   \       0x17                      DS8 1

   \                                 In section .rodata, align 4
   \                     ?_11:
   \        0x0   0x25 0x73          DC8 "%s(%d) - %d\012"

   \              0x28 0x25    

   \              0x64 0x29    

   \              0x20 0x2D    

   \              0x20 0x25    

   \              0x64 0x0A    

   \              0x00
   \        0xD                      DS8 3

   \                                 In section .rodata, align 4
   \                     ?_12:
   \        0x0   0x25 0x73          DC8 "%s(%d) - ant1:%d / ant2:%d / curr:%d / latch:%d\012"

   \              0x28 0x25    

   \              0x64 0x29    

   \              0x20 0x2D    

   \              0x20 0x61    

   \              0x6E 0x74    

   \              0x31 0x3A    

   \              0x25 0x64    

   \              0x20 0x2F    

   \              0x20 0x61    

   \              0x6E 0x74    

   \              0x32 0x3A    

   \              0x25 0x64    

   \              0x20 0x2F    

   \              0x20 0x63    

   \              0x75 0x72    

   \              0x72 0x3A    

   \              0x25 0x64    

   \              0x20 0x2F    

   \              0x20 0x6C    

   \              0x61 0x74    

   \              0x63 0x68    

   \              0x3A 0x25    

   \              0x64 0x0A    

   \              0x00
   \       0x31                      DS8 3

   \                                 In section .rodata, align 4
   \        0x0   0x0A 0x0A          DC8 "\012\012"

   \              0x00
   \        0x3                      DS8 1

   \                                 In section .rodata, align 4
   \        0x0   0x25 0x73          DC8 "%s\012"

   \              0x0A 0x00

   \                                 In section .rodata, align 4
   \                     ?_15:
   \        0x0   0x56 0x65          DC8 "Version = %s(%s - %s)\012"

   \              0x72 0x73    

   \              0x69 0x6F    

   \              0x6E 0x20    

   \              0x3D 0x20    

   \              0x25 0x73    

   \              0x28 0x25    

   \              0x73 0x20    

   \              0x2D 0x20    

   \              0x25 0x73    

   \              0x29 0x0A    

   \              0x00
   \       0x17                      DS8 1

   \                                 In section .rodata, align 4
   \                     ?_16:
   \        0x0   0x31 0x2E          DC8 "1.1.0.302"

   \              0x31 0x2E    

   \              0x30 0x2E    

   \              0x33 0x30    

   \              0x32 0x00
   \        0xA                      DS8 2

   \                                 In section .rodata, align 4
   \                     ?_17:
   \        0x0   0x53 0x65          DC8 "Sep 20 2022"

   \              0x70 0x20    

   \              0x32 0x30    

   \              0x20 0x32    

   \              0x30 0x32    

   \              0x32 0x00

   \                                 In section .rodata, align 4
   \                     ?_18:
   \        0x0   0x31 0x31          DC8 "11:09:54"

   \              0x3A 0x30    

   \              0x39 0x3A    

   \              0x35 0x34    

   \              0x00
   \        0x9                      DS8 3

   \                                 In section .rodata, align 4
   \                     ?_19:
   \        0x0   0x52 0x46          DC8 "RFM v%s"

   \              0x4D 0x20    

   \              0x76 0x25    

   \              0x73 0x00

   \                                 In section .rodata, align 4
   \                     ?_20:
   \        0x0   0x54 0x72          DC8 "Train Set : %d\012"

   \              0x61 0x69    

   \              0x6E 0x20    

   \              0x53 0x65    

   \              0x74 0x20    

   \              0x3A 0x20    

   \              0x25 0x64    

   \              0x0A 0x00

   \                                 In section .rodata, align 4
   \        0x0   0x25 0x64          DC8 "%d"

   \              0x00
   \        0x3                      DS8 1

   \                                 In section .rodata, align 4
   \                     ?_22:
   \        0x0   0x25 0x73          DC8 "%s(%d) - Train Set : %d\012"

   \              0x28 0x25    

   \              0x64 0x29    

   \              0x20 0x2D    

   \              0x20 0x54    

   \              0x72 0x61    

   \              0x69 0x6E    

   \              0x20 0x53    

   \              0x65 0x74    

   \              0x20 0x3A    

   \              0x20 0x25    

   \              0x64 0x0A    

   \              0x00
   \       0x19                      DS8 3

   \                                 In section .rodata, align 4
   \                     ?_23:
   \        0x0   0x52 0x46          DC8 "RF Channel: %d\012"

   \              0x20 0x43    

   \              0x68 0x61    

   \              0x6E 0x6E    

   \              0x65 0x6C    

   \              0x3A 0x20    

   \              0x25 0x64    

   \              0x0A 0x00

   \                                 In section .rodata, align 4
   \                     ?_24:
   \        0x0   0x25 0x73          DC8 "%s(%d) - Channel : %d\012"

   \              0x28 0x25    

   \              0x64 0x29    

   \              0x20 0x2D    

   \              0x20 0x43    

   \              0x68 0x61    

   \              0x6E 0x6E    

   \              0x65 0x6C    

   \              0x20 0x3A    

   \              0x20 0x25    

   \              0x64 0x0A    

   \              0x00
   \       0x17                      DS8 1

   \                                 In section .rodata, align 4
   \                     ?_25:
   \        0x0   0x43 0x61          DC8 "Car No : %d\012"

   \              0x72 0x20    

   \              0x4E 0x6F    

   \              0x20 0x3A    

   \              0x20 0x25    

   \              0x64 0x0A    

   \              0x00
   \        0xD                      DS8 3

   \                                 In section .rodata, align 4
   \                     ?_26:
   \        0x0   0x25 0x73          DC8 "%s(%d) - Car No : %d\012"

   \              0x28 0x25    

   \              0x64 0x29    

   \              0x20 0x2D    

   \              0x20 0x43    

   \              0x61 0x72    

   \              0x20 0x4E    

   \              0x6F 0x20    

   \              0x3A 0x20    

   \              0x25 0x64    

   \              0x0A 0x00
   \       0x16                      DS8 2

   \                                 In section .rodata, align 4
   \                     ?_27:
   \        0x0   0x25 0x73          DC8 "%s(%d) - Manual Hop : %d\012"

   \              0x28 0x25    

   \              0x64 0x29    

   \              0x20 0x2D    

   \              0x20 0x4D    

   \              0x61 0x6E    

   \              0x75 0x61    

   \              0x6C 0x20    

   \              0x48 0x6F    

   \              0x70 0x20    

   \              0x3A 0x20    

   \              0x25 0x64    

   \              0x0A 0x00
   \       0x1A                      DS8 2

   \                                 In section .rodata, align 4
   \                     ?_28:
   \        0x0   0x25 0x73          DC8 "%s(%d) - RFMode : %d\012"

   \              0x28 0x25    

   \              0x64 0x29    

   \              0x20 0x2D    

   \              0x20 0x52    

   \              0x46 0x4D    

   \              0x6F 0x64    

   \              0x65 0x20    

   \              0x3A 0x20    

   \              0x25 0x64    

   \              0x0A 0x00
   \       0x16                      DS8 2

   \                                 In section .rodata, align 4
   \                     ?_29:
   \        0x0   0x5B 0x53          DC8 "[S/W Info]\012"

   \              0x2F 0x57    

   \              0x20 0x49    

   \              0x6E 0x66    

   \              0x6F 0x5D    

   \              0x0A 0x00

   \                                 In section .rodata, align 4
   \                     ?_30:
   \        0x0   0x20 0x2D          DC8 " - Boot : %d Byte\012"

   \              0x20 0x42    

   \              0x6F 0x6F    

   \              0x74 0x20    

   \              0x3A 0x20    

   \              0x25 0x64    

   \              0x20 0x42    

   \              0x79 0x74    

   \              0x65 0x0A    

   \              0x00
   \       0x13                      DS8 1

   \                                 In section .rodata, align 4
   \                     ?_31:
   \        0x0   0x20 0x2D          DC8 " - App : %d Byte\012"

   \              0x20 0x41    

   \              0x70 0x70    

   \              0x20 0x3A    

   \              0x20 0x25    

   \              0x64 0x20    

   \              0x42 0x79    

   \              0x74 0x65    

   \              0x0A 0x00
   \       0x12                      DS8 2

   \                                 In section .rodata, align 4
   \                     ?_32:
   \        0x0   0x5B 0x53          DC8 "[Setting]\012"

   \              0x65 0x74    

   \              0x74 0x69    

   \              0x6E 0x67    

   \              0x5D 0x0A    

   \              0x00
   \        0xB                      DS8 1

   \                                 In section .rodata, align 4
   \                     ?_33:
   \        0x0   0x20 0x2D          DC8 " - Train Set : %d\012"

   \              0x20 0x54    

   \              0x72 0x61    

   \              0x69 0x6E    

   \              0x20 0x53    

   \              0x65 0x74    

   \              0x20 0x3A    

   \              0x20 0x25    

   \              0x64 0x0A    

   \              0x00
   \       0x13                      DS8 1

   \                                 In section .rodata, align 4
   \                     ?_34:
   \        0x0   0x20 0x2D          DC8 " - Car No : %d\012"

   \              0x20 0x43    

   \              0x61 0x72    

   \              0x20 0x4E    

   \              0x6F 0x20    

   \              0x3A 0x20    

   \              0x25 0x64    

   \              0x0A 0x00

   \                                 In section .rodata, align 4
   \                     ?_35:
   \        0x0   0x20 0x2D          DC8 " - RF Channel: %d\012"

   \              0x20 0x52    

   \              0x46 0x20    

   \              0x43 0x68    

   \              0x61 0x6E    

   \              0x6E 0x65    

   \              0x6C 0x3A    

   \              0x20 0x25    

   \              0x64 0x0A    

   \              0x00
   \       0x13                      DS8 1

   \                                 In section .rodata, align 4
   \                     ?_36:
   \        0x0   0x20 0x2D          DC8 " - Mode : %s(%d)\012"

   \              0x20 0x4D    

   \              0x6F 0x64    

   \              0x65 0x20    

   \              0x3A 0x20    

   \              0x25 0x73    

   \              0x28 0x25    

   \              0x64 0x29    

   \              0x0A 0x00
   \       0x12                      DS8 2

   \                                 In section .rodata, align 4
   \                     ?_37:
   \        0x0   0x20 0x2D          DC8 " - GetChNearRFM() : %d\012"

   \              0x20 0x47    

   \              0x65 0x74    

   \              0x43 0x68    

   \              0x4E 0x65    

   \              0x61 0x72    

   \              0x52 0x46    

   \              0x4D 0x28    

   \              0x29 0x20    

   \              0x3A 0x20    

   \              0x25 0x64    

   \              0x0A 0x00

   \                                 In section .rodata, align 4
   \                     ?_38:
   \        0x0   0x20 0x2D          DC8 " - GetChNearRFT() : %d\012"

   \              0x20 0x47    

   \              0x65 0x74    

   \              0x43 0x68    

   \              0x4E 0x65    

   \              0x61 0x72    

   \              0x52 0x46    

   \              0x54 0x28    

   \              0x29 0x20    

   \              0x3A 0x20    

   \              0x25 0x64    

   \              0x0A 0x00

   \                                 In section .rodata, align 4
   \                     ?_39:
   \        0x0   0x20 0x2D          DC8 " - GetChPARFT() : %d\012"

   \              0x20 0x47    

   \              0x65 0x74    

   \              0x43 0x68    

   \              0x50 0x41    

   \              0x52 0x46    

   \              0x54 0x28    

   \              0x29 0x20    

   \              0x3A 0x20    

   \              0x25 0x64    

   \              0x0A 0x00
   \       0x16                      DS8 2

   \                                 In section .rodata, align 4
   \                     ?_40:
   \        0x0   0x20 0x2D          DC8 " - GetChPA() : %d\012"

   \              0x20 0x47    

   \              0x65 0x74    

   \              0x43 0x68    

   \              0x50 0x41    

   \              0x28 0x29    

   \              0x20 0x3A    

   \              0x20 0x25    

   \              0x64 0x0A    

   \              0x00
   \       0x13                      DS8 1

   \                                 In section .rodata, align 4
   \                     ?_41:
   \        0x0   0x20 0x2D          DC8 " - GetChRFMUp() : %d\012"

   \              0x20 0x47    

   \              0x65 0x74    

   \              0x43 0x68    

   \              0x52 0x46    

   \              0x4D 0x55    

   \              0x70 0x28    

   \              0x29 0x20    

   \              0x3A 0x20    

   \              0x25 0x64    

   \              0x0A 0x00
   \       0x16                      DS8 2

   \                                 In section .rodata, align 4
   \                     ?_42:
   \        0x0   0x20 0x2D          DC8 " - GetChRFMDown() : %d\012"

   \              0x20 0x47    

   \              0x65 0x74    

   \              0x43 0x68    

   \              0x52 0x46    

   \              0x4D 0x44    

   \              0x6F 0x77    

   \              0x6E 0x28    

   \              0x29 0x20    

   \              0x3A 0x20    

   \              0x25 0x64    

   \              0x0A 0x00

   \                                 In section .rodata, align 4
   \                     ?_43:
   \        0x0   0x5B 0x52          DC8 "[RF Info] Tx : %d / Rx : %d\012"

   \              0x46 0x20    

   \              0x49 0x6E    

   \              0x66 0x6F    

   \              0x5D 0x20    

   \              0x54 0x78    

   \              0x20 0x3A    

   \              0x20 0x25    

   \              0x64 0x20    

   \              0x2F 0x20    

   \              0x52 0x78    

   \              0x20 0x3A    

   \              0x20 0x25    

   \              0x64 0x0A    

   \              0x00
   \       0x1D                      DS8 3

   \                                 In section .rodata, align 4
   \                     ?_44:
   \        0x0   0x25 0x73          DC8 "%s(%d) - Tx Pwr(%d)\012"

   \              0x28 0x25    

   \              0x64 0x29    

   \              0x20 0x2D    

   \              0x20 0x54    

   \              0x78 0x20    

   \              0x50 0x77    

   \              0x72 0x28    

   \              0x25 0x64    

   \              0x29 0x0A    

   \              0x00
   \       0x15                      DS8 3

   \                                 In section .rodata, align 4
   \                     ?_45:
   \        0x0   0x25 0x73          DC8 "%s(%d) - return\012"

   \              0x28 0x25    

   \              0x64 0x29    

   \              0x20 0x2D    

   \              0x20 0x72    

   \              0x65 0x74    

   \              0x75 0x72    

   \              0x6E 0x0A    

   \              0x00
   \       0x11                      DS8 3

   \                                 In section .rodata, align 4
   \                     ?_46:
   \        0x0   0x25 0x73          DC8 "%s(%d) - ID Flag : 0x%04X\012"

   \              0x28 0x25    

   \              0x64 0x29    

   \              0x20 0x2D    

   \              0x20 0x49    

   \              0x44 0x20    

   \              0x46 0x6C    

   \              0x61 0x67    

   \              0x20 0x3A    

   \              0x20 0x30    

   \              0x78 0x25    

   \              0x30 0x34    

   \              0x58 0x0A    

   \              0x00
   \       0x1B                      DS8 1

   \                                 In section .rodata, align 4
   \                     ?_47:
   \        0x0   0x25 0x73          DC8 "%s(%d)\012"

   \              0x28 0x25    

   \              0x64 0x29    

   \              0x0A 0x00

   \                                 In section .rodata, align 4
   \                     ?_48:
   \        0x0   0x25 0x73          DC8 "%s(%d) - Start\012"

   \              0x28 0x25    

   \              0x64 0x29    

   \              0x20 0x2D    

   \              0x20 0x53    

   \              0x74 0x61    

   \              0x72 0x74    

   \              0x0A 0x00

   \                                 In section .rodata, align 4
   \                     ?_49:
   \        0x0   0x25 0x73          DC8 "%s(%d) - Stop\012"

   \              0x28 0x25    

   \              0x64 0x29    

   \              0x20 0x2D    

   \              0x20 0x53    

   \              0x74 0x6F    

   \              0x70 0x0A    

   \              0x00
   \        0xF                      DS8 1

   \                                 In section .rodata, align 2
   \        0x0   0x46 0x00          DC8 "F"

   \                                 In section .rodata, align 2
   \        0x0   0x42 0x00          DC8 "B"

   \                                 In section .rodata, align 4
   \                     ?_52:
   \        0x0   0x25 0x73          DC8 "%s(%d) - Codec ( MAX9860ETG+ ) / Rev. 0x%02X\012"

   \              0x28 0x25    

   \              0x64 0x29    

   \              0x20 0x2D    

   \              0x20 0x43    

   \              0x6F 0x64    

   \              0x65 0x63    

   \              0x20 0x28    

   \              0x20 0x4D    

   \              0x41 0x58    

   \              0x39 0x38    

   \              0x36 0x30    

   \              0x45 0x54    

   \              0x47 0x2B    

   \              0x20 0x29    

   \              0x20 0x2F    

   \              0x20 0x52    

   \              0x65 0x76    

   \              0x2E 0x20    

   \              0x30 0x78    

   \              0x25 0x30    

   \              0x32 0x58    

   \              0x0A 0x00
   \       0x2E                      DS8 2

   \                                 In section .rodata, align 4
   \                     ?_53:
   \        0x0   0x25 0x73          DC8 "%s(%d) - EEPROM OK\012"

   \              0x28 0x25    

   \              0x64 0x29    

   \              0x20 0x2D    

   \              0x20 0x45    

   \              0x45 0x50    

   \              0x52 0x4F    

   \              0x4D 0x20    

   \              0x4F 0x4B    

   \              0x0A 0x00

   \                                 In section .rodata, align 4
   \                     ?_54:
   \        0x0   0x25 0x73          DC8 "%s(%d) - Man Hopping ( %d )\012"

   \              0x28 0x25    

   \              0x64 0x29    

   \              0x20 0x2D    

   \              0x20 0x4D    

   \              0x61 0x6E    

   \              0x20 0x48    

   \              0x6F 0x70    

   \              0x70 0x69    

   \              0x6E 0x67    

   \              0x20 0x28    

   \              0x20 0x25    

   \              0x64 0x20    

   \              0x29 0x0A    

   \              0x00
   \       0x1D                      DS8 3

   \                                 In section .rodata, align 4
   \                     ?_55:
   \        0x0   0x25 0x73          DC8 "%s(%d) - RFMode ( %d )\012"

   \              0x28 0x25    

   \              0x64 0x29    

   \              0x20 0x2D    

   \              0x20 0x52    

   \              0x46 0x4D    

   \              0x6F 0x64    

   \              0x65 0x20    

   \              0x28 0x20    

   \              0x25 0x64    

   \              0x20 0x29    

   \              0x0A 0x00

   \                                 In section .rodata, align 4
   \                     ?_56:
   \        0x0   0x3D 0x3D          DC8 "=========================\012"

   \              0x3D 0x3D    

   \              0x3D 0x3D    

   \              0x3D 0x3D    

   \              0x3D 0x3D    

   \              0x3D 0x3D    

   \              0x3D 0x3D    

   \              0x3D 0x3D    

   \              0x3D 0x3D    

   \              0x3D 0x3D    

   \              0x3D 0x3D    

   \              0x3D 0x3D    

   \              0x3D 0x0A    

   \              0x00
   \       0x1B                      DS8 1

   \                                 In section .rodata, align 4
   \                     ?_57:
   \        0x0   0x25 0x30          DC8 "%08x\012"

   \              0x38 0x78    

   \              0x0A 0x00
   \        0x6                      DS8 2

   \                                 In section .rodata, align 4
   \                     ?_58:
   \        0x0   0x2D 0x2D          DC8 "-------------------------\012"

   \              0x2D 0x2D    

   \              0x2D 0x2D    

   \              0x2D 0x2D    

   \              0x2D 0x2D    

   \              0x2D 0x2D    

   \              0x2D 0x2D    

   \              0x2D 0x2D    

   \              0x2D 0x2D    

   \              0x2D 0x2D    

   \              0x2D 0x2D    

   \              0x2D 0x2D    

   \              0x2D 0x0A    

   \              0x00
   \       0x1B                      DS8 1

   \                                 In section .rodata, align 4
   \                     ?_59:
   \        0x0   0x25 0x73          DC8 "%s(%d) - Radio Ch(%d) / g_idxTrainSet(%d)\012"

   \              0x28 0x25    

   \              0x64 0x29    

   \              0x20 0x2D    

   \              0x20 0x52    

   \              0x61 0x64    

   \              0x69 0x6F    

   \              0x20 0x43    

   \              0x68 0x28    

   \              0x25 0x64    

   \              0x29 0x20    

   \              0x2F 0x20    

   \              0x67 0x5F    

   \              0x69 0x64    

   \              0x78 0x54    

   \              0x72 0x61    

   \              0x69 0x6E    

   \              0x53 0x65    

   \              0x74 0x28    

   \              0x25 0x64    

   \              0x29 0x0A    

   \              0x00
   \       0x2B                      DS8 1

   \                                 In section .rodata, align 4
   \                     ?_60:
   \        0x0   0x25 0x73          DC8 "%s(%d) - offsetCA( %d )\012"

   \              0x28 0x25    

   \              0x64 0x29    

   \              0x20 0x2D    

   \              0x20 0x6F    

   \              0x66 0x66    

   \              0x73 0x65    

   \              0x74 0x43    

   \              0x41 0x28    

   \              0x20 0x25    

   \              0x64 0x20    

   \              0x29 0x0A    

   \              0x00
   \       0x19                      DS8 3

   \                                 In section .rodata, align 4
   \                     ?_61:
   \        0x0   0xEC 0x88          DC8 "\354\210\230\354\213\240\354\244\221(%d/%d)"

   \              0x98 0xEC    

   \              0x8B 0xA0    

   \              0xEC 0xA4    

   \              0x91 0x28    

   \              0x25 0x64    

   \              0x2F 0x25    

   \              0x64 0x29    

   \              0x00
   \       0x11                      DS8 3

   \                                 In section .rodata, align 4
   \                     ?_62:
   \        0x0   0xEC 0x88          DC8 "\354\210\230\354\213\240\354\244\221..."

   \              0x98 0xEC    

   \              0x8B 0xA0    

   \              0xEC 0xA4    

   \              0x91 0x2E    

   \              0x2E 0x2E    

   \              0x00
   \        0xD                      DS8 3

   \                                 In section .rodata, align 4
   \                     ?_63:
   \        0x0   0x25 0x30          DC8 "%02d:%d/R%d,%03d"

   \              0x32 0x64    

   \              0x3A 0x25    

   \              0x64 0x2F    

   \              0x52 0x25    

   \              0x64 0x2C    

   \              0x25 0x30    

   \              0x33 0x64    

   \              0x00
   \       0x11                      DS8 3
   2207          
   2208          
   2209          #if defined(USE_ENV_TEST)
   2210          
   2211          static int	s_bEnLoopRFTx = 0;
   2212          
   2213          //========================================================================
   2214          void	SetLoopRFTx		( int bEnable )	//	RF Data 전송 유지..
   2215          //========================================================================
   2216          {
   2217          	printf( "%s(%d) - Loop RF Tx : %d\n", __func__, __LINE__, bEnable );
   2218          
   2219          	if ( bEnable )
   2220          	{
   2221          		RF_Tx_Mode();
   2222          	}
   2223          	else
   2224          	{
   2225          		RF_Rx_Mode();
   2226          	}
   2227          
   2228          	s_bEnLoopRFTx = bEnable;
   2229          }
   2230          
   2231          
   2232          //========================================================================
   2233          int cmd_rftx      ( int argc, char * argv[] )
   2234          //========================================================================
   2235          {
   2236          	//	bEnable ( 1 / 0 )
   2237          	int bEnable = 0;
   2238          	int nCh = 0;	//	Channel
   2239          	uint8_t nPA = 0x7F;	//	Power Amplifier
   2240          	char *sRFType;
   2241          
   2242          	switch ( argc )
   2243          	{
   2244          	case 5:		sscanf( argv[4], "%d", &nPA );		//	Power Amplifier
   2245          	case 4:		sscanf( argv[3], "%d", &nCh );		//	Channel
   2246          	case 3:		sRFType = argv[2];					//	RF Type [ u (unmodulated) / m(modulated) ]
   2247          	case 2:		sscanf( argv[1], "%d", &bEnable );	//	cmd [Enable]
   2248          //	case 2:		sText = argv[1];					//	sscanf( argv[1], "%s", sText );		//	cmd [Text]
   2249          		break;
   2250          	}
   2251          
   2252          	printf( "%s(%d) - En(%d) / Type(%s) / Ch(%d) / PA(%d)\n", __func__, __LINE__,
   2253          			bEnable, sRFType, nCh, nPA );
   2254          
   2255          	//========================================================================
   2256          	//	채널 설정.
   2257          	pRadioConfiguration->Radio_ChannelNumber = nCh;
   2258          
   2259          	//========================================================================
   2260          	//	RF Type
   2261          	if ( strcmp( sRFType, "u" ) == 0 )
   2262          	{
   2263          		SetLoopRFTx( 0 );	//	RF Loop 종료.
   2264          		//	Continuous Wave ( 무변조방식 )
   2265          		vRadio_Init_cw();	//	무변조방식 설정.
   2266          
   2267          		vRadio_RF_Pwr( nPA );
   2268          
   2269          //		vRadio_StartTx( nCh, NULL );
   2270          		vRadio_StartTx( pRadioConfiguration->Radio_ChannelNumber, NULL );
   2271          
   2272          		return 0;
   2273          	}
   2274          	else if ( strcmp( sRFType, "m" ) == 0 )
   2275          	{
   2276          		vRadio_Init();	//	변조방식 설정.
   2277          		//========================================================================
   2278          		//	RF출력 설정.
   2279          		vRadio_RF_Pwr( nPA );
   2280          	}
   2281          
   2282          	if ( argc >= 2 )
   2283          	{
   2284          		if ( strcmp( argv[1], "1" ) == 0 )			bEnable = 1;
   2285          		else if ( strcmp( argv[1], "0" ) == 0 )		bEnable = 0;
   2286          	}
   2287          
   2288          	printf( "%s(%d) - Loop RF Tx : %d\n", __func__, __LINE__, bEnable );
   2289          
   2290          	SetLoopRFTx( bEnable );
   2291          }
   2292          
   2293          #endif	//	defined(USE_ENV_TEST)
   2294          
   2295          
   2296          

   Maximum stack usage in bytes:

   .cstack Function
   ------- --------
       8   GetCarNo
         8   -> LoadCarNo
       0   GetCh2Car
      12   GetChNearRFM
      16   GetChNearRFT
       0   GetChOtherRFT
       0   GetChPA
       0   GetChPARFT
       0   GetChRFMDown
       0   GetChRFMUp
       8   GetChRx
         8   -> GetDevID
       0   GetDevID
      16   GetManHop
        16   -> GetDbg
        16   -> HAL_I2C_IsDeviceReady
        16   -> M24_HAL_ReadBytes
        16   -> printf
      16   GetMicVol
        16   -> HAL_I2C_IsDeviceReady
        16   -> M24_HAL_ReadBytes
        16   -> printf
       0   GetRFMMode
      16   GetRFMode
        16   -> GetDbg
        16   -> HAL_I2C_IsDeviceReady
        16   -> M24_HAL_ReadBytes
        16   -> printf
       0   GetRFTID
      16   GetSpkVol
        16   -> HAL_I2C_IsDeviceReady
        16   -> M24_HAL_ReadBytes
        16   -> printf
       8   GetTrainSetIdx
         8   -> LoadTrainSetIdx
      48   InitRFM
        48   -> AudioInit
        48   -> GetCarNo
        48   -> GetDevID
        48   -> GetManHop
        48   -> GetMicVol
        48   -> GetRFMode
        48   -> GetSpkVol
        48   -> GetTrainSetIdx
        48   -> HAL_Delay
        48   -> HAL_GetTick
        48   -> HAL_I2C_IsDeviceReady
        48   -> HAL_I2C_Mem_Read
        48   -> I2C_BusScan
        48   -> InitCodecMAX9860
        48   -> LCDClear
        48   -> LCDDrawRect
        48   -> LCDInit
        48   -> LCDLight
        48   -> LCDMenu
        48   -> LCDSpeaker
        48   -> RFM_Spk
        48   -> SetCallbackI2STxRxCplt
        48   -> SetDevID
        48   -> SetMicVol
        48   -> SetSpkVol
        48   -> SetTrainSetIdx
        48   -> TestEEPROM
        48   -> UpdateLCDMain
        48   -> WriteI2CCodec
        48   -> memset
        48   -> printf
        48   -> rand
        48   -> si446x_part_info
        48   -> srand
        48   -> vRadio_Init
      12   IsNearRFT
      16   LoadCarNo
        16   -> GetDbg
        16   -> HAL_I2C_IsDeviceReady
        16   -> M24_HAL_ReadBytes
        16   -> printf
      16   LoadTrainSetIdx
        16   -> GetDbg
        16   -> HAL_I2C_IsDeviceReady
        16   -> M24_HAL_ReadBytes
        16   -> printf
     112   LoopProcRFM
       112   -> GetCh2Car
       112   -> GetChNearRFM
       112   -> GetChPA
       112   -> GetChPARFT
       112   -> GetChRx
       112   -> GetDevID
       112   -> GetKey
       112   -> GetRFMMode
       112   -> HAL_GPIO_TogglePin
       112   -> HAL_GPIO_WritePin
       112   -> IsMenuMaint
       112   -> LCDPrintf
       112   -> LCDSetCursor
       112   -> RFM_Spk
       112   -> ReflashStat
       112   -> SendPktCh
       112   -> SendRouteReq
       112   -> SendStatReq
       112   -> SetRFMMode
       112   -> UpdateLCDMain
       112   -> UpdateLCDMonitor
       112   -> _MakePktHdr2
       112   -> qBufCnt
       112   -> qBufGet
       112   -> qBufPut
       112   -> sprintf
       112   -> vRadio_StartRX
      80   PrintVerInfo
        80   -> GetDevID
        80   -> LCDClear
        80   -> LCDPrintf
        80   -> LCDSetCursor
        80   -> printf
        80   -> sprintf
      40   RFM_I2SEx_TxRxCpltCallback
        40   -> ADPCM_ClearDecodeBuf
        40   -> ADPCM_Decode
        40   -> ADPCM_Encode
        40   -> HAL_I2SEx_TransmitReceive_DMA
        40   -> lowpass_Filter
        40   -> memset
        40   -> printf
        40   -> qBufCnt
        40   -> qBufGet
        40   -> qBufPut
       8   RFM_Spk
         8   -> GetDbg
         8   -> HAL_GPIO_WritePin
         8   -> printf
       8   RFM_main
         8   -> GetDevID
         8   -> HAL_GetTick
         8   -> InitProcPkt
         8   -> InitRFM
         8   -> LoopProcAdc
         8   -> LoopProcCLI
         8   -> LoopProcKey
         8   -> LoopProcMain
         8   -> LoopProcPkt
         8   -> LoopProcRFM
         8   -> printf
      24   RF_RSSI
        24   -> GetDbg
        24   -> LCDRSSI
        24   -> printf
        24   -> si446x_get_modem_status_fast_clear_read
      16   ReflashStat
        16   -> GetCarNo
      16   ReloadStampStat
        16   -> HAL_GetTick
      16   SetCarNo
        16   -> GetDbg
        16   -> HAL_I2C_IsDeviceReady
        16   -> M24_HAL_WriteBytes
        16   -> printf
       0   SetChPA
       0   SetChPARFT
       0   SetChRFMDown
       0   SetChRFMUp
       8   SetDevID
         8   -> printf
      16   SetManHop
        16   -> GetDbg
        16   -> HAL_I2C_IsDeviceReady
        16   -> M24_HAL_WriteBytes
        16   -> printf
      16   SetMicVol
        16   -> AudioMicVol
        16   -> HAL_I2C_IsDeviceReady
        16   -> M24_HAL_WriteBytes
        16   -> printf
      16   SetRFMMode
        16   -> ReloadStampStat
        16   -> StrRFMMode
        16   -> printf
      16   SetRFMode
        16   -> GetDbg
        16   -> HAL_I2C_IsDeviceReady
        16   -> M24_HAL_WriteBytes
        16   -> printf
      16   SetSpkVol
        16   -> AudioSpkVol
        16   -> HAL_I2C_IsDeviceReady
        16   -> M24_HAL_WriteBytes
        16   -> printf
       8   SetStat
         8   -> HAL_GetTick
      16   SetTrainSetIdx
        16   -> GetDbg
        16   -> HAL_I2C_IsDeviceReady
        16   -> M24_HAL_WriteBytes
        16   -> printf
       0   StrRFMMode
      32   UpdateStat
        32   -> memcpy
        32   -> sprintf
      24   cmd_OccPa
        24   -> HAL_GPIO_WritePin
        24   -> SetRFMMode
        24   -> printf
        24   -> sscanf
      16   cmd_car
        16   -> GetCarNo
        16   -> SetCarNo
        16   -> printf
        16   -> sscanf
      16   cmd_ch
        16   -> GetChRx
        16   -> GetDbg
        16   -> SetTrainSetIdx
        16   -> printf
        16   -> sscanf
      16   cmd_hop
        16   -> SetManHop
        16   -> printf
        16   -> sscanf
      24   cmd_info
        24   -> GetCarNo
        24   -> GetChNearRFM
        24   -> GetChNearRFT
        24   -> GetChPA
        24   -> GetChPARFT
        24   -> GetChRFMDown
        24   -> GetChRFMUp
        24   -> GetChRx
        24   -> GetRFMMode
        24   -> GetTrainSetIdx
        24   -> StrRFMMode
        24   -> printf
      16   cmd_rfmod
        16   -> SetRFMode
        16   -> printf
        16   -> sscanf
      16   cmd_rfstat
        16   -> printf
      24   cmd_rspid
        24   -> printf
        24   -> sscanf
      16   cmd_swinfo
        16   -> FLASH_If_GetAppSize
        16   -> FLASH_If_GetBootSize
        16   -> printf
      16   cmd_ts
        16   -> GetTrainSetIdx
        16   -> SetTrainSetIdx
        16   -> printf
        16   -> sscanf
      16   cmd_txpwr
        16   -> printf
        16   -> sscanf
        16   -> vRadio_Set_TxPower
       0   lowpass_Filter


   Section sizes:

   Bytes  Function/Label
   -----  --------------
       4  ??DataTable16
       4  ??DataTable16_1
       4  ??DataTable20
       4  ??DataTable39
       4  ??DataTable39_1
       4  ??DataTable40
       4  ??DataTable40_1
       4  ??DataTable41
       4  ??DataTable41_1
       4  ??DataTable41_2
       4  ??DataTable41_3
       4  ??DataTable42
       4  ??DataTable42_1
       4  ??DataTable42_2
       4  ??DataTable42_3
       4  ??DataTable42_4
       4  ??DataTable42_5
       4  ??DataTable42_6
       4  ??DataTable42_7
       4  ??DataTable45
       4  ??DataTable45_1
       4  ??DataTable46
       4  ??DataTable46_1
       4  ??DataTable46_2
       4  ??DataTable46_3
       4  ??DataTable46_4
       4  ??DataTable47
       4  ??DataTable48
       4  ??DataTable48_1
       4  ??DataTable48_2
       4  ??DataTable48_3
       4  ??DataTable48_4
       4  ??DataTable48_5
       4  ??DataTable48_6
       4  ??DataTable49
       4  ??DataTable49_1
       4  ??DataTable49_10
       4  ??DataTable49_2
       4  ??DataTable49_3
       4  ??DataTable49_4
       4  ??DataTable49_5
       4  ??DataTable49_6
       4  ??DataTable49_7
       4  ??DataTable49_8
       4  ??DataTable49_9
       4  ??DataTable50
       4  ??DataTable51
       4  ??DataTable51_1
       4  ??DataTable51_10
       4  ??DataTable51_11
       4  ??DataTable51_12
       4  ??DataTable51_13
       4  ??DataTable51_14
       4  ??DataTable51_15
       4  ??DataTable51_16
       4  ??DataTable51_17
       4  ??DataTable51_18
       4  ??DataTable51_19
       4  ??DataTable51_2
       4  ??DataTable51_20
       4  ??DataTable51_21
       4  ??DataTable51_22
       4  ??DataTable51_23
       4  ??DataTable51_24
       4  ??DataTable51_3
       4  ??DataTable51_4
       4  ??DataTable51_5
       4  ??DataTable51_6
       4  ??DataTable51_7
       4  ??DataTable51_8
       4  ??DataTable51_9
       4  ??DataTable52
       4  ??DataTable52_1
       4  ??DataTable52_2
       4  ??DataTable52_3
       4  ??DataTable52_4
       4  ??DataTable52_5
       4  ??DataTable52_6
       4  ??DataTable53
       4  ??DataTable53_1
       4  ??DataTable53_2
       4  ??DataTable54
       4  ??DataTable54_1
       4  ??DataTable54_2
       4  ??DataTable54_3
       4  ??DataTable55
       4  ??DataTable55_1
       4  ??DataTable55_2
       4  ??DataTable56
       4  ??DataTable56_1
       4  ??DataTable56_10
       4  ??DataTable56_11
       4  ??DataTable56_12
       4  ??DataTable56_13
       4  ??DataTable56_14
       4  ??DataTable56_15
       4  ??DataTable56_16
       4  ??DataTable56_17
       4  ??DataTable56_18
       4  ??DataTable56_19
       4  ??DataTable56_2
       4  ??DataTable56_20
       4  ??DataTable56_21
       4  ??DataTable56_22
       4  ??DataTable56_23
       4  ??DataTable56_24
       4  ??DataTable56_25
       4  ??DataTable56_26
       4  ??DataTable56_27
       4  ??DataTable56_28
       4  ??DataTable56_29
       4  ??DataTable56_3
       4  ??DataTable56_30
       4  ??DataTable56_31
       4  ??DataTable56_32
       4  ??DataTable56_33
       4  ??DataTable56_34
       4  ??DataTable56_35
       4  ??DataTable56_36
       4  ??DataTable56_37
       4  ??DataTable56_38
       4  ??DataTable56_39
       4  ??DataTable56_4
       4  ??DataTable56_40
       4  ??DataTable56_41
       4  ??DataTable56_42
       4  ??DataTable56_43
       4  ??DataTable56_44
       4  ??DataTable56_45
       4  ??DataTable56_46
       4  ??DataTable56_47
       4  ??DataTable56_48
       4  ??DataTable56_49
       4  ??DataTable56_5
       4  ??DataTable56_50
       4  ??DataTable56_51
       4  ??DataTable56_52
       4  ??DataTable56_53
       4  ??DataTable56_54
       4  ??DataTable56_55
       4  ??DataTable56_56
       4  ??DataTable56_57
       4  ??DataTable56_58
       4  ??DataTable56_59
       4  ??DataTable56_6
       4  ??DataTable56_60
       4  ??DataTable56_61
       4  ??DataTable56_62
       4  ??DataTable56_63
       4  ??DataTable56_7
       4  ??DataTable56_8
       4  ??DataTable56_9
      16  ?_0
       4  ?_1
      24  ?_10
      16  ?_11
      52  ?_12
       4  ?_13
       4  ?_14
      24  ?_15
      12  ?_16
      12  ?_17
      12  ?_18
       8  ?_19
       4  ?_2
      16  ?_20
       4  ?_21
      28  ?_22
      16  ?_23
      24  ?_24
      16  ?_25
      24  ?_26
      28  ?_27
      24  ?_28
      12  ?_29
       4  ?_3
      20  ?_30
      20  ?_31
      12  ?_32
      20  ?_33
      16  ?_34
      20  ?_35
      20  ?_36
      24  ?_37
      24  ?_38
      24  ?_39
      12  ?_4
      20  ?_40
      24  ?_41
      24  ?_42
      32  ?_43
      24  ?_44
      20  ?_45
      28  ?_46
       8  ?_47
      16  ?_48
      16  ?_49
       8  ?_5
       2  ?_50
       2  ?_51
      48  ?_52
      20  ?_53
      32  ?_54
      24  ?_55
      28  ?_56
       8  ?_57
      28  ?_58
      44  ?_59
       8  ?_6
      28  ?_60
      20  ?_61
      16  ?_62
      20  ?_63
       8  ?_7
       8  ?_8
       8  ?_9
      34  GetCarNo
      48  GetCh2Car
      68  GetChNearRFM
      74  GetChNearRFT
      30  GetChOtherRFT
       8  GetChPA
       8  GetChPARFT
       8  GetChRFMDown
       8  GetChRFMUp
     106  GetChRx
       8  GetDevID
     114  GetManHop
      92  GetMicVol
       8  GetRFMMode
     122  GetRFMode
      28  GetRFTID
      92  GetSpkVol
      34  GetTrainSetIdx
     658  InitRFM
      68  IsNearRFT
     110  LoadCarNo
     148  LoadTrainSetIdx
     950  LoopProcRFM
      84  PrintVerInfo
     328  RFM_I2SEx_TxRxCpltCallback
      62  RFM_Spk
      76  RFM_main
     182  RF_RSSI
      92  ReflashStat
      54  ReloadStampStat
      94  SetCarNo
       8  SetChPA
       8  SetChPARFT
       8  SetChRFMDown
       8  SetChRFMUp
      36  SetDevID
      86  SetManHop
     100  SetMicVol
      46  SetRFMMode
      86  SetRFMode
     100  SetSpkVol
      36  SetStat
      94  SetTrainSetIdx
      56  StrRFMMode
      94  UpdateStat
       4  bRxBuffering
     480  bufAudioDec
     480  bufAudioEnc
     156  cmd_OccPa
      90  cmd_car
      98  cmd_ch
      74  cmd_hop
     174  cmd_info
      74  cmd_rfmod
      28  cmd_rfstat
     186  cmd_rspid
      44  cmd_swinfo
      94  cmd_ts
      56  cmd_txpwr
     484  g_devStat
       4  g_idxTrainSet
       4  g_nCarNo
       4  g_nChPA
       4  g_nChRFMDown
       4  g_nChRFMUp
       4  g_nChRFT
       4  g_nChRx
       4  g_nDevFlag
       4  g_nDevID
       4  g_nIdxRouteFindNext
       4  g_nManHopping
       4  g_nRFMMode
       4  g_nRFMode
       4  g_nRSSI
       4  g_nSpkLevel
       4  g_nStampRouteRsp
       4  g_nStampRxPkt
       4  g_offsetCA
       4  idx
       2  last_sample
      28  lowpass_Filter
       4  nOldRFMMode
       4  oldTickRouteReq
       4  oldTickStatReq
       4  s_ChkRsp
       4  s_bOnce
       4  s_bOnce
       4  s_idxCh
       4  s_nTickStandby
     280  -- Other

 
 1'542 bytes in section .bss
    16 bytes in section .data
 1'452 bytes in section .rodata
 6'272 bytes in section .text
 
 6'272 bytes of CODE  memory
 1'452 bytes of CONST memory
 1'558 bytes of DATA  memory

Errors: none
Warnings: 122
