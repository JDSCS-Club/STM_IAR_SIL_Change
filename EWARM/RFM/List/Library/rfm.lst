###############################################################################
#
# IAR ANSI C/C++ Compiler V9.30.1.335/W64 for ARM         20/Sep/2022  23:37:24
# Copyright 1999-2022 IAR Systems AB.
#
#    Cpu mode          =  thumb
#    Endian            =  little
#    Source file       =  C:\D\Git_Hub\STM_IAR_SIL_Change\Library\rfm.c
#    Command line      =
#        -f C:\D\Git_Hub\STM_IAR_SIL_Change\EWARM\RFM\Obj\Library\rfm.o.rsp
#        (C:\D\Git_Hub\STM_IAR_SIL_Change\Library\rfm.c -D USE_HAL_DRIVER -D
#        STM32F407xx -lC C:\D\Git_Hub\STM_IAR_SIL_Change\EWARM\RFM\List\Library
#        -o C:\D\Git_Hub\STM_IAR_SIL_Change\EWARM\RFM\Obj\Library --no_cse
#        --no_unroll --no_inline --no_code_motion --no_tbaa --no_clustering
#        --no_scheduling --debug --endian=little --cpu=Cortex-M4 -e
#        --fpu=VFPv4_sp --dlib_config "C:\Program Files\IAR Systems\Embedded
#        Workbench 9.1\arm\inc\c\DLib_Config_Full.h" -I
#        C:\D\Git_Hub\STM_IAR_SIL_Change\EWARM/../USB_DEVICE/App\ -I
#        C:\D\Git_Hub\STM_IAR_SIL_Change\EWARM/../USB_DEVICE/Target\ -I
#        C:\D\Git_Hub\STM_IAR_SIL_Change\EWARM/../Core/Inc\ -I
#        C:\D\Git_Hub\STM_IAR_SIL_Change\EWARM/../Drivers/STM32F4xx_HAL_Driver/Inc\
#        -I
#        C:\D\Git_Hub\STM_IAR_SIL_Change\EWARM/../Drivers/STM32F4xx_HAL_Driver/Inc/Legacy\
#        -I
#        C:\D\Git_Hub\STM_IAR_SIL_Change\EWARM/../Middlewares/ST/STM32_USB_Device_Library/Core/Inc\
#        -I
#        C:\D\Git_Hub\STM_IAR_SIL_Change\EWARM/../Middlewares/ST/STM32_USB_Device_Library/Class/CDC/Inc\
#        -I
#        C:\D\Git_Hub\STM_IAR_SIL_Change\EWARM/../Drivers/CMSIS/Device/ST/STM32F4xx/Include\
#        -I C:\D\Git_Hub\STM_IAR_SIL_Change\EWARM/../Drivers/CMSIS/Include\ -I
#        C:\D\Git_Hub\STM_IAR_SIL_Change\EWARM/../Drivers/radio\ -I
#        C:\D\Git_Hub\STM_IAR_SIL_Change\EWARM/../Drivers/radio/Si446x\ -I
#        C:\D\Git_Hub\STM_IAR_SIL_Change\EWARM/../Drivers/display\ -I
#        C:\D\Git_Hub\STM_IAR_SIL_Change\EWARM/../Library\ -I
#        C:\D\Git_Hub\STM_IAR_SIL_Change\EWARM\..\Drivers\display\fonts\ -I
#        C:\D\Git_Hub\STM_IAR_SIL_Change\EWARM\..\Drivers\STM32F4xx_HAL_Driver\Src\
#        -On --use_c++_inline -I "C:\Program Files\IAR Systems\Embedded
#        Workbench 9.1\arm\CMSIS\Core\Include\\") --dependencies=n
#        C:\D\Git_Hub\STM_IAR_SIL_Change\EWARM\RFM\Obj\Library\rfm.o.d
#    Locale            =  C
#    List file         =
#        C:\D\Git_Hub\STM_IAR_SIL_Change\EWARM\RFM\List\Library\rfm.lst
#    Object file       =
#        C:\D\Git_Hub\STM_IAR_SIL_Change\EWARM\RFM\Obj\Library\rfm.o
#    Runtime model:       
#      __CPP_Runtime   =  1
#      __SystemLibrary =  DLib
#      __dlib_version  =  6
#
###############################################################################

C:\D\Git_Hub\STM_IAR_SIL_Change\Library\rfm.c
      1          /*------------------------------------------------------------------------------------------
      2          	Project			: RFM
      3          	Description		: 
      4          
      5          	Writer			: $Author: zlkit $
      6          	Revision		: $Rev: 1891 $
      7          	Date			: 2019. 10.
      8          	Copyright		: Piranti Corp.	( sw@piranti.co.kr )
      9          	 
     10          	Revision History 
     11          	1. 2019. 10.	: Created
     12          -------------------------------------------------------------------------------------------*/
     13          
     14          //========================================================================
     15          // Header
     16          #include "rfm.h"

  typedef unsigned char       BYTE;
                              ^
"C:\D\Git_Hub\STM_IAR_SIL_Change\Library\typedef.h",73  Warning[Pe301]: typedef
          name has already been declared (with same type)

  typedef unsigned short      WORD;
                              ^
"C:\D\Git_Hub\STM_IAR_SIL_Change\Library\typedef.h",77  Warning[Pe301]: typedef
          name has already been declared (with same type)

  	};
  	 ^
"C:\D\Git_Hub\STM_IAR_SIL_Change\Library\RFMProtocol.h",304  Warning[Pe040]: 
          expected an identifier

  	};
  	 ^
"C:\D\Git_Hub\STM_IAR_SIL_Change\Library\RFMProtocol.h",322  Warning[Pe040]: 
          expected an identifier

  	};
  	 ^
"C:\D\Git_Hub\STM_IAR_SIL_Change\Library\RFMProtocol.h",468  Warning[Pe040]: 
          expected an identifier

  	};
  	 ^
"C:\D\Git_Hub\STM_IAR_SIL_Change\Library\RFMProtocol.h",506  Warning[Pe040]: 
          expected an identifier

  	};
  	 ^
"C:\D\Git_Hub\STM_IAR_SIL_Change\Library\RFMProtocol.h",511  Warning[Pe040]: 
          expected an identifier

  	};
  	 ^
"C:\D\Git_Hub\STM_IAR_SIL_Change\Library\RFMProtocol.h",533  Warning[Pe040]: 
          expected an identifier

  	};
  	 ^
"C:\D\Git_Hub\STM_IAR_SIL_Change\Library\RFMProtocol.h",559  Warning[Pe040]: 
          expected an identifier

  	};
  	 ^
"C:\D\Git_Hub\STM_IAR_SIL_Change\Library\RFMProtocol.h",567  Warning[Pe040]: 
          expected an identifier
     17          
     18          #include "RFMProtocol.h"            //  DevNone
     19          
     20          #include "Adafruit_SSD1306.h"       //  I2C LCD
     21          
     22          #include "version.h"			    //	Version Info
     23          
     24          #include "main.h"

  # warning unrecognized compiler
    ^
"C:\D\Git_Hub\STM_IAR_SIL_Change\Drivers\radio\compiler_defs.h",744  Warning[Pa183]: 
          #warning directive: unrecognized compiler

  typedef unsigned char U8;
                        ^
"C:\D\Git_Hub\STM_IAR_SIL_Change\Drivers\radio\compiler_defs.h",788  Warning[Pe301]: 
          typedef name has already been declared (with same type)

  typedef unsigned int U16;
                       ^
"C:\D\Git_Hub\STM_IAR_SIL_Change\Drivers\radio\compiler_defs.h",789  Warning[Pe301]: 
          typedef name has already been declared (with same type)

  typedef unsigned long U32;
                        ^
"C:\D\Git_Hub\STM_IAR_SIL_Change\Drivers\radio\compiler_defs.h",790  Warning[Pe301]: 
          typedef name has already been declared (with same type)

  typedef signed char S8;
                      ^
"C:\D\Git_Hub\STM_IAR_SIL_Change\Drivers\radio\compiler_defs.h",792  Warning[Pe301]: 
          typedef name has already been declared (with same type)

  typedef signed int S16;
                     ^
"C:\D\Git_Hub\STM_IAR_SIL_Change\Drivers\radio\compiler_defs.h",793  Warning[Pe301]: 
          typedef name has already been declared (with same type)

  typedef signed long S32;
                      ^
"C:\D\Git_Hub\STM_IAR_SIL_Change\Drivers\radio\compiler_defs.h",794  Warning[Pe301]: 
          typedef name has already been declared (with same type)

  typedef bit BIT;
              ^
"C:\D\Git_Hub\STM_IAR_SIL_Change\Drivers\radio\compiler_defs.h",820  Warning[Pe301]: 
          typedef name has already been declared (with same type)
     25          
     26          #include "audio.h"                  //  WriteI2CCodec()
     27          
     28          #include "serial.h"					//  SerialInit()
     29          
     30          #include "keypad.h"					//	GetKey()
     31          
     32          #if defined(_WIN32)
     33          #else
     34          #include "radio.h"					//  bRadio_Check_Tx_RX()
     35          #include "si446x_api_lib.h"			//	Si446xCmd
     36          #endif
     37          
     38          #include "ProcPkt.h"				//	nTxPkt
     39          
     40          #include "adpcm.h"					//	ADPCM Codec
     41          
     42          #include "adc.h"
     43          
     44          #include "cli.h"
     45          
     46          //========================================================================
     47          // Define
     48          
     49          //========================================================================
     50          

   \                                 In section .bss, align 4
     51          int		g_nDevID		=	DevNone;			//  Device ID ( 1 : RF900M / 2 : RF900T )
   \                     g_nDevID:
   \        0x0                      DS8 4
     52          

   \                                 In section .bss, align 4
     53          int		g_nDevFlag		=	DevFlagNone;		//  Device Flag ( Light )
   \                     g_nDevFlag:
   \        0x0                      DS8 4
     54          

   \                                 In section .bss, align 4
     55          int		g_idxTrainSet	=	0;	  				//  Train Set Index
   \                     g_idxTrainSet:
   \        0x0                      DS8 4

   \                                 In section .bss, align 4
     56          int		g_nCarNo		=	0;	  				//  Car Number
   \                     g_nCarNo:
   \        0x0                      DS8 4
     57          

   \                                 In section .data, align 4
     58          int		g_nChRx			=	_ChTS1_1;			//  RF Rx Channel
   \                     g_nChRx:
   \        0x0   0x0000'0015        DC32 21
     59          

   \                                 In section .data, align 4
     60          int	 	g_nSpkLevel		=	DefaultSpkVol;		//  Default (1) - 0(Mute) / 1 / 2(Normal) / 3
   \                     g_nSpkLevel:
   \        0x0   0x0000'0001        DC32 1
     61          

   \                                 In section .bss, align 4
     62          int	 	g_nRFMMode 		=	RFMModeNormal;		//  eRFMMode
   \                     g_nRFMMode:
   \        0x0                      DS8 4
     63          

   \                                 In section .bss, align 4
     64          int		g_offsetCA		=	0;					//	충돌회피 Offset ( msec ) ( 0 ~ 1000 )
   \                     g_offsetCA:
   \        0x0                      DS8 4
     65          

   \                                 In section .bss, align 4
     66          int		g_nStampRxPkt	=	0;					//	방송/통화 Stamp
   \                     g_nStampRxPkt:
   \        0x0                      DS8 4
     67          

   \                                 In section .bss, align 4
     68          int		g_nRSSI			=	0;					//	RSSI Value
   \                     g_nRSSI:
   \        0x0                      DS8 4
     69          
     70          #if defined(USE_RF_COMM_MODE)

   \                                 In section .bss, align 4
     71          int		g_nRFMode		=	0;					//	RF Mode 무선 중계 모드. eRFMode ( RFMode1 / RFMode2 )
   \                     g_nRFMode:
   \        0x0                      DS8 4
     72          #endif
     73          
     74          #if defined(USE_HOP_MANUAL)

   \                                 In section .bss, align 4
     75          int		g_nManHopping	=	0;					//	On(1) / Off(2) / Unused(0 : Other)
   \                     g_nManHopping:
   \        0x0                      DS8 4
     76          #endif	//	defined(USE_HOP_MANUAL)
     77          
     78          //	Device Stat

   \                                 In section .bss, align 4
     79          RFMDevStat		g_devStat[ MaxCarNo ] = { 0, };
   \                     g_devStat:
   \        0x0                      DS8 484
     80          
     81          
     82          
     83          //========================================================================
     84          
     85          //========================================================================
     86          // Function
     87          
     88          //========================================================================

   \                                 In section .text, align 2, keep-with-next
     89          int GetDevID    ( void )
     90          //========================================================================
     91          {
     92          	return g_nDevID;
   \                     GetDevID: (+1)
   \        0x0   0x.... 0x....      LDR.W    R0,??DataTable45
   \        0x4   0x6800             LDR      R0,[R0, #+0]
   \        0x6   0x4770             BX       LR
     93          }
     94          
     95          //========================================================================

   \                                 In section .text, align 2, keep-with-next
     96          void SetDevID    ( int nDevID )
     97          //========================================================================
     98          {
   \                     SetDevID: (+1)
   \        0x0   0xB510             PUSH     {R4,LR}
   \        0x2   0x0004             MOVS     R4,R0
     99          	printf( "%s : %s(%d)\n", __func__,
                 	^
Warning[Pe223]: function "printf" declared implicitly
    100          							( nDevID == DevRF900M )? "RFM":"RFT",
    101          							nDevID );
   \        0x4   0x2C01             CMP      R4,#+1
   \        0x6   0xD101             BNE.N    ??SetDevID_0
   \        0x8   0x....             ADR.N    R2,??DataTable16
   \        0xA   0xE000             B.N      ??SetDevID_1
   \                     ??SetDevID_0: (+1)
   \        0xC   0x....             ADR.N    R2,??DataTable16_1
   \                     ??SetDevID_1: (+1)
   \        0xE   0x0023             MOVS     R3,R4
   \       0x10   0x.... 0x....      LDR.W    R1,??DataTable39
   \       0x14   0x.... 0x....      LDR.W    R0,??DataTable39_1
   \       0x18   0x.... 0x....      BL       printf
    102          	g_nDevID = nDevID;
   \       0x1C   0x.... 0x....      LDR.W    R0,??DataTable45
   \       0x20   0x6004             STR      R4,[R0, #+0]
    103          }
   \       0x22   0xBD10             POP      {R4,PC}
    104          
    105          //========================================================================

   \                                 In section .text, align 2, keep-with-next
    106          int		GetRFMMode	( void )
    107          //========================================================================
    108          {
    109          	return g_nRFMMode;
   \                     GetRFMMode: (+1)
   \        0x0   0x.... 0x....      LDR.W    R0,??DataTable39_2
   \        0x4   0x6800             LDR      R0,[R0, #+0]
   \        0x6   0x4770             BX       LR
    110          }
    111          
    112          //========================================================================

   \                                 In section .text, align 2, keep-with-next
    113          void	SetRFMMode	( int nRFMMode )
    114          //========================================================================
    115          {
   \                     SetRFMMode: (+1)
   \        0x0   0xB538             PUSH     {R3-R5,LR}
   \        0x2   0x0004             MOVS     R4,R0
    116          	if ( g_nRFMMode != nRFMMode && nRFMMode == RFMModeNormal )
   \        0x4   0x.... 0x....      LDR.W    R5,??DataTable39_2
   \        0x8   0x6828             LDR      R0,[R5, #+0]
   \        0xA   0x42A0             CMP      R0,R4
   \        0xC   0xD003             BEQ.N    ??SetRFMMode_0
   \        0xE   0x2C00             CMP      R4,#+0
   \       0x10   0xD101             BNE.N    ??SetRFMMode_0
    117          	{
    118          		//	타 모드에서 Normal 모드로 변경시 상태정보 ID Flag값 유지.
    119          		ReloadStampStat();
   \       0x12   0x.... 0x....      BL       ReloadStampStat
    120          	}
    121          
    122          	if ( g_nRFMMode != nRFMMode )
   \                     ??SetRFMMode_0: (+1)
   \       0x16   0x6828             LDR      R0,[R5, #+0]
   \       0x18   0x42A0             CMP      R0,R4
   \       0x1A   0xD006             BEQ.N    ??SetRFMMode_1
    123          	{
    124          		//	타 모드에서 Normal 모드로 변경시 상태정보 ID Flag값 유지.
    125          		printf( "%s", StrRFMMode( nRFMMode ) );
                 		^
Warning[Pe223]: function "printf" declared implicitly
   \       0x1C   0x0020             MOVS     R0,R4
   \       0x1E   0x.... 0x....      BL       StrRFMMode
   \       0x22   0x0001             MOVS     R1,R0
   \       0x24   0x....             ADR.N    R0,??DataTable20
   \       0x26   0x.... 0x....      BL       printf
    126          	}
    127          
    128          	g_nRFMMode = nRFMMode;
   \                     ??SetRFMMode_1: (+1)
   \       0x2A   0x602C             STR      R4,[R5, #+0]
    129          }
   \       0x2C   0xBD31             POP      {R0,R4,R5,PC}
    130          
    131          //========================================================================

   \                                 In section .text, align 2, keep-with-next
    132          char	*StrRFMMode		( int nRFMMode )
    133          //========================================================================
    134          {
   \                     StrRFMMode: (+1)
   \        0x0   0x0001             MOVS     R1,R0
    135          	switch( nRFMMode )
   \        0x2   0x2900             CMP      R1,#+0
   \        0x4   0xD006             BEQ.N    ??StrRFMMode_0
   \        0x6   0x2902             CMP      R1,#+2
   \        0x8   0xD00A             BEQ.N    ??StrRFMMode_1
   \        0xA   0xD306             BCC.N    ??StrRFMMode_2
   \        0xC   0x2904             CMP      R1,#+4
   \        0xE   0xD00D             BEQ.N    ??StrRFMMode_3
   \       0x10   0xD309             BCC.N    ??StrRFMMode_4
   \       0x12   0xE00E             B.N      ??StrRFMMode_5
    136          	{
    137          	case RFMModeNormal:		return "[Normal]";
   \                     ??StrRFMMode_0: (+1)
   \       0x14   0x.... 0x....      LDR.W    R0,??DataTable40
   \       0x18   0xE00D             B.N      ??StrRFMMode_6
    138          	case RFMModeTx:			return "[Tx]";
   \                     ??StrRFMMode_2: (+1)
   \       0x1A   0x.... 0x....      LDR.W    R0,??DataTable40_1
   \       0x1E   0xE00A             B.N      ??StrRFMMode_6
    139          	case RFMModeRx:			return "[Rx]";
   \                     ??StrRFMMode_1: (+1)
   \       0x20   0x.... 0x....      LDR.W    R0,??DataTable40_2
   \       0x24   0xE007             B.N      ??StrRFMMode_6
    140          	case RFMModeOcc:		return "[Occ]";
   \                     ??StrRFMMode_4: (+1)
   \       0x26   0x.... 0x....      LDR.W    R0,??DataTable40_3
   \       0x2A   0xE004             B.N      ??StrRFMMode_6
    141          	case RFMModeUpgr:		return "[Upgr]";
   \                     ??StrRFMMode_3: (+1)
   \       0x2C   0x.... 0x....      LDR.W    R0,??DataTable40_4
   \       0x30   0xE001             B.N      ??StrRFMMode_6
    142          	default:				return "[N/A]";
   \                     ??StrRFMMode_5: (+1)
   \       0x32   0x.... 0x....      LDR.W    R0,??DataTable46
   \                     ??StrRFMMode_6: (+1)
   \       0x36   0x4770             BX       LR
    143          	}
    144          }
    145          
    146          //========================================================================

   \                                 In section .text, align 2, keep-with-next
    147          int	GetRFTID( void )	//	송신기 ID
    148          //========================================================================
    149          {
    150          	//	송신기 ID 얻기.
    151          	//========================================================================
    152          	//	송신기 #1 / #2
    153          	//	ChTx_1			=	8,			//	* CH8 : 송신기#1 - (Car No : 11)
    154          	//	ChTx_2			=	9,			//	* CH9 : 송신기#2 - (Car No : 12)
    155          	if ( g_nCarNo == RFTCarNo1 ) return 1;			//	11
   \                     GetRFTID: (+1)
   \        0x0   0x.... 0x....      LDR.W    R0,??DataTable42_1
   \        0x4   0x6801             LDR      R1,[R0, #+0]
   \        0x6   0x290B             CMP      R1,#+11
   \        0x8   0xD101             BNE.N    ??GetRFTID_0
   \        0xA   0x2001             MOVS     R0,#+1
   \        0xC   0xE005             B.N      ??GetRFTID_1
    156          	else if ( g_nCarNo == RFTCarNo2 ) return 2;		//	12
   \                     ??GetRFTID_0: (+1)
   \        0xE   0x6800             LDR      R0,[R0, #+0]
   \       0x10   0x280C             CMP      R0,#+12
   \       0x12   0xD101             BNE.N    ??GetRFTID_2
   \       0x14   0x2002             MOVS     R0,#+2
   \       0x16   0xE000             B.N      ??GetRFTID_1
    157          	else return 0;
   \                     ??GetRFTID_2: (+1)
   \       0x18   0x2000             MOVS     R0,#+0
   \                     ??GetRFTID_1: (+1)
   \       0x1A   0x4770             BX       LR
    158          	//========================================================================
    159          }
    160          
    161          //========================================================================

   \                                 In section .text, align 2, keep-with-next
    162          int GetChRx( void )
    163          //========================================================================
    164          {
   \                     GetChRx: (+1)
   \        0x0   0xB580             PUSH     {R7,LR}
    165          	//	Get Self Rx Channel
    166          
    167          	//========================================================================
    168          #if defined(USE_CH_ISO_DEV)
    169          
    170          	if ( GetDevID() == DevRF900T )
   \        0x2   0x.... 0x....      BL       GetDevID
   \        0x6   0x2802             CMP      R0,#+2
   \        0x8   0xD10E             BNE.N    ??GetChRx_0
    171          	{
    172          		//========================================================================
    173          		//	송신기 #1 / #2
    174          		//	ChTx_1			=	8,				//	* CH8 : 송신기#1 - (Car No : 11)
    175          		//	ChTx_2			=	ChTx_1+ChGap,	//	* CH9 : 송신기#2 - (Car No : 12)
    176          		return ChTx_1 + ( ( g_nCarNo + 1) % 2 )*ChGap;	// 현재 호차 채널
   \        0xA   0x.... 0x....      LDR.W    R0,??DataTable42_1
   \        0xE   0x6801             LDR      R1,[R0, #+0]
   \       0x10   0x1C49             ADDS     R1,R1,#+1
   \       0x12   0x2202             MOVS     R2,#+2
   \       0x14   0x.... 0x....      LDR.W    R0,??DataTable41_3
   \       0x18   0x6800             LDR      R0,[R0, #+0]
   \       0x1A   0xFB91 0xF3F2      SDIV     R3,R1,R2
   \       0x1E   0xFB02 0x1113      MLS      R1,R2,R3,R1
   \       0x22   0xEB10 0x0081      ADDS     R0,R0,R1, LSL #+2
   \       0x26   0xE01F             B.N      ??GetChRx_1
    177          		//========================================================================
    178          	}
    179          	else if ( GetDevID() == DevRF900M )
   \                     ??GetChRx_0: (+1)
   \       0x28   0x.... 0x....      BL       GetDevID
   \       0x2C   0x2801             CMP      R0,#+1
   \       0x2E   0xD11B             BNE.N    ??GetChRx_2
    180          	{
    181          		if( g_nRFMode == RFMode2 )//#if defined(USE_COMM_MODE_CH_GRP)
   \       0x30   0x.... 0x....      LDR.W    R0,??DataTable42_2
   \       0x34   0x6800             LDR      R0,[R0, #+0]
   \       0x36   0x2802             CMP      R0,#+2
   \       0x38   0xD10C             BNE.N    ??GetChRx_3
    182          		{
    183          			//	그룹주파수 모드. - [ 1, 2 ] [ 3, 4 ] ...
    184          			return ChTS1_1 + (( g_nCarNo - 1 )/2)*ChGap;	// 현재 호차 채널
   \       0x3A   0x.... 0x....      LDR.W    R0,??DataTable42_3
   \       0x3E   0x6800             LDR      R0,[R0, #+0]
   \       0x40   0x.... 0x....      LDR.W    R1,??DataTable42_1
   \       0x44   0x6809             LDR      R1,[R1, #+0]
   \       0x46   0x1E49             SUBS     R1,R1,#+1
   \       0x48   0x2202             MOVS     R2,#+2
   \       0x4A   0xFB91 0xF1F2      SDIV     R1,R1,R2
   \       0x4E   0xEB10 0x0081      ADDS     R0,R0,R1, LSL #+2
   \       0x52   0xE009             B.N      ??GetChRx_1
    185          		}
    186          		else	//	#else
    187          		{
    188          			//========================================================================
    189          			//	수신기.
    190          			//	ChTS1_1			=	11,			//	* CH11 : 1편성 ( 1호차 )
    191          			//	ChTS1_2			=	12,			//	* CH12 : 1편성 ( 2호차 )
    192          			//
    193          			//		...
    194          			//
    195          			//	ChTS1_10		=	20,			//	* CH20 : 1편성 ( 10호차 )
    196          			return ChTS1_1 + ( g_nCarNo - 1 )*ChGap;	// 현재 호차 채널
   \                     ??GetChRx_3: (+1)
   \       0x54   0x.... 0x....      LDR.W    R0,??DataTable42_3
   \       0x58   0x6800             LDR      R0,[R0, #+0]
   \       0x5A   0x.... 0x....      LDR.W    R1,??DataTable42_1
   \       0x5E   0x6809             LDR      R1,[R1, #+0]
   \       0x60   0x1E49             SUBS     R1,R1,#+1
   \       0x62   0xEB10 0x0081      ADDS     R0,R0,R1, LSL #+2
   \       0x66   0xE7FF             B.N      ??GetChRx_1
    197          			//========================================================================
    198          		}	//	#endif
    199          	}
    200          
    201          #else
    202          	//========================================================================
    203          	//	CH1 : 1, 3, 5
    204          	//	CH2 :  2, 4, 6
    205          	return ChTS1_1 + g_idxTrainSet * 2 + ( ( g_nCarNo + 1 ) % 2 );	// 현재 호차 채널
    206          #endif
    207          	//========================================================================
    208          }
                 ^
Warning[Pe940]: missing return statement at end of non-void function "GetChRx"
   \                     ??GetChRx_2: (+1)
   \                     ??GetChRx_1: (+1)
   \       0x68   0xBD02             POP      {R1,PC}
    209          
    210          //========================================================================

   \                                 In section .text, align 2, keep-with-next
    211          int		GetChOtherRFT	( void )			//	타 송신기 채널.
    212          //========================================================================
    213          {
    214          	//========================================================================
    215          	//	송신기 #1 / #2
    216          	//	ChTx_1			=	8,				//	* CH8 : 송신기#1 - (Car No : 11)
    217          	//	ChTx_2			=	9,				//	* CH9 : 송신기#2 - (Car No : 12)
    218          //	return ChTx_1 + ( g_nCarNo % 2 );		// Self 송신기 채널
    219          	return ChTx_1 + ( ( g_nCarNo ) % 2 )*ChGap;	// Other 송신기 채널
   \                     GetChOtherRFT: (+1)
   \        0x0   0x2102             MOVS     R1,#+2
   \        0x2   0x.... 0x....      LDR.W    R2,??DataTable42_1
   \        0x6   0x.... 0x....      LDR.W    R0,??DataTable41_3
   \        0xA   0x6800             LDR      R0,[R0, #+0]
   \        0xC   0x6813             LDR      R3,[R2, #+0]
   \        0xE   0x6812             LDR      R2,[R2, #+0]
   \       0x10   0xFB92 0xF2F1      SDIV     R2,R2,R1
   \       0x14   0xFB01 0x3112      MLS      R1,R1,R2,R3
   \       0x18   0xEB10 0x0081      ADDS     R0,R0,R1, LSL #+2
   \       0x1C   0x4770             BX       LR
    220          	//========================================================================
    221          }
    222          
    223          
    224          //========================================================================

   \                                 In section .text, align 2, keep-with-next
    225          int		IsNearRFT	( void )			//	가까운 송신기 존재 유무 확인.
    226          //========================================================================
    227          {
   \                     IsNearRFT: (+1)
   \        0x0   0xB470             PUSH     {R4-R6}
    228          	int nCh = ChTS1_1;		//	Default
   \        0x2   0x.... 0x....      LDR.W    R0,??DataTable42_3
   \        0x6   0x6800             LDR      R0,[R0, #+0]
    229          
    230          	//	가장가까운 호차 검색.
    231          	int nMaxRSSI = 0;
   \        0x8   0x2100             MOVS     R1,#+0
    232          	for ( int idx = 1; idx <= 10; idx++ )
   \        0xA   0x2201             MOVS     R2,#+1
   \                     ??IsNearRFT_0: (+1)
   \        0xC   0x2A0B             CMP      R2,#+11
   \        0xE   0xDA17             BGE.N    ??IsNearRFT_1
    233          	{
    234          		//	Car #1 ~ #10
    235          		if ( g_devStat[idx].nRSSI > nMaxRSSI )
   \       0x10   0x2325             MOVS     R3,#+37
   \       0x12   0x.... 0x....      LDR.W    R4,??DataTable48
   \       0x16   0xFB03 0xF502      MUL      R5,R3,R2
   \       0x1A   0xEB04 0x0605      ADD      R6,R4,R5
   \       0x1E   0xF8D6 0x501D      LDR      R5,[R6, #+29]
   \       0x22   0x42A9             CMP      R1,R5
   \       0x24   0xDA0A             BGE.N    ??IsNearRFT_2
    236          		{
    237          			nCh = g_devStat[idx].stat.nChRx;		//	채널 설정.
   \       0x26   0xFB03 0xF502      MUL      R5,R3,R2
   \       0x2A   0x4425             ADD      R5,R4,R5
   \       0x2C   0x7AAD             LDRB     R5,[R5, #+10]
   \       0x2E   0x0028             MOVS     R0,R5
    238          			nMaxRSSI = g_devStat[idx].nRSSI;
   \       0x30   0xFB03 0xF302      MUL      R3,R3,R2
   \       0x34   0x441C             ADD      R4,R4,R3
   \       0x36   0xF8D4 0x301D      LDR      R3,[R4, #+29]
   \       0x3A   0x0019             MOVS     R1,R3
    239          		}
    240          	}
   \                     ??IsNearRFT_2: (+1)
   \       0x3C   0x1C52             ADDS     R2,R2,#+1
   \       0x3E   0xE7E5             B.N      ??IsNearRFT_0
    241          
    242          	return nCh;
   \                     ??IsNearRFT_1: (+1)
   \       0x40   0xBC70             POP      {R4-R6}
   \       0x42   0x4770             BX       LR
    243          }
    244          
    245          
    246          //========================================================================

   \                                 In section .text, align 2, keep-with-next
    247          int		GetChNearRFT	( int nMinRSSI )			//	가장 가까운 송신기 채널.
    248          //========================================================================
    249          {
   \                     GetChNearRFT: (+1)
   \        0x0   0xB4F0             PUSH     {R4-R7}
   \        0x2   0x0001             MOVS     R1,R0
    250          	int nCh = 0;		//	Default
   \        0x4   0x2000             MOVS     R0,#+0
    251          
    252          	//	가장가까운 송신기 검색.
    253          	int nMaxRSSI = 0;
   \        0x6   0x2200             MOVS     R2,#+0
    254          	for ( int idx = 11; idx <= 12; idx++ )			//	송신기 채널 검색.
   \        0x8   0x230B             MOVS     R3,#+11
   \                     ??GetChNearRFT_0: (+1)
   \        0xA   0x2B0D             CMP      R3,#+13
   \        0xC   0xDA17             BGE.N    ??GetChNearRFT_1
    255          	{
    256          		//	Car #1 ~ #10
    257          		if ( g_devStat[idx].nRSSI > nMaxRSSI )
   \        0xE   0x2425             MOVS     R4,#+37
   \       0x10   0x.... 0x....      LDR.W    R5,??DataTable48
   \       0x14   0xFB04 0xF603      MUL      R6,R4,R3
   \       0x18   0xEB05 0x0706      ADD      R7,R5,R6
   \       0x1C   0xF8D7 0x601D      LDR      R6,[R7, #+29]
   \       0x20   0x42B2             CMP      R2,R6
   \       0x22   0xDA0A             BGE.N    ??GetChNearRFT_2
    258          		{
    259          			nCh = g_devStat[idx].stat.nChRx;		//	채널 설정.
   \       0x24   0xFB04 0xF603      MUL      R6,R4,R3
   \       0x28   0x442E             ADD      R6,R5,R6
   \       0x2A   0x7AB6             LDRB     R6,[R6, #+10]
   \       0x2C   0x0030             MOVS     R0,R6
    260          			nMaxRSSI = g_devStat[idx].nRSSI;
   \       0x2E   0xFB04 0xF403      MUL      R4,R4,R3
   \       0x32   0x4425             ADD      R5,R5,R4
   \       0x34   0xF8D5 0x401D      LDR      R4,[R5, #+29]
   \       0x38   0x0022             MOVS     R2,R4
    261          		}
    262          	}
   \                     ??GetChNearRFT_2: (+1)
   \       0x3A   0x1C5B             ADDS     R3,R3,#+1
   \       0x3C   0xE7E5             B.N      ??GetChNearRFT_0
    263          
    264          	if ( nMinRSSI > nMaxRSSI )
   \                     ??GetChNearRFT_1: (+1)
   \       0x3E   0x428A             CMP      R2,R1
   \       0x40   0xDA01             BGE.N    ??GetChNearRFT_3
    265          	{
    266          		//	RSSI값이 한계 이상 낮은경우 선택 X
    267          		nCh = 0;
   \       0x42   0x2300             MOVS     R3,#+0
   \       0x44   0x0018             MOVS     R0,R3
    268          	}
    269          
    270          	return nCh;
   \                     ??GetChNearRFT_3: (+1)
   \       0x46   0xBCF0             POP      {R4-R7}
   \       0x48   0x4770             BX       LR
    271          }
    272          
    273          //========================================================================

   \                                 In section .text, align 2, keep-with-next
    274          int		GetChNearRFM	( void )			//	가장 가까운 수신기 채널.
    275          //========================================================================
    276          {
   \                     GetChNearRFM: (+1)
   \        0x0   0xB470             PUSH     {R4-R6}
    277          	int nCh = ChTS1_1;		//	Default
   \        0x2   0x.... 0x....      LDR.W    R0,??DataTable42_3
   \        0x6   0x6800             LDR      R0,[R0, #+0]
    278          
    279          	//	가장가까운 호차 검색.
    280          	int nMaxRSSI = 0;
   \        0x8   0x2100             MOVS     R1,#+0
    281          	for ( int idx = 1; idx <= 10; idx++ )
   \        0xA   0x2201             MOVS     R2,#+1
   \                     ??GetChNearRFM_0: (+1)
   \        0xC   0x2A0B             CMP      R2,#+11
   \        0xE   0xDA17             BGE.N    ??GetChNearRFM_1
    282          	{
    283          		//	Car #1 ~ #10
    284          		if ( g_devStat[idx].nRSSI > nMaxRSSI )
   \       0x10   0x2325             MOVS     R3,#+37
   \       0x12   0x.... 0x....      LDR.W    R4,??DataTable48
   \       0x16   0xFB03 0xF502      MUL      R5,R3,R2
   \       0x1A   0xEB04 0x0605      ADD      R6,R4,R5
   \       0x1E   0xF8D6 0x501D      LDR      R5,[R6, #+29]
   \       0x22   0x42A9             CMP      R1,R5
   \       0x24   0xDA0A             BGE.N    ??GetChNearRFM_2
    285          		{
    286          			nCh = g_devStat[idx].stat.nChRx;		//	채널 설정.
   \       0x26   0xFB03 0xF502      MUL      R5,R3,R2
   \       0x2A   0x4425             ADD      R5,R4,R5
   \       0x2C   0x7AAD             LDRB     R5,[R5, #+10]
   \       0x2E   0x0028             MOVS     R0,R5
    287          			nMaxRSSI = g_devStat[idx].nRSSI;
   \       0x30   0xFB03 0xF302      MUL      R3,R3,R2
   \       0x34   0x441C             ADD      R4,R4,R3
   \       0x36   0xF8D4 0x301D      LDR      R3,[R4, #+29]
   \       0x3A   0x0019             MOVS     R1,R3
    288          		}
    289          	}
   \                     ??GetChNearRFM_2: (+1)
   \       0x3C   0x1C52             ADDS     R2,R2,#+1
   \       0x3E   0xE7E5             B.N      ??GetChNearRFM_0
    290          
    291          	return nCh;
   \                     ??GetChNearRFM_1: (+1)
   \       0x40   0xBC70             POP      {R4-R6}
   \       0x42   0x4770             BX       LR
    292          }
    293          
    294          //========================================================================
    295          //	방송채널 : 송신기에서 수신기로 송신할 방송채널 설정.

   \                                 In section .data, align 4
    296          int		g_nChPA	=	_ChTS1_1;		//	Default
   \                     g_nChPA:
   \        0x0   0x0000'0015        DC32 21
    297          
    298          //========================================================================

   \                                 In section .text, align 2, keep-with-next
    299          void	SetChPA( int nCh )
    300          //========================================================================
    301          {
    302          	//	방송채널 설정.
    303          	g_nChPA	= nCh;
   \                     SetChPA: (+1)
   \        0x0   0x.... 0x....      LDR.W    R1,??DataTable48_1
   \        0x4   0x6008             STR      R0,[R1, #+0]
    304          }
   \        0x6   0x4770             BX       LR
    305          
    306          //========================================================================

   \                                 In section .text, align 2, keep-with-next
    307          int		GetChPA( void )
    308          //========================================================================
    309          {
    310          	//	방송채널 설정.
    311          	return g_nChPA;
   \                     GetChPA: (+1)
   \        0x0   0x.... 0x....      LDR.W    R0,??DataTable48_1
   \        0x4   0x6800             LDR      R0,[R0, #+0]
   \        0x6   0x4770             BX       LR
    312          }
    313          
    314          //========================================================================

   \                                 In section .text, align 2, keep-with-next
    315          int		GetCh2Car( int nCh )	//	채널 -> 호차정보 변환.
    316          //========================================================================
    317          {
   \                     GetCh2Car: (+1)
   \        0x0   0x0001             MOVS     R1,R0
    318          	//	채널 -> 호차정보.
    319          	int nCar;
    320          	if ( nCh == ChTx_1 )		nCar = RFTCarNo1;	//	송신기#1
   \        0x2   0x.... 0x....      LDR.W    R0,??DataTable41_3
   \        0x6   0x6800             LDR      R0,[R0, #+0]
   \        0x8   0x4281             CMP      R1,R0
   \        0xA   0xD101             BNE.N    ??GetCh2Car_0
   \        0xC   0x200B             MOVS     R0,#+11
   \        0xE   0xE00E             B.N      ??GetCh2Car_1
    321          	else if ( nCh == ChTx_2 )	nCar = RFTCarNo2;	//	송신기#2
   \                     ??GetCh2Car_0: (+1)
   \       0x10   0x.... 0x....      LDR.W    R0,??DataTable45_1
   \       0x14   0x6800             LDR      R0,[R0, #+0]
   \       0x16   0x4281             CMP      R1,R0
   \       0x18   0xD101             BNE.N    ??GetCh2Car_2
   \       0x1A   0x200C             MOVS     R0,#+12
   \       0x1C   0xE007             B.N      ??GetCh2Car_1
    322          	else
    323          	{
    324          		//	ChTS1_1 - 21	:	1호차.
    325          		//	1 ~ 10호차.
    326          		nCar = ( nCh - ChTS1_1 ) / ChGap + 1;
   \                     ??GetCh2Car_2: (+1)
   \       0x1E   0x.... 0x....      LDR.W    R0,??DataTable42_3
   \       0x22   0x6800             LDR      R0,[R0, #+0]
   \       0x24   0x1A08             SUBS     R0,R1,R0
   \       0x26   0x2204             MOVS     R2,#+4
   \       0x28   0xFB90 0xF0F2      SDIV     R0,R0,R2
   \       0x2C   0x1C40             ADDS     R0,R0,#+1
    327          	}
    328          
    329          	return nCar;
   \                     ??GetCh2Car_1: (+1)
   \       0x2E   0x4770             BX       LR
    330          }
    331          
    332          
    333          

   \                                 In section .bss, align 4
    334          int		g_nChRFT	=	0;		//	Default
   \                     g_nChRFT:
   \        0x0                      DS8 4
    335          
    336          //========================================================================

   \                                 In section .text, align 2, keep-with-next
    337          void	SetChPARFT( int nCh )	//	가까운 송신기 채널(방송/통화용) 설정.
    338          //========================================================================
    339          {
    340          	//	방송채널 설정.
    341          	g_nChRFT	= nCh;
   \                     SetChPARFT: (+1)
   \        0x0   0x.... 0x....      LDR.W    R1,??DataTable48_3
   \        0x4   0x6008             STR      R0,[R1, #+0]
    342          }
   \        0x6   0x4770             BX       LR
    343          
    344          //========================================================================

   \                                 In section .text, align 2, keep-with-next
    345          int		GetChPARFT( void )		//	가까운 송신기 채널(방송/통화용) 설정.
    346          //========================================================================
    347          {
    348          	//	방송채널 설정.
    349          	return g_nChRFT;
   \                     GetChPARFT: (+1)
   \        0x0   0x.... 0x....      LDR.W    R0,??DataTable48_3
   \        0x4   0x6800             LDR      R0,[R0, #+0]
   \        0x6   0x4770             BX       LR
    350          }
    351          
    352          #if defined(USE_ROUTE_REQ)
    353          

   \                                 In section .bss, align 4
    354          int		g_nChRFMUp		=	0;		//	Default
   \                     g_nChRFMUp:
   \        0x0                      DS8 4

   \                                 In section .bss, align 4
    355          int		g_nChRFMDown	=	0;		//	Default
   \                     g_nChRFMDown:
   \        0x0                      DS8 4
    356          

   \                                 In section .bss, align 4
    357          int		g_nStampRouteRsp		=	0;	//	Route Rsp TimeStamp
   \                     g_nStampRouteRsp:
   \        0x0                      DS8 4

   \                                 In section .bss, align 4
    358          int		g_nIdxRouteFindNext		=	0;	//	Next호차 Find Index / Route Rsp 수신시 Reset
   \                     g_nIdxRouteFindNext:
   \        0x0                      DS8 4
    359          
    360          //========================================================================

   \                                 In section .text, align 2, keep-with-next
    361          void	SetChRFMUp( int nCh )	//	가까운 수신기 채널 ( Up )
    362          //========================================================================
    363          {
    364          	//	방송채널 설정.
    365          	g_nChRFMUp	= nCh;
   \                     SetChRFMUp: (+1)
   \        0x0   0x.... 0x....      LDR.W    R1,??DataTable49
   \        0x4   0x6008             STR      R0,[R1, #+0]
    366          }
   \        0x6   0x4770             BX       LR
    367          
    368          //========================================================================

   \                                 In section .text, align 2, keep-with-next
    369          int		GetChRFMUp( void )		//	가까운 수신기 채널 ( Up )
    370          //========================================================================
    371          {
    372          	//	방송채널 설정.
    373          	return g_nChRFMUp;
   \                     GetChRFMUp: (+1)
   \        0x0   0x.... 0x....      LDR.W    R0,??DataTable49
   \        0x4   0x6800             LDR      R0,[R0, #+0]
   \        0x6   0x4770             BX       LR
    374          }
    375          
    376          //========================================================================

   \                                 In section .text, align 2, keep-with-next
    377          void	SetChRFMDown( int nCh )	//	가까운 수신기 채널 ( Down )
    378          //========================================================================
    379          {
    380          	//	방송채널 설정.
    381          	g_nChRFMDown	= nCh;
   \                     SetChRFMDown: (+1)
   \        0x0   0x.... 0x....      LDR.W    R1,??DataTable49_1
   \        0x4   0x6008             STR      R0,[R1, #+0]
    382          }
   \        0x6   0x4770             BX       LR
    383          
    384          //========================================================================

   \                                 In section .text, align 2, keep-with-next
    385          int		GetChRFMDown( void )	//	가까운 수신기 채널 ( Down )
    386          //========================================================================
    387          {
    388          	//	방송채널 설정.
    389          	return g_nChRFMDown;
   \                     GetChRFMDown: (+1)
   \        0x0   0x.... 0x....      LDR.W    R0,??DataTable49_1
   \        0x4   0x6800             LDR      R0,[R0, #+0]
   \        0x6   0x4770             BX       LR
    390          }
    391          
    392          
    393          #endif
    394          
    395          //========================================================================
    396          
    397          #include "eeprom.h"    //  EEPROM
    398          
    399          //========================================================================

   \                                 In section .text, align 2, keep-with-next
    400          int		LoadTrainSetIdx	( void )
    401          //========================================================================
    402          {
   \                     LoadTrainSetIdx: (+1)
   \        0x0   0xB51C             PUSH     {R2-R4,LR}
    403              uint8_t     idxTrainSet = 0;
   \        0x2   0x2000             MOVS     R0,#+0
   \        0x4   0xF88D 0x0004      STRB     R0,[SP, #+4]
    404          
    405              if ( HAL_OK != HAL_I2C_IsDeviceReady( &hi2c1, (uint16_t)( 0x50 << 1 ), 2, 2 ) )
   \        0x8   0x.... 0x....      LDR.W    R4,??DataTable45_2
   \        0xC   0x2302             MOVS     R3,#+2
   \        0xE   0x2202             MOVS     R2,#+2
   \       0x10   0x21A0             MOVS     R1,#+160
   \       0x12   0x0020             MOVS     R0,R4
   \       0x14   0x.... 0x....      BL       HAL_I2C_IsDeviceReady
   \       0x18   0x2800             CMP      R0,#+0
   \       0x1A   0xD00A             BEQ.N    ??LoadTrainSetIdx_0
    406              {
    407                  printf( "%s(%d) - EEPROM Error\n", __func__, __LINE__ );
                         ^
Warning[Pe223]: function "printf" declared implicitly
   \       0x1C   0xF240 0x1297      MOVW     R2,#+407
   \       0x20   0x.... 0x....      LDR.W    R1,??DataTable45_3
   \       0x24   0x.... 0x....      LDR.W    R0,??DataTable45_4
   \       0x28   0x.... 0x....      BL       printf
    408          
    409                  return -1;
   \       0x2C   0xF05F 0x30FF      MOVS     R0,#+4294967295
   \       0x30   0xE02F             B.N      ??LoadTrainSetIdx_1
    410              }
    411          
    412          //    M24_HAL_ReadBytes( &hi2c1, 0xA0, 0x10, (uint8_t *)&idxTrainSet, 1 );
    413              M24_HAL_ReadBytes( &hi2c1, 0xA0, AddrEEPTrainSet, (uint8_t *)&idxTrainSet, 1 );
   \                     ??LoadTrainSetIdx_0: (+1)
   \       0x32   0x2001             MOVS     R0,#+1
   \       0x34   0x9000             STR      R0,[SP, #+0]
   \       0x36   0xAB01             ADD      R3,SP,#+4
   \       0x38   0x2210             MOVS     R2,#+16
   \       0x3A   0x21A0             MOVS     R1,#+160
   \       0x3C   0x0020             MOVS     R0,R4
   \       0x3E   0x.... 0x....      BL       M24_HAL_ReadBytes
    414          
    415              if ( GetDbg() == 1 )
                          ^
Warning[Pe223]: function "GetDbg" declared implicitly
   \       0x42   0x.... 0x....      BL       GetDbg
   \       0x46   0x2801             CMP      R0,#+1
   \       0x48   0xD109             BNE.N    ??LoadTrainSetIdx_2
    416              	printf( "%s(%d) - %d\n", __func__, __LINE__, idxTrainSet );
                     	^
Warning[Pe223]: function "printf" declared implicitly
   \       0x4A   0xF89D 0x3004      LDRB     R3,[SP, #+4]
   \       0x4E   0xF44F 0x72D0      MOV      R2,#+416
   \       0x52   0x.... 0x....      LDR.W    R1,??DataTable45_3
   \       0x56   0x.... 0x....      LDR.W    R0,??DataTable46_1
   \       0x5A   0x.... 0x....      BL       printf
    417          
    418              //========================================================================
    419          #if defined(USE_ODD_TS_CH_SHIFT)
    420              if( (idxTrainSet%2) == 1 )
   \                     ??LoadTrainSetIdx_2: (+1)
   \       0x5E   0xF89D 0x0004      LDRB     R0,[SP, #+4]
   \       0x62   0x2102             MOVS     R1,#+2
   \       0x64   0xFB90 0xF2F1      SDIV     R2,R0,R1
   \       0x68   0xFB01 0x0012      MLS      R0,R1,R2,R0
   \       0x6C   0x2801             CMP      R0,#+1
   \       0x6E   0xD10E             BNE.N    ??LoadTrainSetIdx_3
    421              {
    422              	//	홀수 편성 채널 ( Shift ChGap/2 )
    423              	ChTx_1		=	ChTx_1 + (ChGap/2);
   \       0x70   0x.... 0x....      LDR.W    R0,??DataTable41_3
   \       0x74   0x6801             LDR      R1,[R0, #+0]
   \       0x76   0x1C89             ADDS     R1,R1,#+2
   \       0x78   0x6001             STR      R1,[R0, #+0]
    424              	ChTx_2		=	ChTx_2 + (ChGap/2);
   \       0x7A   0x.... 0x....      LDR.W    R0,??DataTable45_1
   \       0x7E   0x6801             LDR      R1,[R0, #+0]
   \       0x80   0x1C89             ADDS     R1,R1,#+2
   \       0x82   0x6001             STR      R1,[R0, #+0]
    425                  ChTS1_1		= 	ChTS1_1 + (ChGap/2);
   \       0x84   0x.... 0x....      LDR.W    R0,??DataTable42_3
   \       0x88   0x6801             LDR      R1,[R0, #+0]
   \       0x8A   0x1C89             ADDS     R1,R1,#+2
   \       0x8C   0x6001             STR      R1,[R0, #+0]
    426              }
    427          #endif
    428              //========================================================================
    429          
    430          
    431              return idxTrainSet;
   \                     ??LoadTrainSetIdx_3: (+1)
   \       0x8E   0xF89D 0x0004      LDRB     R0,[SP, #+4]
   \                     ??LoadTrainSetIdx_1: (+1)
   \       0x92   0xBD16             POP      {R1,R2,R4,PC}
    432          }
    433          
    434          
    435          //========================================================================

   \                                 In section .text, align 2, keep-with-next
    436          int		GetTrainSetIdx		( void )
    437          //========================================================================
    438          {
   \                     GetTrainSetIdx: (+1)
   \        0x0   0xB510             PUSH     {R4,LR}
    439          	static int s_bOnce 			=	0;
    440          
    441          	if ( s_bOnce == 0 )
   \        0x2   0x.... 0x....      LDR.W    R4,??DataTable46_2
   \        0x6   0x6820             LDR      R0,[R4, #+0]
   \        0x8   0x2800             CMP      R0,#+0
   \        0xA   0xD106             BNE.N    ??GetTrainSetIdx_0
    442          	{
    443          		//	초기로딩시 I2C에서 Load
    444          		g_idxTrainSet = LoadTrainSetIdx();
   \        0xC   0x.... 0x....      BL       LoadTrainSetIdx
   \       0x10   0x.... 0x....      LDR.W    R1,??DataTable46_3
   \       0x14   0x6008             STR      R0,[R1, #+0]
    445          		s_bOnce = 1;
   \       0x16   0x2001             MOVS     R0,#+1
   \       0x18   0x6020             STR      R0,[R4, #+0]
    446          	}
    447          
    448          	return g_idxTrainSet;
   \                     ??GetTrainSetIdx_0: (+1)
   \       0x1A   0x.... 0x....      LDR.W    R0,??DataTable46_3
   \       0x1E   0x6800             LDR      R0,[R0, #+0]
   \       0x20   0xBD10             POP      {R4,PC}
    449          }

   \                                 In section .bss, align 4
   \                     `GetTrainSetIdx::s_bOnce`:
   \        0x0                      DS8 4
    450          
    451          
    452          //========================================================================

   \                                 In section .text, align 2, keep-with-next
    453          void	SetTrainSetIdx	( int idxTrainSet )
    454          //========================================================================
    455          {
   \                     SetTrainSetIdx: (+1)
   \        0x0   0xB511             PUSH     {R0,R4,LR}
   \        0x2   0xB081             SUB      SP,SP,#+4
    456          	g_idxTrainSet = idxTrainSet;
   \        0x4   0x9801             LDR      R0,[SP, #+4]
   \        0x6   0x.... 0x....      LDR.W    R1,??DataTable46_3
   \        0xA   0x6008             STR      R0,[R1, #+0]
    457          
    458              if ( HAL_OK != HAL_I2C_IsDeviceReady( &hi2c1, (uint16_t)( 0x50 << 1 ), 2, 2 ) )
   \        0xC   0x.... 0x....      LDR.W    R4,??DataTable45_2
   \       0x10   0x2302             MOVS     R3,#+2
   \       0x12   0x2202             MOVS     R2,#+2
   \       0x14   0x21A0             MOVS     R1,#+160
   \       0x16   0x0020             MOVS     R0,R4
   \       0x18   0x.... 0x....      BL       HAL_I2C_IsDeviceReady
   \       0x1C   0x2800             CMP      R0,#+0
   \       0x1E   0xD008             BEQ.N    ??SetTrainSetIdx_0
    459              {
    460                  printf( "%s(%d) - EEPROM Error\n", __func__, __LINE__ );
                         ^
Warning[Pe223]: function "printf" declared implicitly
   \       0x20   0xF44F 0x72E6      MOV      R2,#+460
   \       0x24   0x.... 0x....      LDR.W    R1,??DataTable47
   \       0x28   0x.... 0x....      LDR.W    R0,??DataTable45_4
   \       0x2C   0x.... 0x....      BL       printf
    461          
    462                  return ;
   \       0x30   0xE014             B.N      ??SetTrainSetIdx_1
    463              }
    464          
    465              if ( GetDbg() == 1 )
                          ^
Warning[Pe223]: function "GetDbg" declared implicitly
   \                     ??SetTrainSetIdx_0: (+1)
   \       0x32   0x.... 0x....      BL       GetDbg
   \       0x36   0x2801             CMP      R0,#+1
   \       0x38   0xD108             BNE.N    ??SetTrainSetIdx_2
    466              	printf( "%s(%d) - %d\n", __func__, __LINE__, idxTrainSet );
                     	^
Warning[Pe223]: function "printf" declared implicitly
   \       0x3A   0x9B01             LDR      R3,[SP, #+4]
   \       0x3C   0xF44F 0x72E9      MOV      R2,#+466
   \       0x40   0x.... 0x....      LDR.W    R1,??DataTable47
   \       0x44   0x.... 0x....      LDR.W    R0,??DataTable46_1
   \       0x48   0x.... 0x....      BL       printf
    467          //    M24_HAL_WriteBytes( &hi2c1, 0xA0, 0x10, (uint8_t *)&idxTrainSet, 1 );
    468              M24_HAL_WriteBytes( &hi2c1, 0xA0, AddrEEPTrainSet, (uint8_t *)&idxTrainSet, 1 );
   \                     ??SetTrainSetIdx_2: (+1)
   \       0x4C   0x2001             MOVS     R0,#+1
   \       0x4E   0x9000             STR      R0,[SP, #+0]
   \       0x50   0xAB01             ADD      R3,SP,#+4
   \       0x52   0x2210             MOVS     R2,#+16
   \       0x54   0x21A0             MOVS     R1,#+160
   \       0x56   0x0020             MOVS     R0,R4
   \       0x58   0x.... 0x....      BL       M24_HAL_WriteBytes
    469          }
   \                     ??SetTrainSetIdx_1: (+1)
   \       0x5C   0xBD13             POP      {R0,R1,R4,PC}
    470          
    471          #if defined(USE_RF_COMM_MODE)
    472          
    473          //========================================================================

   \                                 In section .text, align 2, keep-with-next
    474          int		GetRFMode	( void )
    475          //========================================================================
    476          {
   \                     GetRFMode: (+1)
   \        0x0   0xB51C             PUSH     {R2-R4,LR}
    477              uint8_t     nRFMode = 0;
   \        0x2   0x2000             MOVS     R0,#+0
   \        0x4   0xF88D 0x0004      STRB     R0,[SP, #+4]
    478          
    479              if ( HAL_OK != HAL_I2C_IsDeviceReady( &hi2c1, (uint16_t)( 0x50 << 1 ), 2, 2 ) )
   \        0x8   0x.... 0x....      LDR.W    R4,??DataTable45_2
   \        0xC   0x2302             MOVS     R3,#+2
   \        0xE   0x2202             MOVS     R2,#+2
   \       0x10   0x21A0             MOVS     R1,#+160
   \       0x12   0x0020             MOVS     R0,R4
   \       0x14   0x.... 0x....      BL       HAL_I2C_IsDeviceReady
   \       0x18   0x2800             CMP      R0,#+0
   \       0x1A   0xD00A             BEQ.N    ??GetRFMode_0
    480              {
    481                  printf( "%s(%d) - EEPROM Error\n", __func__, __LINE__ );
                         ^
Warning[Pe223]: function "printf" declared implicitly
   \       0x1C   0xF240 0x12E1      MOVW     R2,#+481
   \       0x20   0x.... 0x....      LDR.W    R1,??DataTable48_4
   \       0x24   0x.... 0x....      LDR.W    R0,??DataTable45_4
   \       0x28   0x.... 0x....      BL       printf
    482          
    483                  return -1;
   \       0x2C   0xF05F 0x30FF      MOVS     R0,#+4294967295
   \       0x30   0xE022             B.N      ??GetRFMode_1
    484              }
    485          
    486              M24_HAL_ReadBytes( &hi2c1, 0xA0, AddrEEPRFMode, (uint8_t *)&nRFMode, 1 );
   \                     ??GetRFMode_0: (+1)
   \       0x32   0x2001             MOVS     R0,#+1
   \       0x34   0x9000             STR      R0,[SP, #+0]
   \       0x36   0xAB01             ADD      R3,SP,#+4
   \       0x38   0x2230             MOVS     R2,#+48
   \       0x3A   0x21A0             MOVS     R1,#+160
   \       0x3C   0x0020             MOVS     R0,R4
   \       0x3E   0x.... 0x....      BL       M24_HAL_ReadBytes
    487          
    488              if ( nRFMode > RFModeMax || nRFMode < 1 ) nRFMode = RFModeDefault;	//	Default Hop Man
   \       0x42   0xF89D 0x0004      LDRB     R0,[SP, #+4]
   \       0x46   0x2803             CMP      R0,#+3
   \       0x48   0xDA03             BGE.N    ??GetRFMode_2
   \       0x4A   0xF89D 0x0004      LDRB     R0,[SP, #+4]
   \       0x4E   0x2800             CMP      R0,#+0
   \       0x50   0xD102             BNE.N    ??GetRFMode_3
   \                     ??GetRFMode_2: (+1)
   \       0x52   0x2001             MOVS     R0,#+1
   \       0x54   0xF88D 0x0004      STRB     R0,[SP, #+4]
    489          
    490              if ( GetDbg() == 1 )
                          ^
Warning[Pe223]: function "GetDbg" declared implicitly
   \                     ??GetRFMode_3: (+1)
   \       0x58   0x.... 0x....      BL       GetDbg
   \       0x5C   0x2801             CMP      R0,#+1
   \       0x5E   0xD109             BNE.N    ??GetRFMode_4
    491              	printf( "%s(%d) - %d\n", __func__, __LINE__, nRFMode );
                     	^
Warning[Pe223]: function "printf" declared implicitly
   \       0x60   0xF89D 0x3004      LDRB     R3,[SP, #+4]
   \       0x64   0xF240 0x12EB      MOVW     R2,#+491
   \       0x68   0x.... 0x....      LDR.W    R1,??DataTable48_4
   \       0x6C   0x.... 0x....      LDR.W    R0,??DataTable46_1
   \       0x70   0x.... 0x....      BL       printf
    492          
    493              return nRFMode;
   \                     ??GetRFMode_4: (+1)
   \       0x74   0xF89D 0x0004      LDRB     R0,[SP, #+4]
   \                     ??GetRFMode_1: (+1)
   \       0x78   0xBD16             POP      {R1,R2,R4,PC}
    494          }
    495          
    496          //========================================================================

   \                                 In section .text, align 2, keep-with-next
    497          void	SetRFMode	( int nRFMode )
    498          //========================================================================
    499          {
   \                     SetRFMode: (+1)
   \        0x0   0xB511             PUSH     {R0,R4,LR}
   \        0x2   0xB081             SUB      SP,SP,#+4
    500              if ( HAL_OK != HAL_I2C_IsDeviceReady( &hi2c1, (uint16_t)( 0x50 << 1 ), 2, 2 ) )
   \        0x4   0x.... 0x....      LDR.W    R4,??DataTable45_2
   \        0x8   0x2302             MOVS     R3,#+2
   \        0xA   0x2202             MOVS     R2,#+2
   \        0xC   0x21A0             MOVS     R1,#+160
   \        0xE   0x0020             MOVS     R0,R4
   \       0x10   0x.... 0x....      BL       HAL_I2C_IsDeviceReady
   \       0x14   0x2800             CMP      R0,#+0
   \       0x16   0xD008             BEQ.N    ??SetRFMode_0
    501              {
    502                  printf( "%s(%d) - EEPROM Error\n", __func__, __LINE__ );
                         ^
Warning[Pe223]: function "printf" declared implicitly
   \       0x18   0xF44F 0x72FB      MOV      R2,#+502
   \       0x1C   0x.... 0x....      LDR.W    R1,??DataTable48_5
   \       0x20   0x.... 0x....      LDR.W    R0,??DataTable45_4
   \       0x24   0x.... 0x....      BL       printf
    503          
    504                  return ;
   \       0x28   0xE014             B.N      ??SetRFMode_1
    505              }
    506          
    507              if ( GetDbg() == 1 )
                          ^
Warning[Pe223]: function "GetDbg" declared implicitly
   \                     ??SetRFMode_0: (+1)
   \       0x2A   0x.... 0x....      BL       GetDbg
   \       0x2E   0x2801             CMP      R0,#+1
   \       0x30   0xD108             BNE.N    ??SetRFMode_2
    508              	printf( "%s(%d) - %d\n", __func__, __LINE__, nRFMode );
                     	^
Warning[Pe223]: function "printf" declared implicitly
   \       0x32   0x9B01             LDR      R3,[SP, #+4]
   \       0x34   0xF44F 0x72FE      MOV      R2,#+508
   \       0x38   0x.... 0x....      LDR.W    R1,??DataTable48_5
   \       0x3C   0x.... 0x....      LDR.W    R0,??DataTable46_1
   \       0x40   0x.... 0x....      BL       printf
    509          
    510              M24_HAL_WriteBytes( &hi2c1, 0xA0, AddrEEPRFMode, (uint8_t *)&nRFMode, 1 );
   \                     ??SetRFMode_2: (+1)
   \       0x44   0x2001             MOVS     R0,#+1
   \       0x46   0x9000             STR      R0,[SP, #+0]
   \       0x48   0xAB01             ADD      R3,SP,#+4
   \       0x4A   0x2230             MOVS     R2,#+48
   \       0x4C   0x21A0             MOVS     R1,#+160
   \       0x4E   0x0020             MOVS     R0,R4
   \       0x50   0x.... 0x....      BL       M24_HAL_WriteBytes
    511          }
   \                     ??SetRFMode_1: (+1)
   \       0x54   0xBD13             POP      {R0,R1,R4,PC}
    512          
    513          #endif
    514          
    515          #if defined(USE_HOP_MANUAL)
    516          
    517          //========================================================================

   \                                 In section .text, align 2, keep-with-next
    518          int		GetManHop	( void )
    519          //========================================================================
    520          {
   \                     GetManHop: (+1)
   \        0x0   0xB51C             PUSH     {R2-R4,LR}
    521              uint8_t     nManHop = 0;
   \        0x2   0x2000             MOVS     R0,#+0
   \        0x4   0xF88D 0x0004      STRB     R0,[SP, #+4]
    522          
    523              if ( HAL_OK != HAL_I2C_IsDeviceReady( &hi2c1, (uint16_t)( 0x50 << 1 ), 2, 2 ) )
   \        0x8   0x.... 0x....      LDR.W    R4,??DataTable45_2
   \        0xC   0x2302             MOVS     R3,#+2
   \        0xE   0x2202             MOVS     R2,#+2
   \       0x10   0x21A0             MOVS     R1,#+160
   \       0x12   0x0020             MOVS     R0,R4
   \       0x14   0x.... 0x....      BL       HAL_I2C_IsDeviceReady
   \       0x18   0x2800             CMP      R0,#+0
   \       0x1A   0xD00A             BEQ.N    ??GetManHop_0
    524              {
    525                  printf( "%s(%d) - EEPROM Error\n", __func__, __LINE__ );
                         ^
Warning[Pe223]: function "printf" declared implicitly
   \       0x1C   0xF240 0x220D      MOVW     R2,#+525
   \       0x20   0x.... 0x....      LDR.W    R1,??DataTable48_6
   \       0x24   0x.... 0x....      LDR.W    R0,??DataTable45_4
   \       0x28   0x.... 0x....      BL       printf
    526          
    527                  return -1;
   \       0x2C   0xF05F 0x30FF      MOVS     R0,#+4294967295
   \       0x30   0xE01E             B.N      ??GetManHop_1
    528              }
    529          
    530          //    M24_HAL_ReadBytes( &hi2c1, 0xA0, 0x0D, (uint8_t *)&nManHop, 1 );
    531              M24_HAL_ReadBytes( &hi2c1, 0xA0, AddrEEPManHop, (uint8_t *)&nManHop, 1 );
   \                     ??GetManHop_0: (+1)
   \       0x32   0x2001             MOVS     R0,#+1
   \       0x34   0x9000             STR      R0,[SP, #+0]
   \       0x36   0xAB01             ADD      R3,SP,#+4
   \       0x38   0x220D             MOVS     R2,#+13
   \       0x3A   0x21A0             MOVS     R1,#+160
   \       0x3C   0x0020             MOVS     R0,R4
   \       0x3E   0x.... 0x....      BL       M24_HAL_ReadBytes
    532          
    533          //    if ( nManHop > 2 || nManHop < 0 ) nManHop = 0;
    534              if ( nManHop > 2 || nManHop < 0 ) nManHop = DEFAULT_HOP_MAN_VAL;	//	Default Hop Man
                                                 ^
Warning[Pe186]: pointless comparison of unsigned integer with zero
   \       0x42   0xF89D 0x0004      LDRB     R0,[SP, #+4]
   \       0x46   0x2803             CMP      R0,#+3
   \       0x48   0xDB02             BLT.N    ??GetManHop_2
   \       0x4A   0x2002             MOVS     R0,#+2
   \       0x4C   0xF88D 0x0004      STRB     R0,[SP, #+4]
    535          
    536              if ( GetDbg() == 1 )
                          ^
Warning[Pe223]: function "GetDbg" declared implicitly
   \                     ??GetManHop_2: (+1)
   \       0x50   0x.... 0x....      BL       GetDbg
   \       0x54   0x2801             CMP      R0,#+1
   \       0x56   0xD109             BNE.N    ??GetManHop_3
    537              	printf( "%s(%d) - %d\n", __func__, __LINE__, nManHop );
                     	^
Warning[Pe223]: function "printf" declared implicitly
   \       0x58   0xF89D 0x3004      LDRB     R3,[SP, #+4]
   \       0x5C   0xF240 0x2219      MOVW     R2,#+537
   \       0x60   0x.... 0x....      LDR.W    R1,??DataTable48_6
   \       0x64   0x.... 0x....      LDR.W    R0,??DataTable46_1
   \       0x68   0x.... 0x....      BL       printf
    538          
    539              return nManHop;
   \                     ??GetManHop_3: (+1)
   \       0x6C   0xF89D 0x0004      LDRB     R0,[SP, #+4]
   \                     ??GetManHop_1: (+1)
   \       0x70   0xBD16             POP      {R1,R2,R4,PC}
    540          }
    541          
    542          //========================================================================

   \                                 In section .text, align 2, keep-with-next
    543          void	SetManHop	( int nManHop )
    544          //========================================================================
    545          {
   \                     SetManHop: (+1)
   \        0x0   0xB511             PUSH     {R0,R4,LR}
   \        0x2   0xB081             SUB      SP,SP,#+4
    546              if ( HAL_OK != HAL_I2C_IsDeviceReady( &hi2c1, (uint16_t)( 0x50 << 1 ), 2, 2 ) )
   \        0x4   0x.... 0x....      LDR.W    R4,??DataTable45_2
   \        0x8   0x2302             MOVS     R3,#+2
   \        0xA   0x2202             MOVS     R2,#+2
   \        0xC   0x21A0             MOVS     R1,#+160
   \        0xE   0x0020             MOVS     R0,R4
   \       0x10   0x.... 0x....      BL       HAL_I2C_IsDeviceReady
   \       0x14   0x2800             CMP      R0,#+0
   \       0x16   0xD008             BEQ.N    ??SetManHop_0
    547              {
    548                  printf( "%s(%d) - EEPROM Error\n", __func__, __LINE__ );
                         ^
Warning[Pe223]: function "printf" declared implicitly
   \       0x18   0xF44F 0x7209      MOV      R2,#+548
   \       0x1C   0x.... 0x....      LDR.W    R1,??DataTable49_3
   \       0x20   0x.... 0x....      LDR.W    R0,??DataTable45_4
   \       0x24   0x.... 0x....      BL       printf
    549          
    550                  return ;
   \       0x28   0xE014             B.N      ??SetManHop_1
    551              }
    552          
    553              if ( GetDbg() == 1 )
                          ^
Warning[Pe223]: function "GetDbg" declared implicitly
   \                     ??SetManHop_0: (+1)
   \       0x2A   0x.... 0x....      BL       GetDbg
   \       0x2E   0x2801             CMP      R0,#+1
   \       0x30   0xD108             BNE.N    ??SetManHop_2
    554              	printf( "%s(%d) - %d\n", __func__, __LINE__, nManHop );
                     	^
Warning[Pe223]: function "printf" declared implicitly
   \       0x32   0x9B01             LDR      R3,[SP, #+4]
   \       0x34   0xF240 0x222A      MOVW     R2,#+554
   \       0x38   0x.... 0x....      LDR.W    R1,??DataTable49_3
   \       0x3C   0x.... 0x....      LDR.W    R0,??DataTable46_1
   \       0x40   0x.... 0x....      BL       printf
    555          
    556          //    M24_HAL_WriteBytes( &hi2c1, 0xA0, 0x0D, (uint8_t *)&nManHop, 1 );
    557              M24_HAL_WriteBytes( &hi2c1, 0xA0, AddrEEPManHop, (uint8_t *)&nManHop, 1 );
   \                     ??SetManHop_2: (+1)
   \       0x44   0x2001             MOVS     R0,#+1
   \       0x46   0x9000             STR      R0,[SP, #+0]
   \       0x48   0xAB01             ADD      R3,SP,#+4
   \       0x4A   0x220D             MOVS     R2,#+13
   \       0x4C   0x21A0             MOVS     R1,#+160
   \       0x4E   0x0020             MOVS     R0,R4
   \       0x50   0x.... 0x....      BL       M24_HAL_WriteBytes
    558          }
   \                     ??SetManHop_1: (+1)
   \       0x54   0xBD13             POP      {R0,R1,R4,PC}
    559          
    560          #endif	//	defined(USE_HOP_MANUAL)
    561          
    562          //========================================================================

   \                                 In section .text, align 2, keep-with-next
    563          int		LoadCarNo		( void )
    564          //========================================================================
    565          {
   \                     LoadCarNo: (+1)
   \        0x0   0xB51C             PUSH     {R2-R4,LR}
    566              uint8_t     nCarNo = 0;
   \        0x2   0x2000             MOVS     R0,#+0
   \        0x4   0xF88D 0x0004      STRB     R0,[SP, #+4]
    567          
    568              if ( HAL_OK != HAL_I2C_IsDeviceReady( &hi2c1, (uint16_t)( 0x50 << 1 ), 2, 2 ) )
   \        0x8   0x.... 0x....      LDR.W    R4,??DataTable45_2
   \        0xC   0x2302             MOVS     R3,#+2
   \        0xE   0x2202             MOVS     R2,#+2
   \       0x10   0x21A0             MOVS     R1,#+160
   \       0x12   0x0020             MOVS     R0,R4
   \       0x14   0x.... 0x....      BL       HAL_I2C_IsDeviceReady
   \       0x18   0x2800             CMP      R0,#+0
   \       0x1A   0xD00A             BEQ.N    ??LoadCarNo_0
    569              {
    570                  printf( "%s(%d) - EEPROM Error\n", __func__, __LINE__ );
                         ^
Warning[Pe223]: function "printf" declared implicitly
   \       0x1C   0xF240 0x223A      MOVW     R2,#+570
   \       0x20   0x.... 0x....      LDR.W    R1,??DataTable49_4
   \       0x24   0x.... 0x....      LDR.W    R0,??DataTable45_4
   \       0x28   0x.... 0x....      BL       printf
    571          
    572                  return -1;
   \       0x2C   0xF05F 0x30FF      MOVS     R0,#+4294967295
   \       0x30   0xE01C             B.N      ??LoadCarNo_1
    573              }
    574          
    575          //    M24_HAL_ReadBytes( &hi2c1, 0xA0, 0x0E, (uint8_t *)&nCarNo, 1 );
    576              M24_HAL_ReadBytes( &hi2c1, 0xA0, AddrEEPCarNo, (uint8_t *)&nCarNo, 1 );
   \                     ??LoadCarNo_0: (+1)
   \       0x32   0x2001             MOVS     R0,#+1
   \       0x34   0x9000             STR      R0,[SP, #+0]
   \       0x36   0xAB01             ADD      R3,SP,#+4
   \       0x38   0x220E             MOVS     R2,#+14
   \       0x3A   0x21A0             MOVS     R1,#+160
   \       0x3C   0x0020             MOVS     R0,R4
   \       0x3E   0x.... 0x....      BL       M24_HAL_ReadBytes
    577          
    578              if ( GetDbg() == 1 )
                          ^
Warning[Pe223]: function "GetDbg" declared implicitly
   \       0x42   0x.... 0x....      BL       GetDbg
   \       0x46   0x2801             CMP      R0,#+1
   \       0x48   0xD109             BNE.N    ??LoadCarNo_2
    579              	printf( "%s(%d) - %d\n", __func__, __LINE__, nCarNo );
                     	^
Warning[Pe223]: function "printf" declared implicitly
   \       0x4A   0xF89D 0x3004      LDRB     R3,[SP, #+4]
   \       0x4E   0xF240 0x2243      MOVW     R2,#+579
   \       0x52   0x.... 0x....      LDR.W    R1,??DataTable49_4
   \       0x56   0x.... 0x....      LDR.W    R0,??DataTable46_1
   \       0x5A   0x.... 0x....      BL       printf
    580          
    581              g_nCarNo = nCarNo;
   \                     ??LoadCarNo_2: (+1)
   \       0x5E   0xF89D 0x0004      LDRB     R0,[SP, #+4]
   \       0x62   0x.... 0x....      LDR.W    R1,??DataTable42_1
   \       0x66   0x6008             STR      R0,[R1, #+0]
    582          
    583              return nCarNo;
   \       0x68   0xF89D 0x0004      LDRB     R0,[SP, #+4]
   \                     ??LoadCarNo_1: (+1)
   \       0x6C   0xBD16             POP      {R1,R2,R4,PC}
    584          }
    585          
    586          //========================================================================

   \                                 In section .text, align 2, keep-with-next
    587          int		GetCarNo		( void )
    588          //========================================================================
    589          {
   \                     GetCarNo: (+1)
   \        0x0   0xB510             PUSH     {R4,LR}
    590          	static int s_bOnce = 0;
    591          
    592          	if ( s_bOnce == 0 )
   \        0x2   0x.... 0x....      LDR.W    R4,??DataTable49_5
   \        0x6   0x6820             LDR      R0,[R4, #+0]
   \        0x8   0x2800             CMP      R0,#+0
   \        0xA   0xD106             BNE.N    ??GetCarNo_0
    593          	{
    594          		//	초기로딩시 I2C에서 Load
    595          		g_nCarNo = LoadCarNo();
   \        0xC   0x.... 0x....      BL       LoadCarNo
   \       0x10   0x.... 0x....      LDR.W    R1,??DataTable42_1
   \       0x14   0x6008             STR      R0,[R1, #+0]
    596          		s_bOnce = 1;
   \       0x16   0x2001             MOVS     R0,#+1
   \       0x18   0x6020             STR      R0,[R4, #+0]
    597          	}
    598          
    599          	return g_nCarNo;
   \                     ??GetCarNo_0: (+1)
   \       0x1A   0x.... 0x....      LDR.W    R0,??DataTable42_1
   \       0x1E   0x6800             LDR      R0,[R0, #+0]
   \       0x20   0xBD10             POP      {R4,PC}
    600          }

   \                                 In section .bss, align 4
   \                     `GetCarNo::s_bOnce`:
   \        0x0                      DS8 4
    601          
    602          //========================================================================

   \                                 In section .text, align 2, keep-with-next
    603          void	SetCarNo		( int nCarNo )
    604          //========================================================================
    605          {
   \                     SetCarNo: (+1)
   \        0x0   0xB511             PUSH     {R0,R4,LR}
   \        0x2   0xB081             SUB      SP,SP,#+4
    606              if ( HAL_OK != HAL_I2C_IsDeviceReady( &hi2c1, (uint16_t)( 0x50 << 1 ), 2, 2 ) )
   \        0x4   0x.... 0x....      LDR.W    R4,??DataTable45_2
   \        0x8   0x2302             MOVS     R3,#+2
   \        0xA   0x2202             MOVS     R2,#+2
   \        0xC   0x21A0             MOVS     R1,#+160
   \        0xE   0x0020             MOVS     R0,R4
   \       0x10   0x.... 0x....      BL       HAL_I2C_IsDeviceReady
   \       0x14   0x2800             CMP      R0,#+0
   \       0x16   0xD008             BEQ.N    ??SetCarNo_0
    607              {
    608                  printf( "%s(%d) - EEPROM Error\n", __func__, __LINE__ );
                         ^
Warning[Pe223]: function "printf" declared implicitly
   \       0x18   0xF44F 0x7218      MOV      R2,#+608
   \       0x1C   0x.... 0x....      LDR.W    R1,??DataTable49_6
   \       0x20   0x.... 0x....      LDR.W    R0,??DataTable45_4
   \       0x24   0x.... 0x....      BL       printf
    609          
    610                  return ;
   \       0x28   0xE018             B.N      ??SetCarNo_1
    611              }
    612          
    613          	if ( GetDbg() == 1 )
                 	     ^
Warning[Pe223]: function "GetDbg" declared implicitly
   \                     ??SetCarNo_0: (+1)
   \       0x2A   0x.... 0x....      BL       GetDbg
   \       0x2E   0x2801             CMP      R0,#+1
   \       0x30   0xD108             BNE.N    ??SetCarNo_2
    614              	printf( "%s(%d) - %d\n", __func__, __LINE__, nCarNo );
                     	^
Warning[Pe223]: function "printf" declared implicitly
   \       0x32   0x9B01             LDR      R3,[SP, #+4]
   \       0x34   0xF240 0x2266      MOVW     R2,#+614
   \       0x38   0x.... 0x....      LDR.W    R1,??DataTable49_6
   \       0x3C   0x.... 0x....      LDR.W    R0,??DataTable46_1
   \       0x40   0x.... 0x....      BL       printf
    615          
    616          	g_nCarNo = nCarNo;
   \                     ??SetCarNo_2: (+1)
   \       0x44   0x9801             LDR      R0,[SP, #+4]
   \       0x46   0x.... 0x....      LDR.W    R1,??DataTable42_1
   \       0x4A   0x6008             STR      R0,[R1, #+0]
    617          
    618          //    M24_HAL_WriteBytes( &hi2c1, 0xA0, 0x0E, (uint8_t *)&nCarNo, 1 );
    619              M24_HAL_WriteBytes( &hi2c1, 0xA0, AddrEEPCarNo, (uint8_t *)&nCarNo, 1 );
   \       0x4C   0x2001             MOVS     R0,#+1
   \       0x4E   0x9000             STR      R0,[SP, #+0]
   \       0x50   0xAB01             ADD      R3,SP,#+4
   \       0x52   0x220E             MOVS     R2,#+14
   \       0x54   0x21A0             MOVS     R1,#+160
   \       0x56   0x0020             MOVS     R0,R4
   \       0x58   0x.... 0x....      BL       M24_HAL_WriteBytes
    620          }
   \                     ??SetCarNo_1: (+1)
   \       0x5C   0xBD13             POP      {R0,R1,R4,PC}
    621          
    622          //========================================================================

   \                                 In section .text, align 2, keep-with-next
    623          int		GetSpkVol	    ( void )
    624          //========================================================================
    625          {
   \                     GetSpkVol: (+1)
   \        0x0   0xB51C             PUSH     {R2-R4,LR}
    626              uint8_t     nSpkVol = 0;
   \        0x2   0x2000             MOVS     R0,#+0
   \        0x4   0xF88D 0x0004      STRB     R0,[SP, #+4]
    627          
    628              if ( HAL_OK != HAL_I2C_IsDeviceReady( &hi2c1, (uint16_t)( 0x50 << 1 ), 2, 2 ) )
   \        0x8   0x.... 0x....      LDR.W    R4,??DataTable45_2
   \        0xC   0x2302             MOVS     R3,#+2
   \        0xE   0x2202             MOVS     R2,#+2
   \       0x10   0x21A0             MOVS     R1,#+160
   \       0x12   0x0020             MOVS     R0,R4
   \       0x14   0x.... 0x....      BL       HAL_I2C_IsDeviceReady
   \       0x18   0x2800             CMP      R0,#+0
   \       0x1A   0xD00A             BEQ.N    ??GetSpkVol_0
    629              {
    630                  printf( "%s(%d) - EEPROM Error\n", __func__, __LINE__ );
                         ^
Warning[Pe223]: function "printf" declared implicitly
   \       0x1C   0xF240 0x2276      MOVW     R2,#+630
   \       0x20   0x.... 0x....      LDR.W    R1,??DataTable49_7
   \       0x24   0x.... 0x....      LDR.W    R0,??DataTable45_4
   \       0x28   0x.... 0x....      BL       printf
    631          
    632                  return -1;
   \       0x2C   0xF05F 0x30FF      MOVS     R0,#+4294967295
   \       0x30   0xE013             B.N      ??GetSpkVol_1
    633              }
    634          
    635          //    M24_HAL_ReadBytes( &hi2c1, 0xA0, 0x0F, (uint8_t *)&nSpkVol, 1 );
    636              M24_HAL_ReadBytes( &hi2c1, 0xA0, AddrEEPSpkVol, (uint8_t *)&nSpkVol, 1 );
   \                     ??GetSpkVol_0: (+1)
   \       0x32   0x2001             MOVS     R0,#+1
   \       0x34   0x9000             STR      R0,[SP, #+0]
   \       0x36   0xAB01             ADD      R3,SP,#+4
   \       0x38   0x220F             MOVS     R2,#+15
   \       0x3A   0x21A0             MOVS     R1,#+160
   \       0x3C   0x0020             MOVS     R0,R4
   \       0x3E   0x.... 0x....      BL       M24_HAL_ReadBytes
    637          
    638              printf( "%s(%d) - %d\n", __func__, __LINE__, nSpkVol );
                     ^
Warning[Pe223]: function "printf" declared implicitly
   \       0x42   0xF89D 0x3004      LDRB     R3,[SP, #+4]
   \       0x46   0xF240 0x227E      MOVW     R2,#+638
   \       0x4A   0x.... 0x....      LDR.W    R1,??DataTable49_7
   \       0x4E   0x.... 0x....      LDR.W    R0,??DataTable46_1
   \       0x52   0x.... 0x....      BL       printf
    639          
    640              return nSpkVol;
   \       0x56   0xF89D 0x0004      LDRB     R0,[SP, #+4]
   \                     ??GetSpkVol_1: (+1)
   \       0x5A   0xBD16             POP      {R1,R2,R4,PC}
    641          }
    642          
    643          //========================================================================

   \                                 In section .text, align 2, keep-with-next
    644          void	SetSpkVol	    ( int nSpkVol )
    645          //========================================================================
    646          {
   \                     SetSpkVol: (+1)
   \        0x0   0xB511             PUSH     {R0,R4,LR}
   \        0x2   0xB081             SUB      SP,SP,#+4
    647              if ( HAL_OK != HAL_I2C_IsDeviceReady( &hi2c1, (uint16_t)( 0x50 << 1 ), 2, 2 ) )
   \        0x4   0x.... 0x....      LDR.W    R4,??DataTable45_2
   \        0x8   0x2302             MOVS     R3,#+2
   \        0xA   0x2202             MOVS     R2,#+2
   \        0xC   0x21A0             MOVS     R1,#+160
   \        0xE   0x0020             MOVS     R0,R4
   \       0x10   0x.... 0x....      BL       HAL_I2C_IsDeviceReady
   \       0x14   0x2800             CMP      R0,#+0
   \       0x16   0xD008             BEQ.N    ??SetSpkVol_0
    648              {
    649                  printf( "%s(%d) - EEPROM Error\n", __func__, __LINE__ );
                         ^
Warning[Pe223]: function "printf" declared implicitly
   \       0x18   0xF240 0x2289      MOVW     R2,#+649
   \       0x1C   0x.... 0x....      LDR.W    R1,??DataTable49_8
   \       0x20   0x.... 0x....      LDR.W    R0,??DataTable45_4
   \       0x24   0x.... 0x....      BL       printf
    650          
    651                  return ;
   \       0x28   0xE01B             B.N      ??SetSpkVol_1
    652              }
    653          
    654              printf( "%s(%d) - %d\n", __func__, __LINE__, nSpkVol );
                     ^
Warning[Pe223]: function "printf" declared implicitly
   \                     ??SetSpkVol_0: (+1)
   \       0x2A   0x9B01             LDR      R3,[SP, #+4]
   \       0x2C   0xF240 0x228E      MOVW     R2,#+654
   \       0x30   0x.... 0x....      LDR.W    R1,??DataTable49_8
   \       0x34   0x.... 0x....      LDR.W    R0,??DataTable46_1
   \       0x38   0x.... 0x....      BL       printf
    655          
    656          //    M24_HAL_WriteBytes( &hi2c1, 0xA0, 0x0F, (uint8_t *)&nSpkVol, 1 );
    657              M24_HAL_WriteBytes( &hi2c1, 0xA0, AddrEEPSpkVol, (uint8_t *)&nSpkVol, 1 );
   \       0x3C   0x2001             MOVS     R0,#+1
   \       0x3E   0x9000             STR      R0,[SP, #+0]
   \       0x40   0xAB01             ADD      R3,SP,#+4
   \       0x42   0x220F             MOVS     R2,#+15
   \       0x44   0x21A0             MOVS     R1,#+160
   \       0x46   0x0020             MOVS     R0,R4
   \       0x48   0x.... 0x....      BL       M24_HAL_WriteBytes
    658          
    659              //========================================================================
    660              //	Codec MAX9860ETG+
    661              if ( HAL_OK == HAL_I2C_IsDeviceReady( &hi2c1, (uint16_t)( 0x10 << 1 ), 2, 2 ) )
   \       0x4C   0x2302             MOVS     R3,#+2
   \       0x4E   0x2202             MOVS     R2,#+2
   \       0x50   0x2120             MOVS     R1,#+32
   \       0x52   0x0020             MOVS     R0,R4
   \       0x54   0x.... 0x....      BL       HAL_I2C_IsDeviceReady
   \       0x58   0x2800             CMP      R0,#+0
   \       0x5A   0xD102             BNE.N    ??SetSpkVol_2
    662              {
    663              	AudioSpkVol( nSpkVol );
   \       0x5C   0x9801             LDR      R0,[SP, #+4]
   \       0x5E   0x.... 0x....      BL       AudioSpkVol
    664              }
    665          }
   \                     ??SetSpkVol_2: (+1)
   \                     ??SetSpkVol_1: (+1)
   \       0x62   0xBD13             POP      {R0,R1,R4,PC}
    666          
    667          
    668          //========================================================================

   \                                 In section .text, align 2, keep-with-next
    669          int		GetMicVol	    ( void )
    670          //========================================================================
    671          {
   \                     GetMicVol: (+1)
   \        0x0   0xB51C             PUSH     {R2-R4,LR}
    672              uint8_t     nMicVol = 0;
   \        0x2   0x2000             MOVS     R0,#+0
   \        0x4   0xF88D 0x0004      STRB     R0,[SP, #+4]
    673          
    674              if ( HAL_OK != HAL_I2C_IsDeviceReady( &hi2c1, (uint16_t)( 0x50 << 1 ), 2, 2 ) )
   \        0x8   0x.... 0x....      LDR.W    R4,??DataTable45_2
   \        0xC   0x2302             MOVS     R3,#+2
   \        0xE   0x2202             MOVS     R2,#+2
   \       0x10   0x21A0             MOVS     R1,#+160
   \       0x12   0x0020             MOVS     R0,R4
   \       0x14   0x.... 0x....      BL       HAL_I2C_IsDeviceReady
   \       0x18   0x2800             CMP      R0,#+0
   \       0x1A   0xD00A             BEQ.N    ??GetMicVol_0
    675              {
    676                  printf( "%s(%d) - EEPROM Error\n", __func__, __LINE__ );
                         ^
Warning[Pe223]: function "printf" declared implicitly
   \       0x1C   0xF44F 0x7229      MOV      R2,#+676
   \       0x20   0x.... 0x....      LDR.W    R1,??DataTable49_9
   \       0x24   0x.... 0x....      LDR.W    R0,??DataTable45_4
   \       0x28   0x.... 0x....      BL       printf
    677          
    678                  return -1;
   \       0x2C   0xF05F 0x30FF      MOVS     R0,#+4294967295
   \       0x30   0xE013             B.N      ??GetMicVol_1
    679              }
    680          
    681          //    M24_HAL_ReadBytes( &hi2c1, 0xA0, 0x0F, (uint8_t *)&nSpkVol, 1 );
    682              M24_HAL_ReadBytes( &hi2c1, 0xA0, AddrEEPMicVol, (uint8_t *)&nMicVol, 1 );
   \                     ??GetMicVol_0: (+1)
   \       0x32   0x2001             MOVS     R0,#+1
   \       0x34   0x9000             STR      R0,[SP, #+0]
   \       0x36   0xAB01             ADD      R3,SP,#+4
   \       0x38   0x220C             MOVS     R2,#+12
   \       0x3A   0x21A0             MOVS     R1,#+160
   \       0x3C   0x0020             MOVS     R0,R4
   \       0x3E   0x.... 0x....      BL       M24_HAL_ReadBytes
    683          
    684              printf( "%s(%d) - %d\n", __func__, __LINE__, nMicVol );
                     ^
Warning[Pe223]: function "printf" declared implicitly
   \       0x42   0xF89D 0x3004      LDRB     R3,[SP, #+4]
   \       0x46   0xF44F 0x722B      MOV      R2,#+684
   \       0x4A   0x.... 0x....      LDR.W    R1,??DataTable49_9
   \       0x4E   0x.... 0x....      LDR.W    R0,??DataTable46_1
   \       0x52   0x.... 0x....      BL       printf
    685          
    686              return nMicVol;
   \       0x56   0xF89D 0x0004      LDRB     R0,[SP, #+4]
   \                     ??GetMicVol_1: (+1)
   \       0x5A   0xBD16             POP      {R1,R2,R4,PC}
    687          }
    688          
    689          //========================================================================

   \                                 In section .text, align 2, keep-with-next
    690          void	SetMicVol	    ( int nMicVol )
    691          //========================================================================
    692          {
   \                     SetMicVol: (+1)
   \        0x0   0xB511             PUSH     {R0,R4,LR}
   \        0x2   0xB081             SUB      SP,SP,#+4
    693              if ( HAL_OK != HAL_I2C_IsDeviceReady( &hi2c1, (uint16_t)( 0x50 << 1 ), 2, 2 ) )
   \        0x4   0x.... 0x....      LDR.W    R4,??DataTable45_2
   \        0x8   0x2302             MOVS     R3,#+2
   \        0xA   0x2202             MOVS     R2,#+2
   \        0xC   0x21A0             MOVS     R1,#+160
   \        0xE   0x0020             MOVS     R0,R4
   \       0x10   0x.... 0x....      BL       HAL_I2C_IsDeviceReady
   \       0x14   0x2800             CMP      R0,#+0
   \       0x16   0xD008             BEQ.N    ??SetMicVol_0
    694              {
    695                  printf( "%s(%d) - EEPROM Error\n", __func__, __LINE__ );
                         ^
Warning[Pe223]: function "printf" declared implicitly
   \       0x18   0xF240 0x22B7      MOVW     R2,#+695
   \       0x1C   0x.... 0x....      LDR.W    R1,??DataTable50
   \       0x20   0x.... 0x....      LDR.W    R0,??DataTable45_4
   \       0x24   0x.... 0x....      BL       printf
    696          
    697                  return ;
   \       0x28   0xE01B             B.N      ??SetMicVol_1
    698              }
    699          
    700              printf( "%s(%d) - %d\n", __func__, __LINE__, nMicVol );
                     ^
Warning[Pe223]: function "printf" declared implicitly
   \                     ??SetMicVol_0: (+1)
   \       0x2A   0x9B01             LDR      R3,[SP, #+4]
   \       0x2C   0xF44F 0x722F      MOV      R2,#+700
   \       0x30   0x.... 0x....      LDR.W    R1,??DataTable50
   \       0x34   0x.... 0x....      LDR.W    R0,??DataTable46_1
   \       0x38   0x.... 0x....      BL       printf
    701          
    702          //    M24_HAL_WriteBytes( &hi2c1, 0xA0, 0x0F, (uint8_t *)&nSpkVol, 1 );
    703              M24_HAL_WriteBytes( &hi2c1, 0xA0, AddrEEPMicVol, (uint8_t *)&nMicVol, 1 );
   \       0x3C   0x2001             MOVS     R0,#+1
   \       0x3E   0x9000             STR      R0,[SP, #+0]
   \       0x40   0xAB01             ADD      R3,SP,#+4
   \       0x42   0x220C             MOVS     R2,#+12
   \       0x44   0x21A0             MOVS     R1,#+160
   \       0x46   0x0020             MOVS     R0,R4
   \       0x48   0x.... 0x....      BL       M24_HAL_WriteBytes
    704          
    705              //========================================================================
    706              //	Codec MAX9860ETG+
    707              if ( HAL_OK == HAL_I2C_IsDeviceReady( &hi2c1, (uint16_t)( 0x10 << 1 ), 2, 2 ) )
   \       0x4C   0x2302             MOVS     R3,#+2
   \       0x4E   0x2202             MOVS     R2,#+2
   \       0x50   0x2120             MOVS     R1,#+32
   \       0x52   0x0020             MOVS     R0,R4
   \       0x54   0x.... 0x....      BL       HAL_I2C_IsDeviceReady
   \       0x58   0x2800             CMP      R0,#+0
   \       0x5A   0xD102             BNE.N    ??SetMicVol_2
    708              {
    709              	AudioMicVol( nMicVol );
   \       0x5C   0x9801             LDR      R0,[SP, #+4]
   \       0x5E   0x.... 0x....      BL       AudioMicVol
    710              }
    711          }
   \                     ??SetMicVol_2: (+1)
   \                     ??SetMicVol_1: (+1)
   \       0x62   0xBD13             POP      {R0,R1,R4,PC}
    712          //========================================================================
    713          
    714          
    715          //========================================================================

   \                                 In section .text, align 2, keep-with-next
    716          void RF_RSSI( void )
    717          //========================================================================
    718          {
   \                     RF_RSSI: (+1)
   \        0x0   0xB51F             PUSH     {R0-R4,LR}
    719              //  Send RF Ping Packet.
    720          //    return;
    721          //
    722              //  Get Modem Status.
    723              si446x_get_modem_status_fast_clear_read();
   \        0x2   0x.... 0x....      BL       si446x_get_modem_status_fast_clear_read
    724          //	si446x_get_modem_status(0xff);
    725          
    726              if ( GetDbg() == 1 )
                          ^
Warning[Pe223]: function "GetDbg" declared implicitly
   \        0x6   0x.... 0x....      BL       GetDbg
   \        0xA   0x2801             CMP      R0,#+1
   \        0xC   0xD110             BNE.N    ??RF_RSSI_0
    727              {
    728                  printf( "%s(%d) - ant1:%d / ant2:%d / curr:%d / latch:%d\n", __func__, __LINE__,
                         ^
Warning[Pe223]: function "printf" declared implicitly
    729                          Si446xCmd.GET_MODEM_STATUS.ANT1_RSSI,
    730                          Si446xCmd.GET_MODEM_STATUS.ANT2_RSSI,
    731                          Si446xCmd.GET_MODEM_STATUS.CURR_RSSI,
    732                          Si446xCmd.GET_MODEM_STATUS.LATCH_RSSI
    733                  );
   \        0xE   0x.... 0x....      LDR.W    R0,??DataTable51
   \       0x12   0x78C1             LDRB     R1,[R0, #+3]
   \       0x14   0x9102             STR      R1,[SP, #+8]
   \       0x16   0x7881             LDRB     R1,[R0, #+2]
   \       0x18   0x9101             STR      R1,[SP, #+4]
   \       0x1A   0x7941             LDRB     R1,[R0, #+5]
   \       0x1C   0x9100             STR      R1,[SP, #+0]
   \       0x1E   0x7903             LDRB     R3,[R0, #+4]
   \       0x20   0xF44F 0x7236      MOV      R2,#+728
   \       0x24   0x.... 0x....      LDR.W    R1,??DataTable51_1
   \       0x28   0x.... 0x....      LDR.W    R0,??DataTable51_2
   \       0x2C   0x.... 0x....      BL       printf
    734              }
    735          
    736              uint16_t rssi;
    737          
    738              rssi = Si446xCmd.GET_MODEM_STATUS.LATCH_RSSI;
   \                     ??RF_RSSI_0: (+1)
   \       0x30   0x.... 0x....      LDR.W    R0,??DataTable51
   \       0x34   0x78C4             LDRB     R4,[R0, #+3]
    739          
    740              if ( rssi > 200 )                        LCDRSSI( 5 );  //  RSSI 5
   \       0x36   0x0020             MOVS     R0,R4
   \       0x38   0xB280             UXTH     R0,R0
   \       0x3A   0x28C9             CMP      R0,#+201
   \       0x3C   0xDB03             BLT.N    ??RF_RSSI_1
   \       0x3E   0x2005             MOVS     R0,#+5
   \       0x40   0x.... 0x....      BL       LCDRSSI
   \       0x44   0xE036             B.N      ??RF_RSSI_2
    741              else if ( 160 < rssi && rssi <= 200 )    LCDRSSI( 4 );  //  RSSI 4
   \                     ??RF_RSSI_1: (+1)
   \       0x46   0x0020             MOVS     R0,R4
   \       0x48   0xB280             UXTH     R0,R0
   \       0x4A   0x28A1             CMP      R0,#+161
   \       0x4C   0xDB07             BLT.N    ??RF_RSSI_3
   \       0x4E   0x0020             MOVS     R0,R4
   \       0x50   0xB280             UXTH     R0,R0
   \       0x52   0x28C9             CMP      R0,#+201
   \       0x54   0xDA03             BGE.N    ??RF_RSSI_3
   \       0x56   0x2004             MOVS     R0,#+4
   \       0x58   0x.... 0x....      BL       LCDRSSI
   \       0x5C   0xE02A             B.N      ??RF_RSSI_2
    742              else if ( 130 < rssi && rssi <= 160 )    LCDRSSI( 3 );  //  RSSI 3
   \                     ??RF_RSSI_3: (+1)
   \       0x5E   0x0020             MOVS     R0,R4
   \       0x60   0xB280             UXTH     R0,R0
   \       0x62   0x2883             CMP      R0,#+131
   \       0x64   0xDB07             BLT.N    ??RF_RSSI_4
   \       0x66   0x0020             MOVS     R0,R4
   \       0x68   0xB280             UXTH     R0,R0
   \       0x6A   0x28A1             CMP      R0,#+161
   \       0x6C   0xDA03             BGE.N    ??RF_RSSI_4
   \       0x6E   0x2003             MOVS     R0,#+3
   \       0x70   0x.... 0x....      BL       LCDRSSI
   \       0x74   0xE01E             B.N      ??RF_RSSI_2
    743              else if ( 100 < rssi && rssi <= 130 )    LCDRSSI( 2 );  //  RSSI 2
   \                     ??RF_RSSI_4: (+1)
   \       0x76   0x0020             MOVS     R0,R4
   \       0x78   0xB280             UXTH     R0,R0
   \       0x7A   0x2865             CMP      R0,#+101
   \       0x7C   0xDB07             BLT.N    ??RF_RSSI_5
   \       0x7E   0x0020             MOVS     R0,R4
   \       0x80   0xB280             UXTH     R0,R0
   \       0x82   0x2883             CMP      R0,#+131
   \       0x84   0xDA03             BGE.N    ??RF_RSSI_5
   \       0x86   0x2002             MOVS     R0,#+2
   \       0x88   0x.... 0x....      BL       LCDRSSI
   \       0x8C   0xE012             B.N      ??RF_RSSI_2
    744              else if ( 85 < rssi && rssi <= 100 )     LCDRSSI( 1 );  //  RSSI 1
   \                     ??RF_RSSI_5: (+1)
   \       0x8E   0x0020             MOVS     R0,R4
   \       0x90   0xB280             UXTH     R0,R0
   \       0x92   0x2856             CMP      R0,#+86
   \       0x94   0xDB07             BLT.N    ??RF_RSSI_6
   \       0x96   0x0020             MOVS     R0,R4
   \       0x98   0xB280             UXTH     R0,R0
   \       0x9A   0x2865             CMP      R0,#+101
   \       0x9C   0xDA03             BGE.N    ??RF_RSSI_6
   \       0x9E   0x2001             MOVS     R0,#+1
   \       0xA0   0x.... 0x....      BL       LCDRSSI
   \       0xA4   0xE006             B.N      ??RF_RSSI_2
    745              else if ( rssi <= 85 )                   LCDRSSI( 0 );  //  RSSI 0
   \                     ??RF_RSSI_6: (+1)
   \       0xA6   0x0020             MOVS     R0,R4
   \       0xA8   0xB280             UXTH     R0,R0
   \       0xAA   0x2856             CMP      R0,#+86
   \       0xAC   0xDA02             BGE.N    ??RF_RSSI_2
   \       0xAE   0x2000             MOVS     R0,#+0
   \       0xB0   0x.... 0x....      BL       LCDRSSI
    746          }
   \                     ??RF_RSSI_2: (+1)
   \       0xB4   0xBD1F             POP      {R0-R4,PC}
    747          
    748          //========================================================================

   \                                 In section .text, align 2, keep-with-next
    749          void	RFM_Spk			( int bOnOff )		//	1(On) / 0(Off)
    750          //========================================================================
    751          {
   \                     RFM_Spk: (+1)
   \        0x0   0xB510             PUSH     {R4,LR}
   \        0x2   0x0004             MOVS     R4,R0
    752          	if( GetDbg() == 1 )
                 	    ^
Warning[Pe223]: function "GetDbg" declared implicitly
   \        0x4   0x.... 0x....      BL       GetDbg
   \        0x8   0x2801             CMP      R0,#+1
   \        0xA   0xD108             BNE.N    ??RFM_Spk_0
    753          		printf("%s(%d) - %d\n", __func__, __LINE__, bOnOff);
                 		^
Warning[Pe223]: function "printf" declared implicitly
   \        0xC   0x0023             MOVS     R3,R4
   \        0xE   0xF240 0x22F1      MOVW     R2,#+753
   \       0x12   0x.... 0x....      LDR.W    R1,??DataTable51_3
   \       0x16   0x.... 0x....      LDR.W    R0,??DataTable46_1
   \       0x1A   0x.... 0x....      BL       printf
    754          
    755              if ( bOnOff )
   \                     ??RFM_Spk_0: (+1)
   \       0x1E   0x2C00             CMP      R4,#+0
   \       0x20   0xD006             BEQ.N    ??RFM_Spk_1
    756              {
    757                  //  Spk Relay On
    758                  HAL_GPIO_WritePin( SPK_ON_GPIO_Port, SPK_ON_Pin, GPIO_PIN_SET );
   \       0x22   0x2201             MOVS     R2,#+1
   \       0x24   0x2120             MOVS     R1,#+32
   \       0x26   0x.... 0x....      LDR.W    R0,??DataTable51_4
   \       0x2A   0x.... 0x....      BL       HAL_GPIO_WritePin
   \       0x2E   0xE005             B.N      ??RFM_Spk_2
    759              }
    760              else
    761              {
    762                  //  Spk Relay Off
    763                  HAL_GPIO_WritePin( SPK_ON_GPIO_Port, SPK_ON_Pin, GPIO_PIN_RESET );
   \                     ??RFM_Spk_1: (+1)
   \       0x30   0x2200             MOVS     R2,#+0
   \       0x32   0x2120             MOVS     R1,#+32
   \       0x34   0x.... 0x....      LDR.W    R0,??DataTable51_4
   \       0x38   0x.... 0x....      BL       HAL_GPIO_WritePin
    764              }
    765          }
   \                     ??RFM_Spk_2: (+1)
   \       0x3C   0xBD10             POP      {R4,PC}
    766          
    767          //========================================================================

   \                                 In section .text, align 2, keep-with-next
    768          void PrintVerInfo( void )
    769          //========================================================================
    770          {
   \                     PrintVerInfo: (+1)
   \        0x0   0xB538             PUSH     {R3-R5,LR}
   \        0x2   0xB090             SUB      SP,SP,#+64
    771              //  Print Version Info
    772          
    773              const char* logo_string = "RFM";
   \        0x4   0x....             ADR.N    R5,??DataTable41
    774          
    775              printf( "\n\n" );
                     ^
Warning[Pe223]: function "printf" declared implicitly
   \        0x6   0x....             ADR.N    R0,??DataTable41_1
   \        0x8   0x.... 0x....      BL       printf
    776              printf( "%s\n", logo_string );
   \        0xC   0x0029             MOVS     R1,R5
   \        0xE   0x....             ADR.N    R0,??DataTable41_2
   \       0x10   0x.... 0x....      BL       printf
    777              printf( "Version = %s(%s - %s)\n", APP_VER, __DATE__, __TIME__ );
   \       0x14   0x.... 0x....      LDR.W    R4,??DataTable51_5
   \       0x18   0x.... 0x....      LDR.W    R3,??DataTable51_6
   \       0x1C   0x.... 0x....      LDR.W    R2,??DataTable51_7
   \       0x20   0x0021             MOVS     R1,R4
   \       0x22   0x.... 0x....      LDR.W    R0,??DataTable51_8
   \       0x26   0x.... 0x....      BL       printf
    778          
    779              //  LCD Display
    780              if( GetDevID() == DevRF900T )
   \       0x2A   0x.... 0x....      BL       GetDevID
   \       0x2E   0x2802             CMP      R0,#+2
   \       0x30   0xD10E             BNE.N    ??PrintVerInfo_0
    781              {
    782                  char sBuf[2][32];
    783          
    784                  sprintf( sBuf[0], "RFM v%s", APP_VER );
                         ^
Warning[Pe223]: function "sprintf" declared implicitly
   \       0x32   0x0022             MOVS     R2,R4
   \       0x34   0x.... 0x....      LDR.W    R1,??DataTable51_9
   \       0x38   0x4668             MOV      R0,SP
   \       0x3A   0x.... 0x....      BL       sprintf
    785                  //        sprintf( sBuf[1], "%s", __DATE__, __TIME__ );
    786          
    787                  LCDClear();
   \       0x3E   0x.... 0x....      BL       LCDClear
    788                  LCDSetCursor( 10, 10 );
   \       0x42   0x210A             MOVS     R1,#+10
   \       0x44   0x200A             MOVS     R0,#+10
   \       0x46   0x.... 0x....      BL       LCDSetCursor
    789                  LCDPrintf( sBuf[0] );
   \       0x4A   0x4668             MOV      R0,SP
   \       0x4C   0x.... 0x....      BL       LCDPrintf
    790                  //        LCDSetCursor( 0, 20 );
    791                  //        LCDPrintf( sBuf[1] );
    792              }
    793          }
   \                     ??PrintVerInfo_0: (+1)
   \       0x50   0xB011             ADD      SP,SP,#+68
   \       0x52   0xBD30             POP      {R4,R5,PC}
    794          
    795          //========================================================================
    796          //
    797          //	Command
    798          //
    799          //========================================================================
    800          
    801          #include "menu.h"      //  g_cntTrainSet
    802          
    803          
    804          //========================================================================

   \                                 In section .text, align 2, keep-with-next
    805          int cmd_ts      ( int argc, char * argv[] )
    806          //========================================================================
    807          {
   \                     cmd_ts: (+1)
   \        0x0   0xB5F0             PUSH     {R4-R7,LR}
   \        0x2   0xB095             SUB      SP,SP,#+84
   \        0x4   0x0004             MOVS     R4,R0
   \        0x6   0x000D             MOVS     R5,R1
    808          
    809          	int i = 0;
   \        0x8   0x2700             MOVS     R7,#+0
    810          	int sListBuf[20]={1,2,3,4,5,
    811          		   			  6,7,8,9,10,
    812          					  11,12,13,14,15,
    813          					   0, 0, 0, 0, 0};
   \        0xA   0xA801             ADD      R0,SP,#+4
   \        0xC   0x.... 0x....      LDR.W    R1,??DataTable51_10
   \       0x10   0x2250             MOVS     R2,#+80
   \       0x12   0x.... 0x....      BL       __aeabi_memcpy4
    814          
    815              //	ts [train set] ( 0 ~ 9 )
    816              int 		nTrainSet = 0;
   \       0x16   0x2000             MOVS     R0,#+0
   \       0x18   0x9000             STR      R0,[SP, #+0]
    817          
    818              if( argc <= 1 )
   \       0x1A   0x2C02             CMP      R4,#+2
   \       0x1C   0xDA0A             BGE.N    ??cmd_ts_0
    819              {
    820                  printf( "Train Set : %d\n", 400 + GetTrainSetIdx() );
                         ^
Warning[Pe223]: function "printf" declared implicitly
   \       0x1E   0x.... 0x....      BL       GetTrainSetIdx
   \       0x22   0xF510 0x70C8      ADDS     R0,R0,#+400
   \       0x26   0x0001             MOVS     R1,R0
   \       0x28   0x.... 0x....      LDR.W    R0,??DataTable51_11
   \       0x2C   0x.... 0x....      BL       printf
    821          
    822              	return 0;
   \       0x30   0x2000             MOVS     R0,#+0
   \       0x32   0xE028             B.N      ??cmd_ts_1
    823              }
    824          
    825              switch ( argc )
   \                     ??cmd_ts_0: (+1)
   \       0x34   0x2C02             CMP      R4,#+2
   \       0x36   0xD104             BNE.N    ??cmd_ts_2
    826              {
    827              case 2:		sscanf( argv[1], "%d", &nTrainSet );	        //	cmd [channel]
                            		^
Warning[Pe223]: function "sscanf" declared implicitly
   \       0x38   0x466A             MOV      R2,SP
   \       0x3A   0x....             ADR.N    R1,??DataTable42
   \       0x3C   0x6868             LDR      R0,[R5, #+4]
   \       0x3E   0x.... 0x....      BL       sscanf
    828                  break;
    829              }
    830          
    831          
    832          	for(i = 0;i <= 15;i++)
   \                     ??cmd_ts_2: (+1)
   \       0x42   0x2600             MOVS     R6,#+0
   \                     ??cmd_ts_3: (+1)
   \       0x44   0x2E10             CMP      R6,#+16
   \       0x46   0xDA0F             BGE.N    ??cmd_ts_4
    833          	{
    834          		if(nTrainSet  == sListBuf[i])
   \       0x48   0xA801             ADD      R0,SP,#+4
   \       0x4A   0x9900             LDR      R1,[SP, #+0]
   \       0x4C   0xF850 0x2026      LDR      R2,[R0, R6, LSL #+2]
   \       0x50   0x4291             CMP      R1,R2
   \       0x52   0xD103             BNE.N    ??cmd_ts_5
    835          		{
    836          			nTrainSet  = sListBuf[i];
   \       0x54   0xF850 0x0026      LDR      R0,[R0, R6, LSL #+2]
   \       0x58   0x9000             STR      R0,[SP, #+0]
    837          			break;
   \       0x5A   0xE005             B.N      ??cmd_ts_4
    838          		}
    839          		else if( i  >= 15) 
   \                     ??cmd_ts_5: (+1)
   \       0x5C   0x2E0F             CMP      R6,#+15
   \       0x5E   0xDB01             BLT.N    ??cmd_ts_6
    840          		{
    841          			nTrainSet = 0;
   \       0x60   0x2000             MOVS     R0,#+0
   \       0x62   0x9000             STR      R0,[SP, #+0]
    842          		}
    843          	}
   \                     ??cmd_ts_6: (+1)
   \       0x64   0x1C76             ADDS     R6,R6,#+1
   \       0x66   0xE7ED             B.N      ??cmd_ts_3
    844          
    845          
    846             // if ( nTrainSet < 0 || MaxTrainSet <= nTrainSet )  nTrainSet = 0;
    847          
    848             	printf( "%s(%d) - Train Set : %d\n", __func__, __LINE__, (nTrainSet + 400) );
                    	^
Warning[Pe223]: function "printf" declared implicitly
   \                     ??cmd_ts_4: (+1)
   \       0x68   0x9B00             LDR      R3,[SP, #+0]
   \       0x6A   0xF513 0x73C8      ADDS     R3,R3,#+400
   \       0x6E   0xF44F 0x7254      MOV      R2,#+848
   \       0x72   0x.... 0x....      LDR.W    R1,??DataTable51_12
   \       0x76   0x.... 0x....      LDR.W    R0,??DataTable51_13
   \       0x7A   0x.... 0x....      BL       printf
    849          
    850              SetTrainSetIdx( nTrainSet );
   \       0x7E   0x9800             LDR      R0,[SP, #+0]
   \       0x80   0x.... 0x....      BL       SetTrainSetIdx
    851          
    852              return 0;
   \       0x84   0x2000             MOVS     R0,#+0
   \                     ??cmd_ts_1: (+1)
   \       0x86   0xB015             ADD      SP,SP,#+84
   \       0x88   0xBDF0             POP      {R4-R7,PC}
    853          }
    854          
    855          //========================================================================

   \                                 In section .text, align 2, keep-with-next
    856          int cmd_ch      ( int argc, char * argv[] )
    857          //========================================================================
    858          {
   \                     cmd_ch: (+1)
   \        0x0   0xB538             PUSH     {R3-R5,LR}
   \        0x2   0x0004             MOVS     R4,R0
   \        0x4   0x000D             MOVS     R5,R1
    859              //	ch [channel] ( 0 ~ 9 )
    860              int 		nCh = 0;
   \        0x6   0x2000             MOVS     R0,#+0
   \        0x8   0x9000             STR      R0,[SP, #+0]
    861          
    862              if( argc <= 1 )
   \        0xA   0x2C02             CMP      R4,#+2
   \        0xC   0xDA08             BGE.N    ??cmd_ch_0
    863              {
    864                  printf( "RF Channel: %d\n", GetChRx() );
                         ^
Warning[Pe223]: function "printf" declared implicitly
   \        0xE   0x.... 0x....      BL       GetChRx
   \       0x12   0x0001             MOVS     R1,R0
   \       0x14   0x.... 0x....      LDR.W    R0,??DataTable51_14
   \       0x18   0x.... 0x....      BL       printf
    865          
    866              	return 0;
   \       0x1C   0x2000             MOVS     R0,#+0
   \       0x1E   0xE01F             B.N      ??cmd_ch_1
    867              }
    868          
    869              switch ( argc )
   \                     ??cmd_ch_0: (+1)
   \       0x20   0x2C02             CMP      R4,#+2
   \       0x22   0xD104             BNE.N    ??cmd_ch_2
    870              {
    871              case 2:		sscanf( argv[1], "%d", &nCh );	        //	cmd [channel]
                            		^
Warning[Pe223]: function "sscanf" declared implicitly
   \       0x24   0x466A             MOV      R2,SP
   \       0x26   0x....             ADR.N    R1,??DataTable42
   \       0x28   0x6868             LDR      R0,[R5, #+4]
   \       0x2A   0x.... 0x....      BL       sscanf
    872          //	case 2:		sText = argv[1];						//	sscanf( argv[1], "%s", sText );		//	cmd [Text] 
    873                  break;
    874              }
    875          
    876              if ( nCh < 0 || MaxTrainSet <= nCh )  nCh = 0;
   \                     ??cmd_ch_2: (+1)
   \       0x2E   0x9800             LDR      R0,[SP, #+0]
   \       0x30   0x2800             CMP      R0,#+0
   \       0x32   0xD402             BMI.N    ??cmd_ch_3
   \       0x34   0x9800             LDR      R0,[SP, #+0]
   \       0x36   0x2832             CMP      R0,#+50
   \       0x38   0xDB01             BLT.N    ??cmd_ch_4
   \                     ??cmd_ch_3: (+1)
   \       0x3A   0x2000             MOVS     R0,#+0
   \       0x3C   0x9000             STR      R0,[SP, #+0]
    877          
    878              if ( GetDbg() == 1 )
                          ^
Warning[Pe223]: function "GetDbg" declared implicitly
   \                     ??cmd_ch_4: (+1)
   \       0x3E   0x.... 0x....      BL       GetDbg
   \       0x42   0x2801             CMP      R0,#+1
   \       0x44   0xD108             BNE.N    ??cmd_ch_5
    879              	printf( "%s(%d) - Channel : %d\n", __func__, __LINE__, nCh );
                     	^
Warning[Pe223]: function "printf" declared implicitly
   \       0x46   0x9B00             LDR      R3,[SP, #+0]
   \       0x48   0xF240 0x326F      MOVW     R2,#+879
   \       0x4C   0x.... 0x....      LDR.W    R1,??DataTable51_15
   \       0x50   0x.... 0x....      LDR.W    R0,??DataTable51_16
   \       0x54   0x.... 0x....      BL       printf
    880          
    881              SetTrainSetIdx( nCh );
   \                     ??cmd_ch_5: (+1)
   \       0x58   0x9800             LDR      R0,[SP, #+0]
   \       0x5A   0x.... 0x....      BL       SetTrainSetIdx
    882          
    883          	return 0;
   \       0x5E   0x2000             MOVS     R0,#+0
   \                     ??cmd_ch_1: (+1)
   \       0x60   0xBD32             POP      {R1,R4,R5,PC}
    884          }
    885          
    886          
    887          //========================================================================

   \                                 In section .text, align 2, keep-with-next
    888          int cmd_car     ( int argc, char * argv[] )
    889          //========================================================================
    890          {
   \                     cmd_car: (+1)
   \        0x0   0xB538             PUSH     {R3-R5,LR}
   \        0x2   0x0004             MOVS     R4,R0
   \        0x4   0x000D             MOVS     R5,R1
    891              //	car [Car No] ( 0 ~ 9 )
    892              int 		nCar = 0;
   \        0x6   0x2000             MOVS     R0,#+0
   \        0x8   0x9000             STR      R0,[SP, #+0]
    893          
    894              if( argc <= 1 )
   \        0xA   0x2C02             CMP      R4,#+2
   \        0xC   0xDA08             BGE.N    ??cmd_car_0
    895              {
    896                  printf( "Car No : %d\n", GetCarNo() );
                         ^
Warning[Pe223]: function "printf" declared implicitly
   \        0xE   0x.... 0x....      BL       GetCarNo
   \       0x12   0x0001             MOVS     R1,R0
   \       0x14   0x.... 0x....      LDR.W    R0,??DataTable51_17
   \       0x18   0x.... 0x....      BL       printf
    897          
    898                  return 0;
   \       0x1C   0x2000             MOVS     R0,#+0
   \       0x1E   0xE01B             B.N      ??cmd_car_1
    899              }
    900          
    901              switch ( argc )
   \                     ??cmd_car_0: (+1)
   \       0x20   0x2C02             CMP      R4,#+2
   \       0x22   0xD104             BNE.N    ??cmd_car_2
    902              {
    903              case 2:		sscanf( argv[1], "%d", &nCar );	        //	cmd [Car No]
                            		^
Warning[Pe223]: function "sscanf" declared implicitly
   \       0x24   0x466A             MOV      R2,SP
   \       0x26   0x....             ADR.N    R1,??DataTable42
   \       0x28   0x6868             LDR      R0,[R5, #+4]
   \       0x2A   0x.... 0x....      BL       sscanf
    904          //	case 2:		sText = argv[1];						//	sscanf( argv[1], "%s", sText );		//	cmd [Text] 
    905                  break;
    906              }
    907          
    908              if ( nCar < 0 || MaxCarNo < nCar )  nCar = 0;
   \                     ??cmd_car_2: (+1)
   \       0x2E   0x9800             LDR      R0,[SP, #+0]
   \       0x30   0x2800             CMP      R0,#+0
   \       0x32   0xD402             BMI.N    ??cmd_car_3
   \       0x34   0x9800             LDR      R0,[SP, #+0]
   \       0x36   0x280E             CMP      R0,#+14
   \       0x38   0xDB01             BLT.N    ??cmd_car_4
   \                     ??cmd_car_3: (+1)
   \       0x3A   0x2000             MOVS     R0,#+0
   \       0x3C   0x9000             STR      R0,[SP, #+0]
    909          
    910              printf( "%s(%d) - Car No : %d\n", __func__, __LINE__, nCar );
                     ^
Warning[Pe223]: function "printf" declared implicitly
   \                     ??cmd_car_4: (+1)
   \       0x3E   0x9B00             LDR      R3,[SP, #+0]
   \       0x40   0xF240 0x328E      MOVW     R2,#+910
   \       0x44   0x.... 0x....      LDR.W    R1,??DataTable51_18
   \       0x48   0x.... 0x....      LDR.W    R0,??DataTable51_19
   \       0x4C   0x.... 0x....      BL       printf
    911          
    912              SetCarNo( nCar );
   \       0x50   0x9800             LDR      R0,[SP, #+0]
   \       0x52   0x.... 0x....      BL       SetCarNo
    913          
    914          	return 0;
   \       0x56   0x2000             MOVS     R0,#+0
   \                     ??cmd_car_1: (+1)
   \       0x58   0xBD32             POP      {R1,R4,R5,PC}
    915          }
    916          
    917          
    918          //========================================================================

   \                                 In section .text, align 2, keep-with-next
    919          int cmd_hop     ( int argc, char * argv[] )
    920          //========================================================================
    921          {
   \                     cmd_hop: (+1)
   \        0x0   0xB538             PUSH     {R3-R5,LR}
   \        0x2   0x0004             MOVS     R4,R0
   \        0x4   0x000D             MOVS     R5,R1
    922              //	car [Car No] ( 0 ~ 9 )
    923              int 		nManHop = 0;
   \        0x6   0x2000             MOVS     R0,#+0
   \        0x8   0x9000             STR      R0,[SP, #+0]
    924          
    925              switch ( argc )
   \        0xA   0x2C02             CMP      R4,#+2
   \        0xC   0xD104             BNE.N    ??cmd_hop_0
    926              {
    927              case 2:		sscanf( argv[1], "%d", &nManHop );	        //	cmd [Car No]
                            		^
Warning[Pe223]: function "sscanf" declared implicitly
   \        0xE   0x466A             MOV      R2,SP
   \       0x10   0x....             ADR.N    R1,??DataTable42
   \       0x12   0x6868             LDR      R0,[R5, #+4]
   \       0x14   0x.... 0x....      BL       sscanf
    928          //	case 2:		sText = argv[1];						//	sscanf( argv[1], "%s", sText );		//	cmd [Text]
    929                  break;
    930              }
    931          
    932          //  g_nManHopping;		//	On(1) / Off(2) / Unused(0 : Other)
    933              if ( nManHop < 0 || 2 < nManHop )  nManHop = 0;
   \                     ??cmd_hop_0: (+1)
   \       0x18   0x9800             LDR      R0,[SP, #+0]
   \       0x1A   0x2800             CMP      R0,#+0
   \       0x1C   0xD402             BMI.N    ??cmd_hop_1
   \       0x1E   0x9800             LDR      R0,[SP, #+0]
   \       0x20   0x2803             CMP      R0,#+3
   \       0x22   0xDB01             BLT.N    ??cmd_hop_2
   \                     ??cmd_hop_1: (+1)
   \       0x24   0x2000             MOVS     R0,#+0
   \       0x26   0x9000             STR      R0,[SP, #+0]
    934          
    935              printf( "%s(%d) - Manual Hop : %d\n", __func__, __LINE__, nManHop );
                     ^
Warning[Pe223]: function "printf" declared implicitly
   \                     ??cmd_hop_2: (+1)
   \       0x28   0x9B00             LDR      R3,[SP, #+0]
   \       0x2A   0xF240 0x32A7      MOVW     R2,#+935
   \       0x2E   0x.... 0x....      LDR.W    R1,??DataTable51_20
   \       0x32   0x.... 0x....      LDR.W    R0,??DataTable51_21
   \       0x36   0x.... 0x....      BL       printf
    936          
    937              g_nManHopping = nManHop;
   \       0x3A   0x9800             LDR      R0,[SP, #+0]
   \       0x3C   0x.... 0x....      LDR.W    R1,??DataTable52
   \       0x40   0x6008             STR      R0,[R1, #+0]
    938              SetManHop( nManHop );
   \       0x42   0x9800             LDR      R0,[SP, #+0]
   \       0x44   0x.... 0x....      BL       SetManHop
    939          }
                 ^
Warning[Pe940]: missing return statement at end of non-void function "cmd_hop"
   \       0x48   0xBD32             POP      {R1,R4,R5,PC}
    940          
    941          
    942          //========================================================================

   \                                 In section .text, align 2, keep-with-next
    943          int cmd_rfmod     ( int argc, char * argv[] )
    944          //========================================================================
    945          {
   \                     cmd_rfmod: (+1)
   \        0x0   0xB538             PUSH     {R3-R5,LR}
   \        0x2   0x0004             MOVS     R4,R0
   \        0x4   0x000D             MOVS     R5,R1
    946              int 		nRFMode = 0;
   \        0x6   0x2000             MOVS     R0,#+0
   \        0x8   0x9000             STR      R0,[SP, #+0]
    947          
    948              switch ( argc )
   \        0xA   0x2C02             CMP      R4,#+2
   \        0xC   0xD104             BNE.N    ??cmd_rfmod_0
    949              {
    950              case 2:		sscanf( argv[1], "%d", &nRFMode );	        //	cmd [Car No]
                            		^
Warning[Pe223]: function "sscanf" declared implicitly
   \        0xE   0x466A             MOV      R2,SP
   \       0x10   0x....             ADR.N    R1,??DataTable42
   \       0x12   0x6868             LDR      R0,[R5, #+4]
   \       0x14   0x.... 0x....      BL       sscanf
    951          //	case 2:		sText = argv[1];						//	sscanf( argv[1], "%s", sText );		//	cmd [Text]
    952                  break;
    953              }
    954          
    955          //  g_nManHopping;		//	On(1) / Off(2) / Unused(0 : Other)
    956              if ( nRFMode < 1 || RFModeMax < nRFMode )  nRFMode = RFModeDefault;
   \                     ??cmd_rfmod_0: (+1)
   \       0x18   0x9800             LDR      R0,[SP, #+0]
   \       0x1A   0x2801             CMP      R0,#+1
   \       0x1C   0xDB02             BLT.N    ??cmd_rfmod_1
   \       0x1E   0x9800             LDR      R0,[SP, #+0]
   \       0x20   0x2803             CMP      R0,#+3
   \       0x22   0xDB01             BLT.N    ??cmd_rfmod_2
   \                     ??cmd_rfmod_1: (+1)
   \       0x24   0x2001             MOVS     R0,#+1
   \       0x26   0x9000             STR      R0,[SP, #+0]
    957          
    958              printf( "%s(%d) - RFMode : %d\n", __func__, __LINE__, nRFMode );
                     ^
Warning[Pe223]: function "printf" declared implicitly
   \                     ??cmd_rfmod_2: (+1)
   \       0x28   0x9B00             LDR      R3,[SP, #+0]
   \       0x2A   0xF240 0x32BE      MOVW     R2,#+958
   \       0x2E   0x.... 0x....      LDR.W    R1,??DataTable51_22
   \       0x32   0x.... 0x....      LDR.W    R0,??DataTable51_23
   \       0x36   0x.... 0x....      BL       printf
    959          
    960              g_nRFMode = nRFMode;
   \       0x3A   0x9800             LDR      R0,[SP, #+0]
   \       0x3C   0x....             LDR.N    R1,??DataTable42_2
   \       0x3E   0x6008             STR      R0,[R1, #+0]
    961              SetRFMode( nRFMode );
   \       0x40   0x9800             LDR      R0,[SP, #+0]
   \       0x42   0x.... 0x....      BL       SetRFMode
    962          }
                 ^
Warning[Pe940]: missing return statement at end of non-void function
          "cmd_rfmod"
   \       0x46   0xBD32             POP      {R1,R4,R5,PC}
    963          
    964          //========================================================================

   \                                 In section .text, align 2, keep-with-next
    965          int cmd_swinfo    ( int argc, char * argv[] )
    966          //========================================================================
    967          {
   \                     cmd_swinfo: (+1)
   \        0x0   0xB538             PUSH     {R3-R5,LR}
   \        0x2   0x0004             MOVS     R4,R0
   \        0x4   0x000D             MOVS     R5,R1
    968              printf( "[S/W Info]\n" );
                     ^
Warning[Pe223]: function "printf" declared implicitly
   \        0x6   0x.... 0x....      LDR.W    R0,??DataTable51_24
   \        0xA   0x.... 0x....      BL       printf
    969              printf( " - Boot : %d Byte\n", FLASH_If_GetBootSize() );
                                                    ^
Warning[Pe223]: function "FLASH_If_GetBootSize" declared implicitly
   \        0xE   0x.... 0x....      BL       FLASH_If_GetBootSize
   \       0x12   0x0001             MOVS     R1,R0
   \       0x14   0x.... 0x....      LDR.W    R0,??DataTable51_25
   \       0x18   0x.... 0x....      BL       printf
    970              printf( " - App : %d Byte\n", FLASH_If_GetAppSize() );
                                                   ^
Warning[Pe223]: function "FLASH_If_GetAppSize" declared implicitly
   \       0x1C   0x.... 0x....      BL       FLASH_If_GetAppSize
   \       0x20   0x0001             MOVS     R1,R0
   \       0x22   0x.... 0x....      LDR.W    R0,??DataTable53
   \       0x26   0x.... 0x....      BL       printf
    971          }
                 ^
Warning[Pe940]: missing return statement at end of non-void function
          "cmd_swinfo"
   \       0x2A   0xBD32             POP      {R1,R4,R5,PC}
    972          
    973          //========================================================================

   \                                 In section .text, align 2, keep-with-next
    974          int cmd_info    ( int argc, char * argv[] )
    975          //========================================================================
    976          {
   \                     cmd_info: (+1)
   \        0x0   0xB5F8             PUSH     {R3-R7,LR}
   \        0x2   0x0004             MOVS     R4,R0
   \        0x4   0x000D             MOVS     R5,R1
    977              //	info - Train Setting Config
    978              uint8_t		nBuf[10];
    979              int 		nCh = 0;
   \        0x6   0x2600             MOVS     R6,#+0
    980              uint16_t	nData;
    981          
    982              printf( "[Setting]\n" );
                     ^
Warning[Pe223]: function "printf" declared implicitly
   \        0x8   0x.... 0x....      LDR.W    R0,??DataTable51_26
   \        0xC   0x.... 0x....      BL       printf
    983              printf( " - Train Set : %d\n", 400 + GetTrainSetIdx() );
   \       0x10   0x.... 0x....      BL       GetTrainSetIdx
   \       0x14   0xF510 0x70C8      ADDS     R0,R0,#+400
   \       0x18   0x0001             MOVS     R1,R0
   \       0x1A   0x.... 0x....      LDR.W    R0,??DataTable51_27
   \       0x1E   0x.... 0x....      BL       printf
    984              printf( " - Car No : %d\n", GetCarNo() );
   \       0x22   0x.... 0x....      BL       GetCarNo
   \       0x26   0x0001             MOVS     R1,R0
   \       0x28   0x.... 0x....      LDR.W    R0,??DataTable51_28
   \       0x2C   0x.... 0x....      BL       printf
    985              printf( " - RF Channel: %d\n", GetChRx() );
   \       0x30   0x.... 0x....      BL       GetChRx
   \       0x34   0x0001             MOVS     R1,R0
   \       0x36   0x.... 0x....      LDR.W    R0,??DataTable51_29
   \       0x3A   0x.... 0x....      BL       printf
    986              printf( " - Mode : %s(%d)\n", StrRFMMode( GetRFMMode() ), GetRFMMode()  );	//	Normal / Tx / Rx / Upgrade
   \       0x3E   0x.... 0x....      BL       GetRFMMode
   \       0x42   0x0007             MOVS     R7,R0
   \       0x44   0x.... 0x....      BL       GetRFMMode
   \       0x48   0x.... 0x....      BL       StrRFMMode
   \       0x4C   0x003A             MOVS     R2,R7
   \       0x4E   0x0001             MOVS     R1,R0
   \       0x50   0x.... 0x....      LDR.W    R0,??DataTable51_30
   \       0x54   0x.... 0x....      BL       printf
    987              printf( " - GetChNearRFM() : %d\n", GetChNearRFM() );
   \       0x58   0x.... 0x....      BL       GetChNearRFM
   \       0x5C   0x0001             MOVS     R1,R0
   \       0x5E   0x.... 0x....      LDR.W    R0,??DataTable51_31
   \       0x62   0x.... 0x....      BL       printf
    988              printf( " - GetChNearRFT() : %d\n", GetChNearRFT( 190 ) );
   \       0x66   0x20BE             MOVS     R0,#+190
   \       0x68   0x.... 0x....      BL       GetChNearRFT
   \       0x6C   0x0001             MOVS     R1,R0
   \       0x6E   0x.... 0x....      LDR.W    R0,??DataTable51_32
   \       0x72   0x.... 0x....      BL       printf
    989              printf( " - GetChPARFT() : %d\n", GetChPARFT() );
   \       0x76   0x.... 0x....      BL       GetChPARFT
   \       0x7A   0x0001             MOVS     R1,R0
   \       0x7C   0x.... 0x....      LDR.W    R0,??DataTable51_33
   \       0x80   0x.... 0x....      BL       printf
    990              printf( " - GetChPA() : %d\n", GetChPA() );
   \       0x84   0x.... 0x....      BL       GetChPA
   \       0x88   0x0001             MOVS     R1,R0
   \       0x8A   0x.... 0x....      LDR.W    R0,??DataTable51_34
   \       0x8E   0x.... 0x....      BL       printf
    991              printf( " - GetChRFMUp() : %d\n", GetChRFMUp() );
   \       0x92   0x.... 0x....      BL       GetChRFMUp
   \       0x96   0x0001             MOVS     R1,R0
   \       0x98   0x.... 0x....      LDR.W    R0,??DataTable51_35
   \       0x9C   0x.... 0x....      BL       printf
    992              printf( " - GetChRFMDown() : %d\n", GetChRFMDown() );
   \       0xA0   0x.... 0x....      BL       GetChRFMDown
   \       0xA4   0x0001             MOVS     R1,R0
   \       0xA6   0x.... 0x....      LDR.W    R0,??DataTable55
   \       0xAA   0x.... 0x....      BL       printf
    993          }
                 ^
Warning[Pe940]: missing return statement at end of non-void function "cmd_info"

      uint8_t		nBuf[10];
             		^
"C:\D\Git_Hub\STM_IAR_SIL_Change\Library\rfm.c",978  Warning[Pe177]: variable
          "nBuf" was declared but never referenced

      int 		nCh = 0;
          		^
"C:\D\Git_Hub\STM_IAR_SIL_Change\Library\rfm.c",979  Warning[Pe177]: variable
          "nCh" was declared but never referenced

      uint16_t	nData;
              	^
"C:\D\Git_Hub\STM_IAR_SIL_Change\Library\rfm.c",980  Warning[Pe177]: variable
          "nData" was declared but never referenced
   \       0xAE   0xBDF2             POP      {R1,R4-R7,PC}
    994          
    995          
    996          //========================================================================

   \                                 In section .text, align 2, keep-with-next
    997          int cmd_rfstat    ( int argc, char * argv[] )
    998          //========================================================================
    999          {
   \                     cmd_rfstat: (+1)
   \        0x0   0xB538             PUSH     {R3-R5,LR}
   \        0x2   0x0004             MOVS     R4,R0
   \        0x4   0x000D             MOVS     R5,R1
   1000              //	rfstat - RF Tx / Rx Status
   1001              printf( "[RF Info] Tx : %d / Rx : %d\n", nTxPkt, nRxPkt );
                     ^
Warning[Pe223]: function "printf" declared implicitly
   \        0x6   0x.... 0x....      LDR.W    R0,??DataTable51_36
   \        0xA   0x6802             LDR      R2,[R0, #+0]
   \        0xC   0x.... 0x....      LDR.W    R0,??DataTable51_37
   \       0x10   0x6801             LDR      R1,[R0, #+0]
   \       0x12   0x.... 0x....      LDR.W    R0,??DataTable55_1
   \       0x16   0x.... 0x....      BL       printf
   1002          }
                 ^
Warning[Pe940]: missing return statement at end of non-void function
          "cmd_rfstat"
   \       0x1A   0xBD32             POP      {R1,R4,R5,PC}
   1003          
   1004          #if defined(USE_TEST_RF_TX_LOOP)
   1005          //========================================================================
   1006          int cmd_rftx    ( int argc, char * argv[] )
   1007          //========================================================================
   1008          {
   1009              //	RF Tx
   1010              int 	nCh		=	0;
   1011          
   1012              switch ( argc )
   1013              {
   1014              case 2:		sscanf( argv[1], "%d", &nCh );	        //	ID
   1015          //	case 2:		sText = argv[1];						//	sscanf( argv[1], "%s", sText );		//	cmd [Text]
   1016                  break;
   1017              }
   1018          
   1019              printf( "%s(%d) - CH(%d)\n", __func__, __LINE__, nCh );
   1020          
   1021              uint8_t sBuf[100];
   1022              int nCnt = 0;
   1023          
   1024              while ( 1 )
   1025              {
   1026              	if ( ( nCnt % 300 ) == 0 )
   1027              	{
   1028              		printf(".");
   1029          
   1030          			//	RFM(Board) Status LED
   1031          			HAL_GPIO_TogglePin ( LED_ST_GPIO_Port, LED_ST_Pin );
   1032              	}
   1033          
   1034              	//*
   1035              	SendPktCh(nCh, sBuf, 64);
   1036              	HAL_Delay(3);
   1037          
   1038              	//	Watchdog Reload
   1039              	__HAL_IWDG_RELOAD_COUNTER(&hiwdg);
   1040          
   1041              	/*/
   1042          
   1043              	SendPktCh(7, sBuf, 64);	//	Reserved
   1044          
   1045              	SendPktCh(ChRFT, sBuf, 64);
   1046          
   1047              	SendPktCh(ChTS2_1, sBuf, 64);	//	21
   1048          
   1049              	SendPktCh(nCh, sBuf, 64);
   1050          
   1051              	//*/
                     	 ^
Warning[Pe009]: nested comment is not allowed
   1052          
   1053              	nCnt++;
   1054              }
   1055          }
   1056          #endif
   1057          
   1058          //========================================================================

   \                                 In section .text, align 2, keep-with-next
   1059          int cmd_txpwr    ( int argc, char * argv[] )
   1060          //========================================================================
   1061          {
   \                     cmd_txpwr: (+1)
   \        0x0   0xB538             PUSH     {R3-R5,LR}
   \        0x2   0x0004             MOVS     R4,R0
   \        0x4   0x000D             MOVS     R5,R1
   1062              //	RF Tx
   1063              uint8_t		nPwr	=	0x7F;
   \        0x6   0x207F             MOVS     R0,#+127
   \        0x8   0xF88D 0x0000      STRB     R0,[SP, #+0]
   1064          
   1065              switch ( argc )
   \        0xC   0x2C02             CMP      R4,#+2
   \        0xE   0xD104             BNE.N    ??cmd_txpwr_0
   1066              {
   1067              case 2:		sscanf( argv[1], "%d", &nPwr );	        //	ID
                            		^
Warning[Pe223]: function "sscanf" declared implicitly
   \       0x10   0x466A             MOV      R2,SP
   \       0x12   0x....             ADR.N    R1,??DataTable48_2
   \       0x14   0x6868             LDR      R0,[R5, #+4]
   \       0x16   0x.... 0x....      BL       sscanf
   1068          //	case 2:		sText = argv[1];						//	sscanf( argv[1], "%s", sText );		//	cmd [Text]
   1069                  break;
   1070              }
   1071          
   1072              printf( "%s(%d) - Tx Pwr(%d)\n", __func__, __LINE__, nPwr );
                     ^
Warning[Pe223]: function "printf" declared implicitly
   \                     ??cmd_txpwr_0: (+1)
   \       0x1A   0xF89D 0x3000      LDRB     R3,[SP, #+0]
   \       0x1E   0xF44F 0x6286      MOV      R2,#+1072
   \       0x22   0x.... 0x....      LDR.W    R1,??DataTable51_38
   \       0x26   0x.... 0x....      LDR.W    R0,??DataTable55_2
   \       0x2A   0x.... 0x....      BL       printf
   1073          
   1074              vRadio_Set_TxPower( nPwr );
   \       0x2E   0xF89D 0x0000      LDRB     R0,[SP, #+0]
   \       0x32   0x.... 0x....      BL       vRadio_Set_TxPower
   1075          }
                 ^
Warning[Pe940]: missing return statement at end of non-void function
          "cmd_txpwr"
   \       0x36   0xBD32             POP      {R1,R4,R5,PC}
   1076          
   1077          //========================================================================

   \                                 In section .text, align 2, keep-with-next
   1078          int cmd_rspid     ( int argc, char * argv[] )
   1079          //========================================================================
   1080          {
   \                     cmd_rspid: (+1)
   \        0x0   0xB53E             PUSH     {R1-R5,LR}
   \        0x2   0x0004             MOVS     R4,R0
   \        0x4   0x000D             MOVS     R5,R1
   1081              //	rspid [Car No] [0/1]
   1082              int 		nID 	= 0;
   \        0x6   0x2000             MOVS     R0,#+0
   \        0x8   0x9000             STR      R0,[SP, #+0]
   1083              int 		nSet 	= 0;
   \        0xA   0x2000             MOVS     R0,#+0
   \        0xC   0x9001             STR      R0,[SP, #+4]
   1084          
   1085              switch ( argc )
   \        0xE   0x0020             MOVS     R0,R4
   \       0x10   0x2802             CMP      R0,#+2
   \       0x12   0xD006             BEQ.N    ??cmd_rspid_0
   \       0x14   0x2803             CMP      R0,#+3
   \       0x16   0xD109             BNE.N    ??cmd_rspid_1
   1086              {
   1087              case 3:		sscanf( argv[2], "%d", &nSet );	        //	Set
                            		^
Warning[Pe223]: function "sscanf" declared implicitly
   \                     ??cmd_rspid_2: (+1)
   \       0x18   0xAA01             ADD      R2,SP,#+4
   \       0x1A   0x....             ADR.N    R1,??DataTable48_2
   \       0x1C   0x68A8             LDR      R0,[R5, #+8]
   \       0x1E   0x.... 0x....      BL       sscanf
   1088              case 2:		sscanf( argv[1], "%d", &nID );	        //	ID
   \                     ??cmd_rspid_0: (+1)
   \       0x22   0x466A             MOV      R2,SP
   \       0x24   0x....             ADR.N    R1,??DataTable48_2
   \       0x26   0x6868             LDR      R0,[R5, #+4]
   \       0x28   0x.... 0x....      BL       sscanf
   1089          //	case 2:		sText = argv[1];						//	sscanf( argv[1], "%s", sText );		//	cmd [Text]
   1090                  break;
   1091              }
   1092          
   1093              if ( nID < 0 || MaxCarNo < nID )
   \                     ??cmd_rspid_1: (+1)
   \       0x2C   0x9800             LDR      R0,[SP, #+0]
   \       0x2E   0x2800             CMP      R0,#+0
   \       0x30   0xD402             BMI.N    ??cmd_rspid_3
   \       0x32   0x9800             LDR      R0,[SP, #+0]
   \       0x34   0x280E             CMP      R0,#+14
   \       0x36   0xDB09             BLT.N    ??cmd_rspid_4
   1094              {
   1095              	printf("%s(%d) - return\n", __func__, __LINE__);
                     	^
Warning[Pe223]: function "printf" declared implicitly
   \                     ??cmd_rspid_3: (+1)
   \       0x38   0xF240 0x4247      MOVW     R2,#+1095
   \       0x3C   0x.... 0x....      LDR.W    R1,??DataTable52_1
   \       0x40   0x.... 0x....      LDR.W    R0,??DataTable51_39
   \       0x44   0x.... 0x....      BL       printf
   1096              	return 0;
   \       0x48   0x2000             MOVS     R0,#+0
   \       0x4A   0xE035             B.N      ??cmd_rspid_5
   1097              }
   1098          
   1099              //	ID Flag Manual 설정.
   1100              g_bSetRspIDManual = 1;
   \                     ??cmd_rspid_4: (+1)
   \       0x4C   0x2001             MOVS     R0,#+1
   \       0x4E   0x.... 0x....      LDR.W    R1,??DataTable52_2
   \       0x52   0x6008             STR      R0,[R1, #+0]
   1101          
   1102              if ( nSet )
   \       0x54   0x9801             LDR      R0,[SP, #+4]
   \       0x56   0x2800             CMP      R0,#+0
   \       0x58   0xD011             BEQ.N    ??cmd_rspid_6
   1103              {
   1104              	//	Set ID Flag
   1105              	g_flagRspID |= ( 0x1 << nID );
   \       0x5A   0x.... 0x....      LDR.W    R1,??DataTable52_3
   \       0x5E   0x880A             LDRH     R2,[R1, #+0]
   \       0x60   0x2301             MOVS     R3,#+1
   \       0x62   0x9800             LDR      R0,[SP, #+0]
   \       0x64   0x4083             LSLS     R3,R3,R0
   \       0x66   0x431A             ORRS     R2,R3,R2
   \       0x68   0x800A             STRH     R2,[R1, #+0]
   1106          		g_devStat[nID].nRSSI = 200;
   \       0x6A   0x....             LDR.N    R1,??DataTable48
   \       0x6C   0x9A00             LDR      R2,[SP, #+0]
   \       0x6E   0x2025             MOVS     R0,#+37
   \       0x70   0x4342             MULS     R2,R0,R2
   \       0x72   0xEB01 0x0002      ADD      R0,R1,R2
   \       0x76   0x21C8             MOVS     R1,#+200
   \       0x78   0xF8C0 0x101D      STR      R1,[R0, #+29]
   \       0x7C   0xE010             B.N      ??cmd_rspid_7
   1107              }
   1108              else
   1109              {
   1110              	//	Clear ID Flag
   1111              	g_flagRspID &= ~( 0x1 << nID );
   \                     ??cmd_rspid_6: (+1)
   \       0x7E   0x.... 0x....      LDR.W    R1,??DataTable52_3
   \       0x82   0x880A             LDRH     R2,[R1, #+0]
   \       0x84   0x2301             MOVS     R3,#+1
   \       0x86   0x9800             LDR      R0,[SP, #+0]
   \       0x88   0x4083             LSLS     R3,R3,R0
   \       0x8A   0x439A             BICS     R2,R2,R3
   \       0x8C   0x800A             STRH     R2,[R1, #+0]
   1112          		g_devStat[nID].nRSSI = 0;
   \       0x8E   0x....             LDR.N    R1,??DataTable48
   \       0x90   0x9A00             LDR      R2,[SP, #+0]
   \       0x92   0x2025             MOVS     R0,#+37
   \       0x94   0x4342             MULS     R2,R0,R2
   \       0x96   0xEB01 0x0002      ADD      R0,R1,R2
   \       0x9A   0x2100             MOVS     R1,#+0
   \       0x9C   0xF8C0 0x101D      STR      R1,[R0, #+29]
   1113              }
   1114          
   1115              printf( "%s(%d) - ID Flag : 0x%04X\n", __func__, __LINE__, g_flagRspID );
                     ^
Warning[Pe223]: function "printf" declared implicitly
   \                     ??cmd_rspid_7: (+1)
   \       0xA0   0x.... 0x....      LDR.W    R0,??DataTable52_3
   \       0xA4   0x8803             LDRH     R3,[R0, #+0]
   \       0xA6   0xF240 0x425B      MOVW     R2,#+1115
   \       0xAA   0x.... 0x....      LDR.W    R1,??DataTable52_1
   \       0xAE   0x.... 0x....      LDR.W    R0,??DataTable56
   \       0xB2   0x.... 0x....      BL       printf
   1116          
   1117          	return 1;
   \       0xB6   0x2001             MOVS     R0,#+1
   \                     ??cmd_rspid_5: (+1)
   \       0xB8   0xBD3E             POP      {R1-R5,PC}
   1118          }
   1119          
   1120          
   1121          //========================================================================

   \                                 In section .text, align 2, keep-with-next
   1122          int cmd_OccPa     ( int argc, char * argv[] )
   1123          //========================================================================
   1124          {
   \                     cmd_OccPa: (+1)
   \        0x0   0xB57C             PUSH     {R2-R6,LR}
   \        0x2   0x0004             MOVS     R4,R0
   \        0x4   0x000D             MOVS     R5,R1
   1125          	//========================================================================
   1126              //	occ [1(start)/0(stop)]	-	대승객방송
   1127          
   1128          	printf("%s(%d)\n", __func__, __LINE__ );
                 	^
Warning[Pe223]: function "printf" declared implicitly
   \        0x6   0x.... 0x....      LDR.W    R6,??DataTable52_4
   \        0xA   0xF44F 0x628D      MOV      R2,#+1128
   \        0xE   0x0031             MOVS     R1,R6
   \       0x10   0x.... 0x....      LDR.W    R0,??DataTable53_1
   \       0x14   0x.... 0x....      BL       printf
   1129          
   1130          	//	대승객방송 시작/종료
   1131              int 		nOnOff 	= 0;
   \       0x18   0x2000             MOVS     R0,#+0
   \       0x1A   0x9000             STR      R0,[SP, #+0]
   1132          
   1133              switch ( argc )
   \       0x1C   0x2C02             CMP      R4,#+2
   \       0x1E   0xD104             BNE.N    ??cmd_OccPa_0
   1134              {
   1135              case 2:		sscanf( argv[1], "%d", &nOnOff );	    //	On/Off
                            		^
Warning[Pe223]: function "sscanf" declared implicitly
   \       0x20   0x466A             MOV      R2,SP
   \       0x22   0x....             ADR.N    R1,??DataTable48_2
   \       0x24   0x6868             LDR      R0,[R5, #+4]
   \       0x26   0x.... 0x....      BL       sscanf
   1136                  break;
   1137              }
   1138          
   1139              if ( nOnOff == 1 )
   \                     ??cmd_OccPa_0: (+1)
   \       0x2A   0x9800             LDR      R0,[SP, #+0]
   \       0x2C   0x2801             CMP      R0,#+1
   \       0x2E   0xD120             BNE.N    ??cmd_OccPa_1
   1140              {
   1141              	printf("%s(%d) - Start\n", __func__, __LINE__ );
   \       0x30   0xF240 0x4275      MOVW     R2,#+1141
   \       0x34   0x0031             MOVS     R1,R6
   \       0x36   0x.... 0x....      LDR.W    R0,??DataTable54
   \       0x3A   0x.... 0x....      BL       printf
   1142          
   1143          
   1144          #if USE_RFM_OCC_PA
   1145          
   1146          #else
   1147              	//	Audio Loopback On
   1148          		AudioDMALoopback();
   1149          #endif
   1150          
   1151          		// 조명 On
   1152          		HAL_GPIO_WritePin ( LIGHT_ON_GPIO_Port, LIGHT_ON_Pin, GPIO_PIN_SET );
   \       0x3E   0x.... 0x....      LDR.W    R6,??DataTable56_1
   \       0x42   0x2201             MOVS     R2,#+1
   \       0x44   0xF44F 0x7100      MOV      R1,#+512
   \       0x48   0x0030             MOVS     R0,R6
   \       0x4A   0x.... 0x....      BL       HAL_GPIO_WritePin
   1153          
   1154          		//	Spk On
   1155          		HAL_GPIO_WritePin( SPK_ON_GPIO_Port, SPK_ON_Pin, GPIO_PIN_SET );
   \       0x4E   0x2201             MOVS     R2,#+1
   \       0x50   0x2120             MOVS     R1,#+32
   \       0x52   0x0030             MOVS     R0,R6
   \       0x54   0x.... 0x....      BL       HAL_GPIO_WritePin
   1156          
   1157          		//  수신기 Spk Relay On
   1158          		HAL_GPIO_WritePin( AUDIO_ON_GPIO_Port, AUDIO_ON_Pin, GPIO_PIN_SET );
   \       0x58   0x2201             MOVS     R2,#+1
   \       0x5A   0xF44F 0x7180      MOV      R1,#+256
   \       0x5E   0x0030             MOVS     R0,R6
   \       0x60   0x.... 0x....      BL       HAL_GPIO_WritePin
   1159          
   1160          
   1161          		//
   1162          		//SetRFMMode( RFMModeTx );
   1163          
   1164          
   1165          		//SetChPA(ChTS1_1 );		//	가장 가까운 수신기 설정.
   1166          
   1167          		//	방송 - 시작
   1168          		SendOCCPA( 1 );
   \       0x64   0x2001             MOVS     R0,#+1
   \       0x66   0x.... 0x....      BL       SendOCCPA
   1169          
   1170          		//	OCC Mode
   1171          		SetRFMMode( RFMModeOcc );
   \       0x6A   0x2003             MOVS     R0,#+3
   \       0x6C   0x.... 0x....      BL       SetRFMMode
   \       0x70   0xE019             B.N      ??cmd_OccPa_2
   1172          
   1173          
   1174              }
   1175              else
   1176              {
   1177              	printf("%s(%d) - Stop\n", __func__, __LINE__ );
   \                     ??cmd_OccPa_1: (+1)
   \       0x72   0xF240 0x4299      MOVW     R2,#+1177
   \       0x76   0x0031             MOVS     R1,R6
   \       0x78   0x.... 0x....      LDR.W    R0,??DataTable54_1
   \       0x7C   0x.... 0x....      BL       printf
   1178          
   1179              	//	Normal Mode
   1180              	SetRFMMode( RFMModeNormal );
   \       0x80   0x2000             MOVS     R0,#+0
   \       0x82   0x.... 0x....      BL       SetRFMMode
   1181          
   1182          #if USE_RFM_OCC_PA
   1183          
   1184          #else
   1185              	//	Audio Loopback Off
   1186              	AudioDMARFM();
   1187          #endif
   1188          
   1189              	//	Spk Off.
   1190          		HAL_GPIO_WritePin( SPK_ON_GPIO_Port, SPK_ON_Pin, GPIO_PIN_RESET );
   \       0x86   0x.... 0x....      LDR.W    R6,??DataTable56_1
   \       0x8A   0x2200             MOVS     R2,#+0
   \       0x8C   0x2120             MOVS     R1,#+32
   \       0x8E   0x0030             MOVS     R0,R6
   \       0x90   0x.... 0x....      BL       HAL_GPIO_WritePin
   1191          
   1192          		//  수신기 Spk Relay Off
   1193          		HAL_GPIO_WritePin( AUDIO_ON_GPIO_Port, AUDIO_ON_Pin, GPIO_PIN_RESET );
   \       0x94   0x2200             MOVS     R2,#+0
   \       0x96   0xF44F 0x7180      MOV      R1,#+256
   \       0x9A   0x0030             MOVS     R0,R6
   \       0x9C   0x.... 0x....      BL       HAL_GPIO_WritePin
   1194          
   1195          
   1196          		//	방송 - 종료
   1197          		SendOCCPA( 0 );
   \       0xA0   0x2000             MOVS     R0,#+0
   \       0xA2   0x.... 0x....      BL       SendOCCPA
   1198              }
   1199          }
                 ^
Warning[Pe940]: missing return statement at end of non-void function
          "cmd_OccPa"
   \                     ??cmd_OccPa_2: (+1)
   \       0xA6   0xBD76             POP      {R1,R2,R4-R6,PC}
   1200          
   1201          
   1202          //========================================================================
   1203          //		RFM I2S Callback
   1204          //========================================================================
   1205          
   1206          
   1207          //========================================================================
   1208          //	interpolation compress ( 보간압축 )
   1209          #if defined( USE_AUDIO_INTERPOL_COMPRESS )	//	보간압축사용.
   1210          
   1211          #define	FRAME_ENC_SIZE		(I2S_DMA_LOOP_SIZE * AUDIO_COMPR_RATE)
   1212          
   1213          static int16_t	bufAudioEnc[FRAME_ENC_SIZE * 2];	//	Rx
   1214          static int16_t	bufAudioDec[FRAME_ENC_SIZE * 2];	//	Tx
   1215          
   1216          #elif defined( USE_AUDIO_ADPCM )	//	ADPCM 사용. - 1/4 압축
   1217          
   1218          #define	FRAME_ENC_SIZE		(I2S_DMA_LOOP_SIZE * 4)		//	1/4 압축
   1219          

   \                                 In section .bss, align 4
   1220          static int16_t	bufAudioEnc[FRAME_ENC_SIZE * 2];	//	Rx
   \                     bufAudioEnc:
   \        0x0                      DS8 480

   \                                 In section .bss, align 4
   1221          static int16_t	bufAudioDec[FRAME_ENC_SIZE * 2];	//	Tx
   \                     bufAudioDec:
   \        0x0                      DS8 480
   1222          

   \                                 In section .text, align 2, keep-with-next
   1223          signed short lowpass_Filter(signed short input)
   1224          {
   \                     lowpass_Filter: (+1)
   \        0x0   0x0001             MOVS     R1,R0
   1225          	static signed short last_sample=0;
   1226          	signed short retvalue = ((input + (last_sample * 7)) >> 3);
   \        0x2   0x.... 0x....      LDR.W    R2,??DataTable56_2
   \        0x6   0xF9B2 0x0000      LDRSH    R0,[R2, #+0]
   \        0xA   0x2307             MOVS     R3,#+7
   \        0xC   0xFB10 0xF003      SMULBB   R0,R0,R3
   \       0x10   0xFA00 0xF081      SXTAH    R0,R0,R1
   \       0x14   0x10C0             ASRS     R0,R0,#+3
   1227          	last_sample = retvalue;
   \       0x16   0x8010             STRH     R0,[R2, #+0]
   1228          	return retvalue;
   \       0x18   0xB200             SXTH     R0,R0
   \       0x1A   0x4770             BX       LR
   1229          }

   \                                 In section .bss, align 2
   \                     `lowpass_Filter::last_sample`:
   \        0x0                      DS8 2
   1230          
   1231          #endif	//
   1232          //========================================================================
   1233          

   \                                 In section .data, align 4
   1234          static int bRxBuffering = 1;	//  Rx Buffering. ( Packet 4 ~ Packet 0)
   \                     bRxBuffering:
   \        0x0   0x0000'0001        DC32 1
   1235          
   1236          //========================================================================

   \                                 In section .text, align 2, keep-with-next
   1237          void RFM_I2SEx_TxRxCpltCallback( I2S_HandleTypeDef *hi2s )
   1238          //========================================================================
   1239          {
   \                     RFM_I2SEx_TxRxCpltCallback: (+1)
   \        0x0   0xE92D 0x4FF8      PUSH     {R3-R11,LR}
   \        0x4   0x0004             MOVS     R4,R0
   1240          	static int 	idx = 0;
   1241          	int16_t		*pAudioTx;
   1242          	int16_t		*pAudioRx;
   1243          
   1244          
   1245          	{
   1246          #if defined( USE_AUDIO_INTERPOL_COMPRESS )	|| defined( USE_AUDIO_ADPCM ) //	보간압축사용 or ADPCM 사용.
   1247          
   1248          		pAudioTx = &bufAudioDec[FRAME_ENC_SIZE * idx];
   \        0x6   0x26F0             MOVS     R6,#+240
   \        0x8   0x.... 0x....      LDR.W    R7,??DataTable55_3
   \        0xC   0x.... 0x....      LDR.W    R10,??DataTable55_4
   \       0x10   0x6838             LDR      R0,[R7, #+0]
   \       0x12   0x4370             MULS     R0,R6,R0
   \       0x14   0xEB0A 0x0800      ADD      R8,R10,R0
   1249          		pAudioRx = &bufAudioEnc[FRAME_ENC_SIZE * (( idx + 1 ) % 2)];
   \       0x18   0x6838             LDR      R0,[R7, #+0]
   \       0x1A   0x1C40             ADDS     R0,R0,#+1
   \       0x1C   0x2102             MOVS     R1,#+2
   \       0x1E   0x.... 0x....      LDR.W    R5,??DataTable55_5
   \       0x22   0xFB90 0xF2F1      SDIV     R2,R0,R1
   \       0x26   0xFB01 0x0012      MLS      R0,R1,R2,R0
   \       0x2A   0x4370             MULS     R0,R6,R0
   \       0x2C   0xEB05 0x0900      ADD      R9,R5,R0
   1250          
   1251          		HAL_I2SEx_TransmitReceive_DMA( &hi2s3,
   1252          										pAudioTx,	//	Tx
                 										^
Warning[Pe167]: argument of type "int16_t *" is incompatible with parameter of
          type "uint16_t *"
   1253          										pAudioRx,	//	Rx
                 										^
Warning[Pe167]: argument of type "int16_t *" is incompatible with parameter of
          type "uint16_t *"
   1254          										FRAME_ENC_SIZE ); // 32byte
   \       0x30   0x2378             MOVS     R3,#+120
   \       0x32   0x464A             MOV      R2,R9
   \       0x34   0x4641             MOV      R1,R8
   \       0x36   0x.... 0x....      LDR.W    R0,??DataTable55_6
   \       0x3A   0x.... 0x....      BL       HAL_I2SEx_TransmitReceive_DMA
   1255          
   1256          		pAudioRx = &bufAudioEnc[FRAME_ENC_SIZE * idx];
   \       0x3E   0x6838             LDR      R0,[R7, #+0]
   \       0x40   0x4370             MULS     R0,R6,R0
   \       0x42   0x4405             ADD      R5,R5,R0
   1257          		idx = ( idx + 1 ) % 2;
   \       0x44   0x6838             LDR      R0,[R7, #+0]
   \       0x46   0x1C40             ADDS     R0,R0,#+1
   \       0x48   0x2102             MOVS     R1,#+2
   \       0x4A   0xFB90 0xF2F1      SDIV     R2,R0,R1
   \       0x4E   0xFB01 0x0012      MLS      R0,R1,R2,R0
   \       0x52   0x6038             STR      R0,[R7, #+0]
   1258          		pAudioTx = &bufAudioDec[FRAME_ENC_SIZE * idx];
   \       0x54   0x6838             LDR      R0,[R7, #+0]
   \       0x56   0xFB06 0xF600      MUL      R6,R6,R0
   \       0x5A   0x4456             ADD      R6,R10,R6
   1259          
   1260          #else
   1261          
   1262          		pAudioTx = &t_audio_buff[I2S_DMA_LOOP_SIZE * idx];
   1263          		pAudioRx = &r_audio_buff[I2S_DMA_LOOP_SIZE * (( idx + 1 ) % 2)];
   1264          
   1265          		HAL_I2SEx_TransmitReceive_DMA( 	&hi2s3,
   1266          										pAudioTx,
   1267          										pAudioRx,
   1268          										I2S_DMA_LOOP_SIZE ); // 32byte
   1269          
   1270          		pAudioRx = &r_audio_buff[I2S_DMA_LOOP_SIZE * idx];
   1271          		idx = ( idx + 1 ) % 2;
   1272          		pAudioTx = &t_audio_buff[I2S_DMA_LOOP_SIZE * idx];
   1273          
   1274          #endif
   1275          	}
   1276          
   1277          	{
   1278          		//========================================================================
   1279          		//  송신기.
   1280          
   1281          		//  r_audio_buff -> RF-Tx
   1282          
   1283          		if ( qBufCnt( &g_qBufAudioTx ) < ( ( I2S_DMA_LOOP_SIZE * 2 ) * ( I2S_DMA_LOOP_QCNT - 1 ) ) )
   \       0x5C   0x.... 0x....      LDR.W    R7,??DataTable56_3
   \       0x60   0x0038             MOVS     R0,R7
   \       0x62   0x.... 0x....      BL       qBufCnt
   \       0x66   0xF5B0 0x7FD2      CMP      R0,#+420
   \       0x6A   0xDA28             BGE.N    ??RFM_I2SEx_TxRxCpltCallback_0
   1284          		{
   1285          			//  printf ( "P" );
   1286          			//  memset( r_audio_buff, idx, 64 );		//  Data Setting
   1287          
   1288          			//========================================================================
   1289          #if defined( USE_AUDIO_INTERPOL_COMPRESS )	//	보간압축사용.
   1290          
   1291          			//	Encoding : 8 KHz -> 2 KHz
   1292          			int i;
   1293          			for( i = 0; i < I2S_DMA_LOOP_SIZE; i++ )
   1294          			{
   1295          				r_audio_buff[ i ] = pAudioRx[ i * AUDIO_COMPR_RATE ];
   1296          			}
   1297          
   1298          			qBufPut( &g_qBufAudioTx, (uint8_t *)r_audio_buff, ( I2S_DMA_LOOP_SIZE * 2 ) );
   1299          
   1300          #elif defined( USE_AUDIO_ADPCM )	//	ADPCM 사용. - 1/4 압축
   1301          
   1302          			//	ADPCM : 16 bit -> 4 bit
   1303          			int i;
   1304          			uint8_t *pABuf = (uint8_t *)r_audio_buff;
   \       0x6C   0x.... 0x....      LDR.W    R8,??DataTable56_4
   \       0x70   0x46C1             MOV      R9,R8
   1305          			for( i = 0; i < I2S_DMA_LOOP_SIZE*2; i++ )
   \       0x72   0xF05F 0x0A00      MOVS     R10,#+0
   \                     ??RFM_I2SEx_TxRxCpltCallback_1: (+1)
   \       0x76   0xF1BA 0x0F3C      CMP      R10,#+60
   \       0x7A   0xDA1B             BGE.N    ??RFM_I2SEx_TxRxCpltCallback_2
   1306          			{
   1307          				//*
   1308          				pABuf[i] = (uint8_t)((uint8_t)((ADPCM_Encode(lowpass_Filter((int16_t)pAudioRx[i*2])<<1)&(0x0F))<<4)
   1309          								| (uint8_t)(ADPCM_Encode(lowpass_Filter((int16_t)pAudioRx[i*2+1])<<1)&0x0F));
   \       0x7C   0xF935 0x002A      LDRSH    R0,[R5, R10, LSL #+2]
   \       0x80   0x.... 0x....      BL       lowpass_Filter
   \       0x84   0xB200             SXTH     R0,R0
   \       0x86   0x0040             LSLS     R0,R0,#+1
   \       0x88   0x.... 0x....      BL       ADPCM_Encode
   \       0x8C   0x4683             MOV      R11,R0
   \       0x8E   0xEB05 0x008A      ADD      R0,R5,R10, LSL #+2
   \       0x92   0xF9B0 0x0002      LDRSH    R0,[R0, #+2]
   \       0x96   0x.... 0x....      BL       lowpass_Filter
   \       0x9A   0xB200             SXTH     R0,R0
   \       0x9C   0x0040             LSLS     R0,R0,#+1
   \       0x9E   0x.... 0x....      BL       ADPCM_Encode
   \       0xA2   0xF010 0x000F      ANDS     R0,R0,#0xF
   \       0xA6   0xEA50 0x100B      ORRS     R0,R0,R11, LSL #+4
   \       0xAA   0xF809 0x000A      STRB     R0,[R9, R10]
   1310          				/*/
   1311          				pABuf[i] = (uint8_t)((uint8_t)((ADPCM_Encode((int16_t)pAudioRx[i*2])&(0x0F))<<4)
   1312          								| (uint8_t)(ADPCM_Encode((int16_t)pAudioRx[i*2+1])&0x0F));
   1313          				//	*/
   1314          			}
   \       0xAE   0xF11A 0x0A01      ADDS     R10,R10,#+1
   \       0xB2   0xE7E0             B.N      ??RFM_I2SEx_TxRxCpltCallback_1
   1315          
   1316          			qBufPut( &g_qBufAudioTx, (uint8_t *)r_audio_buff, ( I2S_DMA_LOOP_SIZE * 2 ) );
   \                     ??RFM_I2SEx_TxRxCpltCallback_2: (+1)
   \       0xB4   0x223C             MOVS     R2,#+60
   \       0xB6   0x4641             MOV      R1,R8
   \       0xB8   0x0038             MOVS     R0,R7
   \       0xBA   0x.... 0x....      BL       qBufPut
   1317          
   1318          #else	//
   1319          			//========================================================================
   1320          			//	Queue Put
   1321          			qBufPut( &g_qBufAudioTx, (uint8_t *)pAudioRx, ( I2S_DMA_LOOP_SIZE * 2 ) );
   1322          #endif
   1323          		}
   1324          
   1325          		/*
   1326          
   1327          		//========================================================================
   1328          		//  Audio In -> Audio Out Loop
   1329          		memcpy( t_audio_buff, r_audio_buff, 64 );
   1330          
   1331          		/*/
                 		^
Warning[Pe009]: nested comment is not allowed
   1332          
   1333          #if defined( USE_AUDIO_INTERPOL_COMPRESS ) || defined( USE_AUDIO_ADPCM )	//	보간압축사용 or ACPCM 사용
   1334          		memset( pAudioTx, 0, FRAME_ENC_SIZE * 2 );	//	Tx
                 		^
Warning[Pe223]: function "memset" declared implicitly
   \                     ??RFM_I2SEx_TxRxCpltCallback_0: (+1)
   \       0xBE   0x22F0             MOVS     R2,#+240
   \       0xC0   0x2100             MOVS     R1,#+0
   \       0xC2   0x0030             MOVS     R0,R6
   \       0xC4   0x.... 0x....      BL       memset
   1335          #else
   1336          		memset( pAudioTx, 0, I2S_DMA_LOOP_SIZE * 2 );
   1337          #endif
   1338          
   1339          		//========================================================================
   1340          		//  Rx Buffering ( Packet Count : 0 ~ 4 )
   1341          		//  RF-Rx -> t_audio_buff
   1342          		if ( bRxBuffering )
   \       0xC8   0x.... 0x....      LDR.W    R7,??DataTable56_5
   \       0xCC   0x6838             LDR      R0,[R7, #+0]
   \       0xCE   0x2800             CMP      R0,#+0
   \       0xD0   0xD00A             BEQ.N    ??RFM_I2SEx_TxRxCpltCallback_3
   1343          		{
   1344          			//  Buffering
   1345          			if ( qBufCnt( &g_qBufAudioRx ) > ( ( I2S_DMA_LOOP_SIZE * 2 ) * 3 ) )
   \       0xD2   0x.... 0x....      LDR.W    R0,??DataTable56_6
   \       0xD6   0x.... 0x....      BL       qBufCnt
   \       0xDA   0x28B5             CMP      R0,#+181
   \       0xDC   0xDB04             BLT.N    ??RFM_I2SEx_TxRxCpltCallback_3
   1346          			{
   1347          				//  패킷이 4개 이상인경우 버퍼링 종료.
   1348          				bRxBuffering = 0;
   \       0xDE   0x2000             MOVS     R0,#+0
   \       0xE0   0x6038             STR      R0,[R7, #+0]
   1349          
   1350          				printf ( "F" );	 //  버퍼링종료 ( Buffering End - Buffer Full )
                 				^
Warning[Pe223]: function "printf" declared implicitly
   \       0xE2   0x....             ADR.N    R0,??DataTable49_2
   \       0xE4   0x.... 0x....      BL       printf
   1351          
   1352          			}
   1353          
   1354          		}
   1355          
   1356          		if ( bRxBuffering == 0 )
   \                     ??RFM_I2SEx_TxRxCpltCallback_3: (+1)
   \       0xE8   0x6838             LDR      R0,[R7, #+0]
   \       0xEA   0x2800             CMP      R0,#+0
   \       0xEC   0xD127             BNE.N    ??RFM_I2SEx_TxRxCpltCallback_4
   1357          		{
   1358          			//  Rx Audio Out
   1359          			if ( qBufCnt( &g_qBufAudioRx ) >= ( I2S_DMA_LOOP_SIZE * 2 ) )
   \       0xEE   0x.... 0x....      LDR.W    R8,??DataTable56_6
   \       0xF2   0x4640             MOV      R0,R8
   \       0xF4   0x.... 0x....      BL       qBufCnt
   \       0xF8   0x283C             CMP      R0,#+60
   \       0xFA   0xDB1C             BLT.N    ??RFM_I2SEx_TxRxCpltCallback_5
   1360          			{
   1361          				//	printf ( "G" );
   1362          				//  Queue Audio Data
   1363          
   1364          #if defined( USE_AUDIO_INTERPOL_COMPRESS )	//	보간압축사용.
   1365          
   1366          				qBufGet( &g_qBufAudioRx, (uint8_t*)t_audio_buff, ( I2S_DMA_LOOP_SIZE * 2 ) );
   1367          
   1368          				int dtVal;	//	sample 보간.
   1369          				static int16_t nlastSample = 0;
   1370          
   1371          				//	Decoding : 2 KHz -> 8 KHz
   1372          				int i;
   1373          				for( i = 0; i < FRAME_ENC_SIZE; i++ )
   1374          				{
   1375          					if ( i % AUDIO_COMPR_RATE == 0 )
   1376          					{
   1377          						if ( i == 0 )
   1378          						{
   1379          							pAudioTx[ i ] = nlastSample;	//	t_audio_buff[i / AUDIO_COMPR_RATE];
   1380          						}
   1381          						else
   1382          						{
   1383          							pAudioTx[ i ] = t_audio_buff[i / AUDIO_COMPR_RATE - 1];
   1384          						}
   1385          						dtVal = (t_audio_buff[(i / AUDIO_COMPR_RATE)] - pAudioTx[ i ]) / AUDIO_COMPR_RATE;
   1386          
   1387          						if( (i + AUDIO_COMPR_RATE) == FRAME_ENC_SIZE ) nlastSample = t_audio_buff[(i / AUDIO_COMPR_RATE)];		//	Last Sample
   1388          					}
   1389          					else
   1390          					{
   1391          						//	sample간 보간.
   1392          						pAudioTx[ i ] = pAudioTx[ i - 1 ] + dtVal;
   1393          					}
   1394          			//		outBuf[ i ] = bufAudioDec[i / AUDIO_COMPR_RATE];
   1395          				}
   1396          
   1397          #elif defined( USE_AUDIO_ADPCM )	//	ADPCM 사용. - 1/4 압축
   1398          
   1399          				qBufGet( &g_qBufAudioRx, (uint8_t*)t_audio_buff, ( I2S_DMA_LOOP_SIZE * 2 ) );
   \       0xFC   0x.... 0x....      LDR.W    R9,??DataTable56_7
   \      0x100   0x223C             MOVS     R2,#+60
   \      0x102   0x4649             MOV      R1,R9
   \      0x104   0x4640             MOV      R0,R8
   \      0x106   0x.... 0x....      BL       qBufGet
   1400          
   1401          				uint8_t *pABuf = (uint8_t *)t_audio_buff;
   1402          				//	Decoding : 4 bit -> 16 bit
   1403          				int i;
   1404          				for( i = 0; i < FRAME_ENC_SIZE/2; i++ )
   \      0x10A   0x2700             MOVS     R7,#+0
   \                     ??RFM_I2SEx_TxRxCpltCallback_6: (+1)
   \      0x10C   0x2F3C             CMP      R7,#+60
   \      0x10E   0xDA16             BGE.N    ??RFM_I2SEx_TxRxCpltCallback_4
   1405          				{
   1406          					pAudioTx[i*2] = (uint16_t)ADPCM_Decode((uint8_t)((pABuf[i]&(0xF0)))>>4);
   \      0x110   0xF819 0x0007      LDRB     R0,[R9, R7]
   \      0x114   0xB2C0             UXTB     R0,R0
   \      0x116   0x0900             LSRS     R0,R0,#+4
   \      0x118   0x.... 0x....      BL       ADPCM_Decode
   \      0x11C   0xF826 0x0027      STRH     R0,[R6, R7, LSL #+2]
   1407          					pAudioTx[i*2+1] = (uint16_t)ADPCM_Decode((uint8_t)(pABuf[i]&0x0F));
   \      0x120   0xF819 0x0007      LDRB     R0,[R9, R7]
   \      0x124   0xF010 0x000F      ANDS     R0,R0,#0xF
   \      0x128   0x.... 0x....      BL       ADPCM_Decode
   \      0x12C   0xEB06 0x0187      ADD      R1,R6,R7, LSL #+2
   \      0x130   0x8048             STRH     R0,[R1, #+2]
   1408          				}
   \      0x132   0x1C7F             ADDS     R7,R7,#+1
   \      0x134   0xE7EA             B.N      ??RFM_I2SEx_TxRxCpltCallback_6
   1409          
   1410          #else	//
   1411          
   1412          				qBufGet( &g_qBufAudioRx, (uint8_t*)pAudioTx, ( I2S_DMA_LOOP_SIZE * 2 ) );
   1413          
   1414          #endif
   1415          			}
   1416          			else
   1417          			{
   1418          				//printf ( "B" );	 //  버퍼링시작 ( Buffering )
   1419          				//  Data
   1420          				bRxBuffering = 1;
   \                     ??RFM_I2SEx_TxRxCpltCallback_5: (+1)
   \      0x136   0x2001             MOVS     R0,#+1
   \      0x138   0x6038             STR      R0,[R7, #+0]
   1421          
   1422          
   1423          #if defined( USE_AUDIO_ADPCM )	//	ADPCM 사용. - 1/4 압축
   1424          				ADPCM_ClearDecodeBuf();
   \      0x13A   0x.... 0x....      BL       ADPCM_ClearDecodeBuf
   1425          				//qBufClear( &g_qBufAudioRx );	//	Tx Buffer Clear
   1426          #endif
   1427          
   1428          			}
   1429          		}
   1430          		//  */
   1431          	}
   1432          }
   \                     ??RFM_I2SEx_TxRxCpltCallback_4: (+1)
   \      0x13E   0xE8BD 0x8FF1      POP      {R0,R4-R11,PC}

   \                                 In section .bss, align 4
   \                     `RFM_I2SEx_TxRxCpltCallback::idx`:
   \        0x0                      DS8 4
   1433          
   1434          
   1435          //========================================================================
   1436          //		RFM Procedure
   1437          //========================================================================
   1438          
   1439          //========================================================================

   \                                 In section .text, align 2, keep-with-next
   1440          int InitRFM( void )
   1441          //========================================================================
   1442          {
   \                     InitRFM: (+1)
   \        0x0   0xE92D 0x41F0      PUSH     {R4-R8,LR}
   \        0x4   0xB09A             SUB      SP,SP,#+104
   1443          	printf( "%s(%d)\n", __func__, __LINE__ );
                 	^
Warning[Pe223]: function "printf" declared implicitly
   \        0x6   0x.... 0x....      LDR.W    R4,??DataTable56_8
   \        0xA   0xF240 0x52A3      MOVW     R2,#+1443
   \        0xE   0x0021             MOVS     R1,R4
   \       0x10   0x.... 0x....      LDR.W    R0,??DataTable53_1
   \       0x14   0x.... 0x....      BL       printf
   1444          
   1445          	//========================================================================
   1446          	I2C_BusScan( &hi2c1 );
   \       0x18   0x.... 0x....      LDR.W    R6,??DataTable56_9
   \       0x1C   0x0030             MOVS     R0,R6
   \       0x1E   0x.... 0x....      BL       I2C_BusScan
   1447          	I2C_BusScan( &hi2c3 );
   \       0x22   0x.... 0x....      LDR.W    R5,??DataTable56_10
   \       0x26   0x0028             MOVS     R0,R5
   \       0x28   0x.... 0x....      BL       I2C_BusScan
   1448          
   1449          	//========================================================================
   1450          	//	Car Number 설정.
   1451          	g_flagRspID |= (0x1 << GetCarNo());		//	자신의 ID Flag 설정.
   \       0x2C   0x.... 0x....      BL       GetCarNo
   \       0x30   0x.... 0x....      LDR.W    R1,??DataTable52_3
   \       0x34   0x880A             LDRH     R2,[R1, #+0]
   \       0x36   0x2301             MOVS     R3,#+1
   \       0x38   0xFA13 0xF000      LSLS     R0,R3,R0
   \       0x3C   0x4310             ORRS     R0,R0,R2
   \       0x3E   0x8008             STRH     R0,[R1, #+0]
   1452          
   1453          	//========================================================================
   1454          	//	Codec MAX9860ETG+
   1455          	if ( HAL_OK == HAL_I2C_IsDeviceReady( &hi2c1, (uint16_t)( 0x10 << 1 ), 2, 2 ) )
   \       0x40   0x2302             MOVS     R3,#+2
   \       0x42   0x2202             MOVS     R2,#+2
   \       0x44   0x2120             MOVS     R1,#+32
   \       0x46   0x0030             MOVS     R0,R6
   \       0x48   0x.... 0x....      BL       HAL_I2C_IsDeviceReady
   \       0x4C   0x2800             CMP      R0,#+0
   \       0x4E   0xD129             BNE.N    ??InitRFM_0
   1456          	{
   1457          		//  Read Rev.
   1458          		char buf[10];
   1459          		int cntRetry;
   1460          
   1461          		cntRetry = 0;
   \       0x50   0x2700             MOVS     R7,#+0
   1462          
   1463          		memset( buf, 0, sizeof( buf ) );
                 		^
Warning[Pe223]: function "memset" declared implicitly
   \       0x52   0x220A             MOVS     R2,#+10
   \       0x54   0x2100             MOVS     R1,#+0
   \       0x56   0xA803             ADD      R0,SP,#+12
   \       0x58   0x.... 0x....      BL       memset
   1464          		while ( HAL_I2C_Mem_Read( &hi2c1, (uint16_t)( 0x10 << 1 ), (uint16_t)0xFF, I2C_MEMADD_SIZE_8BIT, buf, (uint16_t)1, 1000 ) != HAL_OK && cntRetry < 10 ) cntRetry++;
                 		                                                                                                 ^
Warning[Pe167]: argument of type "char *" is incompatible with parameter of
          type "uint8_t *"
   \                     ??InitRFM_1: (+1)
   \       0x5C   0xF44F 0x707A      MOV      R0,#+1000
   \       0x60   0x9002             STR      R0,[SP, #+8]
   \       0x62   0x2001             MOVS     R0,#+1
   \       0x64   0x9001             STR      R0,[SP, #+4]
   \       0x66   0xA803             ADD      R0,SP,#+12
   \       0x68   0x9000             STR      R0,[SP, #+0]
   \       0x6A   0x2301             MOVS     R3,#+1
   \       0x6C   0x22FF             MOVS     R2,#+255
   \       0x6E   0x2120             MOVS     R1,#+32
   \       0x70   0x0030             MOVS     R0,R6
   \       0x72   0x.... 0x....      BL       HAL_I2C_Mem_Read
   \       0x76   0x2800             CMP      R0,#+0
   \       0x78   0xD003             BEQ.N    ??InitRFM_2
   \       0x7A   0x2F0A             CMP      R7,#+10
   \       0x7C   0xDA01             BGE.N    ??InitRFM_2
   \       0x7E   0x1C7F             ADDS     R7,R7,#+1
   \       0x80   0xE7EC             B.N      ??InitRFM_1
   1465          
   1466          		printf( "%s(%d) - Codec ( MAX9860ETG+ ) / Rev. 0x%02X\n", __func__, __LINE__, buf[0] );
   \                     ??InitRFM_2: (+1)
   \       0x82   0xF89D 0x300C      LDRB     R3,[SP, #+12]
   \       0x86   0xF240 0x52BA      MOVW     R2,#+1466
   \       0x8A   0x0021             MOVS     R1,R4
   \       0x8C   0x.... 0x....      LDR.W    R0,??DataTable56_11
   \       0x90   0x.... 0x....      BL       printf
   1467          
   1468          		//========================================================================
   1469          		//  Codec 초기화.
   1470          		InitCodecMAX9860();
   \       0x94   0x.... 0x....      BL       InitCodecMAX9860
   1471          
   1472          		//========================================================================
   1473          		//	Init Audio ( I2S PCM )
   1474          		AudioInit();
   \       0x98   0x.... 0x....      BL       AudioInit
   1475          
   1476          		//========================================================================
   1477          		//	I2S Callback 등록.
   1478          		SetCallbackI2STxRxCplt( RFM_I2SEx_TxRxCpltCallback );
   \       0x9C   0x.... 0x....      LDR.W    R0,??DataTable56_12
   \       0xA0   0x.... 0x....      BL       SetCallbackI2STxRxCplt
   1479          //		HAL_I2SEx_TransmitReceive_DMA( &hi2s3, (uint16_t*)sine_table, (uint16_t*)bufAudio, 256 );
   1480          
   1481          		//========================================================================
   1482          	}
   1483          
   1484          	//========================================================================
   1485          	//	편성번호 Load
   1486          	if ( HAL_OK == HAL_I2C_IsDeviceReady( &hi2c1, (uint16_t)( 0x50 << 1 ), 2, 2 ) )
   \                     ??InitRFM_0: (+1)
   \       0xA4   0x2302             MOVS     R3,#+2
   \       0xA6   0x2202             MOVS     R2,#+2
   \       0xA8   0x21A0             MOVS     R1,#+160
   \       0xAA   0x0030             MOVS     R0,R6
   \       0xAC   0x.... 0x....      BL       HAL_I2C_IsDeviceReady
   \       0xB0   0x2800             CMP      R0,#+0
   \       0xB2   0xD11A             BNE.N    ??InitRFM_3
   1487          	{
   1488          		printf( "%s(%d) - EEPROM OK\n", __func__, __LINE__ );
   \       0xB4   0xF44F 0x62BA      MOV      R2,#+1488
   \       0xB8   0x0021             MOVS     R1,R4
   \       0xBA   0x.... 0x....      LDR.W    R0,??DataTable56_13
   \       0xBE   0x.... 0x....      BL       printf
   1489          		TestEEPROM( &hi2c1 ); //  Test EEPROM
   \       0xC2   0x0030             MOVS     R0,R6
   \       0xC4   0x.... 0x....      BL       TestEEPROM
   1490          
   1491          		//========================================================================
   1492          		//  Read TrainSet
   1493          		uint8_t	 idxTrainSet;
   1494          		idxTrainSet = GetTrainSetIdx();
   \       0xC8   0x.... 0x....      BL       GetTrainSetIdx
   \       0xCC   0x0006             MOVS     R6,R0
   1495          
   1496          		if ( idxTrainSet < 0 || idxTrainSet >= MaxTrainSet )
                 		                 ^
Warning[Pe186]: pointless comparison of unsigned integer with zero
   \       0xCE   0x0030             MOVS     R0,R6
   \       0xD0   0xB2C0             UXTB     R0,R0
   \       0xD2   0x2832             CMP      R0,#+50
   \       0xD4   0xDB05             BLT.N    ??InitRFM_4
   1497          		{
   1498          			idxTrainSet = 0;
   \       0xD6   0x2000             MOVS     R0,#+0
   \       0xD8   0x0006             MOVS     R6,R0
   1499          
   1500          			SetTrainSetIdx( idxTrainSet );
   \       0xDA   0x0030             MOVS     R0,R6
   \       0xDC   0xB2C0             UXTB     R0,R0
   \       0xDE   0x.... 0x....      BL       SetTrainSetIdx
   1501          		}
   1502          
   1503          		g_idxTrainSet = idxTrainSet;
   \                     ??InitRFM_4: (+1)
   \       0xE2   0xB2F6             UXTB     R6,R6
   \       0xE4   0x.... 0x....      LDR.W    R0,??DataTable56_14
   \       0xE8   0x6006             STR      R6,[R0, #+0]
   1504          	}
   1505          
   1506          	//========================================================================
   1507          	//	OLED
   1508          	if ( HAL_OK == HAL_I2C_IsDeviceReady( &hi2c3, (uint16_t)( SSD1306_I2C_ADDRESS ), 2, 2 ) )
   \                     ??InitRFM_3: (+1)
   \       0xEA   0x2302             MOVS     R3,#+2
   \       0xEC   0x2202             MOVS     R2,#+2
   \       0xEE   0x2178             MOVS     R1,#+120
   \       0xF0   0x0028             MOVS     R0,R5
   \       0xF2   0x.... 0x....      BL       HAL_I2C_IsDeviceReady
   \       0xF6   0x2800             CMP      R0,#+0
   \       0xF8   0xD140             BNE.N    ??InitRFM_5
   1509          	{
   1510          		//========================================================================
   1511          		//	OLED가 연결되어있음.
   1512          		SetDevID( DevRF900T );	 //  송신기.
   \       0xFA   0x2002             MOVS     R0,#+2
   \       0xFC   0x.... 0x....      BL       SetDevID
   1513          
   1514          		//	LCD Init
   1515          		LCDInit();
   \      0x100   0x.... 0x....      BL       LCDInit
   1516          
   1517          		LCDClear();
   \      0x104   0x.... 0x....      BL       LCDClear
   1518          		LCDDrawRect( 0, 0, 128, 32, 1 );
   \      0x108   0x2001             MOVS     R0,#+1
   \      0x10A   0x9000             STR      R0,[SP, #+0]
   \      0x10C   0x2320             MOVS     R3,#+32
   \      0x10E   0x2280             MOVS     R2,#+128
   \      0x110   0x2100             MOVS     R1,#+0
   \      0x112   0x2000             MOVS     R0,#+0
   \      0x114   0x.... 0x....      BL       LCDDrawRect
   1519          
   1520          		HAL_Delay( 500 );
   \      0x118   0xF44F 0x70FA      MOV      R0,#+500
   \      0x11C   0x.... 0x....      BL       HAL_Delay
   1521          
   1522          		//  LCD : 메뉴 화면.
   1523          		LCDMenu();
   \      0x120   0x.... 0x....      BL       LCDMenu
   1524          
   1525          		//  LCD :   편성 : 100
   1526          		//========================================================================
   1527          		//  편성 : XXX
   1528          		UpdateLCDMain();
   \      0x124   0x.... 0x....      BL       UpdateLCDMain
   1529          
   1530          		//  LCD : Light Icon
   1531          		LCDLight( 0 );
   \      0x128   0x2000             MOVS     R0,#+0
   \      0x12A   0x.... 0x....      BL       LCDLight
   1532          
   1533          		//========================================================================
   1534          		//  Spk Vol Set
   1535          		//  Default (1) - 0(Mute) / 1 / 2(Normal) / 3
   1536          
   1537          		int	 nSpkVol;
   1538          		nSpkVol = GetSpkVol();
   \      0x12E   0x.... 0x....      BL       GetSpkVol
   \      0x132   0x0005             MOVS     R5,R0
   1539          
   1540          		if ( nSpkVol < 0 || nSpkVol > MaxSpkVol )
   \      0x134   0x2D00             CMP      R5,#+0
   \      0x136   0xD401             BMI.N    ??InitRFM_6
   \      0x138   0x2D04             CMP      R5,#+4
   \      0x13A   0xDB04             BLT.N    ??InitRFM_7
   1541          		{
   1542          			nSpkVol = DefaultSpkVol;
   \                     ??InitRFM_6: (+1)
   \      0x13C   0x2001             MOVS     R0,#+1
   \      0x13E   0x0005             MOVS     R5,R0
   1543          			SetSpkVol( nSpkVol );
   \      0x140   0x0028             MOVS     R0,R5
   \      0x142   0x.... 0x....      BL       SetSpkVol
   1544          		}
   1545          
   1546          		g_nSpkLevel = nSpkVol;
   \                     ??InitRFM_7: (+1)
   \      0x146   0x.... 0x....      LDR.W    R0,??DataTable56_15
   \      0x14A   0x6005             STR      R5,[R0, #+0]
   1547          
   1548          		//  LCD : Spk Icon
   1549          		LCDSpeaker( g_nSpkLevel );		//  Spk Icon : Spk On
   \      0x14C   0x6800             LDR      R0,[R0, #+0]
   \      0x14E   0x.... 0x....      BL       LCDSpeaker
   1550          
   1551          		//========================================================================
   1552          		//  Mic Vol Set
   1553          		//  Default (5) - 0 ~ 9
   1554          
   1555          		int	 nMicVol;
   1556          		nMicVol = GetMicVol();
   \      0x152   0x.... 0x....      BL       GetMicVol
   \      0x156   0x0006             MOVS     R6,R0
   1557          
   1558          		if ( nMicVol < 0 || nMicVol > MaxMicVol )
   \      0x158   0x2E00             CMP      R6,#+0
   \      0x15A   0xD401             BMI.N    ??InitRFM_8
   \      0x15C   0x2E0A             CMP      R6,#+10
   \      0x15E   0xDB04             BLT.N    ??InitRFM_9
   1559          		{
   1560          			nMicVol = DefaultMicVol;
   \                     ??InitRFM_8: (+1)
   \      0x160   0x2005             MOVS     R0,#+5
   \      0x162   0x0006             MOVS     R6,R0
   1561          			SetMicVol( nMicVol );
   \      0x164   0x0030             MOVS     R0,R6
   \      0x166   0x.... 0x....      BL       SetMicVol
   1562          		}
   1563          
   1564          		//========================================================================
   1565          #if defined(USE_AUDIO_INTERPOL_COMPRESS) || defined( USE_AUDIO_ADPCM )
   1566          		//	보간압축 or ADPCM 사용시 음량 Level 조절.
   1567          		WriteI2CCodec( 0x0B, 0x60 );	//  10 ( +18 dB )
   \                     ??InitRFM_9: (+1)
   \      0x16A   0x2160             MOVS     R1,#+96
   \      0x16C   0x200B             MOVS     R0,#+11
   \      0x16E   0x.... 0x....      BL       WriteI2CCodec
   1568          #endif
   1569          
   1570          #if defined(USE_HOP_MANUAL)
   1571          		//	g_nManHopping;		//	On(1) / Off(2) / Unused(0 : Other)
   1572          		g_nManHopping	=	2;	//	Hopping Diable
   \      0x172   0x2002             MOVS     R0,#+2
   \      0x174   0x.... 0x....      LDR.W    R1,??DataTable52
   \      0x178   0x6008             STR      R0,[R1, #+0]
   \      0x17A   0xE013             B.N      ??InitRFM_10
   1573          #endif	//	defined(USE_HOP_MANUAL)
   1574          
   1575          	}
   1576          	else
   1577          	{
   1578          		//========================================================================
   1579          		//	OLED가 없으면 -> 수신기
   1580          		SetDevID( DevRF900M );	 //  수신기.
   \                     ??InitRFM_5: (+1)
   \      0x17C   0x2001             MOVS     R0,#+1
   \      0x17E   0x.... 0x....      BL       SetDevID
   1581          
   1582          		//  수신기 스피커 레벨 변경.
   1583          		//	20.09.01 - 2호선 24칸차량설정.
   1584          		WriteI2CCodec( 0x09, 0x06 );	//  0x06 ( 0 )
   \      0x182   0x2106             MOVS     R1,#+6
   \      0x184   0x2009             MOVS     R0,#+9
   \      0x186   0x.... 0x....      BL       WriteI2CCodec
   1585          
   1586          #if defined(USE_HOP_MANUAL)
   1587          		//	g_nManHopping;		//	On(1) / Off(2) / Unused(0 : Other)
   1588          		g_nManHopping	=	GetManHop();	//	Hopping Diable
   \      0x18A   0x.... 0x....      LDR.W    R5,??DataTable52
   \      0x18E   0x.... 0x....      BL       GetManHop
   \      0x192   0x6028             STR      R0,[R5, #+0]
   1589          
   1590          		printf("%s(%d) - Man Hopping ( %d )\n", __func__, __LINE__, g_nManHopping );
   \      0x194   0x682B             LDR      R3,[R5, #+0]
   \      0x196   0xF240 0x6236      MOVW     R2,#+1590
   \      0x19A   0x0021             MOVS     R1,R4
   \      0x19C   0x.... 0x....      LDR.W    R0,??DataTable56_16
   \      0x1A0   0x.... 0x....      BL       printf
   1591          #endif	//	defined(USE_HOP_MANUAL)
   1592          
   1593          	}
   1594          	//========================================================================
   1595          
   1596          #if defined(USE_RF_COMM_MODE)
   1597          		//	g_nManHopping;		//	On(1) / Off(2) / Unused(0 : Other)
   1598          		g_nRFMode	=	GetRFMode();	//	Hopping Diable
   \                     ??InitRFM_10: (+1)
   \      0x1A4   0x.... 0x....      LDR.W    R5,??DataTable56_17
   \      0x1A8   0x.... 0x....      BL       GetRFMode
   \      0x1AC   0x6028             STR      R0,[R5, #+0]
   1599          
   1600          		printf("%s(%d) - RFMode ( %d )\n", __func__, __LINE__, g_nRFMode );
   \      0x1AE   0x682B             LDR      R3,[R5, #+0]
   \      0x1B0   0xF44F 0x62C8      MOV      R2,#+1600
   \      0x1B4   0x0021             MOVS     R1,R4
   \      0x1B6   0x.... 0x....      LDR.W    R0,??DataTable56_18
   \      0x1BA   0x.... 0x....      BL       printf
   1601          #endif	//	defined(USE_HOP_MANUAL)
   1602          
   1603          #if defined(USE_RFT_ONLY_RX_SPK_ON)
   1604          
   1605          	if ( GetDevID() == DevRF900T )
   \      0x1BE   0x.... 0x....      BL       GetDevID
   \      0x1C2   0x2802             CMP      R0,#+2
   \      0x1C4   0xD102             BNE.N    ??InitRFM_11
   1606          	{
   1607          		//  송신기 : 수신중이 아닌경우 SPK OFF
   1608          //		HAL_GPIO_WritePin( SPK_ON_GPIO_Port, SPK_ON_Pin, GPIO_PIN_RESET );
   1609          		RFM_Spk(0);
   \      0x1C6   0x2000             MOVS     R0,#+0
   \      0x1C8   0x.... 0x....      BL       RFM_Spk
   1610          	}
   1611          
   1612          #endif
   1613          
   1614          
   1615          #if defined(USE_RADIO_SI4463)
   1616          
   1617          	//========================================================================
   1618          	//	Drivers/si4463
   1619          	RF_Init();
   1620          	RF_Info();
   1621          
   1622          #else
   1623          
   1624          	//========================================================================
   1625          	//	Drivers/radio
   1626          	vRadio_Init ();
   \                     ??InitRFM_11: (+1)
   \      0x1CC   0x.... 0x....      BL       vRadio_Init
   1627          
   1628          	//========================================================================
   1629          	vRadio_Init ();		//	FIXME : 일부 송신기가 2회 초기화를 해야 초기화되는 경우가 있음.
   \      0x1D0   0x.... 0x....      BL       vRadio_Init
   1630          	//========================================================================
   1631          
   1632          	si446x_part_info ();
   \      0x1D4   0x.... 0x....      BL       si446x_part_info
   1633          
   1634          	printf ( "=========================\n" );
   \      0x1D8   0x.... 0x....      LDR.W    R0,??DataTable56_19
   \      0x1DC   0x.... 0x....      BL       printf
   1635          	printf ( "%08x\n", Si446xCmd.PART_INFO.CHIPREV );
   \      0x1E0   0x.... 0x....      LDR.W    R5,??DataTable56_20
   \      0x1E4   0x....             LDR.N    R6,??DataTable51
   \      0x1E6   0x7831             LDRB     R1,[R6, #+0]
   \      0x1E8   0x0028             MOVS     R0,R5
   \      0x1EA   0x.... 0x....      BL       printf
   1636          	printf ( "%08x\n", Si446xCmd.PART_INFO.PART );
   \      0x1EE   0x6871             LDR      R1,[R6, #+4]
   \      0x1F0   0x0028             MOVS     R0,R5
   \      0x1F2   0x.... 0x....      BL       printf
   1637          	printf ( "%08x\n", Si446xCmd.PART_INFO.PBUILD );
   \      0x1F6   0x7A31             LDRB     R1,[R6, #+8]
   \      0x1F8   0x0028             MOVS     R0,R5
   \      0x1FA   0x.... 0x....      BL       printf
   1638          	printf ( "%08x\n", Si446xCmd.PART_INFO.ID );
   \      0x1FE   0x68F1             LDR      R1,[R6, #+12]
   \      0x200   0x0028             MOVS     R0,R5
   \      0x202   0x.... 0x....      BL       printf
   1639          	printf ( "%08x\n", Si446xCmd.PART_INFO.CUSTOMER );
   \      0x206   0x7C31             LDRB     R1,[R6, #+16]
   \      0x208   0x0028             MOVS     R0,R5
   \      0x20A   0x.... 0x....      BL       printf
   1640          	printf ( "%08x\n", Si446xCmd.PART_INFO.ROMID );
   \      0x20E   0x7C71             LDRB     R1,[R6, #+17]
   \      0x210   0x0028             MOVS     R0,R5
   \      0x212   0x.... 0x....      BL       printf
   1641          	printf ( "-------------------------\n" );
   \      0x216   0x.... 0x....      LDR.W    R0,??DataTable56_21
   \      0x21A   0x.... 0x....      BL       printf
   1642          
   1643          #endif
   1644          
   1645          	int i = 0;
   \      0x21E   0x2700             MOVS     R7,#+0
   1646          	int s_idxTrainSet = 0;
   \      0x220   0x2500             MOVS     R5,#+0
   1647          	int sListBuf[20]={1,2,3,4,5,
   1648          		   			  6,7,8,9,10,
   1649          					  11,12,13,14,15,
   1650          					   0, 0, 0, 0, 0};
   \      0x222   0xA806             ADD      R0,SP,#+24
   \      0x224   0x.... 0x....      LDR.W    R1,??DataTable56_22
   \      0x228   0x2250             MOVS     R2,#+80
   \      0x22A   0x.... 0x....      BL       __aeabi_memcpy4
   1651          
   1652          		for(i = 0;i < 15;i++)
   \      0x22E   0x2600             MOVS     R6,#+0
   \                     ??InitRFM_12: (+1)
   \      0x230   0x2E0F             CMP      R6,#+15
   \      0x232   0xDA0B             BGE.N    ??InitRFM_13
   1653          		{
   1654          			if(g_idxTrainSet  == sListBuf[i])
   \      0x234   0x.... 0x....      LDR.W    R0,??DataTable56_14
   \      0x238   0x6800             LDR      R0,[R0, #+0]
   \      0x23A   0xA906             ADD      R1,SP,#+24
   \      0x23C   0xF851 0x1026      LDR      R1,[R1, R6, LSL #+2]
   \      0x240   0x4288             CMP      R0,R1
   \      0x242   0xD101             BNE.N    ??InitRFM_14
   1655          			{
   1656          				s_idxTrainSet = i;
   \      0x244   0x0035             MOVS     R5,R6
   1657          				break;
   \      0x246   0xE001             B.N      ??InitRFM_13
   1658          			}
   1659          		
   1660          		}
   \                     ??InitRFM_14: (+1)
   \      0x248   0x1C76             ADDS     R6,R6,#+1
   \      0x24A   0xE7F1             B.N      ??InitRFM_12
   1661          
   1662          	//========================================================================
   1663          	//	Radio 초기화 이후 채널 설정해줌.
   1664          	{
   1665          		//========================================================================
   1666          		//  Radio Channel 설정.
   1667          		pRadioConfiguration->Radio_ChannelNumber = s_idxTrainSet;
   \                     ??InitRFM_13: (+1)
   \      0x24C   0x.... 0x....      LDR.W    R0,??DataTable56_23
   \      0x250   0x6801             LDR      R1,[R0, #+0]
   \      0x252   0x710D             STRB     R5,[R1, #+4]
   1668          		printf("%s(%d) - Radio Ch(%d) / s_idxTrainSet(%d)\n", __func__, __LINE__,
   1669          				pRadioConfiguration->Radio_ChannelNumber, s_idxTrainSet );
   \      0x254   0x9500             STR      R5,[SP, #+0]
   \      0x256   0x6800             LDR      R0,[R0, #+0]
   \      0x258   0x7903             LDRB     R3,[R0, #+4]
   \      0x25A   0xF240 0x6284      MOVW     R2,#+1668
   \      0x25E   0x0021             MOVS     R1,R4
   \      0x260   0x.... 0x....      LDR.W    R0,??DataTable56_24
   \      0x264   0x.... 0x....      BL       printf
   1670          	}
   1671          
   1672          	//========================================================================
   1673          	//	Random seed 설정.
   1674          	//	편성 & 호차 & TickCount로 설정.
   1675          
   1676          	srand( HAL_GetTick() * 100 + GetTrainSetIdx() * 10 + GetCarNo() );
                 	^
Warning[Pe223]: function "srand" declared implicitly
   \      0x268   0x.... 0x....      BL       HAL_GetTick
   \      0x26C   0x0007             MOVS     R7,R0
   \      0x26E   0x.... 0x....      BL       GetTrainSetIdx
   \      0x272   0x4680             MOV      R8,R0
   \      0x274   0x.... 0x....      BL       GetCarNo
   \      0x278   0x2264             MOVS     R2,#+100
   \      0x27A   0x210A             MOVS     R1,#+10
   \      0x27C   0xFB01 0xF808      MUL      R8,R1,R8
   \      0x280   0xFB02 0x8707      MLA      R7,R2,R7,R8
   \      0x284   0x19C7             ADDS     R7,R0,R7
   \      0x286   0x0038             MOVS     R0,R7
   \      0x288   0x.... 0x....      BL       srand
   1677          
   1678          	//	Set Offset
   1679          	g_offsetCA = rand() % 1000;
                 	             ^
Warning[Pe223]: function "rand" declared implicitly
   \      0x28C   0x.... 0x....      BL       rand
   \      0x290   0xF44F 0x717A      MOV      R1,#+1000
   \      0x294   0x.... 0x....      LDR.W    R7,??DataTable56_25
   \      0x298   0xFB90 0xF2F1      SDIV     R2,R0,R1
   \      0x29C   0xFB01 0x0012      MLS      R0,R1,R2,R0
   \      0x2A0   0x6038             STR      R0,[R7, #+0]
   1680          	printf( "%s(%d) - offsetCA( %d )\n", __func__, __LINE__, g_offsetCA );
   \      0x2A2   0x683B             LDR      R3,[R7, #+0]
   \      0x2A4   0xF44F 0x62D2      MOV      R2,#+1680
   \      0x2A8   0x0021             MOVS     R1,R4
   \      0x2AA   0x.... 0x....      LDR.W    R0,??DataTable56_26
   \      0x2AE   0x.... 0x....      BL       printf
   1681          
   1682          	//	초기 시작 Delay
   1683          	HAL_Delay(g_offsetCA);
   \      0x2B2   0x6838             LDR      R0,[R7, #+0]
   \      0x2B4   0x.... 0x....      BL       HAL_Delay
   1684          
   1685          	//========================================================================
   1686          }
                 ^
Warning[Pe940]: missing return statement at end of non-void function "InitRFM"
   \      0x2B8   0xB01A             ADD      SP,SP,#+104
   \      0x2BA   0xE8BD 0x81F0      POP      {R4-R8,PC}
   1687          
   1688          //========================================================================

   \                                 In section .text, align 2, keep-with-next
   1689          int RFM_main( void )
   1690          //========================================================================
   1691          {
   \                     RFM_main: (+1)
   \        0x0   0xB510             PUSH     {R4,LR}
   1692          	printf( "%s(%d)\n", __func__, __LINE__ );
                 	^
Warning[Pe223]: function "printf" declared implicitly
   \        0x2   0xF240 0x629C      MOVW     R2,#+1692
   \        0x6   0x.... 0x....      LDR.W    R1,??DataTable56_27
   \        0xA   0x.... 0x....      LDR.W    R0,??DataTable53_1
   \        0xE   0x.... 0x....      BL       printf
   1693          
   1694          	InitRFM();
   \       0x12   0x.... 0x....      BL       InitRFM
   1695          
   1696          	//========================================================================
   1697          	//	Radio Spi
   1698          #if 0
   1699          
   1700          	TestProcPkt();		//	RFM Main
   1701          
   1702          #endif
   1703          
   1704          #if defined(USE_TEST_RF_TX_LOOP)
   1705          	//========================================================================
   1706          	//cmd_rftx( int argc, char * argv[] )
   1707          //	ProcessCommand( "tx 0" );
   1708          
   1709          	char *argv[] = {"tx", "0"};
   1710          	cmd_rftx( 2, argv );
   1711          
   1712          #endif
   1713          
   1714          	InitProcPkt();
   \       0x16   0x.... 0x....      BL       InitProcPkt
   1715          
   1716          	int nTick;
   1717          
   1718          	/* Infinite main loop */
   1719          	while ( 1 )
   1720          	{
   1721          		nTick = HAL_GetTick();
   \                     ??RFM_main_0: (+1)
   \       0x1A   0x.... 0x....      BL       HAL_GetTick
   \       0x1E   0x0004             MOVS     R4,R0
   1722          
   1723          		if ( GetDevID() == DevRF900T )
   \       0x20   0x.... 0x....      BL       GetDevID
   \       0x24   0x2802             CMP      R0,#+2
   \       0x26   0xD105             BNE.N    ??RFM_main_1
   1724          		{
   1725          			//	송신기 - KeyPad 동작.
   1726          			LoopProcKey( nTick );
   \       0x28   0x0020             MOVS     R0,R4
   \       0x2A   0x.... 0x....      BL       LoopProcKey
   1727          
   1728          			//	ADC Power : Battery
   1729          			LoopProcAdc( nTick );
   \       0x2E   0x0020             MOVS     R0,R4
   \       0x30   0x.... 0x....      BL       LoopProcAdc
   1730          		}
   1731          
   1732          		//	Loop RFM
   1733          		LoopProcRFM( nTick );
   \                     ??RFM_main_1: (+1)
   \       0x34   0x0020             MOVS     R0,R4
   \       0x36   0x.... 0x....      BL       LoopProcRFM
   1734          
   1735          		//	Loop Process ( CLI )
   1736          		LoopProcCLI();
   \       0x3A   0x.... 0x....      BL       LoopProcCLI
   1737          
   1738          		//	Loop Proc Packet : RF Packet
   1739          		LoopProcPkt( nTick );
   \       0x3E   0x0020             MOVS     R0,R4
   \       0x40   0x.... 0x....      BL       LoopProcPkt
   1740          
   1741          		//	Loop Proc Main Watchdog Count Reload
   1742          		LoopProcMain( nTick );
   \       0x44   0x0020             MOVS     R0,R4
   \       0x46   0x.... 0x....      BL       LoopProcMain
   \       0x4A   0xE7E6             B.N      ??RFM_main_0
   1743          	}
   1744          }
   1745          
   1746          
   1747          //========================================================================

   \                                 In section .text, align 2, keep-with-next
   1748          void LoopProcRFM ( int nTick )
   1749          //========================================================================
   1750          {
   \                     LoopProcRFM: (+1)
   \        0x0   0xE92D 0x41F8      PUSH     {R3-R8,LR}
   \        0x4   0xB095             SUB      SP,SP,#+84
   \        0x6   0x0004             MOVS     R4,R0
   1751          	static int nTxOccPkt = 0;
   1752          	static int nRxOccPkt = 0;
   1753          
   1754          
   1755          	RFMPkt	bufRFTx;
   1756          
   1757          	//========================================================================
   1758          	//  Transmit - 송신기
   1759          	if ( GetDevID() == DevRF900T )
   \        0x8   0x.... 0x....      BL       GetDevID
   \        0xC   0x2802             CMP      R0,#+2
   \        0xE   0xF040 0x809A      BNE.W    ??LoopProcRFM_0
   1760          	{
   1761          		if( GetRFMMode() != RFMModeRx )
   \       0x12   0x.... 0x....      BL       GetRFMMode
   \       0x16   0x2802             CMP      R0,#+2
   \       0x18   0xD050             BEQ.N    ??LoopProcRFM_1
   1762          		{
   1763          			if( GetKey(eKeyPtt) || GetKey(eKeySos) )
   \       0x1A   0x2006             MOVS     R0,#+6
   \       0x1C   0x.... 0x....      BL       GetKey
   \       0x20   0x2800             CMP      R0,#+0
   \       0x22   0xD104             BNE.N    ??LoopProcRFM_2
   \       0x24   0x2007             MOVS     R0,#+7
   \       0x26   0x.... 0x....      BL       GetKey
   \       0x2A   0x2800             CMP      R0,#+0
   \       0x2C   0xD046             BEQ.N    ??LoopProcRFM_1
   1764          			{
   1765          				// PTT Key가 눌려있을시 전송.
   1766          				if( qBufCnt( &g_qBufAudioTx ) >= ( I2S_DMA_LOOP_SIZE * 2 ) )
   \                     ??LoopProcRFM_2: (+1)
   \       0x2E   0x.... 0x....      LDR.W    R5,??DataTable56_3
   \       0x32   0x0028             MOVS     R0,R5
   \       0x34   0x.... 0x....      BL       qBufCnt
   \       0x38   0x283C             CMP      R0,#+60
   \       0x3A   0xDB3F             BLT.N    ??LoopProcRFM_1
   1767          				{
   1768          					//		printf ( "G" );
   1769          					qBufGet( &g_qBufAudioTx, (uint8_t*)bufRFTx.dat.data, ( I2S_DMA_LOOP_SIZE * 2 ) );
   \       0x3C   0x223C             MOVS     R2,#+60
   \       0x3E   0xA906             ADD      R1,SP,#+24
   \       0x40   0x0028             MOVS     R0,R5
   \       0x42   0x.... 0x....      BL       qBufGet
   1770          
   1771          #if defined(USE_HOPPING)
   1772          					//========================================================================
   1773          					//	Packet Header
   1774          #if defined( USE_CH_ISO_DEV )
   1775          					//	Header #2
   1776          					if( GetKey(eKeyPtt) )
   \       0x46   0x2006             MOVS     R0,#+6
   \       0x48   0x.... 0x....      BL       GetKey
   \       0x4C   0x2800             CMP      R0,#+0
   \       0x4E   0xD004             BEQ.N    ??LoopProcRFM_3
   1777          					{
   1778          						_MakePktHdr2( &bufRFTx, PktPA );
   \       0x50   0x2102             MOVS     R1,#+2
   \       0x52   0xA805             ADD      R0,SP,#+20
   \       0x54   0x.... 0x....      BL       _MakePktHdr2
   \       0x58   0xE003             B.N      ??LoopProcRFM_4
   1779          					}
   1780          					else
   1781          					{
   1782          						_MakePktHdr2( &bufRFTx, PktCall );
   \                     ??LoopProcRFM_3: (+1)
   \       0x5A   0x2103             MOVS     R1,#+3
   \       0x5C   0xA805             ADD      R0,SP,#+20
   \       0x5E   0x.... 0x....      BL       _MakePktHdr2
   1783          					}
   1784          
   1785          #else
   1786          					if( GetKey(eKeyPtt) )
   1787          					{
   1788          						_MakePktHdr( &bufRFTx, GetDevID(), 0xFF, sizeof( RFMPktCtrlPACall ), PktPA );
   1789          					}
   1790          					else
   1791          					{
   1792          						_MakePktHdr( &bufRFTx, GetDevID(), 0xFF, sizeof( RFMPktCtrlPACall ), PktCall );
   1793          					}
   1794          #endif
   1795          
   1796          #else
   1797          					//  송신기 -> 수신기
   1798          					bufRFTx.hdr.addrSrc = GetDevID();		//  Src : 송신기 DevRF900T
   1799          
   1800          					if( GetKey(eKeyPtt) )	// bPTTOnOff )
   1801          					{
   1802          						//  송신기 -> 수신기
   1803          						bufRFTx.hdr.addrDest	=	DevRF900M;		 //  Dest : 수신기
   1804          					}
   1805          					else
   1806          					{
   1807          						//  송신기 -> 송신기
   1808          						bufRFTx.hdr.addrDest	=	DevRF900T;		 //  Dest : 수신기
   1809          					}
   1810          
   1811          					if( GetKey(eKeyPtt) )	bufRFTx.hdr.nPktCmd = PktPA;	//  송신기 -> 수신기
   1812          					else					bufRFTx.hdr.nPktCmd = PktCall;	//  송신기 -> 송신기
   1813          #endif
   1814          
   1815          #if defined( USE_CH_ISO_DEV )
   1816          					if( GetKey(eKeyPtt) )
   \                     ??LoopProcRFM_4: (+1)
   \       0x62   0x2006             MOVS     R0,#+6
   \       0x64   0x.... 0x....      BL       GetKey
   \       0x68   0x2800             CMP      R0,#+0
   \       0x6A   0xD013             BEQ.N    ??LoopProcRFM_5
   1817          					{
   1818          						//========================================================================
   1819          						//	PA
   1820          
   1821          						if ( GetChPARFT() != 0 )
   \       0x6C   0x.... 0x....      BL       GetChPARFT
   \       0x70   0x2800             CMP      R0,#+0
   \       0x72   0xD005             BEQ.N    ??LoopProcRFM_6
   1822          						{
   1823          							//	송신기에 전송.
   1824          							SendPktCh( GetChPARFT(), (uint8_t *)&bufRFTx,
                 							                         ^
Warning[Pe167]: argument of type "uint8_t *" is incompatible with parameter of
          type "char const *"
   1825          								(U8)sizeof( RFMPktHdr ) + sizeof( RFMPktCtrlPACall ) );
   \       0x74   0x.... 0x....      BL       GetChPARFT
   \       0x78   0x2208             MOVS     R2,#+8
   \       0x7A   0xA905             ADD      R1,SP,#+20
   \       0x7C   0x.... 0x....      BL       SendPktCh
   1826          						}
   1827          
   1828          						SendPktCh( GetChPA(), (uint8_t *)&bufRFTx,
                 						                      ^
Warning[Pe167]: argument of type "uint8_t *" is incompatible with parameter of
          type "char const *"
   1829          							pRadioConfiguration->Radio_PacketLength );
   \                     ??LoopProcRFM_6: (+1)
   \       0x80   0x.... 0x....      BL       GetChPA
   \       0x84   0x.... 0x....      LDR.W    R1,??DataTable56_23
   \       0x88   0x6809             LDR      R1,[R1, #+0]
   \       0x8A   0x794A             LDRB     R2,[R1, #+5]
   \       0x8C   0xA905             ADD      R1,SP,#+20
   \       0x8E   0x.... 0x....      BL       SendPktCh
   \       0x92   0xE013             B.N      ??LoopProcRFM_1
   1830          					}
   1831          					else
   1832          					{
   1833          						//========================================================================
   1834          						//	Call
   1835          						if ( GetChPARFT() != 0 )
   \                     ??LoopProcRFM_5: (+1)
   \       0x94   0x.... 0x....      BL       GetChPARFT
   \       0x98   0x2800             CMP      R0,#+0
   \       0x9A   0xD006             BEQ.N    ??LoopProcRFM_7
   1836          						{
   1837          							//	송신기에 직접 전송.
   1838          							SendPktCh( GetChPARFT(), (uint8_t *)&bufRFTx,
                 							                         ^
Warning[Pe167]: argument of type "uint8_t *" is incompatible with parameter of
          type "char const *"
   1839          								(U8)sizeof( RFMPktHdr ) + sizeof( RFMPktCtrlPACall ) );
   \       0x9C   0x.... 0x....      BL       GetChPARFT
   \       0xA0   0x2208             MOVS     R2,#+8
   \       0xA2   0xA905             ADD      R1,SP,#+20
   \       0xA4   0x.... 0x....      BL       SendPktCh
   \       0xA8   0xE008             B.N      ??LoopProcRFM_1
   1840          						}
   1841          						else
   1842          						{
   1843          							//	수신기를 통해 전송.
   1844          							SendPktCh( GetChPA(), (uint8_t *)&bufRFTx,
                 							                      ^
Warning[Pe167]: argument of type "uint8_t *" is incompatible with parameter of
          type "char const *"
   1845          								pRadioConfiguration->Radio_PacketLength );
   \                     ??LoopProcRFM_7: (+1)
   \       0xAA   0x.... 0x....      BL       GetChPA
   \       0xAE   0x.... 0x....      LDR.W    R1,??DataTable56_23
   \       0xB2   0x6809             LDR      R1,[R1, #+0]
   \       0xB4   0x794A             LDRB     R2,[R1, #+5]
   \       0xB6   0xA905             ADD      R1,SP,#+20
   \       0xB8   0x.... 0x....      BL       SendPktCh
   1846          						}
   1847          					}
   1848          
   1849          #else
   1850          					SendPacket( (uint8_t *)&bufRFTx,
   1851          						pRadioConfiguration->Radio_PacketLength );
   1852          #endif
   1853          				}
   1854          			}
   1855          		}
   1856          
   1857          		//========================================================================
   1858          		static int nOldRFMMode = 0;
   1859          
   1860          		int nRFMMode = GetRFMMode();
   \                     ??LoopProcRFM_1: (+1)
   \       0xBC   0x.... 0x....      BL       GetRFMMode
   \       0xC0   0x0005             MOVS     R5,R0
   1861          		if( nRFMMode != nOldRFMMode )
   \       0xC2   0x.... 0x....      LDR.W    R6,??DataTable56_28
   \       0xC6   0x6830             LDR      R0,[R6, #+0]
   \       0xC8   0x4285             CMP      R5,R0
   \       0xCA   0xD034             BEQ.N    ??LoopProcRFM_8
   1862          		{
   1863          			switch ( nRFMMode )
   \       0xCC   0x0028             MOVS     R0,R5
   \       0xCE   0x2800             CMP      R0,#+0
   \       0xD0   0xD020             BEQ.N    ??LoopProcRFM_9
   \       0xD2   0x2802             CMP      R0,#+2
   \       0xD4   0xD12E             BNE.N    ??LoopProcRFM_10
   1864          			{
   1865          			case RFMModeRx:
   1866          				LCDSetCursor( 20, 13 );
   \                     ??LoopProcRFM_11: (+1)
   \       0xD6   0x210D             MOVS     R1,#+13
   \       0xD8   0x2014             MOVS     R0,#+20
   \       0xDA   0x.... 0x....      BL       LCDSetCursor
   1867          				if ( IsMenuMaint() )
   \       0xDE   0x.... 0x....      BL       IsMenuMaint
   \       0xE2   0x2800             CMP      R0,#+0
   \       0xE4   0xD011             BEQ.N    ??LoopProcRFM_12
   1868          				{
   1869          					//	Maint Mode : 송신채널 표시.
   1870          					char sBuf[20];
   1871          					sprintf( sBuf, "수신중(%d/%d)", GetCh2Car(GetChNearRFM()), GetChNearRFM() );	//	Channel -> Car
                 					^
Warning[Pe223]: function "sprintf" declared implicitly
   \       0xE6   0x.... 0x....      BL       GetChNearRFM
   \       0xEA   0x0007             MOVS     R7,R0
   \       0xEC   0x.... 0x....      BL       GetChNearRFM
   \       0xF0   0x.... 0x....      BL       GetCh2Car
   \       0xF4   0x0002             MOVS     R2,R0
   \       0xF6   0x003B             MOVS     R3,R7
   \       0xF8   0x.... 0x....      LDR.W    R1,??DataTable56_29
   \       0xFC   0x4668             MOV      R0,SP
   \       0xFE   0x.... 0x....      BL       sprintf
   1872          					LCDPrintf( sBuf );
   \      0x102   0x4668             MOV      R0,SP
   \      0x104   0x.... 0x....      BL       LCDPrintf
   \      0x108   0xE003             B.N      ??LoopProcRFM_13
   1873          				}
   1874          				else
   1875          				{
   1876          					LCDPrintf( "수신중..." );
   \                     ??LoopProcRFM_12: (+1)
   \      0x10A   0x.... 0x....      LDR.W    R0,??DataTable56_30
   \      0x10E   0x.... 0x....      BL       LCDPrintf
   1877          				}
   1878          
   1879          				//========================================================================
   1880          				//	송신기 음성 수신시에 Codec 재설정 : 음성 수신 짧게 반복시 Codec이 죽는현상 디버깅.
   1881          				//InitCodecMAX9860();
   1882          				//========================================================================
   1883          
   1884          
   1885          				break;
   \                     ??LoopProcRFM_13: (+1)
   \      0x112   0xE00F             B.N      ??LoopProcRFM_10
   1886          
   1887          			case RFMModeNormal:
   1888          				//========================================================================
   1889          				//  편성 : XXX
   1890          				UpdateLCDMain();
   \                     ??LoopProcRFM_9: (+1)
   \      0x114   0x.... 0x....      BL       UpdateLCDMain
   1891          				//	송신기 Speaker Mute
   1892          #if defined(USE_RFT_ONLY_RX_SPK_ON)
   1893          				if ( GetDevID() == DevRF900T )
   \      0x118   0x.... 0x....      BL       GetDevID
   \      0x11C   0x2802             CMP      R0,#+2
   \      0x11E   0xD109             BNE.N    ??LoopProcRFM_14
   1894          				{
   1895          					//  송신기 : 수신중이 아닌경우 SPK OFF
   1896          					RFM_Spk(0);
   \      0x120   0x2000             MOVS     R0,#+0
   \      0x122   0x.... 0x....      BL       RFM_Spk
   1897          
   1898          					//  Red LED Off
   1899          					HAL_GPIO_WritePin ( LED_ON_B_GPIO_Port, LED_ON_B_Pin, GPIO_PIN_RESET ); //  RED LED
   \      0x126   0x2200             MOVS     R2,#+0
   \      0x128   0xF44F 0x4180      MOV      R1,#+16384
   \      0x12C   0x.... 0x....      LDR.W    R0,??DataTable56_31
   \      0x130   0x.... 0x....      BL       HAL_GPIO_WritePin
   1900          				}
   1901          #endif
   1902          				break;
   1903          			}
   1904          
   1905          			nOldRFMMode = nRFMMode;
   \                     ??LoopProcRFM_14: (+1)
   \                     ??LoopProcRFM_10: (+1)
   \      0x134   0x6035             STR      R5,[R6, #+0]
   1906          		}
   1907          
   1908          		//========================================================================
   1909          		//	상태정보 모니터링중 - 상태정보값 갱신.
   1910          		if( GetRFMMode() == RFMModeNormal )
   \                     ??LoopProcRFM_8: (+1)
   \      0x136   0x.... 0x....      BL       GetRFMMode
   \      0x13A   0x2800             CMP      R0,#+0
   \      0x13C   0xD146             BNE.N    ??LoopProcRFM_15
   1911          		{
   1912          			UpdateLCDMonitor( nTick );		//	LCD : 모니터링 상태 Update
   \      0x13E   0x0020             MOVS     R0,R4
   \      0x140   0x.... 0x....      BL       UpdateLCDMonitor
   \      0x144   0xE042             B.N      ??LoopProcRFM_15
   1913          		}
   1914          	}
   1915          	//========================================================================
   1916          	//  RFM - 수신기 - 대승객방송
   1917          	else if ( GetDevID() == DevRF900M )
   \                     ??LoopProcRFM_0: (+1)
   \      0x146   0x.... 0x....      BL       GetDevID
   \      0x14A   0x2801             CMP      R0,#+1
   \      0x14C   0xD13E             BNE.N    ??LoopProcRFM_15
   1918          	{
   1919          		if( GetRFMMode() == RFMModeOcc )
   \      0x14E   0x.... 0x....      BL       GetRFMMode
   \      0x152   0x2803             CMP      R0,#+3
   \      0x154   0xD13A             BNE.N    ??LoopProcRFM_15
   1920          		{
   1921          			//	대승객 방송 모드인 경우 대승객 방송 음성 송출.
   1922          			if( qBufCnt( &g_qBufAudioTx ) >= ( I2S_DMA_LOOP_SIZE * 2 ) )
   \      0x156   0x.... 0x....      LDR.W    R5,??DataTable56_3
   \      0x15A   0x0028             MOVS     R0,R5
   \      0x15C   0x.... 0x....      BL       qBufCnt
   \      0x160   0x283C             CMP      R0,#+60
   \      0x162   0xDB33             BLT.N    ??LoopProcRFM_15
   1923          			{
   1924          				//		printf ( "G" );
   1925          				//========================================================================
   1926          				//	Audio ( 대승객방송 음성 )
   1927          				qBufGet( &g_qBufAudioTx, (uint8_t*)bufRFTx.dat.data, ( I2S_DMA_LOOP_SIZE * 2 ) );
   \      0x164   0x223C             MOVS     R2,#+60
   \      0x166   0xA906             ADD      R1,SP,#+24
   \      0x168   0x0028             MOVS     R0,R5
   \      0x16A   0x.... 0x....      BL       qBufGet
   1928          				//	Audio Loopback ( 대승객방송 음성 )
   1929          				qBufPut( &g_qBufAudioRx, (uint8_t*)bufRFTx.dat.data, ( I2S_DMA_LOOP_SIZE * 2 ) );
   \      0x16E   0x223C             MOVS     R2,#+60
   \      0x170   0xA906             ADD      R1,SP,#+24
   \      0x172   0x.... 0x....      LDR.W    R0,??DataTable56_6
   \      0x176   0x.... 0x....      BL       qBufPut
   1930          
   1931          				//========================================================================
   1932          				//	Packet Header	-	OCC PA 전송
   1933          
   1934          				//	Header #2
   1935          				_MakePktHdr2( &bufRFTx, PktPA );
   \      0x17A   0x2102             MOVS     R1,#+2
   \      0x17C   0xA805             ADD      R0,SP,#+20
   \      0x17E   0x.... 0x....      BL       _MakePktHdr2
   1936          
   1937          
   1938          				/*
   1939          				if( GetChRx() == ChTS1_1 )	//	1호차 수신기
   1940          				{
   1941          					//	1 -> 2 ... -> 10
   1942          					SendPktCh( GetChRFMUp(), (uint8_t *)&bufRFTx,
   1943          						pRadioConfiguration->Radio_PacketLength );
   1944          				}
   1945          				else
   1946          				{
   1947          					// 10 -> 9 ... -> 1
   1948          					SendPktCh( GetChPA() - ChGap, (uint8_t *)&bufRFTx,
   1949          						pRadioConfiguration->Radio_PacketLength );
   1950          				}
   1951          				*/
   1952          
   1953          				SendPktCh( GetChRFMUp(), (uint8_t *)&bufRFTx,
                 				                         ^
Warning[Pe167]: argument of type "uint8_t *" is incompatible with parameter of
          type "char const *"
   1954          						pRadioConfiguration->Radio_PacketLength );
   \      0x182   0x.... 0x....      BL       GetChRFMUp
   \      0x186   0x.... 0x....      LDR.W    R1,??DataTable56_23
   \      0x18A   0x6809             LDR      R1,[R1, #+0]
   \      0x18C   0x794A             LDRB     R2,[R1, #+5]
   \      0x18E   0xA905             ADD      R1,SP,#+20
   \      0x190   0x.... 0x....      BL       SendPktCh
   1955          
   1956          
   1957          				nTxOccPkt++;
   \      0x194   0x.... 0x....      LDR.W    R1,??DataTable56_32
   \      0x198   0x6808             LDR      R0,[R1, #+0]
   \      0x19A   0x1C40             ADDS     R0,R0,#+1
   \      0x19C   0x6008             STR      R0,[R1, #+0]
   1958          
   1959          				if((nTxOccPkt) % 100 == 0) printf ( "OccSend (%d) \n",GetChPA() );
                 				                           ^
Warning[Pe223]: function "printf" declared implicitly
   \      0x19E   0x2064             MOVS     R0,#+100
   \      0x1A0   0x680A             LDR      R2,[R1, #+0]
   \      0x1A2   0x6809             LDR      R1,[R1, #+0]
   \      0x1A4   0xFB91 0xF1F0      SDIV     R1,R1,R0
   \      0x1A8   0xFB00 0x2011      MLS      R0,R0,R1,R2
   \      0x1AC   0x2800             CMP      R0,#+0
   \      0x1AE   0xD106             BNE.N    ??LoopProcRFM_16
   \      0x1B0   0x.... 0x....      BL       GetChPA
   \      0x1B4   0x0001             MOVS     R1,R0
   \      0x1B6   0x.... 0x....      LDR.W    R0,??DataTable56_33
   \      0x1BA   0x.... 0x....      BL       printf
   1960          
   1961          
   1962          				// 조명 On
   1963          				HAL_GPIO_WritePin ( LIGHT_ON_GPIO_Port, LIGHT_ON_Pin, GPIO_PIN_SET );
   \                     ??LoopProcRFM_16: (+1)
   \      0x1BE   0x2201             MOVS     R2,#+1
   \      0x1C0   0xF44F 0x7100      MOV      R1,#+512
   \      0x1C4   0x.... 0x....      LDR.W    R0,??DataTable56_1
   \      0x1C8   0x.... 0x....      BL       HAL_GPIO_WritePin
   1964          				//========================================================================
   1965          			}
   1966          		}
   1967          	}
   1968          
   1969          	//========================================================================
   1970          	//	수신중 해제
   1971          	if ( (nTick - g_nStampRxPkt) > TIMEOUT_RXSTAT && GetRFMMode() == RFMModeRx
   1972          			&& ( GetRFMMode() != RFMModeOcc )		//	OCC Mode - Skip
   1973          			&& ( GetRFMMode() != RFMModeUpgr )		//	Upgrade Mode - Skip
   1974          		)
   \                     ??LoopProcRFM_15: (+1)
   \      0x1CC   0x.... 0x....      LDR.W    R5,??DataTable56_34
   \      0x1D0   0x6828             LDR      R0,[R5, #+0]
   \      0x1D2   0x1A20             SUBS     R0,R4,R0
   \      0x1D4   0xF240 0x31E9      MOVW     R1,#+1001
   \      0x1D8   0x4288             CMP      R0,R1
   \      0x1DA   0xDB23             BLT.N    ??LoopProcRFM_17
   \      0x1DC   0x.... 0x....      BL       GetRFMMode
   \      0x1E0   0x2802             CMP      R0,#+2
   \      0x1E2   0xD11F             BNE.N    ??LoopProcRFM_17
   \      0x1E4   0x.... 0x....      BL       GetRFMMode
   \      0x1E8   0x2803             CMP      R0,#+3
   \      0x1EA   0xD01B             BEQ.N    ??LoopProcRFM_17
   \      0x1EC   0x.... 0x....      BL       GetRFMMode
   \      0x1F0   0x2804             CMP      R0,#+4
   \      0x1F2   0xD017             BEQ.N    ??LoopProcRFM_17
   1975          	{
   1976          		// Rx 패킷이 500 ms 없을 경우 수신모드 해제
   1977          		SetRFMMode( RFMModeNormal );
   \      0x1F4   0x2000             MOVS     R0,#+0
   \      0x1F6   0x.... 0x....      BL       SetRFMMode
   1978          
   1979          		//  수신기 Spk Relay Off
   1980          		HAL_GPIO_WritePin( AUDIO_ON_GPIO_Port, AUDIO_ON_Pin, GPIO_PIN_RESET );
   \      0x1FA   0x2200             MOVS     R2,#+0
   \      0x1FC   0xF44F 0x7180      MOV      R1,#+256
   \      0x200   0x.... 0x....      LDR.W    R0,??DataTable56_1
   \      0x204   0x.... 0x....      BL       HAL_GPIO_WritePin
   1981          
   1982          #if defined(USE_RFT_ONLY_RX_SPK_ON)
   1983          		if ( GetDevID() == DevRF900T )
   \      0x208   0x.... 0x....      BL       GetDevID
   \      0x20C   0x2802             CMP      R0,#+2
   \      0x20E   0xD102             BNE.N    ??LoopProcRFM_18
   1984          		{
   1985          			//  송신기 : 수신중이 아닌경우 SPK OFF
   1986          //			HAL_GPIO_WritePin( SPK_ON_GPIO_Port, SPK_ON_Pin, GPIO_PIN_RESET );
   1987          			RFM_Spk(0);
   \      0x210   0x2000             MOVS     R0,#+0
   \      0x212   0x.... 0x....      BL       RFM_Spk
   1988          		}
   1989          #endif
   1990          
   1991          		//  Red LED Off
   1992          		HAL_GPIO_WritePin ( LED_ON_B_GPIO_Port, LED_ON_B_Pin, GPIO_PIN_RESET ); //  RED LED
   \                     ??LoopProcRFM_18: (+1)
   \      0x216   0x2200             MOVS     R2,#+0
   \      0x218   0xF44F 0x4180      MOV      R1,#+16384
   \      0x21C   0x.... 0x....      LDR.W    R0,??DataTable56_31
   \      0x220   0x.... 0x....      BL       HAL_GPIO_WritePin
   1993          	}
   1994          
   1995          	//========================================================================
   1996          	//  수신기 Standby GPIO 제어 : 모듈동작시 1초간격 Blink
   1997          	static int s_nTickStandby;
   1998          
   1999          	if ( nTick - s_nTickStandby >= 1000 )
   \                     ??LoopProcRFM_17: (+1)
   \      0x224   0x.... 0x....      LDR.W    R6,??DataTable56_35
   \      0x228   0x6830             LDR      R0,[R6, #+0]
   \      0x22A   0x1A20             SUBS     R0,R4,R0
   \      0x22C   0xF5B0 0x7F7A      CMP      R0,#+1000
   \      0x230   0xDB1D             BLT.N    ??LoopProcRFM_19
   2000          	{
   2001          		//	Standby GPIO Toggle
   2002          		if ( GetRFMMode() == RFMModeRx )
   \      0x232   0x.... 0x....      BL       GetRFMMode
   \      0x236   0x2802             CMP      R0,#+2
   \      0x238   0xD106             BNE.N    ??LoopProcRFM_20
   2003          		{
   2004          			//  수신기:수신중 LED On ( Standby LED On )
   2005          			HAL_GPIO_WritePin( STANDBY_GPIO_Port, STANDBY_Pin, GPIO_PIN_SET );
   \      0x23A   0x2201             MOVS     R2,#+1
   \      0x23C   0x2180             MOVS     R1,#+128
   \      0x23E   0x.... 0x....      LDR.W    R0,??DataTable56_1
   \      0x242   0x.... 0x....      BL       HAL_GPIO_WritePin
   \      0x246   0xE00A             B.N      ??LoopProcRFM_21
   2006          		}
   2007          		else
   2008          		{
   2009          			//  Standby LED Toggle
   2010          			HAL_GPIO_TogglePin( STANDBY_GPIO_Port, STANDBY_Pin );
   \                     ??LoopProcRFM_20: (+1)
   \      0x248   0x2180             MOVS     R1,#+128
   \      0x24A   0x.... 0x....      LDR.W    R0,??DataTable56_1
   \      0x24E   0x.... 0x....      BL       HAL_GPIO_TogglePin
   2011          
   2012          			//	RFM(Board) Status LED
   2013          			HAL_GPIO_TogglePin ( LED_ST_GPIO_Port, LED_ST_Pin );
   \      0x252   0xF44F 0x4100      MOV      R1,#+32768
   \      0x256   0x.... 0x....      LDR.W    R0,??DataTable56_36
   \      0x25A   0x.... 0x....      BL       HAL_GPIO_TogglePin
   2014          		}
   2015          
   2016          		if ( GetRFMMode() == RFMModeNormal )
   \                     ??LoopProcRFM_21: (+1)
   \      0x25E   0x.... 0x....      BL       GetRFMMode
   \      0x262   0x2800             CMP      R0,#+0
   \      0x264   0xD102             BNE.N    ??LoopProcRFM_22
   2017          		{
   2018          			//	Normal 모드인 경우 상태정보 갱신.
   2019          		    //	Reflash Status
   2020          		    ReflashStat( nTick );	//	상태정보 갱신.
   \      0x266   0x0020             MOVS     R0,R4
   \      0x268   0x.... 0x....      BL       ReflashStat
   2021          		}
   2022          
   2023          #if defined(USE_SEND_STATUS)	//	상태 정보 전송.
   2024          		//========================================================================
   2025          		if ( GetRFMMode() == RFMModeNormal )
   2026          		{
   2027          		    SendStat(0);		//	상태정보전송.
   2028          
   2029          		    //	Reflash Status
   2030          		    ReflashStat( nTick );	//	상태정보 갱신.
   2031          		}
   2032          		//========================================================================
   2033          #endif
   2034          		s_nTickStandby = nTick;
   \                     ??LoopProcRFM_22: (+1)
   \      0x26C   0x6034             STR      R4,[R6, #+0]
   2035          	}
   2036          
   2037          #if defined(TIMEOUT_UPGRADE)
   2038          
   2039          	//========================================================================
   2040          	//	Upgrade Mode 진입후 5분간 Rx가 없는경우 Normal모드로 변경.
   2041          	if ( ( GetDevID() == DevRF900M )						//	수신기.
   2042          		&& ( ( nTick - g_nStampRxPkt ) > (TIMEOUT_UPGRADE * 1000) )	//	Timeout
   2043          		&& ( GetRFMMode() == RFMModeUpgr )
   2044          		)
   \                     ??LoopProcRFM_19: (+1)
   \      0x26E   0x.... 0x....      BL       GetDevID
   \      0x272   0x2801             CMP      R0,#+1
   \      0x274   0xD119             BNE.N    ??LoopProcRFM_23
   \      0x276   0x6828             LDR      R0,[R5, #+0]
   \      0x278   0x1A20             SUBS     R0,R4,R0
   \      0x27A   0x.... 0x....      LDR.W    R1,??DataTable56_37
   \      0x27E   0x4288             CMP      R0,R1
   \      0x280   0xDB13             BLT.N    ??LoopProcRFM_23
   \      0x282   0x.... 0x....      BL       GetRFMMode
   \      0x286   0x2804             CMP      R0,#+4
   \      0x288   0xD10F             BNE.N    ??LoopProcRFM_23
   2045          	{
   2046          		//========================================================================
   2047          		//	Normal 모드로 변경.
   2048          		SetRFMMode( RFMModeNormal );	//	Normal Mode 로 변경
   \      0x28A   0x2000             MOVS     R0,#+0
   \      0x28C   0x.... 0x....      BL       SetRFMMode
   2049          		//========================================================================
   2050          
   2051          		//  RF 수신 Start
   2052          		g_nChRx = GetChRx();	//	ChTS1_1 + g_idxTrainSet * 2 + ((g_nCarNo+1) % 2);	// 현재 호차 채널
   \      0x290   0x.... 0x....      LDR.W    R5,??DataTable56_38
   \      0x294   0x.... 0x....      BL       GetChRx
   \      0x298   0x6028             STR      R0,[R5, #+0]
   2053          
   2054          		vRadio_StartRX(
   2055          			g_nChRx,	//g_idxTrainSet,	//		pRadioConfiguration->Radio_ChannelNumber,
   2056          			pRadioConfiguration->Radio_PacketLength );
   \      0x29A   0x.... 0x....      LDR.W    R0,??DataTable56_23
   \      0x29E   0x6800             LDR      R0,[R0, #+0]
   \      0x2A0   0x7941             LDRB     R1,[R0, #+5]
   \      0x2A2   0x6828             LDR      R0,[R5, #+0]
   \      0x2A4   0xB2C0             UXTB     R0,R0
   \      0x2A6   0x.... 0x....      BL       vRadio_StartRX
   2057          	}
   2058          
   2059          #endif
   2060          
   2061          
   2062          //===================================================송신기 장치 상태정보 요청..=================================================================================
   2063          #if defined(USE_STAT_REQ)	//	송신기 : 상태 정보 요청 100 msec간격.
   2064          
   2065          	//	송신기 장치 상태정보 요청.
   2066          	static int oldTickStatReq = 0;
   2067          	static int s_idxCh = 0;
   2068          
   2069          	if	( 	GetDevID() == DevRF900T						//	송신기
   2070          			&&	GetRFMMode() == RFMModeNormal			//	Normal모드 : 상태정보 요청.
   2071          			&& GetAdcPow() == 0) // 충전 OPEN 중이면.
   \                     ??LoopProcRFM_23: (+1)
   \      0x2AA   0x.... 0x....      BL       GetDevID
   \      0x2AE   0x2802             CMP      R0,#+2
   \      0x2B0   0xD144             BNE.N    ??LoopProcRFM_24
   \      0x2B2   0x.... 0x....      BL       GetRFMMode
   \      0x2B6   0x2800             CMP      R0,#+0
   \      0x2B8   0xD140             BNE.N    ??LoopProcRFM_24
   \      0x2BA   0x.... 0x....      BL       GetAdcPow
   \      0x2BE   0x2800             CMP      R0,#+0
   \      0x2C0   0xD13C             BNE.N    ??LoopProcRFM_24
   2072          	{
   2073          #if defined(USE_ROUTE_REQ_RFM)//	수신기에서 요청의 경우 송신기가 요청하지 않음.
   2074          #else
   2075          #if defined(USE_ROUTE_REQ)	//	송신기 : Route 정보 요청.
   2076          		static int oldTickRouteReq = 0;
   2077          
   2078          		if( (nTick - oldTickRouteReq ) > (TIME_ROUTE_REQ * 1000) )
   2079          		{
   2080          			//	송신기 -> 수신기 : Route 정보 요청.
   2081          			SendRouteReq( GetChNearRFM() );		//	가까운 수신기로 Route정보 요청.
   2082          
   2083          			oldTickRouteReq = nTick + 1000;		//	1초 이후 부터 시작.
   2084          			oldTickStatReq = nTick + 1000;		//	1초 이후 부터 시작.
   2085          		}
   2086          		else
   2087          #endif		//	defined(USE_ROUTE_REQ)	//	송신기 : Route 정보 요청.
   2088          #endif
   2089          		if	( (nTick - oldTickStatReq) > TIME_STAT_REQ )	//	주기 : 300 msec
   \      0x2C2   0x.... 0x....      LDR.W    R5,??DataTable56_39
   \      0x2C6   0x6828             LDR      R0,[R5, #+0]
   \      0x2C8   0x1A20             SUBS     R0,R4,R0
   \      0x2CA   0xF240 0x112D      MOVW     R1,#+301
   \      0x2CE   0x4288             CMP      R0,R1
   \      0x2D0   0xDB40             BLT.N    ??LoopProcRFM_25
   2090          		{
   2091          			//	상태정보 요청.
   2092          			if ( s_idxCh < MaxRFMNo )
   \      0x2D2   0x.... 0x....      LDR.W    R6,??DataTable56_40
   \      0x2D6   0x6830             LDR      R0,[R6, #+0]
   \      0x2D8   0x280A             CMP      R0,#+10
   \      0x2DA   0xDA08             BGE.N    ??LoopProcRFM_26
   2093          			{
   2094          				//========================================================================
   2095          				//	수신기 상태정보
   2096          				SendStatReq( ChTS1_1 + (s_idxCh*ChGap) );
   \      0x2DC   0x.... 0x....      LDR.W    R0,??DataTable56_41
   \      0x2E0   0x6800             LDR      R0,[R0, #+0]
   \      0x2E2   0x6831             LDR      R1,[R6, #+0]
   \      0x2E4   0xEB10 0x0081      ADDS     R0,R0,R1, LSL #+2
   \      0x2E8   0x.... 0x....      BL       SendStatReq
   \      0x2EC   0xE01C             B.N      ??LoopProcRFM_27
   2097          			}
   2098          			else
   2099          			{
   2100          				//========================================================================
   2101          				//	송신기 상태정보
   2102          				if( ChTx_1 + ( s_idxCh % 2 )*ChGap != GetChRx() )
   \                     ??LoopProcRFM_26: (+1)
   \      0x2EE   0x2702             MOVS     R7,#+2
   \      0x2F0   0x.... 0x....      BL       GetChRx
   \      0x2F4   0x.... 0x....      LDR.W    R1,??DataTable56_42
   \      0x2F8   0x680A             LDR      R2,[R1, #+0]
   \      0x2FA   0x6833             LDR      R3,[R6, #+0]
   \      0x2FC   0xF8D6 0xC000      LDR      R12,[R6, #+0]
   \      0x300   0xFB9C 0xFCF7      SDIV     R12,R12,R7
   \      0x304   0xFB07 0x371C      MLS      R7,R7,R12,R3
   \      0x308   0xEB12 0x0287      ADDS     R2,R2,R7, LSL #+2
   \      0x30C   0x4282             CMP      R2,R0
   \      0x30E   0xD00B             BEQ.N    ??LoopProcRFM_27
   2103          				{
   2104          					//	타 송신기에 상태정보 요청.
   2105          					SendStatReq( ChTx_1 + ( s_idxCh % 2 )*ChGap );
   \      0x310   0x2202             MOVS     R2,#+2
   \      0x312   0x6808             LDR      R0,[R1, #+0]
   \      0x314   0x6831             LDR      R1,[R6, #+0]
   \      0x316   0x6833             LDR      R3,[R6, #+0]
   \      0x318   0xFB93 0xF3F2      SDIV     R3,R3,R2
   \      0x31C   0xFB02 0x1213      MLS      R2,R2,R3,R1
   \      0x320   0xEB10 0x0082      ADDS     R0,R0,R2, LSL #+2
   \      0x324   0x.... 0x....      BL       SendStatReq
   2106          				}
   2107          			}
   2108          
   2109          	//		if ( s_idxCh == 0 )
   2110          	//		{
   2111          	//		    //	Reflash Status
   2112          	//		    ReflashStat( nTick );	//	상태정보 갱신.
   2113          	//		}
   2114          
   2115          			s_idxCh = ( s_idxCh + 1 ) % ( MaxRFMNo + 2 );	//	MaxRFMNo : 10 + 2(송신기 2채널)
   \                     ??LoopProcRFM_27: (+1)
   \      0x328   0x6830             LDR      R0,[R6, #+0]
   \      0x32A   0x1C40             ADDS     R0,R0,#+1
   \      0x32C   0x210C             MOVS     R1,#+12
   \      0x32E   0xFB90 0xF2F1      SDIV     R2,R0,R1
   \      0x332   0xFB01 0x0012      MLS      R0,R1,R2,R0
   \      0x336   0x6030             STR      R0,[R6, #+0]
   2116          
   2117          			oldTickStatReq = nTick;
   \      0x338   0x602C             STR      R4,[R5, #+0]
   \      0x33A   0xE00B             B.N      ??LoopProcRFM_25
   2118          		}
   2119          	}
   2120          	else if(GetDevID() == DevRF900T && GetRFMMode() != RFMModeNormal)
   \                     ??LoopProcRFM_24: (+1)
   \      0x33C   0x.... 0x....      BL       GetDevID
   \      0x340   0x2802             CMP      R0,#+2
   \      0x342   0xD107             BNE.N    ??LoopProcRFM_25
   \      0x344   0x.... 0x....      BL       GetRFMMode
   \      0x348   0x2800             CMP      R0,#+0
   \      0x34A   0xD003             BEQ.N    ??LoopProcRFM_25
   2121          	{
   2122          		m_lightTxSentCnt = 0;
   \      0x34C   0x2000             MOVS     R0,#+0
   \      0x34E   0x.... 0x....      LDR.W    R1,??DataTable56_43
   \      0x352   0x6008             STR      R0,[R1, #+0]
   2123          	}
   2124          
   2125          #endif
   2126          //===================================================수신기 Route 요청.=================================================================================
   2127          
   2128          #if defined(USE_ROUTE_REQ_RFM)	//	수신기 Route 요청.
   2129          	static int oldTickRouteReq = 0;
   2130          
   2131          	static int s_ChkRsp = 0;
   2132          	static int s_JumpRouteRsq = 0;
   2133          	static int s_TimerVal = 0;
   2134          
   2135          	if	( 	GetDevID() == DevRF900M						//	수신기
   2136          			&&	GetRFMMode() == RFMModeNormal			//	Normal모드 : 상태정보 요청.
   2137          			&& m_RouteRunFlag != 0 )//&& 	g_nRFMode == RFMode1)
   \                     ??LoopProcRFM_25: (+1)
   \      0x354   0x.... 0x....      BL       GetDevID
   \      0x358   0x2801             CMP      R0,#+1
   \      0x35A   0xF040 0x809B      BNE.W    ??LoopProcRFM_28
   \      0x35E   0x.... 0x....      BL       GetRFMMode
   \      0x362   0x2800             CMP      R0,#+0
   \      0x364   0xF040 0x8096      BNE.W    ??LoopProcRFM_28
   \      0x368   0x.... 0x....      LDR.W    R6,??DataTable56_44
   \      0x36C   0x6830             LDR      R0,[R6, #+0]
   \      0x36E   0x2800             CMP      R0,#+0
   \      0x370   0xF000 0x8090      BEQ.W    ??LoopProcRFM_28
   2138          	{
   2139          
   2140          		if(g_nCarNo == 1) s_TimerVal = 1000;
   \      0x374   0x.... 0x....      LDR.W    R5,??DataTable56_45
   \      0x378   0x6828             LDR      R0,[R5, #+0]
   \      0x37A   0x2801             CMP      R0,#+1
   \      0x37C   0xD105             BNE.N    ??LoopProcRFM_29
   \      0x37E   0xF44F 0x707A      MOV      R0,#+1000
   \      0x382   0x.... 0x....      LDR.W    R1,??DataTable56_46
   \      0x386   0x6008             STR      R0,[R1, #+0]
   \      0x388   0xE004             B.N      ??LoopProcRFM_30
   2141          		else s_TimerVal = 1500;
   \                     ??LoopProcRFM_29: (+1)
   \      0x38A   0xF240 0x50DC      MOVW     R0,#+1500
   \      0x38E   0x.... 0x....      LDR.W    R1,??DataTable56_46
   \      0x392   0x6008             STR      R0,[R1, #+0]
   2142          
   2143          		if((((nTick - oldTickRouteReq ) > (TIME_ROUTE_REQ * s_TimerVal)) || m_RouteReq_OK == 1) && s_ChkRsp == 0)
   \                     ??LoopProcRFM_30: (+1)
   \      0x394   0x.... 0x....      LDR.W    R7,??DataTable56_47
   \      0x398   0x.... 0x....      LDR.W    R0,??DataTable56_46
   \      0x39C   0x6800             LDR      R0,[R0, #+0]
   \      0x39E   0x6839             LDR      R1,[R7, #+0]
   \      0x3A0   0x1A61             SUBS     R1,R4,R1
   \      0x3A2   0x4288             CMP      R0,R1
   \      0x3A4   0xDB04             BLT.N    ??LoopProcRFM_31
   \      0x3A6   0x.... 0x....      LDR.W    R0,??DataTable56_48
   \      0x3AA   0x6800             LDR      R0,[R0, #+0]
   \      0x3AC   0x2801             CMP      R0,#+1
   \      0x3AE   0xD128             BNE.N    ??LoopProcRFM_32
   \                     ??LoopProcRFM_31: (+1)
   \      0x3B0   0x.... 0x....      LDR.W    R8,??DataTable56_49
   \      0x3B4   0xF8D8 0x0000      LDR      R0,[R8, #+0]
   \      0x3B8   0x2800             CMP      R0,#+0
   \      0x3BA   0xD122             BNE.N    ??LoopProcRFM_32
   2144          		{
   2145          			m_RouteReq_OK = 0;
   \      0x3BC   0x2000             MOVS     R0,#+0
   \      0x3BE   0x....             LDR.N    R1,??DataTable56_48
   \      0x3C0   0x6008             STR      R0,[R1, #+0]
   2146          
   2147          			//	수신기 -> 수신기 : Route 정보 요청.
   2148          			//	1 -> 2
   2149          			//		 2 -> 3
   2150          			//			  3 -> 4
   2151          			if ( g_nCarNo != 10 )	//	10호차 Skip
   \      0x3C2   0x6828             LDR      R0,[R5, #+0]
   \      0x3C4   0x280A             CMP      R0,#+10
   \      0x3C6   0xD00F             BEQ.N    ??LoopProcRFM_33
   2152          			{
   2153          				//	다음번 수신기에 정보 요청
   2154          				SendRouteReq( GetChRx() + ChGap );		//
   \      0x3C8   0x.... 0x....      BL       GetChRx
   \      0x3CC   0x1D00             ADDS     R0,R0,#+4
   \      0x3CE   0x.... 0x....      BL       SendRouteReq
   2155          
   2156          				if ( GetDbg() == 5 ) printf( "Tr:%d\n",GetChRx() + ChGap );
                 				     ^
Warning[Pe223]: function "GetDbg" declared implicitly

  				if ( GetDbg() == 5 ) printf( "Tr:%d\n",GetChRx() + ChGap );
  				                     ^
"C:\D\Git_Hub\STM_IAR_SIL_Change\Library\rfm.c",2156  Warning[Pe223]: function
          "printf" declared implicitly
   \      0x3D2   0x.... 0x....      BL       GetDbg
   \      0x3D6   0x2805             CMP      R0,#+5
   \      0x3D8   0xD106             BNE.N    ??LoopProcRFM_33
   \      0x3DA   0x.... 0x....      BL       GetChRx
   \      0x3DE   0x1D00             ADDS     R0,R0,#+4
   \      0x3E0   0x0001             MOVS     R1,R0
   \      0x3E2   0x....             LDR.N    R0,??DataTable56_50
   \      0x3E4   0x.... 0x....      BL       printf
   2157          
   2158          				//	Timeout 발생시 그 다음 수신기로 정보 요청.
   2159          			}
   2160          
   2161          			oldTickRouteReq = nTick;			//	1초 이후 부터 시작.
   \                     ??LoopProcRFM_33: (+1)
   \      0x3E8   0x603C             STR      R4,[R7, #+0]
   2162          
   2163          			m_RouteRunFlag--;
   \      0x3EA   0x6830             LDR      R0,[R6, #+0]
   \      0x3EC   0x1E40             SUBS     R0,R0,#+1
   \      0x3EE   0x6030             STR      R0,[R6, #+0]
   2164          
   2165          			if( g_nCarNo != 9 && g_nCarNo != 10) s_ChkRsp = 1;
   \      0x3F0   0x6828             LDR      R0,[R5, #+0]
   \      0x3F2   0x2809             CMP      R0,#+9
   \      0x3F4   0xD005             BEQ.N    ??LoopProcRFM_32
   \      0x3F6   0x6828             LDR      R0,[R5, #+0]
   \      0x3F8   0x280A             CMP      R0,#+10
   \      0x3FA   0xD002             BEQ.N    ??LoopProcRFM_32
   \      0x3FC   0x2001             MOVS     R0,#+1
   \      0x3FE   0xF8C8 0x0000      STR      R0,[R8, #+0]
   2166          
   2167          		}
   2168          
   2169          		if( s_ChkRsp == 1
   2170          				&& (nTick - oldTickRouteReq ) > 500		//	송신후 응답시간 ( 100 msec ) 이상 시간이 지났다면
   2171          				&& ( g_nCarNo != 9 && g_nCarNo != 10 )	//	다음호차 검색은 9/10호차 Skip
   2172          				)
   \                     ??LoopProcRFM_32: (+1)
   \      0x402   0x....             LDR.N    R6,??DataTable56_49
   \      0x404   0x6830             LDR      R0,[R6, #+0]
   \      0x406   0x2801             CMP      R0,#+1
   \      0x408   0xD153             BNE.N    ??LoopProcRFM_34
   \      0x40A   0x6838             LDR      R0,[R7, #+0]
   \      0x40C   0x1A20             SUBS     R0,R4,R0
   \      0x40E   0xF240 0x11F5      MOVW     R1,#+501
   \      0x412   0x4288             CMP      R0,R1
   \      0x414   0xDB4D             BLT.N    ??LoopProcRFM_34
   \      0x416   0x6828             LDR      R0,[R5, #+0]
   \      0x418   0x2809             CMP      R0,#+9
   \      0x41A   0xD04A             BEQ.N    ??LoopProcRFM_34
   \      0x41C   0x6828             LDR      R0,[R5, #+0]
   \      0x41E   0x280A             CMP      R0,#+10
   \      0x420   0xD047             BEQ.N    ??LoopProcRFM_34
   2173          		{
   2174          
   2175          			
   2176          			//	다음 호차검색
   2177          
   2178          			if ( ( nTick - g_nStampRouteRsp ) > (TIMEOUT_RECV_ROUTE * 1000) ) // Rsp  수신 데이티가 5초이상 없다면, 다음 다다음 호차 호출.
   \      0x422   0x....             LDR.N    R0,??DataTable56_51
   \      0x424   0x6800             LDR      R0,[R0, #+0]
   \      0x426   0x1A20             SUBS     R0,R4,R0
   \      0x428   0xF241 0x3189      MOVW     R1,#+5001
   \      0x42C   0x4288             CMP      R0,R1
   \      0x42E   0xDB2E             BLT.N    ??LoopProcRFM_35
   2179          			{
   2180          				//	Timeout 발생시.
   2181          				//	다음호차부터  ~ 10까지 상태정보 전송 검색.
   2182          
   2183          				//	g_nIdxRouteFindNext	Index 증가하면서 10호차 까지 상태정보 검색.
   2184          				//	[1] [2-X] ->[3] ->[4] ... -> [10]
   2185          				SendRouteReq( GetChRx() + (2 + g_nIdxRouteFindNext) * ChGap );
   \      0x430   0x.... 0x....      BL       GetChRx
   \      0x434   0x....             LDR.N    R7,??DataTable56_52
   \      0x436   0x6839             LDR      R1,[R7, #+0]
   \      0x438   0x1C89             ADDS     R1,R1,#+2
   \      0x43A   0xEB10 0x0081      ADDS     R0,R0,R1, LSL #+2
   \      0x43E   0x.... 0x....      BL       SendRouteReq
   2186          
   2187          				if ( GetDbg() == 5 ) printf( "Tr~:%d\n",GetChRx() + (2 + g_nIdxRouteFindNext) * ChGap  );
                 				     ^
Warning[Pe223]: function "GetDbg" declared implicitly

  				if ( GetDbg() == 5 ) printf( "Tr~:%d\n",GetChRx() + (2 + g_nIdxRouteFindNext) * ChGap  );
  				                     ^
"C:\D\Git_Hub\STM_IAR_SIL_Change\Library\rfm.c",2187  Warning[Pe223]: function
          "printf" declared implicitly

  	static int nRxOccPkt = 0;
  	           ^
"C:\D\Git_Hub\STM_IAR_SIL_Change\Library\rfm.c",1752  Warning[Pe177]: variable
          "nRxOccPkt" was declared but never referenced
   \      0x442   0x.... 0x....      BL       GetDbg
   \      0x446   0x2805             CMP      R0,#+5
   \      0x448   0xD109             BNE.N    ??LoopProcRFM_36
   \      0x44A   0x.... 0x....      BL       GetChRx
   \      0x44E   0x6839             LDR      R1,[R7, #+0]
   \      0x450   0x1C89             ADDS     R1,R1,#+2
   \      0x452   0xEB10 0x0081      ADDS     R0,R0,R1, LSL #+2
   \      0x456   0x0001             MOVS     R1,R0
   \      0x458   0x....             LDR.N    R0,??DataTable56_53
   \      0x45A   0x.... 0x....      BL       printf
   2188          
   2189          				if ( ( g_nCarNo + 2 + g_nIdxRouteFindNext ) > 10 )
   \                     ??LoopProcRFM_36: (+1)
   \      0x45E   0x6829             LDR      R1,[R5, #+0]
   \      0x460   0x6838             LDR      R0,[R7, #+0]
   \      0x462   0x1841             ADDS     R1,R0,R1
   \      0x464   0x1C89             ADDS     R1,R1,#+2
   \      0x466   0x290B             CMP      R1,#+11
   \      0x468   0xDB05             BLT.N    ??LoopProcRFM_37
   2190          				{
   2191          					g_nIdxRouteFindNext = 0;
   \      0x46A   0x2000             MOVS     R0,#+0
   \      0x46C   0x6038             STR      R0,[R7, #+0]
   2192          					s_JumpRouteRsq = 0;
   \      0x46E   0x2000             MOVS     R0,#+0
   \      0x470   0x....             LDR.N    R1,??DataTable56_54
   \      0x472   0x6008             STR      R0,[R1, #+0]
   \      0x474   0xE00B             B.N      ??LoopProcRFM_35
   2193          				}
   2194          				else
   2195          				{
   2196          					s_JumpRouteRsq++;
   \                     ??LoopProcRFM_37: (+1)
   \      0x476   0x....             LDR.N    R0,??DataTable56_54
   \      0x478   0x6801             LDR      R1,[R0, #+0]
   \      0x47A   0x1C49             ADDS     R1,R1,#+1
   \      0x47C   0x6001             STR      R1,[R0, #+0]
   2197          
   2198          					if(s_JumpRouteRsq>=5)
   \      0x47E   0x6801             LDR      R1,[R0, #+0]
   \      0x480   0x2905             CMP      R1,#+5
   \      0x482   0xDB04             BLT.N    ??LoopProcRFM_35
   2199          					{
   2200          						//g_nIdxRouteFindNext +=  (s_JumpRouteRsq/5); //
   2201          						g_nIdxRouteFindNext += 1;
   \      0x484   0x6839             LDR      R1,[R7, #+0]
   \      0x486   0x1C49             ADDS     R1,R1,#+1
   \      0x488   0x6039             STR      R1,[R7, #+0]
   2202          						s_JumpRouteRsq = 0;
   \      0x48A   0x2100             MOVS     R1,#+0
   \      0x48C   0x6001             STR      R1,[R0, #+0]
   2203          					}
   2204          
   2205          
   2206          					//g_nIdxRouteFindNext++;
   2207          				}
   2208          			}
   2209          			s_ChkRsp = 0;
   \                     ??LoopProcRFM_35: (+1)
   \      0x48E   0x2000             MOVS     R0,#+0
   \      0x490   0x6030             STR      R0,[R6, #+0]
   \      0x492   0xE00E             B.N      ??LoopProcRFM_34
   2210          		}
   2211          	}
   2212          	else if(GetDevID() == DevRF900M	&& (GetRFMMode() == RFMModeTx || GetRFMMode() == RFMModeRx))
   \                     ??LoopProcRFM_28: (+1)
   \      0x494   0x.... 0x....      BL       GetDevID
   \      0x498   0x2801             CMP      R0,#+1
   \      0x49A   0xD10A             BNE.N    ??LoopProcRFM_34
   \      0x49C   0x.... 0x....      BL       GetRFMMode
   \      0x4A0   0x2801             CMP      R0,#+1
   \      0x4A2   0xD003             BEQ.N    ??LoopProcRFM_38
   \      0x4A4   0x.... 0x....      BL       GetRFMMode
   \      0x4A8   0x2802             CMP      R0,#+2
   \      0x4AA   0xD102             BNE.N    ??LoopProcRFM_34
   2213          	{
   2214          		m_lightReSendCnt = 0;
   \                     ??LoopProcRFM_38: (+1)
   \      0x4AC   0x2000             MOVS     R0,#+0
   \      0x4AE   0x....             LDR.N    R1,??DataTable56_55
   \      0x4B0   0x6008             STR      R0,[R1, #+0]
   2215          	}
   2216          
   2217          #endif
   2218          
   2219          }
   \                     ??LoopProcRFM_34: (+1)
   \      0x4B2   0xB016             ADD      SP,SP,#+88
   \      0x4B4   0xE8BD 0x81F0      POP      {R4-R8,PC}

   \                                 In section .bss, align 4
   \                     `LoopProcRFM::nTxOccPkt`:
   \        0x0                      DS8 4

   \                                 In section .bss, align 4
   \                     `LoopProcRFM{2}{3}::nOldRFMMode`:
   \        0x0                      DS8 4

   \                                 In section .bss, align 4
   \                     `LoopProcRFM::s_nTickStandby`:
   \        0x0                      DS8 4

   \                                 In section .bss, align 4
   \                     `LoopProcRFM::oldTickStatReq`:
   \        0x0                      DS8 4

   \                                 In section .bss, align 4
   \                     `LoopProcRFM::s_idxCh`:
   \        0x0                      DS8 4

   \                                 In section .bss, align 4
   \                     `LoopProcRFM::oldTickRouteReq`:
   \        0x0                      DS8 4

   \                                 In section .bss, align 4
   \                     `LoopProcRFM::s_ChkRsp`:
   \        0x0                      DS8 4

   \                                 In section .bss, align 4
   \                     `LoopProcRFM::s_JumpRouteRsq`:
   \        0x0                      DS8 4

   \                                 In section .bss, align 4
   \                     `LoopProcRFM::s_TimerVal`:
   \        0x0                      DS8 4
   2220          
   2221          //========================================================================

   \                                 In section .text, align 2, keep-with-next
   2222          void UpdateStat( RFMPktStat *pStat )
   2223          //========================================================================
   2224          {
   \                     UpdateStat: (+1)
   \        0x0   0xB5FE             PUSH     {R1-R7,LR}
   \        0x2   0x0004             MOVS     R4,R0
   2225          	//	버전정보 갱신.
   2226          	if ( pStat == NULL ) return ;
   \        0x4   0x2C00             CMP      R4,#+0
   \        0x6   0xD032             BEQ.N    ??UpdateStat_0
   2227          
   2228          	if ( 0 < pStat->nCarNo && pStat->nCarNo <= MaxCarNo )
   \                     ??UpdateStat_1: (+1)
   \        0x8   0x7B60             LDRB     R0,[R4, #+13]
   \        0xA   0x2800             CMP      R0,#+0
   \        0xC   0xD02F             BEQ.N    ??UpdateStat_2
   \        0xE   0x7B60             LDRB     R0,[R4, #+13]
   \       0x10   0x280E             CMP      R0,#+14
   \       0x12   0xDA2C             BGE.N    ??UpdateStat_2
   2229          	{
   2230          		int idx = pStat->nCarNo;
   \       0x14   0x7B65             LDRB     R5,[R4, #+13]
   2231          
   2232          		//========================================================================
   2233          		//	상태정보 갱신.
   2234          		memcpy( &g_devStat[idx].stat, pStat, sizeof(RFMPktStat) );
                 		^
Warning[Pe223]: function "memcpy" declared implicitly
   \       0x16   0x2625             MOVS     R6,#+37
   \       0x18   0x....             LDR.N    R7,??DataTable56_56
   \       0x1A   0x2219             MOVS     R2,#+25
   \       0x1C   0x0021             MOVS     R1,R4
   \       0x1E   0xFB06 0xF005      MUL      R0,R6,R5
   \       0x22   0x4438             ADD      R0,R7,R0
   \       0x24   0x.... 0x....      BL       memcpy
   2235          
   2236          		//========================================================================
   2237          		//	RSSI 갱신
   2238          		g_devStat[idx].nRSSI = g_nRSSI;
   \       0x28   0xFB06 0xF005      MUL      R0,R6,R5
   \       0x2C   0x4438             ADD      R0,R7,R0
   \       0x2E   0x....             LDR.N    R1,??DataTable56_57
   \       0x30   0x6809             LDR      R1,[R1, #+0]
   \       0x32   0xF8C0 0x101D      STR      R1,[R0, #+29]
   2239          
   2240          		//========================================================================
   2241          		//	버전정보 갱신.
   2242          
   2243          #if defined( USE_COMM_MODE_CH_GRP )
   2244          		sprintf(_sVerList[idx], "%02d:%d/R%d,%03d", idx,
                 		^
Warning[Pe223]: function "sprintf" declared implicitly
   2245          				pStat->ver_build,
   2246          				pStat->nRFMode,
   2247          				g_devStat[idx].nRSSI
   2248          				);
   \       0x36   0xFB06 0xF605      MUL      R6,R6,R5
   \       0x3A   0xEB07 0x0106      ADD      R1,R7,R6
   \       0x3E   0xF8D1 0x001D      LDR      R0,[R1, #+29]
   \       0x42   0x2614             MOVS     R6,#+20
   \       0x44   0x9001             STR      R0,[SP, #+4]
   \       0x46   0x7DE0             LDRB     R0,[R4, #+23]
   \       0x48   0x9000             STR      R0,[SP, #+0]
   \       0x4A   0x8A63             LDRH     R3,[R4, #+18]
   \       0x4C   0x002A             MOVS     R2,R5
   \       0x4E   0x....             LDR.N    R1,??DataTable56_58
   \       0x50   0x....             LDR.N    R0,??DataTable56_59
   \       0x52   0xFB06 0xF705      MUL      R7,R6,R5
   \       0x56   0x4438             ADD      R0,R0,R7
   \       0x58   0x.... 0x....      BL       sprintf
   2249          
   2250          		sprintf(_sSelfTestList[(idx-1)],"%02d 호차 : OK",idx);
   \       0x5C   0x002A             MOVS     R2,R5
   \       0x5E   0x....             LDR.N    R1,??DataTable56_60
   \       0x60   0x....             LDR.N    R0,??DataTable56_61
   \       0x62   0xFB06 0xF605      MUL      R6,R6,R5
   \       0x66   0x4430             ADD      R0,R0,R6
   \       0x68   0x3814             SUBS     R0,R0,#+20
   \       0x6A   0x.... 0x....      BL       sprintf
   2251          
   2252          #elif defined( USE_HOP_MANUAL )
   2253          		sprintf(_sVerList[idx], "%02d:v%d/hop(%d)", idx,
   2254          				pStat->ver_build,
   2255          				pStat->nManHop
   2256          				);
   2257          #else
   2258          		sprintf(_sVerList[idx], "%02d:v%d.%d.%d.%d", idx,
   2259          				pStat->ver_main,
   2260          				pStat->ver_sub,
   2261          				pStat->ver_det,
   2262          				pStat->ver_build
   2263          				);
   2264          #endif
   2265          	}
   2266          }
   \                     ??UpdateStat_2: (+1)
   \                     ??UpdateStat_0: (+1)
   \       0x6E   0xBDF7             POP      {R0-R2,R4-R7,PC}
   2267          
   2268          //========================================================================

   \                                 In section .text, align 2, keep-with-next
   2269          void SetStat( int nRspID )
   2270          //========================================================================
   2271          {
   \                     SetStat: (+1)
   \        0x0   0xB510             PUSH     {R4,LR}
   \        0x2   0x0004             MOVS     R4,R0
   2272          	//	상태정보 저장.
   2273          	//	상태정보 수신 시간 저장.
   2274          
   2275          	//	장치 응답 Flag 설정.
   2276          	g_flagRspID	|= ( 0x1 << nRspID );
   \        0x4   0x....             LDR.N    R0,??DataTable56_62
   \        0x6   0x8801             LDRH     R1,[R0, #+0]
   \        0x8   0x2201             MOVS     R2,#+1
   \        0xA   0x40A2             LSLS     R2,R2,R4
   \        0xC   0x4311             ORRS     R1,R2,R1
   \        0xE   0x8001             STRH     R1,[R0, #+0]
   2277          
   2278          	//	TimeStamp 저장.
   2279          //DEL	stampStat[nRspID] = HAL_GetTick();
   2280          	g_devStat[nRspID].stampRx = HAL_GetTick();
   \       0x10   0x.... 0x....      BL       HAL_GetTick
   \       0x14   0x....             LDR.N    R1,??DataTable56_56
   \       0x16   0x2225             MOVS     R2,#+37
   \       0x18   0xFB02 0xF204      MUL      R2,R2,R4
   \       0x1C   0x4411             ADD      R1,R1,R2
   \       0x1E   0xF8C1 0x0019      STR      R0,[R1, #+25]
   2281          }
   \       0x22   0xBD10             POP      {R4,PC}
   2282          
   2283          
   2284          //========================================================================

   \                                 In section .text, align 2, keep-with-next
   2285          void ReflashStat( int nTick )
   2286          //========================================================================
   2287          {
   \                     ReflashStat: (+1)
   \        0x0   0xB5F8             PUSH     {R3-R7,LR}
   \        0x2   0x0004             MOVS     R4,R0
   2288          	static int m_ReFlahStat_Cnt = 0;
   2289          	//	상태정보 갱신.
   2290          	//	Timeout 초과 상태정보 Disable
   2291          	if( g_bSetRspIDManual )
   \        0x4   0x....             LDR.N    R0,??DataTable56_63
   \        0x6   0x6800             LDR      R0,[R0, #+0]
   \        0x8   0x2800             CMP      R0,#+0
   \        0xA   0xD137             BNE.N    ??ReflashStat_0
   2292          	{
   2293          		//	ID 수동설정모드인 경우 return
   2294          		return ;
   2295          	}
   2296          
   2297          
   2298          	 if ( ( nTick - g_devStat[m_ReFlahStat_Cnt].stampRx ) > (TIMEOUT_RECV_STATUS * 1000) )
   \                     ??ReflashStat_1: (+1)
   \        0xC   0x2525             MOVS     R5,#+37
   \        0xE   0x....             LDR.N    R6,??DataTable56_64
   \       0x10   0x....             LDR.N    R7,??DataTable56_56
   \       0x12   0x6830             LDR      R0,[R6, #+0]
   \       0x14   0x4368             MULS     R0,R5,R0
   \       0x16   0xEB07 0x0100      ADD      R1,R7,R0
   \       0x1A   0xF8D1 0x0019      LDR      R0,[R1, #+25]
   \       0x1E   0x1A20             SUBS     R0,R4,R0
   \       0x20   0xF640 0x71A1      MOVW     R1,#+4001
   \       0x24   0x4288             CMP      R0,R1
   \       0x26   0xDB20             BLT.N    ??ReflashStat_2
   2299          	{
   2300          		g_flagRspID &= ~( 0x1 << m_ReFlahStat_Cnt );
   \       0x28   0x....             LDR.N    R1,??DataTable56_62
   \       0x2A   0x880A             LDRH     R2,[R1, #+0]
   \       0x2C   0x2301             MOVS     R3,#+1
   \       0x2E   0x6830             LDR      R0,[R6, #+0]
   \       0x30   0x4083             LSLS     R3,R3,R0
   \       0x32   0x439A             BICS     R2,R2,R3
   \       0x34   0x800A             STRH     R2,[R1, #+0]
   2301          
   2302          
   2303          		sprintf(_sSelfTestList[m_ReFlahStat_Cnt-1],"%02d 호차 : NG",(m_ReFlahStat_Cnt));
                 		^
Warning[Pe223]: function "sprintf" declared implicitly
   \       0x36   0x6832             LDR      R2,[R6, #+0]
   \       0x38   0x....             LDR.N    R1,??DataTable56_65
   \       0x3A   0x....             LDR.N    R3,??DataTable56_61
   \       0x3C   0xF8D6 0xC000      LDR      R12,[R6, #+0]
   \       0x40   0x2014             MOVS     R0,#+20
   \       0x42   0xFB00 0xFC0C      MUL      R12,R0,R12
   \       0x46   0xEB03 0x000C      ADD      R0,R3,R12
   \       0x4A   0x3814             SUBS     R0,R0,#+20
   \       0x4C   0x.... 0x....      BL       sprintf
   2304          
   2305          		//========================================================================
   2306          		//	Timeout 발생시 RSSI값 초기화.
   2307          		g_devStat[m_ReFlahStat_Cnt].nRSSI 	= 	0;
   \       0x50   0x2000             MOVS     R0,#+0
   \       0x52   0x6831             LDR      R1,[R6, #+0]
   \       0x54   0x4369             MULS     R1,R5,R1
   \       0x56   0x4439             ADD      R1,R7,R1
   \       0x58   0xF8C1 0x001D      STR      R0,[R1, #+29]
   2308          		g_devStat[m_ReFlahStat_Cnt].nNearCh 	= 	0;	//	nNearCh 초기화.
   \       0x5C   0x6831             LDR      R1,[R6, #+0]
   \       0x5E   0xFB05 0xF501      MUL      R5,R5,R1
   \       0x62   0xEB07 0x0105      ADD      R1,R7,R5
   \       0x66   0xF8C1 0x0021      STR      R0,[R1, #+33]
   2309          		//========================================================================
   2310          	}
   2311          
   2312          	 if(m_ReFlahStat_Cnt >= 10)
   \                     ??ReflashStat_2: (+1)
   \       0x6A   0x6830             LDR      R0,[R6, #+0]
   \       0x6C   0x280A             CMP      R0,#+10
   \       0x6E   0xDB02             BLT.N    ??ReflashStat_3
   2313          	{
   2314          		m_ReFlahStat_Cnt = 1;
   \       0x70   0x2001             MOVS     R0,#+1
   \       0x72   0x6030             STR      R0,[R6, #+0]
   \       0x74   0xE002             B.N      ??ReflashStat_4
   2315          	}
   2316          	 else
   2317          	 {
   2318          		 m_ReFlahStat_Cnt++;
   \                     ??ReflashStat_3: (+1)
   \       0x76   0x6830             LDR      R0,[R6, #+0]
   \       0x78   0x1C40             ADDS     R0,R0,#+1
   \       0x7A   0x6030             STR      R0,[R6, #+0]
   2319          	 }
   2320          
   2321          
   2322          
   2323          
   2324          
   2325          
   2326          	/*
   2327          	int idx;
   2328          
   2329          	for( idx = 0; idx < MaxCarNo; idx++ )
   2330          	{
   2331          		if ( GetCarNo() == idx )
   2332          		{
   2333          			//	자신의 ID Skip
   2334          			continue;
   2335          		}
   2336          
   2337          		if ( ( nTick - g_devStat[idx].stampRx ) > (TIMEOUT_RECV_STATUS * 5000) )
   2338          		{
   2339          			g_flagRspID &= ~( 0x1 << idx );
   2340          
   2341          
   2342          
   2343          			//========================================================================
   2344          			//	Timeout 발생시 RSSI값 초기화.
   2345          			g_devStat[idx].nRSSI 	= 	0;
   2346          			g_devStat[idx].nNearCh 	= 	0;	//	nNearCh 초기화.
   2347          			//========================================================================
   2348          		}
   2349          	}
   2350          	*/
   2351          }
   \                     ??ReflashStat_4: (+1)
   \                     ??ReflashStat_0: (+1)
   \       0x7C   0xBDF1             POP      {R0,R4-R7,PC}

   \                                 In section .bss, align 4
   \                     `ReflashStat::m_ReFlahStat_Cnt`:
   \        0x0                      DS8 4
   2352          
   2353          
   2354          //========================================================================

   \                                 In section .text, align 2, keep-with-next
   2355          void ReloadStampStat( void )
   2356          //========================================================================
   2357          {
   \                     ReloadStampStat: (+1)
   \        0x0   0xB538             PUSH     {R3-R5,LR}
   2358          	//	상태정보 시간 갱신.
   2359          	//	-> 상태정보 시간 최신값으로 유지.
   2360          	//	-> 방송/통화 중 상태정보 전송을 하지 않기 때문에 방송통화 이후에 상태정보가 Reset되는 현상 방지.
   2361          
   2362          	int nStamp = HAL_GetTick();
   \        0x2   0x.... 0x....      BL       HAL_GetTick
   \        0x6   0x0004             MOVS     R4,R0
   2363          
   2364          	int idx;
   2365          
   2366          	for( idx = 0; idx < 16; idx++ )
   \        0x8   0x2500             MOVS     R5,#+0
   \                     ??ReloadStampStat_0: (+1)
   \        0xA   0x2D10             CMP      R5,#+16
   \        0xC   0xDA0E             BGE.N    ??ReloadStampStat_1
   2367          	{
   2368          		if( g_flagRspID & ( 0x1 << idx ) )
   \        0xE   0x....             LDR.N    R0,??DataTable56_62
   \       0x10   0x8800             LDRH     R0,[R0, #+0]
   \       0x12   0x2101             MOVS     R1,#+1
   \       0x14   0x40A9             LSLS     R1,R1,R5
   \       0x16   0x4208             TST      R0,R1
   \       0x18   0xD006             BEQ.N    ??ReloadStampStat_2
   2369          		{
   2370          			g_devStat[idx].stampRx = nStamp;
   \       0x1A   0x....             LDR.N    R0,??DataTable56_56
   \       0x1C   0x2125             MOVS     R1,#+37
   \       0x1E   0xFB01 0xF105      MUL      R1,R1,R5
   \       0x22   0x4408             ADD      R0,R0,R1
   \       0x24   0xF8C0 0x4019      STR      R4,[R0, #+25]
   2371          		}
   2372          	}
   \                     ??ReloadStampStat_2: (+1)
   \       0x28   0x1C6D             ADDS     R5,R5,#+1
   \       0x2A   0xE7EE             B.N      ??ReloadStampStat_0
   2373          
   2374          	g_nStampRouteRsp = HAL_GetTick();		//	Normal 모드로 전환시 응답 시간 Reset
   \                     ??ReloadStampStat_1: (+1)
   \       0x2C   0x.... 0x....      BL       HAL_GetTick
   \       0x30   0x....             LDR.N    R1,??DataTable56_51
   \       0x32   0x6008             STR      R0,[R1, #+0]
   2375          }
   \       0x34   0xBD31             POP      {R0,R4,R5,PC}

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable16:
   \        0x0   0x52 0x46          DC8      "RFM"          

   \              0x4D 0x00

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable16_1:
   \        0x0   0x52 0x46          DC8      "RFT"          

   \              0x54 0x00

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable20:
   \        0x0   0x25 0x73          DC8      0x25, 0x73, 0x00, 0x00

   \              0x00 0x00

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable39:
   \        0x0   0x....'....        DC32     `SetDevID::__func__`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable39_1:
   \        0x0   0x....'....        DC32     ?_0

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable39_2:
   \        0x0   0x....'....        DC32     g_nRFMMode

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable40:
   \        0x0   0x....'....        DC32     ?_4

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable40_1:
   \        0x0   0x....'....        DC32     ?_5

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable40_2:
   \        0x0   0x....'....        DC32     ?_6

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable40_3:
   \        0x0   0x....'....        DC32     ?_7

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable40_4:
   \        0x0   0x....'....        DC32     ?_8

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable41:
   \        0x0   0x52 0x46          DC8      "RFM"          

   \              0x4D 0x00

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable41_1:
   \        0x0   0x0A 0x0A          DC8      0x0A, 0x0A, 0x00, 0x00

   \              0x00 0x00

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable41_2:
   \        0x0   0x25 0x73          DC8      "%s\n"         

   \              0x0A 0x00

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable41_3:
   \        0x0   0x....'....        DC32     ChTx_1

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable42:
   \        0x0   0x25 0x64          DC8      0x25, 0x64, 0x00, 0x00

   \              0x00 0x00

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable42_1:
   \        0x0   0x....'....        DC32     g_nCarNo

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable42_2:
   \        0x0   0x....'....        DC32     g_nRFMode

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable42_3:
   \        0x0   0x....'....        DC32     ChTS1_1

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable45:
   \        0x0   0x....'....        DC32     g_nDevID

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable45_1:
   \        0x0   0x....'....        DC32     ChTx_2

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable45_2:
   \        0x0   0x....'....        DC32     hi2c1

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable45_3:
   \        0x0   0x....'....        DC32     `LoadTrainSetIdx::__func__`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable45_4:
   \        0x0   0x....'....        DC32     ?_10

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable46:
   \        0x0   0x....'....        DC32     ?_9

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable46_1:
   \        0x0   0x....'....        DC32     ?_11

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable46_2:
   \        0x0   0x....'....        DC32     `GetTrainSetIdx::s_bOnce`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable46_3:
   \        0x0   0x....'....        DC32     g_idxTrainSet

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable47:
   \        0x0   0x....'....        DC32     `SetTrainSetIdx::__func__`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable48:
   \        0x0   0x....'....        DC32     g_devStat

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable48_1:
   \        0x0   0x....'....        DC32     g_nChPA

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable48_2:
   \        0x0   0x25 0x64          DC8      0x25, 0x64, 0x00, 0x00

   \              0x00 0x00

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable48_3:
   \        0x0   0x....'....        DC32     g_nChRFT

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable48_4:
   \        0x0   0x....'....        DC32     `GetRFMode::__func__`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable48_5:
   \        0x0   0x....'....        DC32     `SetRFMode::__func__`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable48_6:
   \        0x0   0x....'....        DC32     `GetManHop::__func__`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable49:
   \        0x0   0x....'....        DC32     g_nChRFMUp

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable49_1:
   \        0x0   0x....'....        DC32     g_nChRFMDown

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable49_2:
   \        0x0   0x46 0x00          DC8      "F",0x0,0x0    

   \              0x00 0x00

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable49_3:
   \        0x0   0x....'....        DC32     `SetManHop::__func__`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable49_4:
   \        0x0   0x....'....        DC32     `LoadCarNo::__func__`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable49_5:
   \        0x0   0x....'....        DC32     `GetCarNo::s_bOnce`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable49_6:
   \        0x0   0x....'....        DC32     `SetCarNo::__func__`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable49_7:
   \        0x0   0x....'....        DC32     `GetSpkVol::__func__`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable49_8:
   \        0x0   0x....'....        DC32     `SetSpkVol::__func__`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable49_9:
   \        0x0   0x....'....        DC32     `GetMicVol::__func__`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable50:
   \        0x0   0x....'....        DC32     `SetMicVol::__func__`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable51:
   \        0x0   0x....'....        DC32     Si446xCmd

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable51_1:
   \        0x0   0x....'....        DC32     `RF_RSSI::__func__`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable51_2:
   \        0x0   0x....'....        DC32     ?_12

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable51_3:
   \        0x0   0x....'....        DC32     `RFM_Spk::__func__`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable51_4:
   \        0x0   0x4002'1000        DC32     0x40021000

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable51_5:
   \        0x0   0x....'....        DC32     ?_16

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable51_6:
   \        0x0   0x....'....        DC32     ?_18

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable51_7:
   \        0x0   0x....'....        DC32     ?_17

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable51_8:
   \        0x0   0x....'....        DC32     ?_15

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable51_9:
   \        0x0   0x....'....        DC32     ?_19

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable51_10:
   \        0x0   0x....'....        DC32     ?_20

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable51_11:
   \        0x0   0x....'....        DC32     ?_21

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable51_12:
   \        0x0   0x....'....        DC32     `cmd_ts::__func__`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable51_13:
   \        0x0   0x....'....        DC32     ?_23

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable51_14:
   \        0x0   0x....'....        DC32     ?_24

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable51_15:
   \        0x0   0x....'....        DC32     `cmd_ch::__func__`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable51_16:
   \        0x0   0x....'....        DC32     ?_25

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable51_17:
   \        0x0   0x....'....        DC32     ?_26

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable51_18:
   \        0x0   0x....'....        DC32     `cmd_car::__func__`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable51_19:
   \        0x0   0x....'....        DC32     ?_27

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable51_20:
   \        0x0   0x....'....        DC32     `cmd_hop::__func__`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable51_21:
   \        0x0   0x....'....        DC32     ?_28

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable51_22:
   \        0x0   0x....'....        DC32     `cmd_rfmod::__func__`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable51_23:
   \        0x0   0x....'....        DC32     ?_29

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable51_24:
   \        0x0   0x....'....        DC32     ?_30

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable51_25:
   \        0x0   0x....'....        DC32     ?_31

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable51_26:
   \        0x0   0x....'....        DC32     ?_33

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable51_27:
   \        0x0   0x....'....        DC32     ?_34

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable51_28:
   \        0x0   0x....'....        DC32     ?_35

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable51_29:
   \        0x0   0x....'....        DC32     ?_36

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable51_30:
   \        0x0   0x....'....        DC32     ?_37

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable51_31:
   \        0x0   0x....'....        DC32     ?_38

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable51_32:
   \        0x0   0x....'....        DC32     ?_39

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable51_33:
   \        0x0   0x....'....        DC32     ?_40

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable51_34:
   \        0x0   0x....'....        DC32     ?_41

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable51_35:
   \        0x0   0x....'....        DC32     ?_42

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable51_36:
   \        0x0   0x....'....        DC32     nRxPkt

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable51_37:
   \        0x0   0x....'....        DC32     nTxPkt

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable51_38:
   \        0x0   0x....'....        DC32     `cmd_txpwr::__func__`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable51_39:
   \        0x0   0x....'....        DC32     ?_46

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable52:
   \        0x0   0x....'....        DC32     g_nManHopping

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable52_1:
   \        0x0   0x....'....        DC32     `cmd_rspid::__func__`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable52_2:
   \        0x0   0x....'....        DC32     g_bSetRspIDManual

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable52_3:
   \        0x0   0x....'....        DC32     g_flagRspID

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable52_4:
   \        0x0   0x....'....        DC32     `cmd_OccPa::__func__`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable53:
   \        0x0   0x....'....        DC32     ?_32

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable53_1:
   \        0x0   0x....'....        DC32     ?_48

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable54:
   \        0x0   0x....'....        DC32     ?_49

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable54_1:
   \        0x0   0x....'....        DC32     ?_50

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable55:
   \        0x0   0x....'....        DC32     ?_43

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable55_1:
   \        0x0   0x....'....        DC32     ?_44

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable55_2:
   \        0x0   0x....'....        DC32     ?_45

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable55_3:
   \        0x0   0x....'....        DC32     `RFM_I2SEx_TxRxCpltCallback::idx`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable55_4:
   \        0x0   0x....'....        DC32     bufAudioDec

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable55_5:
   \        0x0   0x....'....        DC32     bufAudioEnc

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable55_6:
   \        0x0   0x....'....        DC32     hi2s3

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable56:
   \        0x0   0x....'....        DC32     ?_47

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable56_1:
   \        0x0   0x4002'1000        DC32     0x40021000

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable56_2:
   \        0x0   0x....'....        DC32     `lowpass_Filter::last_sample`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable56_3:
   \        0x0   0x....'....        DC32     g_qBufAudioTx

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable56_4:
   \        0x0   0x....'....        DC32     r_audio_buff

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable56_5:
   \        0x0   0x....'....        DC32     bRxBuffering

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable56_6:
   \        0x0   0x....'....        DC32     g_qBufAudioRx

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable56_7:
   \        0x0   0x....'....        DC32     t_audio_buff

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable56_8:
   \        0x0   0x....'....        DC32     `InitRFM::__func__`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable56_9:
   \        0x0   0x....'....        DC32     hi2c1

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable56_10:
   \        0x0   0x....'....        DC32     hi2c3

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable56_11:
   \        0x0   0x....'....        DC32     ?_52

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable56_12:
   \        0x0   0x....'....        DC32     RFM_I2SEx_TxRxCpltCallback

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable56_13:
   \        0x0   0x....'....        DC32     ?_53

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable56_14:
   \        0x0   0x....'....        DC32     g_idxTrainSet

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable56_15:
   \        0x0   0x....'....        DC32     g_nSpkLevel

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable56_16:
   \        0x0   0x....'....        DC32     ?_54

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable56_17:
   \        0x0   0x....'....        DC32     g_nRFMode

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable56_18:
   \        0x0   0x....'....        DC32     ?_55

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable56_19:
   \        0x0   0x....'....        DC32     ?_56

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable56_20:
   \        0x0   0x....'....        DC32     ?_57

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable56_21:
   \        0x0   0x....'....        DC32     ?_58

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable56_22:
   \        0x0   0x....'....        DC32     ?_59

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable56_23:
   \        0x0   0x....'....        DC32     pRadioConfiguration

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable56_24:
   \        0x0   0x....'....        DC32     ?_60

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable56_25:
   \        0x0   0x....'....        DC32     g_offsetCA

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable56_26:
   \        0x0   0x....'....        DC32     ?_61

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable56_27:
   \        0x0   0x....'....        DC32     `RFM_main::__func__`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable56_28:
   \        0x0   0x....'....        DC32     `LoopProcRFM{2}{3}::nOldRFMMode`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable56_29:
   \        0x0   0x....'....        DC32     ?_62

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable56_30:
   \        0x0   0x....'....        DC32     ?_63

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable56_31:
   \        0x0   0x4002'0400        DC32     0x40020400

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable56_32:
   \        0x0   0x....'....        DC32     `LoopProcRFM::nTxOccPkt`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable56_33:
   \        0x0   0x....'....        DC32     ?_64

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable56_34:
   \        0x0   0x....'....        DC32     g_nStampRxPkt

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable56_35:
   \        0x0   0x....'....        DC32     `LoopProcRFM::s_nTickStandby`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable56_36:
   \        0x0   0x4002'0C00        DC32     0x40020c00

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable56_37:
   \        0x0   0x0004'93E1        DC32     0x493e1

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable56_38:
   \        0x0   0x....'....        DC32     g_nChRx

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable56_39:
   \        0x0   0x....'....        DC32     `LoopProcRFM::oldTickStatReq`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable56_40:
   \        0x0   0x....'....        DC32     `LoopProcRFM::s_idxCh`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable56_41:
   \        0x0   0x....'....        DC32     ChTS1_1

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable56_42:
   \        0x0   0x....'....        DC32     ChTx_1

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable56_43:
   \        0x0   0x....'....        DC32     m_lightTxSentCnt

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable56_44:
   \        0x0   0x....'....        DC32     m_RouteRunFlag

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable56_45:
   \        0x0   0x....'....        DC32     g_nCarNo

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable56_46:
   \        0x0   0x....'....        DC32     `LoopProcRFM::s_TimerVal`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable56_47:
   \        0x0   0x....'....        DC32     `LoopProcRFM::oldTickRouteReq`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable56_48:
   \        0x0   0x....'....        DC32     m_RouteReq_OK

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable56_49:
   \        0x0   0x....'....        DC32     `LoopProcRFM::s_ChkRsp`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable56_50:
   \        0x0   0x....'....        DC32     ?_65

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable56_51:
   \        0x0   0x....'....        DC32     g_nStampRouteRsp

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable56_52:
   \        0x0   0x....'....        DC32     g_nIdxRouteFindNext

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable56_53:
   \        0x0   0x....'....        DC32     ?_66

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable56_54:
   \        0x0   0x....'....        DC32     `LoopProcRFM::s_JumpRouteRsq`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable56_55:
   \        0x0   0x....'....        DC32     m_lightReSendCnt

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable56_56:
   \        0x0   0x....'....        DC32     g_devStat

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable56_57:
   \        0x0   0x....'....        DC32     g_nRSSI

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable56_58:
   \        0x0   0x....'....        DC32     ?_67

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable56_59:
   \        0x0   0x....'....        DC32     _sVerList

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable56_60:
   \        0x0   0x....'....        DC32     ?_68

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable56_61:
   \        0x0   0x....'....        DC32     _sSelfTestList

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable56_62:
   \        0x0   0x....'....        DC32     g_flagRspID

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable56_63:
   \        0x0   0x....'....        DC32     g_bSetRspIDManual

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable56_64:
   \        0x0   0x....'....        DC32     `ReflashStat::m_ReFlahStat_Cnt`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable56_65:
   \        0x0   0x....'....        DC32     ?_69

   \                                 In section .rodata, align 4
   \                     ?_0:
   \        0x0   0x25 0x73          DC8 "%s : %s(%d)\012"

   \              0x20 0x3A    

   \              0x20 0x25    

   \              0x73 0x28    

   \              0x25 0x64    

   \              0x29 0x0A    

   \              0x00
   \        0xD                      DS8 3

   \                                 In section .rodata, align 4
   \        0x0   0x52 0x46          DC8 "RFM"

   \              0x4D 0x00

   \                                 In section .rodata, align 4
   \        0x0   0x52 0x46          DC8 "RFT"

   \              0x54 0x00

   \                                 In section .rodata, align 4
   \        0x0   0x25 0x73          DC8 "%s"

   \              0x00
   \        0x3                      DS8 1

   \                                 In section .rodata, align 4
   \                     ?_4:
   \        0x0   0x5B 0x4E          DC8 "[Normal]"

   \              0x6F 0x72    

   \              0x6D 0x61    

   \              0x6C 0x5D    

   \              0x00
   \        0x9                      DS8 3

   \                                 In section .rodata, align 4
   \                     ?_5:
   \        0x0   0x5B 0x54          DC8 "[Tx]"

   \              0x78 0x5D    

   \              0x00
   \        0x5                      DS8 3

   \                                 In section .rodata, align 4
   \                     ?_6:
   \        0x0   0x5B 0x52          DC8 "[Rx]"

   \              0x78 0x5D    

   \              0x00
   \        0x5                      DS8 3

   \                                 In section .rodata, align 4
   \                     ?_7:
   \        0x0   0x5B 0x4F          DC8 "[Occ]"

   \              0x63 0x63    

   \              0x5D 0x00
   \        0x6                      DS8 2

   \                                 In section .rodata, align 4
   \                     ?_8:
   \        0x0   0x5B 0x55          DC8 "[Upgr]"

   \              0x70 0x67    

   \              0x72 0x5D    

   \              0x00
   \        0x7                      DS8 1

   \                                 In section .rodata, align 4
   \                     ?_9:
   \        0x0   0x5B 0x4E          DC8 "[N/A]"

   \              0x2F 0x41    

   \              0x5D 0x00
   \        0x6                      DS8 2

   \                                 In section .rodata, align 4
   \                     ?_10:
   \        0x0   0x25 0x73          DC8 "%s(%d) - EEPROM Error\012"

   \              0x28 0x25    

   \              0x64 0x29    

   \              0x20 0x2D    

   \              0x20 0x45    

   \              0x45 0x50    

   \              0x52 0x4F    

   \              0x4D 0x20    

   \              0x45 0x72    

   \              0x72 0x6F    

   \              0x72 0x0A    

   \              0x00
   \       0x17                      DS8 1

   \                                 In section .rodata, align 4
   \                     ?_11:
   \        0x0   0x25 0x73          DC8 "%s(%d) - %d\012"

   \              0x28 0x25    

   \              0x64 0x29    

   \              0x20 0x2D    

   \              0x20 0x25    

   \              0x64 0x0A    

   \              0x00
   \        0xD                      DS8 3

   \                                 In section .rodata, align 4
   \                     ?_12:
   \        0x0   0x25 0x73          DC8 "%s(%d) - ant1:%d / ant2:%d / curr:%d / latch:%d\012"

   \              0x28 0x25    

   \              0x64 0x29    

   \              0x20 0x2D    

   \              0x20 0x61    

   \              0x6E 0x74    

   \              0x31 0x3A    

   \              0x25 0x64    

   \              0x20 0x2F    

   \              0x20 0x61    

   \              0x6E 0x74    

   \              0x32 0x3A    

   \              0x25 0x64    

   \              0x20 0x2F    

   \              0x20 0x63    

   \              0x75 0x72    

   \              0x72 0x3A    

   \              0x25 0x64    

   \              0x20 0x2F    

   \              0x20 0x6C    

   \              0x61 0x74    

   \              0x63 0x68    

   \              0x3A 0x25    

   \              0x64 0x0A    

   \              0x00
   \       0x31                      DS8 3

   \                                 In section .rodata, align 4
   \        0x0   0x0A 0x0A          DC8 "\012\012"

   \              0x00
   \        0x3                      DS8 1

   \                                 In section .rodata, align 4
   \        0x0   0x25 0x73          DC8 "%s\012"

   \              0x0A 0x00

   \                                 In section .rodata, align 4
   \                     ?_15:
   \        0x0   0x56 0x65          DC8 "Version = %s(%s - %s)\012"

   \              0x72 0x73    

   \              0x69 0x6F    

   \              0x6E 0x20    

   \              0x3D 0x20    

   \              0x25 0x73    

   \              0x28 0x25    

   \              0x73 0x20    

   \              0x2D 0x20    

   \              0x25 0x73    

   \              0x29 0x0A    

   \              0x00
   \       0x17                      DS8 1

   \                                 In section .rodata, align 4
   \                     ?_16:
   \        0x0   0x31 0x2E          DC8 "1.1.0.370"

   \              0x31 0x2E    

   \              0x30 0x2E    

   \              0x33 0x37    

   \              0x30 0x00
   \        0xA                      DS8 2

   \                                 In section .rodata, align 4
   \                     ?_17:
   \        0x0   0x53 0x65          DC8 "Sep 20 2022"

   \              0x70 0x20    

   \              0x32 0x30    

   \              0x20 0x32    

   \              0x30 0x32    

   \              0x32 0x00

   \                                 In section .rodata, align 4
   \                     ?_18:
   \        0x0   0x32 0x33          DC8 "23:37:24"

   \              0x3A 0x33    

   \              0x37 0x3A    

   \              0x32 0x34    

   \              0x00
   \        0x9                      DS8 3

   \                                 In section .rodata, align 4
   \                     ?_19:
   \        0x0   0x52 0x46          DC8 "RFM v%s"

   \              0x4D 0x20    

   \              0x76 0x25    

   \              0x73 0x00

   \                                 In section .rodata, align 4
   \                     ?_20:
   \        0x0   0x0000'0001        DC32 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 0, 0, 0, 0, 0

   \              0x0000'0002  

   \              0x0000'0003  

   \              0x0000'0004  

   \              0x0000'0005  

   \              0x0000'0006  

   \              0x0000'0007  

   \              0x0000'0008  

   \              0x0000'0009  

   \              0x0000'000A  

   \              0x0000'000B  

   \              0x0000'000C  

   \              0x0000'000D  

   \              0x0000'000E  

   \              0x0000'000F  

   \              0x0000'0000  

   \              0x0000'0000  

   \              0x0000'0000  

   \              0x0000'0000  

   \              0x0000'0000

   \                                 In section .rodata, align 4
   \                     ?_21:
   \        0x0   0x54 0x72          DC8 "Train Set : %d\012"

   \              0x61 0x69    

   \              0x6E 0x20    

   \              0x53 0x65    

   \              0x74 0x20    

   \              0x3A 0x20    

   \              0x25 0x64    

   \              0x0A 0x00

   \                                 In section .rodata, align 4
   \        0x0   0x25 0x64          DC8 "%d"

   \              0x00
   \        0x3                      DS8 1

   \                                 In section .rodata, align 4
   \                     ?_23:
   \        0x0   0x25 0x73          DC8 "%s(%d) - Train Set : %d\012"

   \              0x28 0x25    

   \              0x64 0x29    

   \              0x20 0x2D    

   \              0x20 0x54    

   \              0x72 0x61    

   \              0x69 0x6E    

   \              0x20 0x53    

   \              0x65 0x74    

   \              0x20 0x3A    

   \              0x20 0x25    

   \              0x64 0x0A    

   \              0x00
   \       0x19                      DS8 3

   \                                 In section .rodata, align 4
   \                     ?_24:
   \        0x0   0x52 0x46          DC8 "RF Channel: %d\012"

   \              0x20 0x43    

   \              0x68 0x61    

   \              0x6E 0x6E    

   \              0x65 0x6C    

   \              0x3A 0x20    

   \              0x25 0x64    

   \              0x0A 0x00

   \                                 In section .rodata, align 4
   \                     ?_25:
   \        0x0   0x25 0x73          DC8 "%s(%d) - Channel : %d\012"

   \              0x28 0x25    

   \              0x64 0x29    

   \              0x20 0x2D    

   \              0x20 0x43    

   \              0x68 0x61    

   \              0x6E 0x6E    

   \              0x65 0x6C    

   \              0x20 0x3A    

   \              0x20 0x25    

   \              0x64 0x0A    

   \              0x00
   \       0x17                      DS8 1

   \                                 In section .rodata, align 4
   \                     ?_26:
   \        0x0   0x43 0x61          DC8 "Car No : %d\012"

   \              0x72 0x20    

   \              0x4E 0x6F    

   \              0x20 0x3A    

   \              0x20 0x25    

   \              0x64 0x0A    

   \              0x00
   \        0xD                      DS8 3

   \                                 In section .rodata, align 4
   \                     ?_27:
   \        0x0   0x25 0x73          DC8 "%s(%d) - Car No : %d\012"

   \              0x28 0x25    

   \              0x64 0x29    

   \              0x20 0x2D    

   \              0x20 0x43    

   \              0x61 0x72    

   \              0x20 0x4E    

   \              0x6F 0x20    

   \              0x3A 0x20    

   \              0x25 0x64    

   \              0x0A 0x00
   \       0x16                      DS8 2

   \                                 In section .rodata, align 4
   \                     ?_28:
   \        0x0   0x25 0x73          DC8 "%s(%d) - Manual Hop : %d\012"

   \              0x28 0x25    

   \              0x64 0x29    

   \              0x20 0x2D    

   \              0x20 0x4D    

   \              0x61 0x6E    

   \              0x75 0x61    

   \              0x6C 0x20    

   \              0x48 0x6F    

   \              0x70 0x20    

   \              0x3A 0x20    

   \              0x25 0x64    

   \              0x0A 0x00
   \       0x1A                      DS8 2

   \                                 In section .rodata, align 4
   \                     ?_29:
   \        0x0   0x25 0x73          DC8 "%s(%d) - RFMode : %d\012"

   \              0x28 0x25    

   \              0x64 0x29    

   \              0x20 0x2D    

   \              0x20 0x52    

   \              0x46 0x4D    

   \              0x6F 0x64    

   \              0x65 0x20    

   \              0x3A 0x20    

   \              0x25 0x64    

   \              0x0A 0x00
   \       0x16                      DS8 2

   \                                 In section .rodata, align 4
   \                     ?_30:
   \        0x0   0x5B 0x53          DC8 "[S/W Info]\012"

   \              0x2F 0x57    

   \              0x20 0x49    

   \              0x6E 0x66    

   \              0x6F 0x5D    

   \              0x0A 0x00

   \                                 In section .rodata, align 4
   \                     ?_31:
   \        0x0   0x20 0x2D          DC8 " - Boot : %d Byte\012"

   \              0x20 0x42    

   \              0x6F 0x6F    

   \              0x74 0x20    

   \              0x3A 0x20    

   \              0x25 0x64    

   \              0x20 0x42    

   \              0x79 0x74    

   \              0x65 0x0A    

   \              0x00
   \       0x13                      DS8 1

   \                                 In section .rodata, align 4
   \                     ?_32:
   \        0x0   0x20 0x2D          DC8 " - App : %d Byte\012"

   \              0x20 0x41    

   \              0x70 0x70    

   \              0x20 0x3A    

   \              0x20 0x25    

   \              0x64 0x20    

   \              0x42 0x79    

   \              0x74 0x65    

   \              0x0A 0x00
   \       0x12                      DS8 2

   \                                 In section .rodata, align 4
   \                     ?_33:
   \        0x0   0x5B 0x53          DC8 "[Setting]\012"

   \              0x65 0x74    

   \              0x74 0x69    

   \              0x6E 0x67    

   \              0x5D 0x0A    

   \              0x00
   \        0xB                      DS8 1

   \                                 In section .rodata, align 4
   \                     ?_34:
   \        0x0   0x20 0x2D          DC8 " - Train Set : %d\012"

   \              0x20 0x54    

   \              0x72 0x61    

   \              0x69 0x6E    

   \              0x20 0x53    

   \              0x65 0x74    

   \              0x20 0x3A    

   \              0x20 0x25    

   \              0x64 0x0A    

   \              0x00
   \       0x13                      DS8 1

   \                                 In section .rodata, align 4
   \                     ?_35:
   \        0x0   0x20 0x2D          DC8 " - Car No : %d\012"

   \              0x20 0x43    

   \              0x61 0x72    

   \              0x20 0x4E    

   \              0x6F 0x20    

   \              0x3A 0x20    

   \              0x25 0x64    

   \              0x0A 0x00

   \                                 In section .rodata, align 4
   \                     ?_36:
   \        0x0   0x20 0x2D          DC8 " - RF Channel: %d\012"

   \              0x20 0x52    

   \              0x46 0x20    

   \              0x43 0x68    

   \              0x61 0x6E    

   \              0x6E 0x65    

   \              0x6C 0x3A    

   \              0x20 0x25    

   \              0x64 0x0A    

   \              0x00
   \       0x13                      DS8 1

   \                                 In section .rodata, align 4
   \                     ?_37:
   \        0x0   0x20 0x2D          DC8 " - Mode : %s(%d)\012"

   \              0x20 0x4D    

   \              0x6F 0x64    

   \              0x65 0x20    

   \              0x3A 0x20    

   \              0x25 0x73    

   \              0x28 0x25    

   \              0x64 0x29    

   \              0x0A 0x00
   \       0x12                      DS8 2

   \                                 In section .rodata, align 4
   \                     ?_38:
   \        0x0   0x20 0x2D          DC8 " - GetChNearRFM() : %d\012"

   \              0x20 0x47    

   \              0x65 0x74    

   \              0x43 0x68    

   \              0x4E 0x65    

   \              0x61 0x72    

   \              0x52 0x46    

   \              0x4D 0x28    

   \              0x29 0x20    

   \              0x3A 0x20    

   \              0x25 0x64    

   \              0x0A 0x00

   \                                 In section .rodata, align 4
   \                     ?_39:
   \        0x0   0x20 0x2D          DC8 " - GetChNearRFT() : %d\012"

   \              0x20 0x47    

   \              0x65 0x74    

   \              0x43 0x68    

   \              0x4E 0x65    

   \              0x61 0x72    

   \              0x52 0x46    

   \              0x54 0x28    

   \              0x29 0x20    

   \              0x3A 0x20    

   \              0x25 0x64    

   \              0x0A 0x00

   \                                 In section .rodata, align 4
   \                     ?_40:
   \        0x0   0x20 0x2D          DC8 " - GetChPARFT() : %d\012"

   \              0x20 0x47    

   \              0x65 0x74    

   \              0x43 0x68    

   \              0x50 0x41    

   \              0x52 0x46    

   \              0x54 0x28    

   \              0x29 0x20    

   \              0x3A 0x20    

   \              0x25 0x64    

   \              0x0A 0x00
   \       0x16                      DS8 2

   \                                 In section .rodata, align 4
   \                     ?_41:
   \        0x0   0x20 0x2D          DC8 " - GetChPA() : %d\012"

   \              0x20 0x47    

   \              0x65 0x74    

   \              0x43 0x68    

   \              0x50 0x41    

   \              0x28 0x29    

   \              0x20 0x3A    

   \              0x20 0x25    

   \              0x64 0x0A    

   \              0x00
   \       0x13                      DS8 1

   \                                 In section .rodata, align 4
   \                     ?_42:
   \        0x0   0x20 0x2D          DC8 " - GetChRFMUp() : %d\012"

   \              0x20 0x47    

   \              0x65 0x74    

   \              0x43 0x68    

   \              0x52 0x46    

   \              0x4D 0x55    

   \              0x70 0x28    

   \              0x29 0x20    

   \              0x3A 0x20    

   \              0x25 0x64    

   \              0x0A 0x00
   \       0x16                      DS8 2

   \                                 In section .rodata, align 4
   \                     ?_43:
   \        0x0   0x20 0x2D          DC8 " - GetChRFMDown() : %d\012"

   \              0x20 0x47    

   \              0x65 0x74    

   \              0x43 0x68    

   \              0x52 0x46    

   \              0x4D 0x44    

   \              0x6F 0x77    

   \              0x6E 0x28    

   \              0x29 0x20    

   \              0x3A 0x20    

   \              0x25 0x64    

   \              0x0A 0x00

   \                                 In section .rodata, align 4
   \                     ?_44:
   \        0x0   0x5B 0x52          DC8 "[RF Info] Tx : %d / Rx : %d\012"

   \              0x46 0x20    

   \              0x49 0x6E    

   \              0x66 0x6F    

   \              0x5D 0x20    

   \              0x54 0x78    

   \              0x20 0x3A    

   \              0x20 0x25    

   \              0x64 0x20    

   \              0x2F 0x20    

   \              0x52 0x78    

   \              0x20 0x3A    

   \              0x20 0x25    

   \              0x64 0x0A    

   \              0x00
   \       0x1D                      DS8 3

   \                                 In section .rodata, align 4
   \                     ?_45:
   \        0x0   0x25 0x73          DC8 "%s(%d) - Tx Pwr(%d)\012"

   \              0x28 0x25    

   \              0x64 0x29    

   \              0x20 0x2D    

   \              0x20 0x54    

   \              0x78 0x20    

   \              0x50 0x77    

   \              0x72 0x28    

   \              0x25 0x64    

   \              0x29 0x0A    

   \              0x00
   \       0x15                      DS8 3

   \                                 In section .rodata, align 4
   \                     ?_46:
   \        0x0   0x25 0x73          DC8 "%s(%d) - return\012"

   \              0x28 0x25    

   \              0x64 0x29    

   \              0x20 0x2D    

   \              0x20 0x72    

   \              0x65 0x74    

   \              0x75 0x72    

   \              0x6E 0x0A    

   \              0x00
   \       0x11                      DS8 3

   \                                 In section .rodata, align 4
   \                     ?_47:
   \        0x0   0x25 0x73          DC8 "%s(%d) - ID Flag : 0x%04X\012"

   \              0x28 0x25    

   \              0x64 0x29    

   \              0x20 0x2D    

   \              0x20 0x49    

   \              0x44 0x20    

   \              0x46 0x6C    

   \              0x61 0x67    

   \              0x20 0x3A    

   \              0x20 0x30    

   \              0x78 0x25    

   \              0x30 0x34    

   \              0x58 0x0A    

   \              0x00
   \       0x1B                      DS8 1

   \                                 In section .rodata, align 4
   \                     ?_48:
   \        0x0   0x25 0x73          DC8 "%s(%d)\012"

   \              0x28 0x25    

   \              0x64 0x29    

   \              0x0A 0x00

   \                                 In section .rodata, align 4
   \                     ?_49:
   \        0x0   0x25 0x73          DC8 "%s(%d) - Start\012"

   \              0x28 0x25    

   \              0x64 0x29    

   \              0x20 0x2D    

   \              0x20 0x53    

   \              0x74 0x61    

   \              0x72 0x74    

   \              0x0A 0x00

   \                                 In section .rodata, align 4
   \                     ?_50:
   \        0x0   0x25 0x73          DC8 "%s(%d) - Stop\012"

   \              0x28 0x25    

   \              0x64 0x29    

   \              0x20 0x2D    

   \              0x20 0x53    

   \              0x74 0x6F    

   \              0x70 0x0A    

   \              0x00
   \        0xF                      DS8 1

   \                                 In section .rodata, align 2
   \        0x0   0x46 0x00          DC8 "F"

   \                                 In section .rodata, align 4
   \                     ?_52:
   \        0x0   0x25 0x73          DC8 "%s(%d) - Codec ( MAX9860ETG+ ) / Rev. 0x%02X\012"

   \              0x28 0x25    

   \              0x64 0x29    

   \              0x20 0x2D    

   \              0x20 0x43    

   \              0x6F 0x64    

   \              0x65 0x63    

   \              0x20 0x28    

   \              0x20 0x4D    

   \              0x41 0x58    

   \              0x39 0x38    

   \              0x36 0x30    

   \              0x45 0x54    

   \              0x47 0x2B    

   \              0x20 0x29    

   \              0x20 0x2F    

   \              0x20 0x52    

   \              0x65 0x76    

   \              0x2E 0x20    

   \              0x30 0x78    

   \              0x25 0x30    

   \              0x32 0x58    

   \              0x0A 0x00
   \       0x2E                      DS8 2

   \                                 In section .rodata, align 4
   \                     ?_53:
   \        0x0   0x25 0x73          DC8 "%s(%d) - EEPROM OK\012"

   \              0x28 0x25    

   \              0x64 0x29    

   \              0x20 0x2D    

   \              0x20 0x45    

   \              0x45 0x50    

   \              0x52 0x4F    

   \              0x4D 0x20    

   \              0x4F 0x4B    

   \              0x0A 0x00

   \                                 In section .rodata, align 4
   \                     ?_54:
   \        0x0   0x25 0x73          DC8 "%s(%d) - Man Hopping ( %d )\012"

   \              0x28 0x25    

   \              0x64 0x29    

   \              0x20 0x2D    

   \              0x20 0x4D    

   \              0x61 0x6E    

   \              0x20 0x48    

   \              0x6F 0x70    

   \              0x70 0x69    

   \              0x6E 0x67    

   \              0x20 0x28    

   \              0x20 0x25    

   \              0x64 0x20    

   \              0x29 0x0A    

   \              0x00
   \       0x1D                      DS8 3

   \                                 In section .rodata, align 4
   \                     ?_55:
   \        0x0   0x25 0x73          DC8 "%s(%d) - RFMode ( %d )\012"

   \              0x28 0x25    

   \              0x64 0x29    

   \              0x20 0x2D    

   \              0x20 0x52    

   \              0x46 0x4D    

   \              0x6F 0x64    

   \              0x65 0x20    

   \              0x28 0x20    

   \              0x25 0x64    

   \              0x20 0x29    

   \              0x0A 0x00

   \                                 In section .rodata, align 4
   \                     ?_56:
   \        0x0   0x3D 0x3D          DC8 "=========================\012"

   \              0x3D 0x3D    

   \              0x3D 0x3D    

   \              0x3D 0x3D    

   \              0x3D 0x3D    

   \              0x3D 0x3D    

   \              0x3D 0x3D    

   \              0x3D 0x3D    

   \              0x3D 0x3D    

   \              0x3D 0x3D    

   \              0x3D 0x3D    

   \              0x3D 0x3D    

   \              0x3D 0x0A    

   \              0x00
   \       0x1B                      DS8 1

   \                                 In section .rodata, align 4
   \                     ?_57:
   \        0x0   0x25 0x30          DC8 "%08x\012"

   \              0x38 0x78    

   \              0x0A 0x00
   \        0x6                      DS8 2

   \                                 In section .rodata, align 4
   \                     ?_58:
   \        0x0   0x2D 0x2D          DC8 "-------------------------\012"

   \              0x2D 0x2D    

   \              0x2D 0x2D    

   \              0x2D 0x2D    

   \              0x2D 0x2D    

   \              0x2D 0x2D    

   \              0x2D 0x2D    

   \              0x2D 0x2D    

   \              0x2D 0x2D    

   \              0x2D 0x2D    

   \              0x2D 0x2D    

   \              0x2D 0x2D    

   \              0x2D 0x0A    

   \              0x00
   \       0x1B                      DS8 1

   \                                 In section .rodata, align 4
   \                     ?_59:
   \        0x0   0x0000'0001        DC32 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 0, 0, 0, 0, 0

   \              0x0000'0002  

   \              0x0000'0003  

   \              0x0000'0004  

   \              0x0000'0005  

   \              0x0000'0006  

   \              0x0000'0007  

   \              0x0000'0008  

   \              0x0000'0009  

   \              0x0000'000A  

   \              0x0000'000B  

   \              0x0000'000C  

   \              0x0000'000D  

   \              0x0000'000E  

   \              0x0000'000F  

   \              0x0000'0000  

   \              0x0000'0000  

   \              0x0000'0000  

   \              0x0000'0000  

   \              0x0000'0000

   \                                 In section .rodata, align 4
   \                     ?_60:
   \        0x0   0x25 0x73          DC8 "%s(%d) - Radio Ch(%d) / s_idxTrainSet(%d)\012"

   \              0x28 0x25    

   \              0x64 0x29    

   \              0x20 0x2D    

   \              0x20 0x52    

   \              0x61 0x64    

   \              0x69 0x6F    

   \              0x20 0x43    

   \              0x68 0x28    

   \              0x25 0x64    

   \              0x29 0x20    

   \              0x2F 0x20    

   \              0x73 0x5F    

   \              0x69 0x64    

   \              0x78 0x54    

   \              0x72 0x61    

   \              0x69 0x6E    

   \              0x53 0x65    

   \              0x74 0x28    

   \              0x25 0x64    

   \              0x29 0x0A    

   \              0x00
   \       0x2B                      DS8 1

   \                                 In section .rodata, align 4
   \                     ?_61:
   \        0x0   0x25 0x73          DC8 "%s(%d) - offsetCA( %d )\012"

   \              0x28 0x25    

   \              0x64 0x29    

   \              0x20 0x2D    

   \              0x20 0x6F    

   \              0x66 0x66    

   \              0x73 0x65    

   \              0x74 0x43    

   \              0x41 0x28    

   \              0x20 0x25    

   \              0x64 0x20    

   \              0x29 0x0A    

   \              0x00
   \       0x19                      DS8 3

   \                                 In section .rodata, align 4
   \                     ?_62:
   \        0x0   0xEC 0x88          DC8 "\354\210\230\354\213\240\354\244\221(%d/%d)"

   \              0x98 0xEC    

   \              0x8B 0xA0    

   \              0xEC 0xA4    

   \              0x91 0x28    

   \              0x25 0x64    

   \              0x2F 0x25    

   \              0x64 0x29    

   \              0x00
   \       0x11                      DS8 3

   \                                 In section .rodata, align 4
   \                     ?_63:
   \        0x0   0xEC 0x88          DC8 "\354\210\230\354\213\240\354\244\221..."

   \              0x98 0xEC    

   \              0x8B 0xA0    

   \              0xEC 0xA4    

   \              0x91 0x2E    

   \              0x2E 0x2E    

   \              0x00
   \        0xD                      DS8 3

   \                                 In section .rodata, align 4
   \                     ?_64:
   \        0x0   0x4F 0x63          DC8 "OccSend (%d) \012"

   \              0x63 0x53    

   \              0x65 0x6E    

   \              0x64 0x20    

   \              0x28 0x25    

   \              0x64 0x29    

   \              0x20 0x0A    

   \              0x00
   \        0xF                      DS8 1

   \                                 In section .rodata, align 4
   \                     ?_65:
   \        0x0   0x54 0x72          DC8 "Tr:%d\012"

   \              0x3A 0x25    

   \              0x64 0x0A    

   \              0x00
   \        0x7                      DS8 1

   \                                 In section .rodata, align 4
   \                     ?_66:
   \        0x0   0x54 0x72          DC8 "Tr~:%d\012"

   \              0x7E 0x3A    

   \              0x25 0x64    

   \              0x0A 0x00

   \                                 In section .rodata, align 4
   \                     ?_67:
   \        0x0   0x25 0x30          DC8 "%02d:%d/R%d,%03d"

   \              0x32 0x64    

   \              0x3A 0x25    

   \              0x64 0x2F    

   \              0x52 0x25    

   \              0x64 0x2C    

   \              0x25 0x30    

   \              0x33 0x64    

   \              0x00
   \       0x11                      DS8 3

   \                                 In section .rodata, align 4
   \                     ?_68:
   \        0x0   0x25 0x30          DC8 "%02d \355\230\270\354\260\250 : OK"

   \              0x32 0x64    

   \              0x20 0xED    

   \              0x98 0xB8    

   \              0xEC 0xB0    

   \              0xA8 0x20    

   \              0x3A 0x20    

   \              0x4F 0x4B    

   \              0x00
   \       0x11                      DS8 3

   \                                 In section .rodata, align 4
   \                     ?_69:
   \        0x0   0x25 0x30          DC8 "%02d \355\230\270\354\260\250 : NG"

   \              0x32 0x64    

   \              0x20 0xED    

   \              0x98 0xB8    

   \              0xEC 0xB0    

   \              0xA8 0x20    

   \              0x3A 0x20    

   \              0x4E 0x47    

   \              0x00
   \       0x11                      DS8 3
   2376          
   2377          
   2378          #if defined(USE_ENV_TEST)
   2379          
   2380          static int	s_bEnLoopRFTx = 0;
   2381          
   2382          //========================================================================
   2383          void	SetLoopRFTx		( int bEnable )	//	RF Data 전송 유지..
   2384          //========================================================================
   2385          {
   2386          	printf( "%s(%d) - Loop RF Tx : %d\n", __func__, __LINE__, bEnable );
   2387          
   2388          	if ( bEnable )
   2389          	{
   2390          		RF_Tx_Mode();
   2391          	}
   2392          	else
   2393          	{
   2394          		RF_Rx_Mode();
   2395          	}
   2396          
   2397          	s_bEnLoopRFTx = bEnable;
   2398          }
   2399          
   2400          
   2401          //========================================================================
   2402          int cmd_rftx      ( int argc, char * argv[] )
   2403          //========================================================================
   2404          {
   2405          	//	bEnable ( 1 / 0 )
   2406          	int bEnable = 0;
   2407          	int nCh = 0;	//	Channel
   2408          	uint8_t nPA = 0x7F;	//	Power Amplifier
   2409          	char *sRFType;
   2410          
   2411          	switch ( argc )
   2412          	{
   2413          	case 5:		sscanf( argv[4], "%d", &nPA );		//	Power Amplifier
   2414          	case 4:		sscanf( argv[3], "%d", &nCh );		//	Channel
   2415          	case 3:		sRFType = argv[2];					//	RF Type [ u (unmodulated) / m(modulated) ]
   2416          	case 2:		sscanf( argv[1], "%d", &bEnable );	//	cmd [Enable]
   2417          //	case 2:		sText = argv[1];					//	sscanf( argv[1], "%s", sText );		//	cmd [Text]
   2418          		break;
   2419          	}
   2420          
   2421          	printf( "%s(%d) - En(%d) / Type(%s) / Ch(%d) / PA(%d)\n", __func__, __LINE__,
   2422          			bEnable, sRFType, nCh, nPA );
   2423          
   2424          	//========================================================================
   2425          	//	채널 설정.
   2426          	pRadioConfiguration->Radio_ChannelNumber = nCh;
   2427          
   2428          	//========================================================================
   2429          	//	RF Type
   2430          	if ( strcmp( sRFType, "u" ) == 0 )
   2431          	{
   2432          		SetLoopRFTx( 0 );	//	RF Loop 종료.
   2433          		//	Continuous Wave ( 무변조방식 )
   2434          		vRadio_Init_cw();	//	무변조방식 설정.
   2435          
   2436          		vRadio_RF_Pwr( nPA );
   2437          
   2438          //		vRadio_StartTx( nCh, NULL );
   2439          		vRadio_StartTx( pRadioConfiguration->Radio_ChannelNumber, NULL );
   2440          
   2441          		return 0;
   2442          	}
   2443          	else if ( strcmp( sRFType, "m" ) == 0 )
   2444          	{
   2445          		vRadio_Init();	//	변조방식 설정.
   2446          		//========================================================================
   2447          		//	RF출력 설정.
   2448          		vRadio_RF_Pwr( nPA );
   2449          	}
   2450          
   2451          	if ( argc >= 2 )
   2452          	{
   2453          		if ( strcmp( argv[1], "1" ) == 0 )			bEnable = 1;
   2454          		else if ( strcmp( argv[1], "0" ) == 0 )		bEnable = 0;
   2455          	}
   2456          
   2457          	printf( "%s(%d) - Loop RF Tx : %d\n", __func__, __LINE__, bEnable );
   2458          
   2459          	SetLoopRFTx( bEnable );
   2460          }
   2461          
   2462          #endif	//	defined(USE_ENV_TEST)
   2463          
   2464          
   2465          

   Maximum stack usage in bytes:

   .cstack Function
   ------- --------
       8   GetCarNo
         8   -> LoadCarNo
       0   GetCh2Car
      12   GetChNearRFM
      16   GetChNearRFT
       0   GetChOtherRFT
       0   GetChPA
       0   GetChPARFT
       0   GetChRFMDown
       0   GetChRFMUp
       8   GetChRx
         8   -> GetDevID
       0   GetDevID
      16   GetManHop
        16   -> GetDbg
        16   -> HAL_I2C_IsDeviceReady
        16   -> M24_HAL_ReadBytes
        16   -> printf
      16   GetMicVol
        16   -> HAL_I2C_IsDeviceReady
        16   -> M24_HAL_ReadBytes
        16   -> printf
       0   GetRFMMode
      16   GetRFMode
        16   -> GetDbg
        16   -> HAL_I2C_IsDeviceReady
        16   -> M24_HAL_ReadBytes
        16   -> printf
       0   GetRFTID
      16   GetSpkVol
        16   -> HAL_I2C_IsDeviceReady
        16   -> M24_HAL_ReadBytes
        16   -> printf
       8   GetTrainSetIdx
         8   -> LoadTrainSetIdx
     128   InitRFM
       128   -> AudioInit
       128   -> GetCarNo
       128   -> GetDevID
       128   -> GetManHop
       128   -> GetMicVol
       128   -> GetRFMode
       128   -> GetSpkVol
       128   -> GetTrainSetIdx
       128   -> HAL_Delay
       128   -> HAL_GetTick
       128   -> HAL_I2C_IsDeviceReady
       128   -> HAL_I2C_Mem_Read
       128   -> I2C_BusScan
       128   -> InitCodecMAX9860
       128   -> LCDClear
       128   -> LCDDrawRect
       128   -> LCDInit
       128   -> LCDLight
       128   -> LCDMenu
       128   -> LCDSpeaker
       128   -> RFM_Spk
       128   -> SetCallbackI2STxRxCplt
       128   -> SetDevID
       128   -> SetMicVol
       128   -> SetSpkVol
       128   -> SetTrainSetIdx
       128   -> TestEEPROM
       128   -> UpdateLCDMain
       128   -> WriteI2CCodec
       128   -> __aeabi_memcpy4
       128   -> memset
       128   -> printf
       128   -> rand
       128   -> si446x_part_info
       128   -> srand
       128   -> vRadio_Init
      12   IsNearRFT
      16   LoadCarNo
        16   -> GetDbg
        16   -> HAL_I2C_IsDeviceReady
        16   -> M24_HAL_ReadBytes
        16   -> printf
      16   LoadTrainSetIdx
        16   -> GetDbg
        16   -> HAL_I2C_IsDeviceReady
        16   -> M24_HAL_ReadBytes
        16   -> printf
     112   LoopProcRFM
       112   -> GetAdcPow
       112   -> GetCh2Car
       112   -> GetChNearRFM
       112   -> GetChPA
       112   -> GetChPARFT
       112   -> GetChRFMUp
       112   -> GetChRx
       112   -> GetDbg
       112   -> GetDevID
       112   -> GetKey
       112   -> GetRFMMode
       112   -> HAL_GPIO_TogglePin
       112   -> HAL_GPIO_WritePin
       112   -> IsMenuMaint
       112   -> LCDPrintf
       112   -> LCDSetCursor
       112   -> RFM_Spk
       112   -> ReflashStat
       112   -> SendPktCh
       112   -> SendRouteReq
       112   -> SendStatReq
       112   -> SetRFMMode
       112   -> UpdateLCDMain
       112   -> UpdateLCDMonitor
       112   -> _MakePktHdr2
       112   -> printf
       112   -> qBufCnt
       112   -> qBufGet
       112   -> qBufPut
       112   -> sprintf
       112   -> vRadio_StartRX
      80   PrintVerInfo
        80   -> GetDevID
        80   -> LCDClear
        80   -> LCDPrintf
        80   -> LCDSetCursor
        80   -> printf
        80   -> sprintf
      40   RFM_I2SEx_TxRxCpltCallback
        40   -> ADPCM_ClearDecodeBuf
        40   -> ADPCM_Decode
        40   -> ADPCM_Encode
        40   -> HAL_I2SEx_TransmitReceive_DMA
        40   -> lowpass_Filter
        40   -> memset
        40   -> printf
        40   -> qBufCnt
        40   -> qBufGet
        40   -> qBufPut
       8   RFM_Spk
         8   -> GetDbg
         8   -> HAL_GPIO_WritePin
         8   -> printf
       8   RFM_main
         8   -> GetDevID
         8   -> HAL_GetTick
         8   -> InitProcPkt
         8   -> InitRFM
         8   -> LoopProcAdc
         8   -> LoopProcCLI
         8   -> LoopProcKey
         8   -> LoopProcMain
         8   -> LoopProcPkt
         8   -> LoopProcRFM
         8   -> printf
      24   RF_RSSI
        24   -> GetDbg
        24   -> LCDRSSI
        24   -> printf
        24   -> si446x_get_modem_status_fast_clear_read
      24   ReflashStat
        24   -> sprintf
      16   ReloadStampStat
        16   -> HAL_GetTick
      16   SetCarNo
        16   -> GetDbg
        16   -> HAL_I2C_IsDeviceReady
        16   -> M24_HAL_WriteBytes
        16   -> printf
       0   SetChPA
       0   SetChPARFT
       0   SetChRFMDown
       0   SetChRFMUp
       8   SetDevID
         8   -> printf
      16   SetManHop
        16   -> GetDbg
        16   -> HAL_I2C_IsDeviceReady
        16   -> M24_HAL_WriteBytes
        16   -> printf
      16   SetMicVol
        16   -> AudioMicVol
        16   -> HAL_I2C_IsDeviceReady
        16   -> M24_HAL_WriteBytes
        16   -> printf
      16   SetRFMMode
        16   -> ReloadStampStat
        16   -> StrRFMMode
        16   -> printf
      16   SetRFMode
        16   -> GetDbg
        16   -> HAL_I2C_IsDeviceReady
        16   -> M24_HAL_WriteBytes
        16   -> printf
      16   SetSpkVol
        16   -> AudioSpkVol
        16   -> HAL_I2C_IsDeviceReady
        16   -> M24_HAL_WriteBytes
        16   -> printf
       8   SetStat
         8   -> HAL_GetTick
      16   SetTrainSetIdx
        16   -> GetDbg
        16   -> HAL_I2C_IsDeviceReady
        16   -> M24_HAL_WriteBytes
        16   -> printf
       0   StrRFMMode
      32   UpdateStat
        32   -> memcpy
        32   -> sprintf
      24   cmd_OccPa
        24   -> HAL_GPIO_WritePin
        24   -> SendOCCPA
        24   -> SetRFMMode
        24   -> printf
        24   -> sscanf
      16   cmd_car
        16   -> GetCarNo
        16   -> SetCarNo
        16   -> printf
        16   -> sscanf
      16   cmd_ch
        16   -> GetChRx
        16   -> GetDbg
        16   -> SetTrainSetIdx
        16   -> printf
        16   -> sscanf
      16   cmd_hop
        16   -> SetManHop
        16   -> printf
        16   -> sscanf
      24   cmd_info
        24   -> GetCarNo
        24   -> GetChNearRFM
        24   -> GetChNearRFT
        24   -> GetChPA
        24   -> GetChPARFT
        24   -> GetChRFMDown
        24   -> GetChRFMUp
        24   -> GetChRx
        24   -> GetRFMMode
        24   -> GetTrainSetIdx
        24   -> StrRFMMode
        24   -> printf
      16   cmd_rfmod
        16   -> SetRFMode
        16   -> printf
        16   -> sscanf
      16   cmd_rfstat
        16   -> printf
      24   cmd_rspid
        24   -> printf
        24   -> sscanf
      16   cmd_swinfo
        16   -> FLASH_If_GetAppSize
        16   -> FLASH_If_GetBootSize
        16   -> printf
     104   cmd_ts
       104   -> GetTrainSetIdx
       104   -> SetTrainSetIdx
       104   -> __aeabi_memcpy4
       104   -> printf
       104   -> sscanf
      16   cmd_txpwr
        16   -> printf
        16   -> sscanf
        16   -> vRadio_Set_TxPower
       0   lowpass_Filter


   Section sizes:

   Bytes  Function/Label
   -----  --------------
       4  ??DataTable16
       4  ??DataTable16_1
       4  ??DataTable20
       4  ??DataTable39
       4  ??DataTable39_1
       4  ??DataTable39_2
       4  ??DataTable40
       4  ??DataTable40_1
       4  ??DataTable40_2
       4  ??DataTable40_3
       4  ??DataTable40_4
       4  ??DataTable41
       4  ??DataTable41_1
       4  ??DataTable41_2
       4  ??DataTable41_3
       4  ??DataTable42
       4  ??DataTable42_1
       4  ??DataTable42_2
       4  ??DataTable42_3
       4  ??DataTable45
       4  ??DataTable45_1
       4  ??DataTable45_2
       4  ??DataTable45_3
       4  ??DataTable45_4
       4  ??DataTable46
       4  ??DataTable46_1
       4  ??DataTable46_2
       4  ??DataTable46_3
       4  ??DataTable47
       4  ??DataTable48
       4  ??DataTable48_1
       4  ??DataTable48_2
       4  ??DataTable48_3
       4  ??DataTable48_4
       4  ??DataTable48_5
       4  ??DataTable48_6
       4  ??DataTable49
       4  ??DataTable49_1
       4  ??DataTable49_2
       4  ??DataTable49_3
       4  ??DataTable49_4
       4  ??DataTable49_5
       4  ??DataTable49_6
       4  ??DataTable49_7
       4  ??DataTable49_8
       4  ??DataTable49_9
       4  ??DataTable50
       4  ??DataTable51
       4  ??DataTable51_1
       4  ??DataTable51_10
       4  ??DataTable51_11
       4  ??DataTable51_12
       4  ??DataTable51_13
       4  ??DataTable51_14
       4  ??DataTable51_15
       4  ??DataTable51_16
       4  ??DataTable51_17
       4  ??DataTable51_18
       4  ??DataTable51_19
       4  ??DataTable51_2
       4  ??DataTable51_20
       4  ??DataTable51_21
       4  ??DataTable51_22
       4  ??DataTable51_23
       4  ??DataTable51_24
       4  ??DataTable51_25
       4  ??DataTable51_26
       4  ??DataTable51_27
       4  ??DataTable51_28
       4  ??DataTable51_29
       4  ??DataTable51_3
       4  ??DataTable51_30
       4  ??DataTable51_31
       4  ??DataTable51_32
       4  ??DataTable51_33
       4  ??DataTable51_34
       4  ??DataTable51_35
       4  ??DataTable51_36
       4  ??DataTable51_37
       4  ??DataTable51_38
       4  ??DataTable51_39
       4  ??DataTable51_4
       4  ??DataTable51_5
       4  ??DataTable51_6
       4  ??DataTable51_7
       4  ??DataTable51_8
       4  ??DataTable51_9
       4  ??DataTable52
       4  ??DataTable52_1
       4  ??DataTable52_2
       4  ??DataTable52_3
       4  ??DataTable52_4
       4  ??DataTable53
       4  ??DataTable53_1
       4  ??DataTable54
       4  ??DataTable54_1
       4  ??DataTable55
       4  ??DataTable55_1
       4  ??DataTable55_2
       4  ??DataTable55_3
       4  ??DataTable55_4
       4  ??DataTable55_5
       4  ??DataTable55_6
       4  ??DataTable56
       4  ??DataTable56_1
       4  ??DataTable56_10
       4  ??DataTable56_11
       4  ??DataTable56_12
       4  ??DataTable56_13
       4  ??DataTable56_14
       4  ??DataTable56_15
       4  ??DataTable56_16
       4  ??DataTable56_17
       4  ??DataTable56_18
       4  ??DataTable56_19
       4  ??DataTable56_2
       4  ??DataTable56_20
       4  ??DataTable56_21
       4  ??DataTable56_22
       4  ??DataTable56_23
       4  ??DataTable56_24
       4  ??DataTable56_25
       4  ??DataTable56_26
       4  ??DataTable56_27
       4  ??DataTable56_28
       4  ??DataTable56_29
       4  ??DataTable56_3
       4  ??DataTable56_30
       4  ??DataTable56_31
       4  ??DataTable56_32
       4  ??DataTable56_33
       4  ??DataTable56_34
       4  ??DataTable56_35
       4  ??DataTable56_36
       4  ??DataTable56_37
       4  ??DataTable56_38
       4  ??DataTable56_39
       4  ??DataTable56_4
       4  ??DataTable56_40
       4  ??DataTable56_41
       4  ??DataTable56_42
       4  ??DataTable56_43
       4  ??DataTable56_44
       4  ??DataTable56_45
       4  ??DataTable56_46
       4  ??DataTable56_47
       4  ??DataTable56_48
       4  ??DataTable56_49
       4  ??DataTable56_5
       4  ??DataTable56_50
       4  ??DataTable56_51
       4  ??DataTable56_52
       4  ??DataTable56_53
       4  ??DataTable56_54
       4  ??DataTable56_55
       4  ??DataTable56_56
       4  ??DataTable56_57
       4  ??DataTable56_58
       4  ??DataTable56_59
       4  ??DataTable56_6
       4  ??DataTable56_60
       4  ??DataTable56_61
       4  ??DataTable56_62
       4  ??DataTable56_63
       4  ??DataTable56_64
       4  ??DataTable56_65
       4  ??DataTable56_7
       4  ??DataTable56_8
       4  ??DataTable56_9
      16  ?_0
       4  ?_1
      24  ?_10
      16  ?_11
      52  ?_12
       4  ?_13
       4  ?_14
      24  ?_15
      12  ?_16
      12  ?_17
      12  ?_18
       8  ?_19
       4  ?_2
      80  ?_20
      16  ?_21
       4  ?_22
      28  ?_23
      16  ?_24
      24  ?_25
      16  ?_26
      24  ?_27
      28  ?_28
      24  ?_29
       4  ?_3
      12  ?_30
      20  ?_31
      20  ?_32
      12  ?_33
      20  ?_34
      16  ?_35
      20  ?_36
      20  ?_37
      24  ?_38
      24  ?_39
      12  ?_4
      24  ?_40
      20  ?_41
      24  ?_42
      24  ?_43
      32  ?_44
      24  ?_45
      20  ?_46
      28  ?_47
       8  ?_48
      16  ?_49
       8  ?_5
      16  ?_50
       2  ?_51
      48  ?_52
      20  ?_53
      32  ?_54
      24  ?_55
      28  ?_56
       8  ?_57
      28  ?_58
      80  ?_59
       8  ?_6
      44  ?_60
      28  ?_61
      20  ?_62
      16  ?_63
      16  ?_64
       8  ?_65
       8  ?_66
      20  ?_67
      20  ?_68
      20  ?_69
       8  ?_7
       8  ?_8
       8  ?_9
      34  GetCarNo
      48  GetCh2Car
      68  GetChNearRFM
      74  GetChNearRFT
      30  GetChOtherRFT
       8  GetChPA
       8  GetChPARFT
       8  GetChRFMDown
       8  GetChRFMUp
     106  GetChRx
       8  GetDevID
     114  GetManHop
      92  GetMicVol
       8  GetRFMMode
     122  GetRFMode
      28  GetRFTID
      92  GetSpkVol
      34  GetTrainSetIdx
     702  InitRFM
      68  IsNearRFT
     110  LoadCarNo
     148  LoadTrainSetIdx
   1'208  LoopProcRFM
      84  PrintVerInfo
     322  RFM_I2SEx_TxRxCpltCallback
      62  RFM_Spk
      76  RFM_main
     182  RF_RSSI
     126  ReflashStat
      54  ReloadStampStat
      94  SetCarNo
       8  SetChPA
       8  SetChPARFT
       8  SetChRFMDown
       8  SetChRFMUp
      36  SetDevID
      86  SetManHop
     100  SetMicVol
      46  SetRFMMode
      86  SetRFMode
     100  SetSpkVol
      36  SetStat
      94  SetTrainSetIdx
      56  StrRFMMode
     112  UpdateStat
       4  bRxBuffering
     480  bufAudioDec
     480  bufAudioEnc
     168  cmd_OccPa
      90  cmd_car
      98  cmd_ch
      74  cmd_hop
     176  cmd_info
      72  cmd_rfmod
      28  cmd_rfstat
     186  cmd_rspid
      44  cmd_swinfo
     138  cmd_ts
      56  cmd_txpwr
     484  g_devStat
       4  g_idxTrainSet
       4  g_nCarNo
       4  g_nChPA
       4  g_nChRFMDown
       4  g_nChRFMUp
       4  g_nChRFT
       4  g_nChRx
       4  g_nDevFlag
       4  g_nDevID
       4  g_nIdxRouteFindNext
       4  g_nManHopping
       4  g_nRFMMode
       4  g_nRFMode
       4  g_nRSSI
       4  g_nSpkLevel
       4  g_nStampRouteRsp
       4  g_nStampRxPkt
       4  g_offsetCA
       4  idx
       2  last_sample
      28  lowpass_Filter
       4  m_ReFlahStat_Cnt
       4  nOldRFMMode
       4  nTxOccPkt
       4  oldTickRouteReq
       4  oldTickStatReq
       4  s_ChkRsp
       4  s_JumpRouteRsq
       4  s_TimerVal
       4  s_bOnce
       4  s_bOnce
       4  s_idxCh
       4  s_nTickStandby
     280  -- Other

 
 1'558 bytes in section .bss
    16 bytes in section .data
 1'682 bytes in section .rodata
 6'744 bytes in section .text
 
 6'744 bytes of CODE  memory
 1'682 bytes of CONST memory
 1'574 bytes of DATA  memory

Errors: none
Warnings: 125
