###############################################################################
#
# IAR ANSI C/C++ Compiler V9.30.1.335/W64 for ARM         20/Sep/2022  23:37:24
# Copyright 1999-2022 IAR Systems AB.
#
#    Cpu mode                     =  thumb
#    Endian                       =  little
#    Source file                  =
#        C:\D\Git_Hub\STM_IAR_SIL_Change\Library\diag.c
#    Command line                 =
#        -f C:\D\Git_Hub\STM_IAR_SIL_Change\EWARM\RFM\Obj\Library\diag.o.rsp
#        (C:\D\Git_Hub\STM_IAR_SIL_Change\Library\diag.c -D USE_HAL_DRIVER -D
#        STM32F407xx -lC C:\D\Git_Hub\STM_IAR_SIL_Change\EWARM\RFM\List\Library
#        -o C:\D\Git_Hub\STM_IAR_SIL_Change\EWARM\RFM\Obj\Library --no_cse
#        --no_unroll --no_inline --no_code_motion --no_tbaa --no_clustering
#        --no_scheduling --debug --endian=little --cpu=Cortex-M4 -e
#        --fpu=VFPv4_sp --dlib_config "C:\Program Files\IAR Systems\Embedded
#        Workbench 9.1\arm\inc\c\DLib_Config_Full.h" -I
#        C:\D\Git_Hub\STM_IAR_SIL_Change\EWARM/../USB_DEVICE/App\ -I
#        C:\D\Git_Hub\STM_IAR_SIL_Change\EWARM/../USB_DEVICE/Target\ -I
#        C:\D\Git_Hub\STM_IAR_SIL_Change\EWARM/../Core/Inc\ -I
#        C:\D\Git_Hub\STM_IAR_SIL_Change\EWARM/../Drivers/STM32F4xx_HAL_Driver/Inc\
#        -I
#        C:\D\Git_Hub\STM_IAR_SIL_Change\EWARM/../Drivers/STM32F4xx_HAL_Driver/Inc/Legacy\
#        -I
#        C:\D\Git_Hub\STM_IAR_SIL_Change\EWARM/../Middlewares/ST/STM32_USB_Device_Library/Core/Inc\
#        -I
#        C:\D\Git_Hub\STM_IAR_SIL_Change\EWARM/../Middlewares/ST/STM32_USB_Device_Library/Class/CDC/Inc\
#        -I
#        C:\D\Git_Hub\STM_IAR_SIL_Change\EWARM/../Drivers/CMSIS/Device/ST/STM32F4xx/Include\
#        -I C:\D\Git_Hub\STM_IAR_SIL_Change\EWARM/../Drivers/CMSIS/Include\ -I
#        C:\D\Git_Hub\STM_IAR_SIL_Change\EWARM/../Drivers/radio\ -I
#        C:\D\Git_Hub\STM_IAR_SIL_Change\EWARM/../Drivers/radio/Si446x\ -I
#        C:\D\Git_Hub\STM_IAR_SIL_Change\EWARM/../Drivers/display\ -I
#        C:\D\Git_Hub\STM_IAR_SIL_Change\EWARM/../Library\ -I
#        C:\D\Git_Hub\STM_IAR_SIL_Change\EWARM\..\Drivers\display\fonts\ -I
#        C:\D\Git_Hub\STM_IAR_SIL_Change\EWARM\..\Drivers\STM32F4xx_HAL_Driver\Src\
#        -On --use_c++_inline -I "C:\Program Files\IAR Systems\Embedded
#        Workbench 9.1\arm\CMSIS\Core\Include\\") --dependencies=n
#        C:\D\Git_Hub\STM_IAR_SIL_Change\EWARM\RFM\Obj\Library\diag.o.d
#    Locale                       =  C
#    List file                    =
#        C:\D\Git_Hub\STM_IAR_SIL_Change\EWARM\RFM\List\Library\diag.lst
#    Object file                  =
#        C:\D\Git_Hub\STM_IAR_SIL_Change\EWARM\RFM\Obj\Library\diag.o
#    Runtime model:                  
#      __CPP_Runtime              =  1
#      __SystemLibrary            =  DLib
#      __dlib_file_descriptor     =  1
#      __dlib_full_locale_support =  1
#      __dlib_version             =  6
#      __iar_require _Printf      =  flags,int_specials,widths
#      __iar_require _Scanf          
#
###############################################################################

C:\D\Git_Hub\STM_IAR_SIL_Change\Library\diag.c
      1          /*------------------------------------------------------------------------------------------
      2          	Project			: RFM
      3          	Description		: 보드 시험용 함수 모음들
      4          
      5          	Writer			: $Author: zlkit $
      6          	Revision		: $Rev: 1891 $
      7          	Date			: 2020. 08.
      8          	Copyright		: Piranti Corp. ( zlkit@piranti.co.kr )
      9          	 
     10          	Revision History 
     11          	1. 2020. 08.	: Created
     12          -------------------------------------------------------------------------------------------*/
     13          
     14          #include <stdio.h>
     15          #include <stdlib.h>
     16          #include <stdarg.h>
     17          #include <ctype.h>
     18          #include <string.h>
     19          #include <stdarg.h>
     20          
     21          //=============================================================================
     22          #if defined(_WIN32)
     23          //=============================================================================
     24          
     25          #include "x86_hal_driver.h"
     26          
     27          //=============================================================================
     28          #else	//	stm32f207
     29          //=============================================================================
     30          
     31          #if defined(STM32F407xx)
     32          #include "stm32f4xx.h"
     33          #include "stm32f4xx_hal.h"
     34          #elif defined(STM32F207xx)
     35          #include "stm32f2xx.h"
     36          #include "stm32f2xx_hal.h"
     37          #endif
     38          
     39          #if defined(USE_FREERTOS)
     40          #include "FreeRTOS.h"
     41          #include "task.h"
     42          #include "queue.h"
     43          #include "semphr.h"
     44          #endif
     45          
     46          #include "main.h"				//	GPIO Pin

  # warning unrecognized compiler
    ^
"C:\D\Git_Hub\STM_IAR_SIL_Change\Drivers\radio\compiler_defs.h",744  Warning[Pa183]: 
          #warning directive: unrecognized compiler
     47          
     48          #include "typedef.h"			//	ip_addr

  typedef unsigned char       BYTE;
                              ^
"C:\D\Git_Hub\STM_IAR_SIL_Change\Library\typedef.h",73  Warning[Pe301]: typedef
          name has already been declared (with same type)

  typedef unsigned short      WORD;
                              ^
"C:\D\Git_Hub\STM_IAR_SIL_Change\Library\typedef.h",77  Warning[Pe301]: typedef
          name has already been declared (with same type)

  typedef unsigned char 		BIT;
                        		^
"C:\D\Git_Hub\STM_IAR_SIL_Change\Library\typedef.h",83  Warning[Pe301]: typedef
          name has already been declared (with same type)

  typedef unsigned char 		U8;
                        		^
"C:\D\Git_Hub\STM_IAR_SIL_Change\Library\typedef.h",84  Warning[Pe301]: typedef
          name has already been declared (with same type)

  typedef unsigned int 		U16;
                       		^
"C:\D\Git_Hub\STM_IAR_SIL_Change\Library\typedef.h",85  Warning[Pe301]: typedef
          name has already been declared (with same type)

  typedef unsigned long 		U32;
                        		^
"C:\D\Git_Hub\STM_IAR_SIL_Change\Library\typedef.h",86  Warning[Pe301]: typedef
          name has already been declared (with same type)

  typedef signed char 		S8;
                      		^
"C:\D\Git_Hub\STM_IAR_SIL_Change\Library\typedef.h",88  Warning[Pe301]: typedef
          name has already been declared (with same type)

  typedef signed int 			S16;
                     			^
"C:\D\Git_Hub\STM_IAR_SIL_Change\Library\typedef.h",89  Warning[Pe301]: typedef
          name has already been declared (with same type)

  typedef signed long 		S32;
                      		^
"C:\D\Git_Hub\STM_IAR_SIL_Change\Library\typedef.h",90  Warning[Pe301]: typedef
          name has already been declared (with same type)
     49          
     50          #include "serial.h"
     51          
     52          #include "radio.h"				//	RF-IC WDS
     53          
     54          #include "si446x_api_lib.h"		//	Pro2Cmd
     55          
     56          #include "radio_comm.h"			//	g_bEnableDbgRadioComm
     57          
     58          //=============================================================================
     59          #endif
     60          //=============================================================================
     61          
     62          #include "audio.h"		//	Audio Diag

  	};
  	 ^
"C:\D\Git_Hub\STM_IAR_SIL_Change\Library\RFMProtocol.h",304  Warning[Pe040]: 
          expected an identifier

  	};
  	 ^
"C:\D\Git_Hub\STM_IAR_SIL_Change\Library\RFMProtocol.h",322  Warning[Pe040]: 
          expected an identifier

  	};
  	 ^
"C:\D\Git_Hub\STM_IAR_SIL_Change\Library\RFMProtocol.h",468  Warning[Pe040]: 
          expected an identifier

  	};
  	 ^
"C:\D\Git_Hub\STM_IAR_SIL_Change\Library\RFMProtocol.h",506  Warning[Pe040]: 
          expected an identifier

  	};
  	 ^
"C:\D\Git_Hub\STM_IAR_SIL_Change\Library\RFMProtocol.h",511  Warning[Pe040]: 
          expected an identifier

  	};
  	 ^
"C:\D\Git_Hub\STM_IAR_SIL_Change\Library\RFMProtocol.h",533  Warning[Pe040]: 
          expected an identifier

  	};
  	 ^
"C:\D\Git_Hub\STM_IAR_SIL_Change\Library\RFMProtocol.h",559  Warning[Pe040]: 
          expected an identifier

  	};
  	 ^
"C:\D\Git_Hub\STM_IAR_SIL_Change\Library\RFMProtocol.h",567  Warning[Pe040]: 
          expected an identifier
     63          #include "cli.h"
     64          #include "diag.h"
     65          
     66          #define		CLEAR_VT_SCREEN()	printf("\033[2J")
     67          #define		GOTO_VT_XY()		printf("\033[1;1H")
     68          #define		BUFSIZE	512
     69          

   \                                 In section .bss, align 4
     70          unsigned char *	mem_addr;
   \                     mem_addr:
   \        0x0                      DS8 4

   \                                 In section .data, align 4
     71          int				dumpsize = 0x100;	//, data_option = 2;
   \                     dumpsize:
   \        0x0   0x0000'0100        DC32 256

   \                                 In section .bss, align 4
     72          int				debug_level = 0;
   \                     debug_level:
   \        0x0                      DS8 4
     73          
     74          extern char	sLineInput[BUFSIZE];		// Prompt Line Input
     75          
     76          /*
     77           * diag main menu를 display
     78           */
     79          //========================================================================

   \                                 In section .text, align 2, keep-with-next
     80          void display_diag_menu( void )
     81          //========================================================================
     82          {
   \                     display_diag_menu: (+1)
   \        0x0   0xB538             PUSH     {R3-R5,LR}
     83          	CLEAR_VT_SCREEN();
   \        0x2   0x.... 0x....      LDR.W    R0,??DataTable26_3
   \        0x6   0x.... 0x....      BL       printf
     84          	GOTO_VT_XY();
   \        0xA   0x.... 0x....      LDR.W    R0,??DataTable26_4
   \        0xE   0x.... 0x....      BL       printf
     85          
     86          	printf( "\n" );
   \       0x12   0x....             ADR.N    R4,??DataTable4
   \       0x14   0x0020             MOVS     R0,R4
   \       0x16   0x.... 0x....      BL       printf
     87          	printf( "\n" );
   \       0x1A   0x0020             MOVS     R0,R4
   \       0x1C   0x.... 0x....      BL       printf
     88          	printf( "\n" );
   \       0x20   0x0020             MOVS     R0,R4
   \       0x22   0x.... 0x....      BL       printf
     89          	printf( "\n" );
   \       0x26   0x0020             MOVS     R0,R4
   \       0x28   0x.... 0x....      BL       printf
     90          
     91          	printf( "       **************************************************************\n" );
   \       0x2C   0x.... 0x....      LDR.W    R5,??DataTable26_5
   \       0x30   0x0028             MOVS     R0,R5
   \       0x32   0x.... 0x....      BL       printf
     92          	printf( "       *                       Board Test V1.0                      *\n" );
   \       0x36   0x.... 0x....      LDR.W    R0,??DataTable26_6
   \       0x3A   0x.... 0x....      BL       printf
     93          	printf( "       *                                                            *\n" );
   \       0x3E   0x.... 0x....      LDR.W    R0,??DataTable26_7
   \       0x42   0x.... 0x....      BL       printf
     94          	printf( "       *  1 : Audio Test.                                           *\n" );
   \       0x46   0x.... 0x....      LDR.W    R0,??DataTable26_8
   \       0x4A   0x.... 0x....      BL       printf
     95          	printf( "       *  2 : RF test.                                              *\n" );
   \       0x4E   0x.... 0x....      LDR.W    R0,??DataTable26_9
   \       0x52   0x.... 0x....      BL       printf
     96          	printf( "       **************************************************************\n" );
   \       0x56   0x0028             MOVS     R0,R5
   \       0x58   0x.... 0x....      BL       printf
     97          	printf( "       *  4 : spi test.                                             *\n" );
   \       0x5C   0x.... 0x....      LDR.W    R0,??DataTable26_10
   \       0x60   0x.... 0x....      BL       printf
     98          	printf( "       *  5 : External Flash Memory Test.(Write/Read/Compare)       *\n" );
   \       0x64   0x.... 0x....      LDR.W    R0,??DataTable26_11
   \       0x68   0x.... 0x....      BL       printf
     99          	printf( "       **************************************************************\n" );
   \       0x6C   0x0028             MOVS     R0,R5
   \       0x6E   0x.... 0x....      BL       printf
    100          	printf( "       *  e : print log.                                            *\n" );
   \       0x72   0x.... 0x....      LDR.W    R0,??DataTable26_12
   \       0x76   0x.... 0x....      BL       printf
    101          	printf( "       **************************************************************\n" );
   \       0x7A   0x0028             MOVS     R0,R5
   \       0x7C   0x.... 0x....      BL       printf
    102          	printf( "\n" );
   \       0x80   0x0020             MOVS     R0,R4
   \       0x82   0x.... 0x....      BL       printf
    103          	printf( "           Please select number[to quit, push 'q', 'Q']:" );
   \       0x86   0x.... 0x....      LDR.W    R0,??DataTable26_13
   \       0x8A   0x.... 0x....      BL       printf
    104          }
   \       0x8E   0xBD31             POP      {R0,R4,R5,PC}
    105          
    106          //========================================================================

   \                                 In section .text, align 2, keep-with-next
    107          int cmd_diag_proc( char *cmd )
    108          //========================================================================
    109          {
   \                     cmd_diag_proc: (+1)
   \        0x0   0xB538             PUSH     {R3-R5,LR}
   \        0x2   0x0004             MOVS     R4,R0
    110          //	sel = ibuf[0];
    111          	char sel = cmd[0];
   \        0x4   0x7825             LDRB     R5,[R4, #+0]
    112          
    113          	switch ( sel )
   \        0x6   0x0028             MOVS     R0,R5
   \        0x8   0xB2C0             UXTB     R0,R0
   \        0xA   0x2831             CMP      R0,#+49
   \        0xC   0xD006             BEQ.N    ??cmd_diag_proc_0
   \        0xE   0x2832             CMP      R0,#+50
   \       0x10   0xD009             BEQ.N    ??cmd_diag_proc_1
   \       0x12   0x2851             CMP      R0,#+81
   \       0x14   0xD00C             BEQ.N    ??cmd_diag_proc_2
   \       0x16   0x2871             CMP      R0,#+113
   \       0x18   0xD00A             BEQ.N    ??cmd_diag_proc_2
   \       0x1A   0xE013             B.N      ??cmd_diag_proc_3
    114          	{
    115          	case '1':	cmd_diag_Audio( 0, 0 );		break;
   \                     ??cmd_diag_proc_0: (+1)
   \       0x1C   0x2100             MOVS     R1,#+0
   \       0x1E   0x2000             MOVS     R0,#+0
   \       0x20   0x.... 0x....      BL       cmd_diag_Audio
   \       0x24   0xE00E             B.N      ??cmd_diag_proc_4
    116          	case '2':	cmd_diag_RF( 0, 0 );		break;
                 	         	^
Warning[Pe223]: function "cmd_diag_RF" declared implicitly
   \                     ??cmd_diag_proc_1: (+1)
   \       0x26   0x2100             MOVS     R1,#+0
   \       0x28   0x2000             MOVS     R0,#+0
   \       0x2A   0x.... 0x....      BL       cmd_diag_RF
   \       0x2E   0xE009             B.N      ??cmd_diag_proc_4
    117          	case 'q':
    118          	case 'Q':
    119          #if defined(USE_FREERTOS)
    120          #else
    121          		SetCLIPrompt( CLIPrompt );
   \                     ??cmd_diag_proc_2: (+1)
   \       0x30   0x.... 0x....      LDR.W    R0,??DataTable26_14
   \       0x34   0x.... 0x....      BL       SetCLIPrompt
    122          		SetCLIProc( ProcessCommand );
   \       0x38   0x.... 0x....      LDR.W    R0,??DataTable26_15
   \       0x3C   0x.... 0x....      BL       SetCLIProc
    123          #endif
    124          		return 0;
   \       0x40   0x2000             MOVS     R0,#+0
   \       0x42   0xE000             B.N      ??cmd_diag_proc_5
    125          	default:
    126          		break;
    127          	}
    128          
    129          	return 1;
   \                     ??cmd_diag_proc_3: (+1)
   \                     ??cmd_diag_proc_4: (+1)
   \       0x44   0x2001             MOVS     R0,#+1
   \                     ??cmd_diag_proc_5: (+1)
   \       0x46   0xBD32             POP      {R1,R4,R5,PC}
    130          }
    131          
    132          //========================================================================
    133          //					diag main command function
    134          //========================================================================

   \                                 In section .text, align 2, keep-with-next
    135          int cmd_diag( int argc, char *argv[] )
    136          //========================================================================
    137          {
   \                     cmd_diag: (+1)
   \        0x0   0xB538             PUSH     {R3-R5,LR}
   \        0x2   0x0004             MOVS     R4,R0
   \        0x4   0x000D             MOVS     R5,R1
    138          #if defined(USE_FREERTOS)
    139          
    140          	char	ibuf[80];
    141          	int		v, sel;
    142          
    143          	while ( 1 )
    144          	{
    145          		display_diag_menu();
    146          
    147          		v = readline( ibuf );
    148          
    149          		if ( v <= 0 )
    150          		{
    151          			continue;
    152          		}
    153          
    154          		if ( cmd_diag_proc( ibuf ) == 0 )
    155          		{
    156          			return 0;
    157          		}
    158          
    159          		printf( "Press ENTER key to continue. " );
    160          		readline( ibuf );
    161          
    162          		taskYIELD();
    163          	}
    164          #else
    165          //	HAL_Delay( 0 );
    166          	SetCLIPrompt( display_diag_menu );
   \        0x6   0x.... 0x....      LDR.W    R0,??DataTable26_16
   \        0xA   0x.... 0x....      BL       SetCLIPrompt
    167          	SetCLIProc( cmd_diag_proc );
   \        0xE   0x.... 0x....      LDR.W    R0,??DataTable26_17
   \       0x12   0x.... 0x....      BL       SetCLIProc
    168          
    169          #endif
    170          
    171          	/* NOTREACHED */
    172          
    173          	return 0;
   \       0x16   0x2000             MOVS     R0,#+0
   \       0x18   0xBD32             POP      {R1,R4,R5,PC}
    174          }
    175          
    176          
    177          //========================================================================

   \                                 In section .text, align 2, keep-with-next
    178          void display_diag_Audio( void )
    179          //========================================================================
    180          {
   \                     display_diag_Audio: (+1)
   \        0x0   0xB538             PUSH     {R3-R5,LR}
    181          	CLEAR_VT_SCREEN();
   \        0x2   0x.... 0x....      LDR.W    R0,??DataTable26_3
   \        0x6   0x.... 0x....      BL       printf
    182          	GOTO_VT_XY();
   \        0xA   0x.... 0x....      LDR.W    R0,??DataTable26_4
   \        0xE   0x.... 0x....      BL       printf
    183          
    184          	printf( "\n" );
   \       0x12   0x....             ADR.N    R4,??DataTable4
   \       0x14   0x0020             MOVS     R0,R4
   \       0x16   0x.... 0x....      BL       printf
    185          	printf( "\n" );
   \       0x1A   0x0020             MOVS     R0,R4
   \       0x1C   0x.... 0x....      BL       printf
    186          	printf( "\n" );
   \       0x20   0x0020             MOVS     R0,R4
   \       0x22   0x.... 0x....      BL       printf
    187          	printf( "\n" );
   \       0x26   0x0020             MOVS     R0,R4
   \       0x28   0x.... 0x....      BL       printf
    188          
    189          	printf( "       **************************************************************\n" );
   \       0x2C   0x.... 0x....      LDR.W    R5,??DataTable26_5
   \       0x30   0x0028             MOVS     R0,R5
   \       0x32   0x.... 0x....      BL       printf
    190          	printf( "       *                      Audio Test.                           *\n" );
   \       0x36   0x.... 0x....      LDR.W    R0,??DataTable26_18
   \       0x3A   0x.... 0x....      BL       printf
    191          	printf( "       *                                                            *\n" );
   \       0x3E   0x.... 0x....      LDR.W    R0,??DataTable26_7
   \       0x42   0x.... 0x....      BL       printf
    192          	printf( "       *  1 : audio tx sine.                                        *\n" );
   \       0x46   0x.... 0x....      LDR.W    R0,??DataTable26_19
   \       0x4A   0x.... 0x....      BL       printf
    193          	printf( "       *  2 : audio tx null.                                        *\n" );
   \       0x4E   0x.... 0x....      LDR.W    R0,??DataTable26_20
   \       0x52   0x.... 0x....      BL       printf
    194          	printf( "       *  3 : audio tx stop.                                        *\n" );
   \       0x56   0x.... 0x....      LDR.W    R0,??DataTable26_21
   \       0x5A   0x.... 0x....      BL       printf
    195          	printf( "       *  4 : Audio Loopback. ( Internal Codec )                    *\n" );
   \       0x5E   0x.... 0x....      LDR.W    R0,??DataTable26_22
   \       0x62   0x.... 0x....      BL       printf
    196          	printf( "       *  5 : Audio Loopback. ( DMA )                               *\n" );
   \       0x66   0x.... 0x....      LDR.W    R0,??DataTable26_23
   \       0x6A   0x.... 0x....      BL       printf
    197          	printf( "       *  6 : Audio RF Tx/Rx. ( DMA )                               *\n" );
   \       0x6E   0x.... 0x....      LDR.W    R0,??DataTable26_24
   \       0x72   0x.... 0x....      BL       printf
    198          	printf( "       *  7 : Audio Loopback. ( DMA - speex )                       *\n" );
   \       0x76   0x.... 0x....      LDR.W    R0,??DataTable26_25
   \       0x7A   0x.... 0x....      BL       printf
    199          	printf( "       *  8 : Audio RF Tx. ( DMA )                                  *\n" );
   \       0x7E   0x.... 0x....      LDR.W    R0,??DataTable26_26
   \       0x82   0x.... 0x....      BL       printf
    200          	printf( "       *  9 : Audio RF Rx. ( DMA )                                  *\n" );
   \       0x86   0x.... 0x....      LDR.W    R0,??DataTable26_27
   \       0x8A   0x.... 0x....      BL       printf
    201          	printf( "       *  a : Audio Sampling ( 8 KHz )                              *\n" );
   \       0x8E   0x.... 0x....      LDR.W    R0,??DataTable26_28
   \       0x92   0x.... 0x....      BL       printf
    202          	printf( "       *  b : Audio Sampling ( 4 KHz )                              *\n" );
   \       0x96   0x.... 0x....      LDR.W    R0,??DataTable26_29
   \       0x9A   0x.... 0x....      BL       printf
    203          	printf( "       *  c : Audio Sampling ( 2 KHz )                              *\n" );
   \       0x9E   0x.... 0x....      LDR.W    R0,??DataTable26_30
   \       0xA2   0x.... 0x....      BL       printf
    204          	printf( "       *  d : Audio Sampling ( 1 KHz )                              *\n" );
   \       0xA6   0x.... 0x....      LDR.W    R0,??DataTable26_31
   \       0xAA   0x.... 0x....      BL       printf
    205          	printf( "       *  i : audio Init                                            *\n" );
   \       0xAE   0x.... 0x....      LDR.W    R0,??DataTable26_32
   \       0xB2   0x.... 0x....      BL       printf
    206          	printf( "       *  e : Enable Debug SPI                                      *\n" );
   \       0xB6   0x.... 0x....      LDR.W    R0,??DataTable26_33
   \       0xBA   0x.... 0x....      BL       printf
    207          	printf( "       **************************************************************\n" );
   \       0xBE   0x0028             MOVS     R0,R5
   \       0xC0   0x.... 0x....      BL       printf
    208          	printf( "\n" );
   \       0xC4   0x0020             MOVS     R0,R4
   \       0xC6   0x.... 0x....      BL       printf
    209          	printf( "           Please select number[to quit, push 'q', 'Q']:" );
   \       0xCA   0x.... 0x....      LDR.W    R0,??DataTable26_13
   \       0xCE   0x.... 0x....      BL       printf
    210          }
   \       0xD2   0xBD31             POP      {R0,R4,R5,PC}
    211          
    212          
    213          //========================================================================

   \                                 In section .text, align 2, keep-with-next
    214          int cmd_diag_proc_Audio( char *cmd )
    215          //========================================================================
    216          {
   \                     cmd_diag_proc_Audio: (+1)
   \        0x0   0xB538             PUSH     {R3-R5,LR}
   \        0x2   0x0004             MOVS     R4,R0
    217          //	sel = ibuf[0];
    218          	char sel = cmd[0];
   \        0x4   0x7825             LDRB     R5,[R4, #+0]
    219          
    220          	switch ( sel )
   \        0x6   0x0028             MOVS     R0,R5
   \        0x8   0xB2C0             UXTB     R0,R0
   \        0xA   0x2851             CMP      R0,#+81
   \        0xC   0xD001             BEQ.N    ??cmd_diag_proc_Audio_0
   \        0xE   0x2871             CMP      R0,#+113
   \       0x10   0xD105             BNE.N    ??cmd_diag_proc_Audio_1
    221          	{
    222          #if 0
    223          		case '1':	AudioSine();							break;
    224          		case '2':	AudioTxNull();							break;
    225          		case '3':	AudioTxStop();							break;
    226          		case '4':	AudioLoopback();						break;
    227          		case '5':	AudioLoopbackDMA();						break;
    228          		case '6':	AudioRFRxTx();							break;
    229          		case '7':	AudioLoopbackDMASpeex();				break;
    230          		case '8':	AudioRFTx();							break;
    231          		case '9':	AudioRFRx();							break;
    232          		case 'a':	SetAudioLoopSampling( eASample8KHz );	break;
    233          		case 'b':	SetAudioLoopSampling( eASample4KHz );	break;
    234          		case 'c':	SetAudioLoopSampling( eASample2KHz );	break;
    235          		case 'd':	SetAudioLoopSampling( eASample1KHz );	break;
    236          		case 'i':	InitCodecXE3005();							break;
    237          		case 'e':	AudioDebugEnable();						break;
    238          #endif
    239          	case 'q':
    240          	case 'Q':
    241          #if defined(USE_FREERTOS)
    242          #else
    243          		cmd_diag(0, 0);
   \                     ??cmd_diag_proc_Audio_0: (+1)
   \       0x12   0x2100             MOVS     R1,#+0
   \       0x14   0x2000             MOVS     R0,#+0
   \       0x16   0x.... 0x....      BL       cmd_diag
    244          #endif
    245          		return 0;
   \       0x1A   0x2000             MOVS     R0,#+0
   \       0x1C   0xE000             B.N      ??cmd_diag_proc_Audio_2
    246          	default:
    247          		break;
    248          	}
    249          
    250          	return 1;
   \                     ??cmd_diag_proc_Audio_1: (+1)
   \       0x1E   0x2001             MOVS     R0,#+1
   \                     ??cmd_diag_proc_Audio_2: (+1)
   \       0x20   0xBD32             POP      {R1,R4,R5,PC}
    251          }
    252          
    253          //========================================================================

   \                                 In section .text, align 2, keep-with-next
    254          int cmd_diag_Audio( int argc, char *argv[] )
    255          //========================================================================
    256          {
   \                     cmd_diag_Audio: (+1)
   \        0x0   0xB538             PUSH     {R3-R5,LR}
   \        0x2   0x0004             MOVS     R4,R0
   \        0x4   0x000D             MOVS     R5,R1
    257          #if defined(USE_FREERTOS)
    258          
    259          	char	ibuf[80];
    260          	int		v, sel;
    261          
    262          	while ( 1 )
    263          	{
    264          		display_diag_Audio();
    265          
    266          		memset( ibuf, 0, sizeof( ibuf ) );
    267          		v = readline( ibuf );
    268          
    269          		if ( v <= 0 )
    270          		{
    271          			continue;
    272          		}
    273          
    274          		if ( cmd_diag_proc_Audio( ibuf ) == 0 )
    275          		{
    276          			break;
    277          		}
    278          
    279          		printf( "Press ENTER key to continue. " );
    280          		readline( ibuf );
    281          
    282          		taskYIELD();
    283          	}
    284          
    285          #else
    286          	//	HAL_Delay( 0 );
    287          	SetCLIPrompt( display_diag_Audio );
   \        0x6   0x.... 0x....      LDR.W    R0,??DataTable26_34
   \        0xA   0x.... 0x....      BL       SetCLIPrompt
    288          	SetCLIProc( cmd_diag_proc_Audio );
   \        0xE   0x.... 0x....      LDR.W    R0,??DataTable26_35
   \       0x12   0x.... 0x....      BL       SetCLIProc
    289          
    290          #endif
    291          
    292          	return 0;
   \       0x16   0x2000             MOVS     R0,#+0
   \       0x18   0xBD32             POP      {R1,R4,R5,PC}
    293          }
    294          
    295          
    296          
    297          //========================================================================

   \                                 In section .text, align 2, keep-with-next
    298          void display_diag_RF( void )
    299          //========================================================================
    300          {
   \                     display_diag_RF: (+1)
   \        0x0   0xB538             PUSH     {R3-R5,LR}
    301          	CLEAR_VT_SCREEN();
   \        0x2   0x.... 0x....      LDR.W    R0,??DataTable26_3
   \        0x6   0x.... 0x....      BL       printf
    302          	GOTO_VT_XY();
   \        0xA   0x.... 0x....      LDR.W    R0,??DataTable26_4
   \        0xE   0x.... 0x....      BL       printf
    303          
    304          	printf( "\n" );
   \       0x12   0x....             ADR.N    R4,??DataTable16
   \       0x14   0x0020             MOVS     R0,R4
   \       0x16   0x.... 0x....      BL       printf
    305          	printf( "\n" );
   \       0x1A   0x0020             MOVS     R0,R4
   \       0x1C   0x.... 0x....      BL       printf
    306          	printf( "\n" );
   \       0x20   0x0020             MOVS     R0,R4
   \       0x22   0x.... 0x....      BL       printf
    307          	printf( "\n" );
   \       0x26   0x0020             MOVS     R0,R4
   \       0x28   0x.... 0x....      BL       printf
    308          
    309          	printf( "       **************************************************************\n" );
   \       0x2C   0x.... 0x....      LDR.W    R5,??DataTable26_5
   \       0x30   0x0028             MOVS     R0,R5
   \       0x32   0x.... 0x....      BL       printf
    310          	printf( "       *                         RF Test.                           *\n" );
   \       0x36   0x.... 0x....      LDR.W    R0,??DataTable26_36
   \       0x3A   0x.... 0x....      BL       printf
    311          	printf( "       *                                                            *\n" );
   \       0x3E   0x.... 0x....      LDR.W    R0,??DataTable26_7
   \       0x42   0x.... 0x....      BL       printf
    312          	printf( "       *  0 : RF-IC Info                                            *\n" );
   \       0x46   0x.... 0x....      LDR.W    R0,??DataTable26_37
   \       0x4A   0x.... 0x....      BL       printf
    313          	printf( "       *  1 : RF Tx.                                                *\n" );
   \       0x4E   0x.... 0x....      LDR.W    R0,??DataTable26_38
   \       0x52   0x.... 0x....      BL       printf
    314          	printf( "       *  2 : RF Rx.                                                *\n" );
   \       0x56   0x.... 0x....      LDR.W    R0,??DataTable26_39
   \       0x5A   0x.... 0x....      BL       printf
    315          	printf( "       *  3 : RF Tx->Rx Loopback                                    *\n" );
   \       0x5E   0x.... 0x....      LDR.W    R0,??DataTable26_40
   \       0x62   0x.... 0x....      BL       printf
    316          	printf( "       *  i : RF-Init                                               *\n" );
   \       0x66   0x.... 0x....      LDR.W    R0,??DataTable26_41
   \       0x6A   0x.... 0x....      BL       printf
    317          	printf( "       *  v : Verify RF-Init                                        *\n" );
   \       0x6E   0x.... 0x....      LDR.W    R0,??DataTable26_42
   \       0x72   0x.... 0x....      BL       printf
    318          	printf( "       *  d : Enable Debug SPI                                      *\n" );
   \       0x76   0x.... 0x....      LDR.W    R0,??DataTable26_43
   \       0x7A   0x.... 0x....      BL       printf
    319          	printf( "       **************************************************************\n" );
   \       0x7E   0x0028             MOVS     R0,R5
   \       0x80   0x.... 0x....      BL       printf
    320          	printf( "\n" );
   \       0x84   0x0020             MOVS     R0,R4
   \       0x86   0x.... 0x....      BL       printf
    321          	printf( "           Please select number[to quit, push 'q', 'Q']:" );
   \       0x8A   0x.... 0x....      LDR.W    R0,??DataTable26_13
   \       0x8E   0x.... 0x....      BL       printf
    322          }
   \       0x92   0xBD31             POP      {R0,R4,R5,PC}
    323          
    324          
    325          //========================================================================

   \                                 In section .text, align 2, keep-with-next
    326          int cmd_diag_proc_RF( char *cmd )
    327          //========================================================================
    328          {
   \                     cmd_diag_proc_RF: (+1)
   \        0x0   0xB538             PUSH     {R3-R5,LR}
   \        0x2   0x0004             MOVS     R4,R0
    329          //	sel = ibuf[0];
    330          	char sel = cmd[0];
   \        0x4   0x7825             LDRB     R5,[R4, #+0]
    331          
    332          	switch ( sel )
   \        0x6   0x0028             MOVS     R0,R5
   \        0x8   0xB2C0             UXTB     R0,R0
   \        0xA   0x2851             CMP      R0,#+81
   \        0xC   0xD009             BEQ.N    ??cmd_diag_proc_RF_0
   \        0xE   0x2869             CMP      R0,#+105
   \       0x10   0xD002             BEQ.N    ??cmd_diag_proc_RF_1
   \       0x12   0x2871             CMP      R0,#+113
   \       0x14   0xD005             BEQ.N    ??cmd_diag_proc_RF_0
   \       0x16   0xE00A             B.N      ??cmd_diag_proc_RF_2
    333          	{
    334          #if defined(_WIN32)
    335          #else
    336          		case 'i':	cmd_rfwds_init( 0, 0 );	break;
   \                     ??cmd_diag_proc_RF_1: (+1)
   \       0x18   0x2100             MOVS     R1,#+0
   \       0x1A   0x2000             MOVS     R0,#+0
   \       0x1C   0x.... 0x....      BL       cmd_rfwds_init
   \       0x20   0xE005             B.N      ??cmd_diag_proc_RF_3
    337          #endif
    338          	case 'q':
    339          	case 'Q':
    340          #if defined(USE_FREERTOS)
    341          #else
    342          		cmd_diag(0, 0);
   \                     ??cmd_diag_proc_RF_0: (+1)
   \       0x22   0x2100             MOVS     R1,#+0
   \       0x24   0x2000             MOVS     R0,#+0
   \       0x26   0x.... 0x....      BL       cmd_diag
    343          #endif
    344          		return 0;
   \       0x2A   0x2000             MOVS     R0,#+0
   \       0x2C   0xE000             B.N      ??cmd_diag_proc_RF_4
    345          	default:
    346          		break;
    347          	}
    348          
    349          	return 1;
   \                     ??cmd_diag_proc_RF_2: (+1)
   \                     ??cmd_diag_proc_RF_3: (+1)
   \       0x2E   0x2001             MOVS     R0,#+1
   \                     ??cmd_diag_proc_RF_4: (+1)
   \       0x30   0xBD32             POP      {R1,R4,R5,PC}
    350          }
    351          
    352          //========================================================================

   \                                 In section .text, align 2, keep-with-next
    353          int cmd_diag_RF( int argc, char *argv[] )
    354          //========================================================================
    355          {
   \                     cmd_diag_RF: (+1)
   \        0x0   0xB538             PUSH     {R3-R5,LR}
   \        0x2   0x0004             MOVS     R4,R0
   \        0x4   0x000D             MOVS     R5,R1
    356          #if defined(USE_FREERTOS)
    357          
    358          	char	ibuf[80];
    359          	int		v, sel;
    360          
    361          	while ( 1 )
    362          	{
    363          		display_diag_RF();
    364          
    365          		v = readline( ibuf );
    366          
    367          		if ( v <= 0 )
    368          		{
    369          			continue;
    370          		}
    371          
    372          		if ( cmd_diag_proc_Audio( ibuf ) == 0 )
    373          		{
    374          			break;
    375          		}
    376          
    377          		printf( "Press ENTER key to continue. " );
    378          		readline( ibuf );
    379          
    380          		taskYIELD();
    381          	}
    382          
    383          #else
    384          	//	HAL_Delay( 0 );
    385          	SetCLIPrompt( display_diag_RF );
   \        0x6   0x.... 0x....      LDR.W    R0,??DataTable26_44
   \        0xA   0x.... 0x....      BL       SetCLIPrompt
    386          	SetCLIProc( cmd_diag_proc_RF );
   \        0xE   0x.... 0x....      LDR.W    R0,??DataTable26_45
   \       0x12   0x.... 0x....      BL       SetCLIProc
    387          
    388          #endif
    389          
    390          	/* NOTREACHED */
    391          
    392          	return 0;
   \       0x16   0x2000             MOVS     R0,#+0
   \       0x18   0xBD32             POP      {R1,R4,R5,PC}
    393          }
    394          
    395          
    396          //========================================================================

   \                                 In section .text, align 2, keep-with-next
    397          int	cmd_test1(int argc, char *argv[])
    398          //========================================================================
    399          {
   \                     cmd_test1: (+1)
   \        0x0   0xB538             PUSH     {R3-R5,LR}
   \        0x2   0x0004             MOVS     R4,R0
   \        0x4   0x000D             MOVS     R5,R1
    400          	printf( "%s(%d)\n", __func__, __LINE__ );
   \        0x6   0xF44F 0x72C8      MOV      R2,#+400
   \        0xA   0x.... 0x....      LDR.W    R1,??DataTable26_46
   \        0xE   0x.... 0x....      LDR.W    R0,??DataTable26_47
   \       0x12   0x.... 0x....      BL       printf
    401          
    402          #if defined(_WIN32)
    403          #else
    404          
    405          	AudioLoopback();		//	Audio Loopback Test
                 	^
Warning[Pe223]: function "AudioLoopback" declared implicitly
   \       0x16   0x.... 0x....      BL       AudioLoopback
    406          
    407          #endif
    408          
    409          	return 0;
   \       0x1A   0x2000             MOVS     R0,#+0
   \       0x1C   0xBD32             POP      {R1,R4,R5,PC}
    410          }
    411          
    412          //========================================================================

   \                                 In section .text, align 2, keep-with-next
    413          int	cmd_test2(int argc, char *argv[])
    414          //========================================================================
    415          {
   \                     cmd_test2: (+1)
   \        0x0   0xB538             PUSH     {R3-R5,LR}
   \        0x2   0x0004             MOVS     R4,R0
   \        0x4   0x000D             MOVS     R5,R1
    416          	printf( "%s(%d)\n", __func__, __LINE__ );
   \        0x6   0xF44F 0x72D0      MOV      R2,#+416
   \        0xA   0x.... 0x....      LDR.W    R1,??DataTable26_48
   \        0xE   0x.... 0x....      LDR.W    R0,??DataTable26_47
   \       0x12   0x.... 0x....      BL       printf
    417          
    418          	printf( "spi test\n" );
   \       0x16   0x.... 0x....      LDR.W    R0,??DataTable26_49
   \       0x1A   0x.... 0x....      BL       printf
    419          
    420          #if defined(_WIN32)
    421          #else
    422          
    423          	spi_test();
                 	^
Warning[Pe223]: function "spi_test" declared implicitly
   \       0x1E   0x.... 0x....      BL       spi_test
    424          
    425          #endif
    426          
    427          	return 0;
   \       0x22   0x2000             MOVS     R0,#+0
   \       0x24   0xBD32             POP      {R1,R4,R5,PC}
    428          }
    429          
    430          //========================================================================

   \                                 In section .text, align 2, keep-with-next
    431          int	cmd_test3( int argc, char *argv[] )
    432          //========================================================================
    433          {
   \                     cmd_test3: (+1)
   \        0x0   0xB538             PUSH     {R3-R5,LR}
   \        0x2   0x0004             MOVS     R4,R0
   \        0x4   0x000D             MOVS     R5,R1
    434          	printf( "%s(%d)\n", __func__, __LINE__ );
   \        0x6   0xF44F 0x72D9      MOV      R2,#+434
   \        0xA   0x.... 0x....      LDR.W    R1,??DataTable26_50
   \        0xE   0x.... 0x....      LDR.W    R0,??DataTable26_47
   \       0x12   0x.... 0x....      BL       printf
    435          
    436          #if defined(_WIN32)
    437          #else
    438          
    439          	InitCodecXE3005();	//	Audio Codec Init
                 	^
Warning[Pe223]: function "InitCodecXE3005" declared implicitly
   \       0x16   0x.... 0x....      BL       InitCodecXE3005
    440          
    441          #endif
    442          
    443          	return 0;
   \       0x1A   0x2000             MOVS     R0,#+0
   \       0x1C   0xBD32             POP      {R1,R4,R5,PC}
    444          }
    445          
    446          //========================================================================

   \                                 In section .text, align 2, keep-with-next
    447          int	cmd_test4( int argc, char *argv[] )
    448          //========================================================================
    449          {
   \                     cmd_test4: (+1)
   \        0x0   0xB538             PUSH     {R3-R5,LR}
   \        0x2   0x0004             MOVS     R4,R0
   \        0x4   0x000D             MOVS     R5,R1
    450          	printf( "%s(%d)\n", __func__, __LINE__ );
   \        0x6   0xF44F 0x72E1      MOV      R2,#+450
   \        0xA   0x.... 0x....      LDR.W    R1,??DataTable26_51
   \        0xE   0x.... 0x....      LDR.W    R0,??DataTable26_47
   \       0x12   0x.... 0x....      BL       printf
    451          	printf( "audio tx sine.\n" );
   \       0x16   0x.... 0x....      LDR.W    R0,??DataTable26_52
   \       0x1A   0x.... 0x....      BL       printf
    452          
    453          #if defined(_WIN32)
    454          #else
    455          
    456          	AudioSine();
                 	^
Warning[Pe223]: function "AudioSine" declared implicitly
   \       0x1E   0x.... 0x....      BL       AudioSine
    457          
    458          #endif
    459          
    460          	return 0;
   \       0x22   0x2000             MOVS     R0,#+0
   \       0x24   0xBD32             POP      {R1,R4,R5,PC}
    461          }
    462          
    463          //========================================================================

   \                                 In section .text, align 2, keep-with-next
    464          int	cmd_test5( int argc, char *argv[] )
    465          //========================================================================
    466          {
   \                     cmd_test5: (+1)
   \        0x0   0xB538             PUSH     {R3-R5,LR}
   \        0x2   0x0004             MOVS     R4,R0
   \        0x4   0x000D             MOVS     R5,R1
    467          	printf( "%s(%d)\n", __func__, __LINE__ );
   \        0x6   0xF240 0x12D3      MOVW     R2,#+467
   \        0xA   0x.... 0x....      LDR.W    R1,??DataTable26_53
   \        0xE   0x.... 0x....      LDR.W    R0,??DataTable26_47
   \       0x12   0x.... 0x....      BL       printf
    468          	printf( "audio tx null.\n" );
   \       0x16   0x.... 0x....      LDR.W    R0,??DataTable26_54
   \       0x1A   0x.... 0x....      BL       printf
    469          
    470          #if defined(_WIN32)
    471          #else
    472          
    473          //	AudioTxNull();
    474          	AudioTxStop();
                 	^
Warning[Pe223]: function "AudioTxStop" declared implicitly
   \       0x1E   0x.... 0x....      BL       AudioTxStop
    475          
    476          #endif
    477          
    478          	return 0;
   \       0x22   0x2000             MOVS     R0,#+0
   \       0x24   0xBD32             POP      {R1,R4,R5,PC}
    479          }
    480          
    481          
    482          //========================================================================

   \                                 In section .text, align 2, keep-with-next
    483          int		cmd_rfwds_info	( int argc, char *argv[] )
    484          //========================================================================
    485          {
   \                     cmd_rfwds_info: (+1)
   \        0x0   0xB570             PUSH     {R4-R6,LR}
   \        0x2   0x0004             MOVS     R4,R0
   \        0x4   0x000D             MOVS     R5,R1
    486          	printf( "%s(%d)\n", __func__, __LINE__ );
   \        0x6   0xF44F 0x72F3      MOV      R2,#+486
   \        0xA   0x.... 0x....      LDR.W    R1,??DataTable26_55
   \        0xE   0x.... 0x....      LDR.W    R0,??DataTable26_47
   \       0x12   0x.... 0x....      BL       printf
    487          
    488          #if defined(_WIN32)
    489          #else
    490          
    491          	uint8_t i;
    492          
    493          	si446x_part_info();
   \       0x16   0x.... 0x....      BL       si446x_part_info
    494          
    495          	printf( "[" );
   \       0x1A   0x....             ADR.N    R0,??DataTable22
   \       0x1C   0x.... 0x....      BL       printf
    496          	for ( i = 0; i < 6; i++ )
   \       0x20   0x2600             MOVS     R6,#+0
   \                     ??cmd_rfwds_info_0: (+1)
   \       0x22   0x0030             MOVS     R0,R6
   \       0x24   0xB2C0             UXTB     R0,R0
   \       0x26   0x2806             CMP      R0,#+6
   \       0x28   0xDA0A             BGE.N    ??cmd_rfwds_info_1
    497          	{
    498          		printf( "%02X:", Pro2Cmd[i] );
   \       0x2A   0x.... 0x....      LDR.W    R0,??DataTable26_56
   \       0x2E   0x0031             MOVS     R1,R6
   \       0x30   0xB2C9             UXTB     R1,R1
   \       0x32   0x5C41             LDRB     R1,[R0, R1]
   \       0x34   0x.... 0x....      LDR.W    R0,??DataTable26_57
   \       0x38   0x.... 0x....      BL       printf
    499          	}
   \       0x3C   0x1C76             ADDS     R6,R6,#+1
   \       0x3E   0xE7F0             B.N      ??cmd_rfwds_info_0
    500          	printf( "%02X]\r\n", Pro2Cmd[i] );
   \                     ??cmd_rfwds_info_1: (+1)
   \       0x40   0x.... 0x....      LDR.W    R0,??DataTable26_56
   \       0x44   0x0031             MOVS     R1,R6
   \       0x46   0xB2C9             UXTB     R1,R1
   \       0x48   0x5C41             LDRB     R1,[R0, R1]
   \       0x4A   0x.... 0x....      LDR.W    R0,??DataTable26_58
   \       0x4E   0x.... 0x....      BL       printf
    501          
    502          #endif
    503          
    504          	return 0;
   \       0x52   0x2000             MOVS     R0,#+0
   \       0x54   0xBD70             POP      {R4-R6,PC}
    505          }
    506          
    507          //========================================================================

   \                                 In section .text, align 2, keep-with-next
    508          int		cmd_rfwds1		( int argc, char *argv[] )
    509          //========================================================================
    510          {
   \                     cmd_rfwds1: (+1)
   \        0x0   0xB538             PUSH     {R3-R5,LR}
   \        0x2   0x0004             MOVS     R4,R0
   \        0x4   0x000D             MOVS     R5,R1
    511          	printf( "%s(%d)\n", __func__, __LINE__ );
   \        0x6   0xF240 0x12FF      MOVW     R2,#+511
   \        0xA   0x.... 0x....      LDR.W    R1,??DataTable26_59
   \        0xE   0x.... 0x....      LDR.W    R0,??DataTable26_47
   \       0x12   0x.... 0x....      BL       printf
    512          
    513          	return 0;
   \       0x16   0x2000             MOVS     R0,#+0
   \       0x18   0xBD32             POP      {R1,R4,R5,PC}
    514          }
    515          
    516          //========================================================================

   \                                 In section .text, align 2, keep-with-next
    517          int		cmd_rfwds2		( int argc, char *argv[] )
    518          //========================================================================
    519          {
   \                     cmd_rfwds2: (+1)
   \        0x0   0xB538             PUSH     {R3-R5,LR}
   \        0x2   0x0004             MOVS     R4,R0
   \        0x4   0x000D             MOVS     R5,R1
    520          	printf( "%s(%d)\n", __func__, __LINE__ );
   \        0x6   0xF44F 0x7202      MOV      R2,#+520
   \        0xA   0x.... 0x....      LDR.W    R1,??DataTable26_60
   \        0xE   0x.... 0x....      LDR.W    R0,??DataTable26_47
   \       0x12   0x.... 0x....      BL       printf
    521          
    522          	return 0;
   \       0x16   0x2000             MOVS     R0,#+0
   \       0x18   0xBD32             POP      {R1,R4,R5,PC}
    523          }
    524          
    525          //========================================================================

   \                                 In section .text, align 2, keep-with-next
    526          int		cmd_rfwds3		( int argc, char *argv[] )
    527          //========================================================================
    528          {
   \                     cmd_rfwds3: (+1)
   \        0x0   0xB538             PUSH     {R3-R5,LR}
   \        0x2   0x0004             MOVS     R4,R0
   \        0x4   0x000D             MOVS     R5,R1
    529          	printf( "%s(%d)\n", __func__, __LINE__ );
   \        0x6   0xF240 0x2211      MOVW     R2,#+529
   \        0xA   0x.... 0x....      LDR.W    R1,??DataTable26_61
   \        0xE   0x.... 0x....      LDR.W    R0,??DataTable26_47
   \       0x12   0x.... 0x....      BL       printf
    530          
    531          	return 0;
   \       0x16   0x2000             MOVS     R0,#+0
   \       0x18   0xBD32             POP      {R1,R4,R5,PC}
    532          }
    533          
    534          //========================================================================

   \                                 In section .text, align 2, keep-with-next
    535          int		cmd_rfwds_init	( int argc, char *argv[] )
    536          //========================================================================
    537          {
   \                     cmd_rfwds_init: (+1)
   \        0x0   0xB538             PUSH     {R3-R5,LR}
   \        0x2   0x0004             MOVS     R4,R0
   \        0x4   0x000D             MOVS     R5,R1
    538          	printf( "%s(%d)\n", __func__, __LINE__ );
   \        0x6   0xF240 0x221A      MOVW     R2,#+538
   \        0xA   0x.... 0x....      LDR.W    R1,??DataTable26_62
   \        0xE   0x.... 0x....      LDR.W    R0,??DataTable26_47
   \       0x12   0x.... 0x....      BL       printf
    539          
    540          #if defined(_WIN32)
    541          #else
    542          
    543          	vRadio_Init();
   \       0x16   0x.... 0x....      BL       vRadio_Init
    544          
    545          #endif
    546          
    547          	return 0;
   \       0x1A   0x2000             MOVS     R0,#+0
   \       0x1C   0xBD32             POP      {R1,R4,R5,PC}
    548          }
    549          
    550          //========================================================================

   \                                 In section .text, align 2, keep-with-next
    551          int		cmd_rfwds_debug	( int argc, char *argv[] )
    552          //========================================================================
    553          {
   \                     cmd_rfwds_debug: (+1)
   \        0x0   0xB538             PUSH     {R3-R5,LR}
   \        0x2   0x0004             MOVS     R4,R0
   \        0x4   0x000D             MOVS     R5,R1
    554          	printf( "%s(%d)\n", __func__, __LINE__ );
   \        0x6   0xF240 0x222A      MOVW     R2,#+554
   \        0xA   0x.... 0x....      LDR.W    R1,??DataTable26_63
   \        0xE   0x.... 0x....      LDR.W    R0,??DataTable26_47
   \       0x12   0x.... 0x....      BL       printf
    555          
    556          	/*
    557          #if defined(_WIN32)
    558          #else
    559          
    560          	if ( g_bEnableDbgRadioComm )
    561          	{
    562          		g_bEnableDbgRadioComm = 0;
    563          		printf( "Disable Debug\n" );
    564          	}
    565          	else
    566          	{
    567          		g_bEnableDbgRadioComm = 1;
    568          		printf( "Enable Debug\n" );
    569          	}
    570          
    571          #endif
    572          
    573          	*/
    574          	
    575          	return 0;
   \       0x16   0x2000             MOVS     R0,#+0
   \       0x18   0xBD32             POP      {R1,R4,R5,PC}
    576          }
    577          
    578          
    579          //========================================================================

   \                                 In section .text, align 2, keep-with-next
    580          int GetDbg( void )
    581          // 레벨을 정리.
    582          // 1. x > 0  --> x == 1
    583          // 2. x == 2  는 Dump 기능.
    584          // 3. x == 3  는 RFMProtocol 함수 디버깅.
    585          // 4. adc / radio 함수 디버깅.
    586          // 5. JDS 디버깅
    587          //========================================================================
    588          {
    589          	return debug_level;
   \                     GetDbg: (+1)
   \        0x0   0x.... 0x....      LDR.W    R0,??DataTable26_64
   \        0x4   0x6800             LDR      R0,[R0, #+0]
   \        0x6   0x4770             BX       LR
    590          }
    591          
    592          //========================================================================

   \                                 In section .text, align 2, keep-with-next
    593          void memory_modify(void *mem_addr, int unit)
    594          //========================================================================
    595          {
   \                     memory_modify: (+1)
   \        0x0   0xE92D 0x4FF0      PUSH     {R4-R11,LR}
   \        0x4   0xB0A1             SUB      SP,SP,#+132
   \        0x6   0x0005             MOVS     R5,R0
   \        0x8   0x000E             MOVS     R6,R1
    596          	unsigned char	v1;
    597          	unsigned short	v2;
    598          	unsigned int	v4;
    599          	unsigned char	*addrp1 = (unsigned char *)mem_addr;
   \        0xA   0x46A8             MOV      R8,R5
    600          	unsigned short	*addrp2 = (unsigned short *)mem_addr;
   \        0xC   0x46A9             MOV      R9,R5
    601          	unsigned int	*addrp4 = (unsigned int *)mem_addr;
   \        0xE   0x46AA             MOV      R10,R5
    602          	char			inbuf[0x80];
    603          
    604          	if (unit == 1)
   \       0x10   0x2E01             CMP      R6,#+1
   \       0x12   0xD121             BNE.N    ??memory_modify_0
    605          	{
    606          		while (1)
    607          		{
    608          			v1 = *addrp1;
   \                     ??memory_modify_1: (+1)
   \       0x14   0xF898 0xB000      LDRB     R11,[R8, #+0]
    609          			printf("%08p - %02x ", addrp1, v1);
   \       0x18   0x465A             MOV      R2,R11
   \       0x1A   0xB2D2             UXTB     R2,R2
   \       0x1C   0x4641             MOV      R1,R8
   \       0x1E   0x.... 0x....      LDR.W    R0,??DataTable26_65
   \       0x22   0x.... 0x....      BL       printf
    610          			v1 = readline(inbuf);
   \       0x26   0xA801             ADD      R0,SP,#+4
   \       0x28   0x.... 0x....      BL       readline
   \       0x2C   0xF88D 0x0000      STRB     R0,[SP, #+0]
    611          			if (0 < v1)
   \       0x30   0xF89D 0x0000      LDRB     R0,[SP, #+0]
   \       0x34   0x2800             CMP      R0,#+0
   \       0x36   0xD00C             BEQ.N    ??memory_modify_2
    612          			{
    613          				if (inbuf[0] == '.')
   \       0x38   0xF89D 0x0004      LDRB     R0,[SP, #+4]
   \       0x3C   0x282E             CMP      R0,#+46
   \       0x3E   0xD048             BEQ.N    ??memory_modify_3
    614          				{
    615          					break;
    616          				}
    617          				v1 = a2hex(inbuf);
   \                     ??memory_modify_4: (+1)
   \       0x40   0xA801             ADD      R0,SP,#+4
   \       0x42   0x.... 0x....      BL       a2hex
   \       0x46   0xF88D 0x0000      STRB     R0,[SP, #+0]
    618          				*addrp1 = v1;
   \       0x4A   0xF89D 0x0000      LDRB     R0,[SP, #+0]
   \       0x4E   0xF888 0x0000      STRB     R0,[R8, #+0]
    619          			}
    620          			addrp1++;
   \                     ??memory_modify_2: (+1)
   \       0x52   0xF118 0x0801      ADDS     R8,R8,#+1
   \       0x56   0xE7DD             B.N      ??memory_modify_1
    621          		}
    622          	}
    623          	else if (unit == 2)
   \                     ??memory_modify_0: (+1)
   \       0x58   0x2E02             CMP      R6,#+2
   \       0x5A   0xD11D             BNE.N    ??memory_modify_5
    624          	{
    625          		while (1)
    626          		{
    627          			v2 = *addrp2;
   \                     ??memory_modify_6: (+1)
   \       0x5C   0xF8B9 0xB000      LDRH     R11,[R9, #+0]
    628          			printf("%08p - %04x ", addrp2, v2);
   \       0x60   0x465A             MOV      R2,R11
   \       0x62   0xB292             UXTH     R2,R2
   \       0x64   0x4649             MOV      R1,R9
   \       0x66   0x.... 0x....      LDR.W    R0,??DataTable26_66
   \       0x6A   0x.... 0x....      BL       printf
    629          			v2 = readline(inbuf);
   \       0x6E   0xA801             ADD      R0,SP,#+4
   \       0x70   0x.... 0x....      BL       readline
   \       0x74   0x0007             MOVS     R7,R0
    630          			if (0 < v2)
   \       0x76   0x0038             MOVS     R0,R7
   \       0x78   0xB280             UXTH     R0,R0
   \       0x7A   0x2800             CMP      R0,#+0
   \       0x7C   0xD009             BEQ.N    ??memory_modify_7
    631          			{
    632          				if (inbuf[0] == '.')
   \       0x7E   0xF89D 0x0004      LDRB     R0,[SP, #+4]
   \       0x82   0x282E             CMP      R0,#+46
   \       0x84   0xD025             BEQ.N    ??memory_modify_3
    633          				{
    634          					break;
    635          				}
    636          				v2 = a2hex(inbuf);
   \                     ??memory_modify_8: (+1)
   \       0x86   0xA801             ADD      R0,SP,#+4
   \       0x88   0x.... 0x....      BL       a2hex
   \       0x8C   0x0007             MOVS     R7,R0
    637          				*addrp2 = v2;
   \       0x8E   0xF8A9 0x7000      STRH     R7,[R9, #+0]
    638          			}
    639          			addrp2++;
   \                     ??memory_modify_7: (+1)
   \       0x92   0xF119 0x0902      ADDS     R9,R9,#+2
   \       0x96   0xE7E1             B.N      ??memory_modify_6
    640          		}
    641          	}
    642          	else if (unit == 4)
   \                     ??memory_modify_5: (+1)
   \       0x98   0x2E04             CMP      R6,#+4
   \       0x9A   0xD11A             BNE.N    ??memory_modify_3
    643          	{
    644          		while (1)
    645          		{
    646          			v4 = *addrp4;
   \                     ??memory_modify_9: (+1)
   \       0x9C   0xF8DA 0xB000      LDR      R11,[R10, #+0]
    647          			printf("%08p - %08x ", addrp4, v4);
   \       0xA0   0x465A             MOV      R2,R11
   \       0xA2   0x4651             MOV      R1,R10
   \       0xA4   0x.... 0x....      LDR.W    R0,??DataTable26_67
   \       0xA8   0x.... 0x....      BL       printf
    648          			v4 = readline(inbuf);
   \       0xAC   0xA801             ADD      R0,SP,#+4
   \       0xAE   0x.... 0x....      BL       readline
   \       0xB2   0x0004             MOVS     R4,R0
    649          			if (0 < v4)
   \       0xB4   0x2C00             CMP      R4,#+0
   \       0xB6   0xD009             BEQ.N    ??memory_modify_10
    650          			{
    651          				if (inbuf[0] == '.')
   \       0xB8   0xF89D 0x0004      LDRB     R0,[SP, #+4]
   \       0xBC   0x282E             CMP      R0,#+46
   \       0xBE   0xD008             BEQ.N    ??memory_modify_3
    652          				{
    653          					break;
    654          				}
    655          				v4 = a2hex(inbuf);
   \                     ??memory_modify_11: (+1)
   \       0xC0   0xA801             ADD      R0,SP,#+4
   \       0xC2   0x.... 0x....      BL       a2hex
   \       0xC6   0x0004             MOVS     R4,R0
    656          				*addrp4 = v4;
   \       0xC8   0xF8CA 0x4000      STR      R4,[R10, #+0]
    657          			}
    658          			addrp4++;
   \                     ??memory_modify_10: (+1)
   \       0xCC   0xF11A 0x0A04      ADDS     R10,R10,#+4
   \       0xD0   0xE7E4             B.N      ??memory_modify_9
    659          		}
    660          	} 
    661          }
   \                     ??memory_modify_3: (+1)
   \       0xD2   0xB021             ADD      SP,SP,#+132
   \       0xD4   0xE8BD 0x8FF0      POP      {R4-R11,PC}
    662          
    663          //========================================================================

   \                                 In section .text, align 2, keep-with-next
    664          int cmd_md( int argc, char *argv[] )
    665          //========================================================================
    666          {
   \                     cmd_md: (+1)
   \        0x0   0xB5F8             PUSH     {R3-R7,LR}
   \        0x2   0x0004             MOVS     R4,R0
   \        0x4   0x000D             MOVS     R5,R1
    667          	if ( 1 < argc )
   \        0x6   0x2C02             CMP      R4,#+2
   \        0x8   0xDB04             BLT.N    ??cmd_md_0
    668          	{
    669          		mem_addr = (unsigned char *)a2hex( argv[1] );
   \        0xA   0x6868             LDR      R0,[R5, #+4]
   \        0xC   0x.... 0x....      BL       a2hex
   \       0x10   0x....             LDR.N    R1,??DataTable26_68
   \       0x12   0x6008             STR      R0,[R1, #+0]
    670          	}
    671          	if ( 2 < argc )
   \                     ??cmd_md_0: (+1)
   \       0x14   0x2C03             CMP      R4,#+3
   \       0x16   0xDB04             BLT.N    ??cmd_md_1
    672          	{
    673          		dumpsize = a2hex( argv[2] );
   \       0x18   0x68A8             LDR      R0,[R5, #+8]
   \       0x1A   0x.... 0x....      BL       a2hex
   \       0x1E   0x....             LDR.N    R1,??DataTable26_69
   \       0x20   0x6008             STR      R0,[R1, #+0]
    674          	}
    675          	if ( mem_addr == 0 )
   \                     ??cmd_md_1: (+1)
   \       0x22   0x....             LDR.N    R6,??DataTable26_68
   \       0x24   0x6830             LDR      R0,[R6, #+0]
   \       0x26   0x2800             CMP      R0,#+0
   \       0x28   0xD102             BNE.N    ??cmd_md_2
    676          	{
    677          		return -1;
   \       0x2A   0xF05F 0x30FF      MOVS     R0,#+4294967295
   \       0x2E   0xE00B             B.N      ??cmd_md_3
    678          	}
    679          
    680          	dump( (unsigned char *)mem_addr, dumpsize, data_option );
   \                     ??cmd_md_2: (+1)
   \       0x30   0x....             LDR.N    R7,??DataTable26_69
   \       0x32   0x....             LDR.N    R0,??DataTable26_70
   \       0x34   0x6802             LDR      R2,[R0, #+0]
   \       0x36   0x6839             LDR      R1,[R7, #+0]
   \       0x38   0x6830             LDR      R0,[R6, #+0]
   \       0x3A   0x.... 0x....      BL       dump
    681          	mem_addr += dumpsize;
   \       0x3E   0x6830             LDR      R0,[R6, #+0]
   \       0x40   0x6839             LDR      R1,[R7, #+0]
   \       0x42   0x4408             ADD      R0,R0,R1
   \       0x44   0x6030             STR      R0,[R6, #+0]
    682          
    683          	return 0;
   \       0x46   0x2000             MOVS     R0,#+0
   \                     ??cmd_md_3: (+1)
   \       0x48   0xBDF2             POP      {R1,R4-R7,PC}
    684          }
    685          
    686          //========================================================================

   \                                 In section .text, align 2, keep-with-next
    687          int cmd_mm( int argc, char *argv[] )
    688          //========================================================================
    689          {
   \                     cmd_mm: (+1)
   \        0x0   0xB538             PUSH     {R3-R5,LR}
   \        0x2   0x0004             MOVS     R4,R0
   \        0x4   0x000D             MOVS     R5,R1
    690          	if ( 1 < argc )
   \        0x6   0x2C02             CMP      R4,#+2
   \        0x8   0xDB04             BLT.N    ??cmd_mm_0
    691          	{
    692          		mem_addr = (unsigned char *)a2hex( argv[1] );
   \        0xA   0x6868             LDR      R0,[R5, #+4]
   \        0xC   0x.... 0x....      BL       a2hex
   \       0x10   0x....             LDR.N    R1,??DataTable26_68
   \       0x12   0x6008             STR      R0,[R1, #+0]
    693          	}
    694          	if ( mem_addr == 0 )
   \                     ??cmd_mm_0: (+1)
   \       0x14   0x....             LDR.N    R2,??DataTable26_68
   \       0x16   0x6810             LDR      R0,[R2, #+0]
   \       0x18   0x2800             CMP      R0,#+0
   \       0x1A   0xD102             BNE.N    ??cmd_mm_1
    695          	{
    696          		return -1;
   \       0x1C   0xF05F 0x30FF      MOVS     R0,#+4294967295
   \       0x20   0xE005             B.N      ??cmd_mm_2
    697          	}
    698          
    699          	memory_modify( (void *)mem_addr, data_option );
   \                     ??cmd_mm_1: (+1)
   \       0x22   0x....             LDR.N    R0,??DataTable26_70
   \       0x24   0x6801             LDR      R1,[R0, #+0]
   \       0x26   0x6810             LDR      R0,[R2, #+0]
   \       0x28   0x.... 0x....      BL       memory_modify
    700          
    701          	return 0;
   \       0x2C   0x2000             MOVS     R0,#+0
   \                     ??cmd_mm_2: (+1)
   \       0x2E   0xBD32             POP      {R1,R4,R5,PC}
    702          }
    703          
    704          //========================================================================

   \                                 In section .text, align 2, keep-with-next
    705          int cmd_debug(int argc, char *argv[])
    706          //========================================================================
    707          {
   \                     cmd_debug: (+1)
   \        0x0   0xB570             PUSH     {R4-R6,LR}
   \        0x2   0x0004             MOVS     R4,R0
   \        0x4   0x000D             MOVS     R5,R1
    708          	if (argc == 1)
   \        0x6   0x2C01             CMP      R4,#+1
   \        0x8   0xD105             BNE.N    ??cmd_debug_0
    709          	{
    710          		printf("current debug level = 0x%x\n", debug_level);
   \        0xA   0x....             LDR.N    R0,??DataTable26_64
   \        0xC   0x6801             LDR      R1,[R0, #+0]
   \        0xE   0x....             LDR.N    R0,??DataTable26_71
   \       0x10   0x.... 0x....      BL       printf
   \       0x14   0xE008             B.N      ??cmd_debug_1
    711          	}
    712          	else
    713          	{
    714          		debug_level = a2hex(argv[1]);
   \                     ??cmd_debug_0: (+1)
   \       0x16   0x....             LDR.N    R6,??DataTable26_64
   \       0x18   0x6868             LDR      R0,[R5, #+4]
   \       0x1A   0x.... 0x....      BL       a2hex
   \       0x1E   0x6030             STR      R0,[R6, #+0]
    715          		printf("debug level = 0x%x\n", debug_level);
   \       0x20   0x6831             LDR      R1,[R6, #+0]
   \       0x22   0x....             LDR.N    R0,??DataTable26_72
   \       0x24   0x.... 0x....      BL       printf
    716          	}
    717          
    718          	return 0;
   \                     ??cmd_debug_1: (+1)
   \       0x28   0x2000             MOVS     R0,#+0
   \       0x2A   0xBD70             POP      {R4-R6,PC}
    719          }
    720          
    721          //========================================================================

   \                                 In section .text, align 2, keep-with-next
    722          int cmd_wr( int argc, char *argv[] )
    723          //========================================================================
    724          {
   \                     cmd_wr: (+1)
   \        0x0   0xE92D 0x43F8      PUSH     {R3-R9,LR}
   \        0x4   0x0004             MOVS     R4,R0
   \        0x6   0x000D             MOVS     R5,R1
    725          	unsigned int	addr = 0;
   \        0x8   0x2600             MOVS     R6,#+0
    726          	unsigned int	v;
    727          
    728          	int	index = 1;
   \        0xA   0xF05F 0x0801      MOVS     R8,#+1
    729          	int	option_loop = 0;
   \        0xE   0x2700             MOVS     R7,#+0
    730          
    731          	if ( (index <= argc) && (strcmp( argv[index], "-l" ) == 0) )
   \       0x10   0x4544             CMP      R4,R8
   \       0x12   0xDB0A             BLT.N    ??cmd_wr_0
   \       0x14   0x....             ADR.N    R1,??DataTable26
   \       0x16   0xF855 0x0028      LDR      R0,[R5, R8, LSL #+2]
   \       0x1A   0x.... 0x....      BL       strcmp
   \       0x1E   0x2800             CMP      R0,#+0
   \       0x20   0xD103             BNE.N    ??cmd_wr_0
    732          	{
    733          		option_loop = 1;
   \       0x22   0x2001             MOVS     R0,#+1
   \       0x24   0x0007             MOVS     R7,R0
    734          		index++;
   \       0x26   0xEA5F 0x0848      LSLS     R8,R8,#+1
    735          	}
    736          	if ( index < argc )
   \                     ??cmd_wr_0: (+1)
   \       0x2A   0x45A0             CMP      R8,R4
   \       0x2C   0xDA06             BGE.N    ??cmd_wr_1
    737          	{
    738          		addr = a2hex( argv[index] );
   \       0x2E   0xF855 0x0028      LDR      R0,[R5, R8, LSL #+2]
   \       0x32   0x.... 0x....      BL       a2hex
   \       0x36   0x0006             MOVS     R6,R0
    739          		index++;
   \       0x38   0xF118 0x0801      ADDS     R8,R8,#+1
    740          	}
    741          	if ( index < argc )
   \                     ??cmd_wr_1: (+1)
   \       0x3C   0x45A0             CMP      R8,R4
   \       0x3E   0xDA05             BGE.N    ??cmd_wr_2
    742          	{
    743          		v = a2hex( argv[index] );
   \       0x40   0xF855 0x0028      LDR      R0,[R5, R8, LSL #+2]
   \       0x44   0x.... 0x....      BL       a2hex
   \       0x48   0x4681             MOV      R9,R0
   \       0x4A   0xE002             B.N      ??cmd_wr_3
    744          	}
    745          	else
    746          	{
    747          		return -1;
   \                     ??cmd_wr_2: (+1)
   \       0x4C   0xF05F 0x30FF      MOVS     R0,#+4294967295
   \       0x50   0xE01E             B.N      ??cmd_wr_4
    748          	}
    749          	do
    750          	{
    751          		if ( data_option == 1 )
   \                     ??cmd_wr_3: (+1)
   \       0x52   0x....             LDR.N    R0,??DataTable26_70
   \       0x54   0x6801             LDR      R1,[R0, #+0]
   \       0x56   0x2901             CMP      R1,#+1
   \       0x58   0xD102             BNE.N    ??cmd_wr_5
    752          		{
    753          			*(unsigned char *)addr	=	(unsigned char)v;
   \       0x5A   0xF886 0x9000      STRB     R9,[R6, #+0]
   \       0x5E   0xE00A             B.N      ??cmd_wr_6
    754          		}
    755          		else if ( data_option == 2 )
   \                     ??cmd_wr_5: (+1)
   \       0x60   0x6801             LDR      R1,[R0, #+0]
   \       0x62   0x2902             CMP      R1,#+2
   \       0x64   0xD102             BNE.N    ??cmd_wr_7
    756          		{
    757          			*(unsigned short *)addr	=	(unsigned short)v;
   \       0x66   0xF8A6 0x9000      STRH     R9,[R6, #+0]
   \       0x6A   0xE004             B.N      ??cmd_wr_6
    758          		}
    759          		else if ( data_option == 4 )
   \                     ??cmd_wr_7: (+1)
   \       0x6C   0x6800             LDR      R0,[R0, #+0]
   \       0x6E   0x2804             CMP      R0,#+4
   \       0x70   0xD101             BNE.N    ??cmd_wr_6
    760          		{
    761          			*(unsigned int *)addr	=	(unsigned int)v;
   \       0x72   0xF8C6 0x9000      STR      R9,[R6, #+0]
    762          		}
    763          
    764          #if defined(USE_FREERTOS)
    765          		vTaskDelay( 100 / portTICK_RATE_MS );
    766          #else
    767          		HAL_Delay( 0 );
   \                     ??cmd_wr_6: (+1)
   \       0x76   0x2000             MOVS     R0,#+0
   \       0x78   0x.... 0x....      BL       HAL_Delay
    768          #endif
    769          
    770          	} while ( option_loop == 1 && input_check() == 0 );
   \       0x7C   0x2F01             CMP      R7,#+1
   \       0x7E   0xD103             BNE.N    ??cmd_wr_8
   \       0x80   0x.... 0x....      BL       input_check
   \       0x84   0x2800             CMP      R0,#+0
   \       0x86   0xD0E4             BEQ.N    ??cmd_wr_3
    771          
    772          	printf( "\n" );
   \                     ??cmd_wr_8: (+1)
   \       0x88   0x....             ADR.N    R0,??DataTable26_1
   \       0x8A   0x.... 0x....      BL       printf
    773          
    774          	return 0;
   \       0x8E   0x2000             MOVS     R0,#+0
   \                     ??cmd_wr_4: (+1)
   \       0x90   0xE8BD 0x83F2      POP      {R1,R4-R9,PC}
    775          }
    776          
    777          //========================================================================

   \                                 In section .text, align 2, keep-with-next
    778          int cmd_rd( int argc, char *argv[] )
    779          //========================================================================
    780          {
   \                     cmd_rd: (+1)
   \        0x0   0xE92D 0x43F8      PUSH     {R3-R9,LR}
   \        0x4   0x0004             MOVS     R4,R0
   \        0x6   0x000D             MOVS     R5,R1
    781          	unsigned int	addr;
    782          	unsigned int	v;
    783          
    784          	int		index = 1;
   \        0x8   0xF05F 0x0801      MOVS     R8,#+1
    785          	int		option_loop = 0;
   \        0xC   0x2700             MOVS     R7,#+0
    786          
    787          	if ( (index <= argc) && (strcmp( argv[index], "-l" ) == 0) )
   \        0xE   0x4544             CMP      R4,R8
   \       0x10   0xDB0A             BLT.N    ??cmd_rd_0
   \       0x12   0x....             ADR.N    R1,??DataTable26
   \       0x14   0xF855 0x0028      LDR      R0,[R5, R8, LSL #+2]
   \       0x18   0x.... 0x....      BL       strcmp
   \       0x1C   0x2800             CMP      R0,#+0
   \       0x1E   0xD103             BNE.N    ??cmd_rd_0
    788          	{
    789          		option_loop = 1;
   \       0x20   0x2001             MOVS     R0,#+1
   \       0x22   0x0007             MOVS     R7,R0
    790          		index++;
   \       0x24   0xEA5F 0x0848      LSLS     R8,R8,#+1
    791          	}
    792          	if ( index < argc )
   \                     ??cmd_rd_0: (+1)
   \       0x28   0x45A0             CMP      R8,R4
   \       0x2A   0xDA05             BGE.N    ??cmd_rd_1
    793          	{
    794          		addr = a2hex( argv[index] );
   \       0x2C   0xF855 0x0028      LDR      R0,[R5, R8, LSL #+2]
   \       0x30   0x.... 0x....      BL       a2hex
   \       0x34   0x4681             MOV      R9,R0
   \       0x36   0xE002             B.N      ??cmd_rd_2
    795          	}
    796          	else
    797          	{
    798          		return -1;
   \                     ??cmd_rd_1: (+1)
   \       0x38   0xF05F 0x30FF      MOVS     R0,#+4294967295
   \       0x3C   0xE030             B.N      ??cmd_rd_3
    799          	}
    800          
    801          	do
    802          	{
    803          		if ( data_option == 1 )
   \                     ??cmd_rd_2: (+1)
   \       0x3E   0x....             LDR.N    R0,??DataTable26_70
   \       0x40   0x6801             LDR      R1,[R0, #+0]
   \       0x42   0x2901             CMP      R1,#+1
   \       0x44   0xD108             BNE.N    ??cmd_rd_4
    804          		{
    805          			v = *(unsigned char *)addr;
   \       0x46   0xF899 0x0000      LDRB     R0,[R9, #+0]
   \       0x4A   0x0006             MOVS     R6,R0
    806          			printf( "addr 0x%08x, value 0x%02x\r", addr, v );
   \       0x4C   0x0032             MOVS     R2,R6
   \       0x4E   0x4649             MOV      R1,R9
   \       0x50   0x....             LDR.N    R0,??DataTable26_73
   \       0x52   0x.... 0x....      BL       printf
   \       0x56   0xE016             B.N      ??cmd_rd_5
    807          		}
    808          		else if ( data_option == 2 )
   \                     ??cmd_rd_4: (+1)
   \       0x58   0x6801             LDR      R1,[R0, #+0]
   \       0x5A   0x2902             CMP      R1,#+2
   \       0x5C   0xD108             BNE.N    ??cmd_rd_6
    809          		{
    810          			v = *(unsigned short *)addr;
   \       0x5E   0xF8B9 0x0000      LDRH     R0,[R9, #+0]
   \       0x62   0x0006             MOVS     R6,R0
    811          			printf( "addr 0x%08x, value 0x%04x\r", addr, v );
   \       0x64   0x0032             MOVS     R2,R6
   \       0x66   0x4649             MOV      R1,R9
   \       0x68   0x....             LDR.N    R0,??DataTable26_74
   \       0x6A   0x.... 0x....      BL       printf
   \       0x6E   0xE00A             B.N      ??cmd_rd_5
    812          		}
    813          		else if ( data_option == 4 )
   \                     ??cmd_rd_6: (+1)
   \       0x70   0x6800             LDR      R0,[R0, #+0]
   \       0x72   0x2804             CMP      R0,#+4
   \       0x74   0xD107             BNE.N    ??cmd_rd_5
    814          		{
    815          			v = *(unsigned int *)addr;
   \       0x76   0xF8D9 0x0000      LDR      R0,[R9, #+0]
   \       0x7A   0x0006             MOVS     R6,R0
    816          			printf( "addr 0x%08x, value 0x%08x\r", addr, v );
   \       0x7C   0x0032             MOVS     R2,R6
   \       0x7E   0x4649             MOV      R1,R9
   \       0x80   0x....             LDR.N    R0,??DataTable26_75
   \       0x82   0x.... 0x....      BL       printf
    817          		}
    818          
    819          #if defined(USE_FREERTOS)
    820          		vTaskDelay( 10 / portTICK_RATE_MS );
    821          #else
    822          		HAL_Delay( 0 );
   \                     ??cmd_rd_5: (+1)
   \       0x86   0x2000             MOVS     R0,#+0
   \       0x88   0x.... 0x....      BL       HAL_Delay
    823          #endif
    824          
    825          	} while ( option_loop == 1 && input_check() == 0 );
   \       0x8C   0x2F01             CMP      R7,#+1
   \       0x8E   0xD103             BNE.N    ??cmd_rd_7
   \       0x90   0x.... 0x....      BL       input_check
   \       0x94   0x2800             CMP      R0,#+0
   \       0x96   0xD0D2             BEQ.N    ??cmd_rd_2
    826          
    827          	printf( "\n" );
   \                     ??cmd_rd_7: (+1)
   \       0x98   0x....             ADR.N    R0,??DataTable26_1
   \       0x9A   0x.... 0x....      BL       printf
    828          
    829          	return 0;
   \       0x9E   0x2000             MOVS     R0,#+0
   \                     ??cmd_rd_3: (+1)
   \       0xA0   0xE8BD 0x83F2      POP      {R1,R4-R9,PC}
    830          }
    831          
    832          //========================================================================

   \                                 In section .text, align 2, keep-with-next
    833          int cmd_do(int argc, char *argv[])
    834          //========================================================================
    835          {
   \                     cmd_do: (+1)
   \        0x0   0xB538             PUSH     {R3-R5,LR}
   \        0x2   0x0004             MOVS     R4,R0
   \        0x4   0x000D             MOVS     R5,R1
    836          	int	val = 0;
   \        0x6   0x2000             MOVS     R0,#+0
   \        0x8   0x9000             STR      R0,[SP, #+0]
    837          	extern	void	gpio_write(int val);
    838          
    839          	if (2 <= argc)
   \        0xA   0x2C02             CMP      R4,#+2
   \        0xC   0xDB04             BLT.N    ??cmd_do_0
    840          	{
    841          		sscanf(argv[1], "%x", &val);
   \        0xE   0x466A             MOV      R2,SP
   \       0x10   0x....             ADR.N    R1,??DataTable26_2
   \       0x12   0x6868             LDR      R0,[R5, #+4]
   \       0x14   0x.... 0x....      BL       sscanf
    842          	}
    843          	//gpio_write(val);
    844          
    845          	return 0;
   \                     ??cmd_do_0: (+1)
   \       0x18   0x2000             MOVS     R0,#+0
   \       0x1A   0xBD32             POP      {R1,R4,R5,PC}
    846          }
    847          
    848          //========================================================================

   \                                 In section .text, align 2, keep-with-next
    849          int cmd_test( int argc, char * argv[] )
    850          //========================================================================
    851          {
   \                     cmd_test: (+1)
   \        0x0   0xB538             PUSH     {R3-R5,LR}
   \        0x2   0x0004             MOVS     R4,R0
   \        0x4   0x000D             MOVS     R5,R1
    852          	printf( "%s(%d)\n", __func__, __LINE__ );
   \        0x6   0xF44F 0x7255      MOV      R2,#+852
   \        0xA   0x....             LDR.N    R1,??DataTable26_76
   \        0xC   0x....             LDR.N    R0,??DataTable26_47
   \        0xE   0x.... 0x....      BL       printf
    853          }
                 ^
Warning[Pe940]: missing return statement at end of non-void function "cmd_test"
   \       0x12   0xBD32             POP      {R1,R4,R5,PC}

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4:
   \        0x0   0x0A 0x00          DC8      "\n",0x0,0x0   

   \              0x00 0x00

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable16:
   \        0x0   0x0A 0x00          DC8      "\n",0x0,0x0   

   \              0x00 0x00

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable22:
   \        0x0   0x5B 0x00          DC8      "[",0x0,0x0    

   \              0x00 0x00

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable26:
   \        0x0   0x2D 0x6C          DC8      0x2D, 0x6C, 0x00, 0x00

   \              0x00 0x00

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable26_1:
   \        0x0   0x0A 0x00          DC8      "\n",0x0,0x0   

   \              0x00 0x00

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable26_2:
   \        0x0   0x25 0x78          DC8      0x25, 0x78, 0x00, 0x00

   \              0x00 0x00

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable26_3:
   \        0x0   0x....'....        DC32     ?_0

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable26_4:
   \        0x0   0x....'....        DC32     ?_1

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable26_5:
   \        0x0   0x....'....        DC32     ?_3

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable26_6:
   \        0x0   0x....'....        DC32     ?_4

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable26_7:
   \        0x0   0x....'....        DC32     ?_5

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable26_8:
   \        0x0   0x....'....        DC32     ?_6

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable26_9:
   \        0x0   0x....'....        DC32     ?_7

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable26_10:
   \        0x0   0x....'....        DC32     ?_8

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable26_11:
   \        0x0   0x....'....        DC32     ?_9

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable26_12:
   \        0x0   0x....'....        DC32     ?_10

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable26_13:
   \        0x0   0x....'....        DC32     ?_11

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable26_14:
   \        0x0   0x....'....        DC32     CLIPrompt

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable26_15:
   \        0x0   0x....'....        DC32     ProcessCommand

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable26_16:
   \        0x0   0x....'....        DC32     display_diag_menu

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable26_17:
   \        0x0   0x....'....        DC32     cmd_diag_proc

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable26_18:
   \        0x0   0x....'....        DC32     ?_12

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable26_19:
   \        0x0   0x....'....        DC32     ?_13

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable26_20:
   \        0x0   0x....'....        DC32     ?_14

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable26_21:
   \        0x0   0x....'....        DC32     ?_15

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable26_22:
   \        0x0   0x....'....        DC32     ?_16

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable26_23:
   \        0x0   0x....'....        DC32     ?_17

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable26_24:
   \        0x0   0x....'....        DC32     ?_18

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable26_25:
   \        0x0   0x....'....        DC32     ?_19

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable26_26:
   \        0x0   0x....'....        DC32     ?_20

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable26_27:
   \        0x0   0x....'....        DC32     ?_21

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable26_28:
   \        0x0   0x....'....        DC32     ?_22

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable26_29:
   \        0x0   0x....'....        DC32     ?_23

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable26_30:
   \        0x0   0x....'....        DC32     ?_24

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable26_31:
   \        0x0   0x....'....        DC32     ?_25

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable26_32:
   \        0x0   0x....'....        DC32     ?_26

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable26_33:
   \        0x0   0x....'....        DC32     ?_27

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable26_34:
   \        0x0   0x....'....        DC32     display_diag_Audio

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable26_35:
   \        0x0   0x....'....        DC32     cmd_diag_proc_Audio

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable26_36:
   \        0x0   0x....'....        DC32     ?_28

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable26_37:
   \        0x0   0x....'....        DC32     ?_29

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable26_38:
   \        0x0   0x....'....        DC32     ?_30

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable26_39:
   \        0x0   0x....'....        DC32     ?_31

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable26_40:
   \        0x0   0x....'....        DC32     ?_32

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable26_41:
   \        0x0   0x....'....        DC32     ?_33

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable26_42:
   \        0x0   0x....'....        DC32     ?_34

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable26_43:
   \        0x0   0x....'....        DC32     ?_35

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable26_44:
   \        0x0   0x....'....        DC32     display_diag_RF

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable26_45:
   \        0x0   0x....'....        DC32     cmd_diag_proc_RF

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable26_46:
   \        0x0   0x....'....        DC32     `cmd_test1::__func__`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable26_47:
   \        0x0   0x....'....        DC32     ?_36

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable26_48:
   \        0x0   0x....'....        DC32     `cmd_test2::__func__`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable26_49:
   \        0x0   0x....'....        DC32     ?_37

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable26_50:
   \        0x0   0x....'....        DC32     `cmd_test3::__func__`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable26_51:
   \        0x0   0x....'....        DC32     `cmd_test4::__func__`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable26_52:
   \        0x0   0x....'....        DC32     ?_38

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable26_53:
   \        0x0   0x....'....        DC32     `cmd_test5::__func__`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable26_54:
   \        0x0   0x....'....        DC32     ?_39

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable26_55:
   \        0x0   0x....'....        DC32     `cmd_rfwds_info::__func__`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable26_56:
   \        0x0   0x....'....        DC32     Pro2Cmd

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable26_57:
   \        0x0   0x....'....        DC32     ?_41

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable26_58:
   \        0x0   0x....'....        DC32     ?_42

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable26_59:
   \        0x0   0x....'....        DC32     `cmd_rfwds1::__func__`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable26_60:
   \        0x0   0x....'....        DC32     `cmd_rfwds2::__func__`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable26_61:
   \        0x0   0x....'....        DC32     `cmd_rfwds3::__func__`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable26_62:
   \        0x0   0x....'....        DC32     `cmd_rfwds_init::__func__`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable26_63:
   \        0x0   0x....'....        DC32     `cmd_rfwds_debug::__func__`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable26_64:
   \        0x0   0x....'....        DC32     debug_level

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable26_65:
   \        0x0   0x....'....        DC32     ?_43

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable26_66:
   \        0x0   0x....'....        DC32     ?_44

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable26_67:
   \        0x0   0x....'....        DC32     ?_45

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable26_68:
   \        0x0   0x....'....        DC32     mem_addr

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable26_69:
   \        0x0   0x....'....        DC32     dumpsize

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable26_70:
   \        0x0   0x....'....        DC32     data_option

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable26_71:
   \        0x0   0x....'....        DC32     ?_46

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable26_72:
   \        0x0   0x....'....        DC32     ?_47

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable26_73:
   \        0x0   0x....'....        DC32     ?_49

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable26_74:
   \        0x0   0x....'....        DC32     ?_50

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable26_75:
   \        0x0   0x....'....        DC32     ?_51

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable26_76:
   \        0x0   0x....'....        DC32     `cmd_test::__func__`

   \                                 In section .rodata, align 4
   \                     ?_0:
   \        0x0   0x1B 0x5B          DC8 "\033[2J"

   \              0x32 0x4A    

   \              0x00
   \        0x5                      DS8 3

   \                                 In section .rodata, align 4
   \                     ?_1:
   \        0x0   0x1B 0x5B          DC8 "\033[1;1H"

   \              0x31 0x3B    

   \              0x31 0x48    

   \              0x00
   \        0x7                      DS8 1

   \                                 In section .rodata, align 2
   \        0x0   0x0A 0x00          DC8 "\012"

   \                                 In section .rodata, align 4
   \                     ?_3:
   \        0x0   0x20 0x20          DC8 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x2A

   \              0x20 0x20    

   \              0x20 0x20    

   \              0x20 0x2A
   \        0x8   0x2A 0x2A          DC8 0x2A, 0x2A, 0x2A, 0x2A, 0x2A, 0x2A, 0x2A, 0x2A

   \              0x2A 0x2A    

   \              0x2A 0x2A    

   \              0x2A 0x2A
   \       0x10   0x2A 0x2A          DC8 0x2A, 0x2A, 0x2A, 0x2A, 0x2A, 0x2A, 0x2A, 0x2A

   \              0x2A 0x2A    

   \              0x2A 0x2A    

   \              0x2A 0x2A
   \       0x18   0x2A 0x2A          DC8 0x2A, 0x2A, 0x2A, 0x2A, 0x2A, 0x2A, 0x2A, 0x2A

   \              0x2A 0x2A    

   \              0x2A 0x2A    

   \              0x2A 0x2A
   \       0x20   0x2A 0x2A          DC8 0x2A, 0x2A, 0x2A, 0x2A, 0x2A, 0x2A, 0x2A, 0x2A

   \              0x2A 0x2A    

   \              0x2A 0x2A    

   \              0x2A 0x2A
   \       0x28   0x2A 0x2A          DC8 0x2A, 0x2A, 0x2A, 0x2A, 0x2A, 0x2A, 0x2A, 0x2A

   \              0x2A 0x2A    

   \              0x2A 0x2A    

   \              0x2A 0x2A
   \       0x30   0x2A 0x2A          DC8 0x2A, 0x2A, 0x2A, 0x2A, 0x2A, 0x2A, 0x2A, 0x2A

   \              0x2A 0x2A    

   \              0x2A 0x2A    

   \              0x2A 0x2A
   \       0x38   0x2A 0x2A          DC8 0x2A, 0x2A, 0x2A, 0x2A, 0x2A, 0x2A, 0x2A, 0x2A

   \              0x2A 0x2A    

   \              0x2A 0x2A    

   \              0x2A 0x2A
   \       0x40   0x2A 0x2A          DC8 0x2A, 0x2A, 0x2A, 0x2A, 0x2A, 0x0A, 0

   \              0x2A 0x2A    

   \              0x2A 0x0A    

   \              0x00
   \       0x47                      DS8 1

   \                                 In section .rodata, align 4
   \                     ?_4:
   \        0x0   0x20 0x20          DC8 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x2A

   \              0x20 0x20    

   \              0x20 0x20    

   \              0x20 0x2A
   \        0x8   0x20 0x20          DC8 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20

   \              0x20 0x20    

   \              0x20 0x20    

   \              0x20 0x20
   \       0x10   0x20 0x20          DC8 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20

   \              0x20 0x20    

   \              0x20 0x20    

   \              0x20 0x20
   \       0x18   0x20 0x20          DC8 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x42

   \              0x20 0x20    

   \              0x20 0x20    

   \              0x20 0x42
   \       0x20   0x6F 0x61          DC8 0x6F, 0x61, 0x72, 0x64, 0x20, 0x54, 0x65, 0x73

   \              0x72 0x64    

   \              0x20 0x54    

   \              0x65 0x73
   \       0x28   0x74 0x20          DC8 0x74, 0x20, 0x56, 0x31, 0x2E, 0x30, 0x20, 0x20

   \              0x56 0x31    

   \              0x2E 0x30    

   \              0x20 0x20
   \       0x30   0x20 0x20          DC8 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20

   \              0x20 0x20    

   \              0x20 0x20    

   \              0x20 0x20
   \       0x38   0x20 0x20          DC8 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20

   \              0x20 0x20    

   \              0x20 0x20    

   \              0x20 0x20
   \       0x40   0x20 0x20          DC8 0x20, 0x20, 0x20, 0x20, 0x2A, 0x0A, 0

   \              0x20 0x20    

   \              0x2A 0x0A    

   \              0x00
   \       0x47                      DS8 1

   \                                 In section .rodata, align 4
   \                     ?_5:
   \        0x0   0x20 0x20          DC8 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x2A

   \              0x20 0x20    

   \              0x20 0x20    

   \              0x20 0x2A
   \        0x8   0x20 0x20          DC8 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20

   \              0x20 0x20    

   \              0x20 0x20    

   \              0x20 0x20
   \       0x10   0x20 0x20          DC8 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20

   \              0x20 0x20    

   \              0x20 0x20    

   \              0x20 0x20
   \       0x18   0x20 0x20          DC8 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20

   \              0x20 0x20    

   \              0x20 0x20    

   \              0x20 0x20
   \       0x20   0x20 0x20          DC8 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20

   \              0x20 0x20    

   \              0x20 0x20    

   \              0x20 0x20
   \       0x28   0x20 0x20          DC8 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20

   \              0x20 0x20    

   \              0x20 0x20    

   \              0x20 0x20
   \       0x30   0x20 0x20          DC8 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20

   \              0x20 0x20    

   \              0x20 0x20    

   \              0x20 0x20
   \       0x38   0x20 0x20          DC8 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20

   \              0x20 0x20    

   \              0x20 0x20    

   \              0x20 0x20
   \       0x40   0x20 0x20          DC8 0x20, 0x20, 0x20, 0x20, 0x2A, 0x0A, 0

   \              0x20 0x20    

   \              0x2A 0x0A    

   \              0x00
   \       0x47                      DS8 1

   \                                 In section .rodata, align 4
   \                     ?_6:
   \        0x0   0x20 0x20          DC8 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x2A

   \              0x20 0x20    

   \              0x20 0x20    

   \              0x20 0x2A
   \        0x8   0x20 0x20          DC8 0x20, 0x20, 0x31, 0x20, 0x3A, 0x20, 0x41, 0x75

   \              0x31 0x20    

   \              0x3A 0x20    

   \              0x41 0x75
   \       0x10   0x64 0x69          DC8 0x64, 0x69, 0x6F, 0x20, 0x54, 0x65, 0x73, 0x74

   \              0x6F 0x20    

   \              0x54 0x65    

   \              0x73 0x74
   \       0x18   0x2E 0x20          DC8 0x2E, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20

   \              0x20 0x20    

   \              0x20 0x20    

   \              0x20 0x20
   \       0x20   0x20 0x20          DC8 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20

   \              0x20 0x20    

   \              0x20 0x20    

   \              0x20 0x20
   \       0x28   0x20 0x20          DC8 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20

   \              0x20 0x20    

   \              0x20 0x20    

   \              0x20 0x20
   \       0x30   0x20 0x20          DC8 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20

   \              0x20 0x20    

   \              0x20 0x20    

   \              0x20 0x20
   \       0x38   0x20 0x20          DC8 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20

   \              0x20 0x20    

   \              0x20 0x20    

   \              0x20 0x20
   \       0x40   0x20 0x20          DC8 0x20, 0x20, 0x20, 0x20, 0x2A, 0x0A, 0

   \              0x20 0x20    

   \              0x2A 0x0A    

   \              0x00
   \       0x47                      DS8 1

   \                                 In section .rodata, align 4
   \                     ?_7:
   \        0x0   0x20 0x20          DC8 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x2A

   \              0x20 0x20    

   \              0x20 0x20    

   \              0x20 0x2A
   \        0x8   0x20 0x20          DC8 0x20, 0x20, 0x32, 0x20, 0x3A, 0x20, 0x52, 0x46

   \              0x32 0x20    

   \              0x3A 0x20    

   \              0x52 0x46
   \       0x10   0x20 0x74          DC8 0x20, 0x74, 0x65, 0x73, 0x74, 0x2E, 0x20, 0x20

   \              0x65 0x73    

   \              0x74 0x2E    

   \              0x20 0x20
   \       0x18   0x20 0x20          DC8 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20

   \              0x20 0x20    

   \              0x20 0x20    

   \              0x20 0x20
   \       0x20   0x20 0x20          DC8 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20

   \              0x20 0x20    

   \              0x20 0x20    

   \              0x20 0x20
   \       0x28   0x20 0x20          DC8 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20

   \              0x20 0x20    

   \              0x20 0x20    

   \              0x20 0x20
   \       0x30   0x20 0x20          DC8 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20

   \              0x20 0x20    

   \              0x20 0x20    

   \              0x20 0x20
   \       0x38   0x20 0x20          DC8 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20

   \              0x20 0x20    

   \              0x20 0x20    

   \              0x20 0x20
   \       0x40   0x20 0x20          DC8 0x20, 0x20, 0x20, 0x20, 0x2A, 0x0A, 0

   \              0x20 0x20    

   \              0x2A 0x0A    

   \              0x00
   \       0x47                      DS8 1

   \                                 In section .rodata, align 4
   \                     ?_8:
   \        0x0   0x20 0x20          DC8 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x2A

   \              0x20 0x20    

   \              0x20 0x20    

   \              0x20 0x2A
   \        0x8   0x20 0x20          DC8 0x20, 0x20, 0x34, 0x20, 0x3A, 0x20, 0x73, 0x70

   \              0x34 0x20    

   \              0x3A 0x20    

   \              0x73 0x70
   \       0x10   0x69 0x20          DC8 0x69, 0x20, 0x74, 0x65, 0x73, 0x74, 0x2E, 0x20

   \              0x74 0x65    

   \              0x73 0x74    

   \              0x2E 0x20
   \       0x18   0x20 0x20          DC8 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20

   \              0x20 0x20    

   \              0x20 0x20    

   \              0x20 0x20
   \       0x20   0x20 0x20          DC8 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20

   \              0x20 0x20    

   \              0x20 0x20    

   \              0x20 0x20
   \       0x28   0x20 0x20          DC8 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20

   \              0x20 0x20    

   \              0x20 0x20    

   \              0x20 0x20
   \       0x30   0x20 0x20          DC8 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20

   \              0x20 0x20    

   \              0x20 0x20    

   \              0x20 0x20
   \       0x38   0x20 0x20          DC8 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20

   \              0x20 0x20    

   \              0x20 0x20    

   \              0x20 0x20
   \       0x40   0x20 0x20          DC8 0x20, 0x20, 0x20, 0x20, 0x2A, 0x0A, 0

   \              0x20 0x20    

   \              0x2A 0x0A    

   \              0x00
   \       0x47                      DS8 1

   \                                 In section .rodata, align 4
   \                     ?_9:
   \        0x0   0x20 0x20          DC8 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x2A

   \              0x20 0x20    

   \              0x20 0x20    

   \              0x20 0x2A
   \        0x8   0x20 0x20          DC8 0x20, 0x20, 0x35, 0x20, 0x3A, 0x20, 0x45, 0x78

   \              0x35 0x20    

   \              0x3A 0x20    

   \              0x45 0x78
   \       0x10   0x74 0x65          DC8 0x74, 0x65, 0x72, 0x6E, 0x61, 0x6C, 0x20, 0x46

   \              0x72 0x6E    

   \              0x61 0x6C    

   \              0x20 0x46
   \       0x18   0x6C 0x61          DC8 0x6C, 0x61, 0x73, 0x68, 0x20, 0x4D, 0x65, 0x6D

   \              0x73 0x68    

   \              0x20 0x4D    

   \              0x65 0x6D
   \       0x20   0x6F 0x72          DC8 0x6F, 0x72, 0x79, 0x20, 0x54, 0x65, 0x73, 0x74

   \              0x79 0x20    

   \              0x54 0x65    

   \              0x73 0x74
   \       0x28   0x2E 0x28          DC8 0x2E, 0x28, 0x57, 0x72, 0x69, 0x74, 0x65, 0x2F

   \              0x57 0x72    

   \              0x69 0x74    

   \              0x65 0x2F
   \       0x30   0x52 0x65          DC8 0x52, 0x65, 0x61, 0x64, 0x2F, 0x43, 0x6F, 0x6D

   \              0x61 0x64    

   \              0x2F 0x43    

   \              0x6F 0x6D
   \       0x38   0x70 0x61          DC8 0x70, 0x61, 0x72, 0x65, 0x29, 0x20, 0x20, 0x20

   \              0x72 0x65    

   \              0x29 0x20    

   \              0x20 0x20
   \       0x40   0x20 0x20          DC8 0x20, 0x20, 0x20, 0x20, 0x2A, 0x0A, 0

   \              0x20 0x20    

   \              0x2A 0x0A    

   \              0x00
   \       0x47                      DS8 1

   \                                 In section .rodata, align 4
   \                     ?_10:
   \        0x0   0x20 0x20          DC8 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x2A

   \              0x20 0x20    

   \              0x20 0x20    

   \              0x20 0x2A
   \        0x8   0x20 0x20          DC8 0x20, 0x20, 0x65, 0x20, 0x3A, 0x20, 0x70, 0x72

   \              0x65 0x20    

   \              0x3A 0x20    

   \              0x70 0x72
   \       0x10   0x69 0x6E          DC8 0x69, 0x6E, 0x74, 0x20, 0x6C, 0x6F, 0x67, 0x2E

   \              0x74 0x20    

   \              0x6C 0x6F    

   \              0x67 0x2E
   \       0x18   0x20 0x20          DC8 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20

   \              0x20 0x20    

   \              0x20 0x20    

   \              0x20 0x20
   \       0x20   0x20 0x20          DC8 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20

   \              0x20 0x20    

   \              0x20 0x20    

   \              0x20 0x20
   \       0x28   0x20 0x20          DC8 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20

   \              0x20 0x20    

   \              0x20 0x20    

   \              0x20 0x20
   \       0x30   0x20 0x20          DC8 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20

   \              0x20 0x20    

   \              0x20 0x20    

   \              0x20 0x20
   \       0x38   0x20 0x20          DC8 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20

   \              0x20 0x20    

   \              0x20 0x20    

   \              0x20 0x20
   \       0x40   0x20 0x20          DC8 0x20, 0x20, 0x20, 0x20, 0x2A, 0x0A, 0

   \              0x20 0x20    

   \              0x2A 0x0A    

   \              0x00
   \       0x47                      DS8 1

   \                                 In section .rodata, align 4
   \                     ?_11:
   \        0x0   0x20 0x20          DC8 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20

   \              0x20 0x20    

   \              0x20 0x20    

   \              0x20 0x20
   \        0x8   0x20 0x20          DC8 0x20, 0x20, 0x20, 0x50, 0x6C, 0x65, 0x61, 0x73

   \              0x20 0x50    

   \              0x6C 0x65    

   \              0x61 0x73
   \       0x10   0x65 0x20          DC8 0x65, 0x20, 0x73, 0x65, 0x6C, 0x65, 0x63, 0x74

   \              0x73 0x65    

   \              0x6C 0x65    

   \              0x63 0x74
   \       0x18   0x20 0x6E          DC8 0x20, 0x6E, 0x75, 0x6D, 0x62, 0x65, 0x72, 0x5B

   \              0x75 0x6D    

   \              0x62 0x65    

   \              0x72 0x5B
   \       0x20   0x74 0x6F          DC8 0x74, 0x6F, 0x20, 0x71, 0x75, 0x69, 0x74, 0x2C

   \              0x20 0x71    

   \              0x75 0x69    

   \              0x74 0x2C
   \       0x28   0x20 0x70          DC8 0x20, 0x70, 0x75, 0x73, 0x68, 0x20, 0x27, 0x71

   \              0x75 0x73    

   \              0x68 0x20    

   \              0x27 0x71
   \       0x30   0x27 0x2C          DC8 0x27, 0x2C, 0x20, 0x27, 0x51, 0x27, 0x5D, 0x3A

   \              0x20 0x27    

   \              0x51 0x27    

   \              0x5D 0x3A
   \       0x38   0x00               DC8 0
   \       0x39                      DS8 3

   \                                 In section .rodata, align 4
   \                     ?_12:
   \        0x0   0x20 0x20          DC8 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x2A

   \              0x20 0x20    

   \              0x20 0x20    

   \              0x20 0x2A
   \        0x8   0x20 0x20          DC8 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20

   \              0x20 0x20    

   \              0x20 0x20    

   \              0x20 0x20
   \       0x10   0x20 0x20          DC8 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20

   \              0x20 0x20    

   \              0x20 0x20    

   \              0x20 0x20
   \       0x18   0x20 0x20          DC8 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x41, 0x75

   \              0x20 0x20    

   \              0x20 0x20    

   \              0x41 0x75
   \       0x20   0x64 0x69          DC8 0x64, 0x69, 0x6F, 0x20, 0x54, 0x65, 0x73, 0x74

   \              0x6F 0x20    

   \              0x54 0x65    

   \              0x73 0x74
   \       0x28   0x2E 0x20          DC8 0x2E, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20

   \              0x20 0x20    

   \              0x20 0x20    

   \              0x20 0x20
   \       0x30   0x20 0x20          DC8 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20

   \              0x20 0x20    

   \              0x20 0x20    

   \              0x20 0x20
   \       0x38   0x20 0x20          DC8 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20

   \              0x20 0x20    

   \              0x20 0x20    

   \              0x20 0x20
   \       0x40   0x20 0x20          DC8 0x20, 0x20, 0x20, 0x20, 0x2A, 0x0A, 0

   \              0x20 0x20    

   \              0x2A 0x0A    

   \              0x00
   \       0x47                      DS8 1

   \                                 In section .rodata, align 4
   \                     ?_13:
   \        0x0   0x20 0x20          DC8 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x2A

   \              0x20 0x20    

   \              0x20 0x20    

   \              0x20 0x2A
   \        0x8   0x20 0x20          DC8 0x20, 0x20, 0x31, 0x20, 0x3A, 0x20, 0x61, 0x75

   \              0x31 0x20    

   \              0x3A 0x20    

   \              0x61 0x75
   \       0x10   0x64 0x69          DC8 0x64, 0x69, 0x6F, 0x20, 0x74, 0x78, 0x20, 0x73

   \              0x6F 0x20    

   \              0x74 0x78    

   \              0x20 0x73
   \       0x18   0x69 0x6E          DC8 0x69, 0x6E, 0x65, 0x2E, 0x20, 0x20, 0x20, 0x20

   \              0x65 0x2E    

   \              0x20 0x20    

   \              0x20 0x20
   \       0x20   0x20 0x20          DC8 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20

   \              0x20 0x20    

   \              0x20 0x20    

   \              0x20 0x20
   \       0x28   0x20 0x20          DC8 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20

   \              0x20 0x20    

   \              0x20 0x20    

   \              0x20 0x20
   \       0x30   0x20 0x20          DC8 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20

   \              0x20 0x20    

   \              0x20 0x20    

   \              0x20 0x20
   \       0x38   0x20 0x20          DC8 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20

   \              0x20 0x20    

   \              0x20 0x20    

   \              0x20 0x20
   \       0x40   0x20 0x20          DC8 0x20, 0x20, 0x20, 0x20, 0x2A, 0x0A, 0

   \              0x20 0x20    

   \              0x2A 0x0A    

   \              0x00
   \       0x47                      DS8 1

   \                                 In section .rodata, align 4
   \                     ?_14:
   \        0x0   0x20 0x20          DC8 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x2A

   \              0x20 0x20    

   \              0x20 0x20    

   \              0x20 0x2A
   \        0x8   0x20 0x20          DC8 0x20, 0x20, 0x32, 0x20, 0x3A, 0x20, 0x61, 0x75

   \              0x32 0x20    

   \              0x3A 0x20    

   \              0x61 0x75
   \       0x10   0x64 0x69          DC8 0x64, 0x69, 0x6F, 0x20, 0x74, 0x78, 0x20, 0x6E

   \              0x6F 0x20    

   \              0x74 0x78    

   \              0x20 0x6E
   \       0x18   0x75 0x6C          DC8 0x75, 0x6C, 0x6C, 0x2E, 0x20, 0x20, 0x20, 0x20

   \              0x6C 0x2E    

   \              0x20 0x20    

   \              0x20 0x20
   \       0x20   0x20 0x20          DC8 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20

   \              0x20 0x20    

   \              0x20 0x20    

   \              0x20 0x20
   \       0x28   0x20 0x20          DC8 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20

   \              0x20 0x20    

   \              0x20 0x20    

   \              0x20 0x20
   \       0x30   0x20 0x20          DC8 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20

   \              0x20 0x20    

   \              0x20 0x20    

   \              0x20 0x20
   \       0x38   0x20 0x20          DC8 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20

   \              0x20 0x20    

   \              0x20 0x20    

   \              0x20 0x20
   \       0x40   0x20 0x20          DC8 0x20, 0x20, 0x20, 0x20, 0x2A, 0x0A, 0

   \              0x20 0x20    

   \              0x2A 0x0A    

   \              0x00
   \       0x47                      DS8 1

   \                                 In section .rodata, align 4
   \                     ?_15:
   \        0x0   0x20 0x20          DC8 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x2A

   \              0x20 0x20    

   \              0x20 0x20    

   \              0x20 0x2A
   \        0x8   0x20 0x20          DC8 0x20, 0x20, 0x33, 0x20, 0x3A, 0x20, 0x61, 0x75

   \              0x33 0x20    

   \              0x3A 0x20    

   \              0x61 0x75
   \       0x10   0x64 0x69          DC8 0x64, 0x69, 0x6F, 0x20, 0x74, 0x78, 0x20, 0x73

   \              0x6F 0x20    

   \              0x74 0x78    

   \              0x20 0x73
   \       0x18   0x74 0x6F          DC8 0x74, 0x6F, 0x70, 0x2E, 0x20, 0x20, 0x20, 0x20

   \              0x70 0x2E    

   \              0x20 0x20    

   \              0x20 0x20
   \       0x20   0x20 0x20          DC8 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20

   \              0x20 0x20    

   \              0x20 0x20    

   \              0x20 0x20
   \       0x28   0x20 0x20          DC8 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20

   \              0x20 0x20    

   \              0x20 0x20    

   \              0x20 0x20
   \       0x30   0x20 0x20          DC8 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20

   \              0x20 0x20    

   \              0x20 0x20    

   \              0x20 0x20
   \       0x38   0x20 0x20          DC8 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20

   \              0x20 0x20    

   \              0x20 0x20    

   \              0x20 0x20
   \       0x40   0x20 0x20          DC8 0x20, 0x20, 0x20, 0x20, 0x2A, 0x0A, 0

   \              0x20 0x20    

   \              0x2A 0x0A    

   \              0x00
   \       0x47                      DS8 1

   \                                 In section .rodata, align 4
   \                     ?_16:
   \        0x0   0x20 0x20          DC8 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x2A

   \              0x20 0x20    

   \              0x20 0x20    

   \              0x20 0x2A
   \        0x8   0x20 0x20          DC8 0x20, 0x20, 0x34, 0x20, 0x3A, 0x20, 0x41, 0x75

   \              0x34 0x20    

   \              0x3A 0x20    

   \              0x41 0x75
   \       0x10   0x64 0x69          DC8 0x64, 0x69, 0x6F, 0x20, 0x4C, 0x6F, 0x6F, 0x70

   \              0x6F 0x20    

   \              0x4C 0x6F    

   \              0x6F 0x70
   \       0x18   0x62 0x61          DC8 0x62, 0x61, 0x63, 0x6B, 0x2E, 0x20, 0x28, 0x20

   \              0x63 0x6B    

   \              0x2E 0x20    

   \              0x28 0x20
   \       0x20   0x49 0x6E          DC8 0x49, 0x6E, 0x74, 0x65, 0x72, 0x6E, 0x61, 0x6C

   \              0x74 0x65    

   \              0x72 0x6E    

   \              0x61 0x6C
   \       0x28   0x20 0x43          DC8 0x20, 0x43, 0x6F, 0x64, 0x65, 0x63, 0x20, 0x29

   \              0x6F 0x64    

   \              0x65 0x63    

   \              0x20 0x29
   \       0x30   0x20 0x20          DC8 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20

   \              0x20 0x20    

   \              0x20 0x20    

   \              0x20 0x20
   \       0x38   0x20 0x20          DC8 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20

   \              0x20 0x20    

   \              0x20 0x20    

   \              0x20 0x20
   \       0x40   0x20 0x20          DC8 0x20, 0x20, 0x20, 0x20, 0x2A, 0x0A, 0

   \              0x20 0x20    

   \              0x2A 0x0A    

   \              0x00
   \       0x47                      DS8 1

   \                                 In section .rodata, align 4
   \                     ?_17:
   \        0x0   0x20 0x20          DC8 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x2A

   \              0x20 0x20    

   \              0x20 0x20    

   \              0x20 0x2A
   \        0x8   0x20 0x20          DC8 0x20, 0x20, 0x35, 0x20, 0x3A, 0x20, 0x41, 0x75

   \              0x35 0x20    

   \              0x3A 0x20    

   \              0x41 0x75
   \       0x10   0x64 0x69          DC8 0x64, 0x69, 0x6F, 0x20, 0x4C, 0x6F, 0x6F, 0x70

   \              0x6F 0x20    

   \              0x4C 0x6F    

   \              0x6F 0x70
   \       0x18   0x62 0x61          DC8 0x62, 0x61, 0x63, 0x6B, 0x2E, 0x20, 0x28, 0x20

   \              0x63 0x6B    

   \              0x2E 0x20    

   \              0x28 0x20
   \       0x20   0x44 0x4D          DC8 0x44, 0x4D, 0x41, 0x20, 0x29, 0x20, 0x20, 0x20

   \              0x41 0x20    

   \              0x29 0x20    

   \              0x20 0x20
   \       0x28   0x20 0x20          DC8 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20

   \              0x20 0x20    

   \              0x20 0x20    

   \              0x20 0x20
   \       0x30   0x20 0x20          DC8 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20

   \              0x20 0x20    

   \              0x20 0x20    

   \              0x20 0x20
   \       0x38   0x20 0x20          DC8 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20

   \              0x20 0x20    

   \              0x20 0x20    

   \              0x20 0x20
   \       0x40   0x20 0x20          DC8 0x20, 0x20, 0x20, 0x20, 0x2A, 0x0A, 0

   \              0x20 0x20    

   \              0x2A 0x0A    

   \              0x00
   \       0x47                      DS8 1

   \                                 In section .rodata, align 4
   \                     ?_18:
   \        0x0   0x20 0x20          DC8 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x2A

   \              0x20 0x20    

   \              0x20 0x20    

   \              0x20 0x2A
   \        0x8   0x20 0x20          DC8 0x20, 0x20, 0x36, 0x20, 0x3A, 0x20, 0x41, 0x75

   \              0x36 0x20    

   \              0x3A 0x20    

   \              0x41 0x75
   \       0x10   0x64 0x69          DC8 0x64, 0x69, 0x6F, 0x20, 0x52, 0x46, 0x20, 0x54

   \              0x6F 0x20    

   \              0x52 0x46    

   \              0x20 0x54
   \       0x18   0x78 0x2F          DC8 0x78, 0x2F, 0x52, 0x78, 0x2E, 0x20, 0x28, 0x20

   \              0x52 0x78    

   \              0x2E 0x20    

   \              0x28 0x20
   \       0x20   0x44 0x4D          DC8 0x44, 0x4D, 0x41, 0x20, 0x29, 0x20, 0x20, 0x20

   \              0x41 0x20    

   \              0x29 0x20    

   \              0x20 0x20
   \       0x28   0x20 0x20          DC8 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20

   \              0x20 0x20    

   \              0x20 0x20    

   \              0x20 0x20
   \       0x30   0x20 0x20          DC8 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20

   \              0x20 0x20    

   \              0x20 0x20    

   \              0x20 0x20
   \       0x38   0x20 0x20          DC8 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20

   \              0x20 0x20    

   \              0x20 0x20    

   \              0x20 0x20
   \       0x40   0x20 0x20          DC8 0x20, 0x20, 0x20, 0x20, 0x2A, 0x0A, 0

   \              0x20 0x20    

   \              0x2A 0x0A    

   \              0x00
   \       0x47                      DS8 1

   \                                 In section .rodata, align 4
   \                     ?_19:
   \        0x0   0x20 0x20          DC8 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x2A

   \              0x20 0x20    

   \              0x20 0x20    

   \              0x20 0x2A
   \        0x8   0x20 0x20          DC8 0x20, 0x20, 0x37, 0x20, 0x3A, 0x20, 0x41, 0x75

   \              0x37 0x20    

   \              0x3A 0x20    

   \              0x41 0x75
   \       0x10   0x64 0x69          DC8 0x64, 0x69, 0x6F, 0x20, 0x4C, 0x6F, 0x6F, 0x70

   \              0x6F 0x20    

   \              0x4C 0x6F    

   \              0x6F 0x70
   \       0x18   0x62 0x61          DC8 0x62, 0x61, 0x63, 0x6B, 0x2E, 0x20, 0x28, 0x20

   \              0x63 0x6B    

   \              0x2E 0x20    

   \              0x28 0x20
   \       0x20   0x44 0x4D          DC8 0x44, 0x4D, 0x41, 0x20, 0x2D, 0x20, 0x73, 0x70

   \              0x41 0x20    

   \              0x2D 0x20    

   \              0x73 0x70
   \       0x28   0x65 0x65          DC8 0x65, 0x65, 0x78, 0x20, 0x29, 0x20, 0x20, 0x20

   \              0x78 0x20    

   \              0x29 0x20    

   \              0x20 0x20
   \       0x30   0x20 0x20          DC8 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20

   \              0x20 0x20    

   \              0x20 0x20    

   \              0x20 0x20
   \       0x38   0x20 0x20          DC8 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20

   \              0x20 0x20    

   \              0x20 0x20    

   \              0x20 0x20
   \       0x40   0x20 0x20          DC8 0x20, 0x20, 0x20, 0x20, 0x2A, 0x0A, 0

   \              0x20 0x20    

   \              0x2A 0x0A    

   \              0x00
   \       0x47                      DS8 1

   \                                 In section .rodata, align 4
   \                     ?_20:
   \        0x0   0x20 0x20          DC8 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x2A

   \              0x20 0x20    

   \              0x20 0x20    

   \              0x20 0x2A
   \        0x8   0x20 0x20          DC8 0x20, 0x20, 0x38, 0x20, 0x3A, 0x20, 0x41, 0x75

   \              0x38 0x20    

   \              0x3A 0x20    

   \              0x41 0x75
   \       0x10   0x64 0x69          DC8 0x64, 0x69, 0x6F, 0x20, 0x52, 0x46, 0x20, 0x54

   \              0x6F 0x20    

   \              0x52 0x46    

   \              0x20 0x54
   \       0x18   0x78 0x2E          DC8 0x78, 0x2E, 0x20, 0x28, 0x20, 0x44, 0x4D, 0x41

   \              0x20 0x28    

   \              0x20 0x44    

   \              0x4D 0x41
   \       0x20   0x20 0x29          DC8 0x20, 0x29, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20

   \              0x20 0x20    

   \              0x20 0x20    

   \              0x20 0x20
   \       0x28   0x20 0x20          DC8 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20

   \              0x20 0x20    

   \              0x20 0x20    

   \              0x20 0x20
   \       0x30   0x20 0x20          DC8 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20

   \              0x20 0x20    

   \              0x20 0x20    

   \              0x20 0x20
   \       0x38   0x20 0x20          DC8 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20

   \              0x20 0x20    

   \              0x20 0x20    

   \              0x20 0x20
   \       0x40   0x20 0x20          DC8 0x20, 0x20, 0x20, 0x20, 0x2A, 0x0A, 0

   \              0x20 0x20    

   \              0x2A 0x0A    

   \              0x00
   \       0x47                      DS8 1

   \                                 In section .rodata, align 4
   \                     ?_21:
   \        0x0   0x20 0x20          DC8 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x2A

   \              0x20 0x20    

   \              0x20 0x20    

   \              0x20 0x2A
   \        0x8   0x20 0x20          DC8 0x20, 0x20, 0x39, 0x20, 0x3A, 0x20, 0x41, 0x75

   \              0x39 0x20    

   \              0x3A 0x20    

   \              0x41 0x75
   \       0x10   0x64 0x69          DC8 0x64, 0x69, 0x6F, 0x20, 0x52, 0x46, 0x20, 0x52

   \              0x6F 0x20    

   \              0x52 0x46    

   \              0x20 0x52
   \       0x18   0x78 0x2E          DC8 0x78, 0x2E, 0x20, 0x28, 0x20, 0x44, 0x4D, 0x41

   \              0x20 0x28    

   \              0x20 0x44    

   \              0x4D 0x41
   \       0x20   0x20 0x29          DC8 0x20, 0x29, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20

   \              0x20 0x20    

   \              0x20 0x20    

   \              0x20 0x20
   \       0x28   0x20 0x20          DC8 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20

   \              0x20 0x20    

   \              0x20 0x20    

   \              0x20 0x20
   \       0x30   0x20 0x20          DC8 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20

   \              0x20 0x20    

   \              0x20 0x20    

   \              0x20 0x20
   \       0x38   0x20 0x20          DC8 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20

   \              0x20 0x20    

   \              0x20 0x20    

   \              0x20 0x20
   \       0x40   0x20 0x20          DC8 0x20, 0x20, 0x20, 0x20, 0x2A, 0x0A, 0

   \              0x20 0x20    

   \              0x2A 0x0A    

   \              0x00
   \       0x47                      DS8 1

   \                                 In section .rodata, align 4
   \                     ?_22:
   \        0x0   0x20 0x20          DC8 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x2A

   \              0x20 0x20    

   \              0x20 0x20    

   \              0x20 0x2A
   \        0x8   0x20 0x20          DC8 0x20, 0x20, 0x61, 0x20, 0x3A, 0x20, 0x41, 0x75

   \              0x61 0x20    

   \              0x3A 0x20    

   \              0x41 0x75
   \       0x10   0x64 0x69          DC8 0x64, 0x69, 0x6F, 0x20, 0x53, 0x61, 0x6D, 0x70

   \              0x6F 0x20    

   \              0x53 0x61    

   \              0x6D 0x70
   \       0x18   0x6C 0x69          DC8 0x6C, 0x69, 0x6E, 0x67, 0x20, 0x28, 0x20, 0x38

   \              0x6E 0x67    

   \              0x20 0x28    

   \              0x20 0x38
   \       0x20   0x20 0x4B          DC8 0x20, 0x4B, 0x48, 0x7A, 0x20, 0x29, 0x20, 0x20

   \              0x48 0x7A    

   \              0x20 0x29    

   \              0x20 0x20
   \       0x28   0x20 0x20          DC8 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20

   \              0x20 0x20    

   \              0x20 0x20    

   \              0x20 0x20
   \       0x30   0x20 0x20          DC8 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20

   \              0x20 0x20    

   \              0x20 0x20    

   \              0x20 0x20
   \       0x38   0x20 0x20          DC8 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20

   \              0x20 0x20    

   \              0x20 0x20    

   \              0x20 0x20
   \       0x40   0x20 0x20          DC8 0x20, 0x20, 0x20, 0x20, 0x2A, 0x0A, 0

   \              0x20 0x20    

   \              0x2A 0x0A    

   \              0x00
   \       0x47                      DS8 1

   \                                 In section .rodata, align 4
   \                     ?_23:
   \        0x0   0x20 0x20          DC8 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x2A

   \              0x20 0x20    

   \              0x20 0x20    

   \              0x20 0x2A
   \        0x8   0x20 0x20          DC8 0x20, 0x20, 0x62, 0x20, 0x3A, 0x20, 0x41, 0x75

   \              0x62 0x20    

   \              0x3A 0x20    

   \              0x41 0x75
   \       0x10   0x64 0x69          DC8 0x64, 0x69, 0x6F, 0x20, 0x53, 0x61, 0x6D, 0x70

   \              0x6F 0x20    

   \              0x53 0x61    

   \              0x6D 0x70
   \       0x18   0x6C 0x69          DC8 0x6C, 0x69, 0x6E, 0x67, 0x20, 0x28, 0x20, 0x34

   \              0x6E 0x67    

   \              0x20 0x28    

   \              0x20 0x34
   \       0x20   0x20 0x4B          DC8 0x20, 0x4B, 0x48, 0x7A, 0x20, 0x29, 0x20, 0x20

   \              0x48 0x7A    

   \              0x20 0x29    

   \              0x20 0x20
   \       0x28   0x20 0x20          DC8 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20

   \              0x20 0x20    

   \              0x20 0x20    

   \              0x20 0x20
   \       0x30   0x20 0x20          DC8 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20

   \              0x20 0x20    

   \              0x20 0x20    

   \              0x20 0x20
   \       0x38   0x20 0x20          DC8 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20

   \              0x20 0x20    

   \              0x20 0x20    

   \              0x20 0x20
   \       0x40   0x20 0x20          DC8 0x20, 0x20, 0x20, 0x20, 0x2A, 0x0A, 0

   \              0x20 0x20    

   \              0x2A 0x0A    

   \              0x00
   \       0x47                      DS8 1

   \                                 In section .rodata, align 4
   \                     ?_24:
   \        0x0   0x20 0x20          DC8 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x2A

   \              0x20 0x20    

   \              0x20 0x20    

   \              0x20 0x2A
   \        0x8   0x20 0x20          DC8 0x20, 0x20, 0x63, 0x20, 0x3A, 0x20, 0x41, 0x75

   \              0x63 0x20    

   \              0x3A 0x20    

   \              0x41 0x75
   \       0x10   0x64 0x69          DC8 0x64, 0x69, 0x6F, 0x20, 0x53, 0x61, 0x6D, 0x70

   \              0x6F 0x20    

   \              0x53 0x61    

   \              0x6D 0x70
   \       0x18   0x6C 0x69          DC8 0x6C, 0x69, 0x6E, 0x67, 0x20, 0x28, 0x20, 0x32

   \              0x6E 0x67    

   \              0x20 0x28    

   \              0x20 0x32
   \       0x20   0x20 0x4B          DC8 0x20, 0x4B, 0x48, 0x7A, 0x20, 0x29, 0x20, 0x20

   \              0x48 0x7A    

   \              0x20 0x29    

   \              0x20 0x20
   \       0x28   0x20 0x20          DC8 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20

   \              0x20 0x20    

   \              0x20 0x20    

   \              0x20 0x20
   \       0x30   0x20 0x20          DC8 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20

   \              0x20 0x20    

   \              0x20 0x20    

   \              0x20 0x20
   \       0x38   0x20 0x20          DC8 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20

   \              0x20 0x20    

   \              0x20 0x20    

   \              0x20 0x20
   \       0x40   0x20 0x20          DC8 0x20, 0x20, 0x20, 0x20, 0x2A, 0x0A, 0

   \              0x20 0x20    

   \              0x2A 0x0A    

   \              0x00
   \       0x47                      DS8 1

   \                                 In section .rodata, align 4
   \                     ?_25:
   \        0x0   0x20 0x20          DC8 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x2A

   \              0x20 0x20    

   \              0x20 0x20    

   \              0x20 0x2A
   \        0x8   0x20 0x20          DC8 0x20, 0x20, 0x64, 0x20, 0x3A, 0x20, 0x41, 0x75

   \              0x64 0x20    

   \              0x3A 0x20    

   \              0x41 0x75
   \       0x10   0x64 0x69          DC8 0x64, 0x69, 0x6F, 0x20, 0x53, 0x61, 0x6D, 0x70

   \              0x6F 0x20    

   \              0x53 0x61    

   \              0x6D 0x70
   \       0x18   0x6C 0x69          DC8 0x6C, 0x69, 0x6E, 0x67, 0x20, 0x28, 0x20, 0x31

   \              0x6E 0x67    

   \              0x20 0x28    

   \              0x20 0x31
   \       0x20   0x20 0x4B          DC8 0x20, 0x4B, 0x48, 0x7A, 0x20, 0x29, 0x20, 0x20

   \              0x48 0x7A    

   \              0x20 0x29    

   \              0x20 0x20
   \       0x28   0x20 0x20          DC8 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20

   \              0x20 0x20    

   \              0x20 0x20    

   \              0x20 0x20
   \       0x30   0x20 0x20          DC8 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20

   \              0x20 0x20    

   \              0x20 0x20    

   \              0x20 0x20
   \       0x38   0x20 0x20          DC8 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20

   \              0x20 0x20    

   \              0x20 0x20    

   \              0x20 0x20
   \       0x40   0x20 0x20          DC8 0x20, 0x20, 0x20, 0x20, 0x2A, 0x0A, 0

   \              0x20 0x20    

   \              0x2A 0x0A    

   \              0x00
   \       0x47                      DS8 1

   \                                 In section .rodata, align 4
   \                     ?_26:
   \        0x0   0x20 0x20          DC8 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x2A

   \              0x20 0x20    

   \              0x20 0x20    

   \              0x20 0x2A
   \        0x8   0x20 0x20          DC8 0x20, 0x20, 0x69, 0x20, 0x3A, 0x20, 0x61, 0x75

   \              0x69 0x20    

   \              0x3A 0x20    

   \              0x61 0x75
   \       0x10   0x64 0x69          DC8 0x64, 0x69, 0x6F, 0x20, 0x49, 0x6E, 0x69, 0x74

   \              0x6F 0x20    

   \              0x49 0x6E    

   \              0x69 0x74
   \       0x18   0x20 0x20          DC8 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20

   \              0x20 0x20    

   \              0x20 0x20    

   \              0x20 0x20
   \       0x20   0x20 0x20          DC8 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20

   \              0x20 0x20    

   \              0x20 0x20    

   \              0x20 0x20
   \       0x28   0x20 0x20          DC8 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20

   \              0x20 0x20    

   \              0x20 0x20    

   \              0x20 0x20
   \       0x30   0x20 0x20          DC8 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20

   \              0x20 0x20    

   \              0x20 0x20    

   \              0x20 0x20
   \       0x38   0x20 0x20          DC8 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20

   \              0x20 0x20    

   \              0x20 0x20    

   \              0x20 0x20
   \       0x40   0x20 0x20          DC8 0x20, 0x20, 0x20, 0x20, 0x2A, 0x0A, 0

   \              0x20 0x20    

   \              0x2A 0x0A    

   \              0x00
   \       0x47                      DS8 1

   \                                 In section .rodata, align 4
   \                     ?_27:
   \        0x0   0x20 0x20          DC8 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x2A

   \              0x20 0x20    

   \              0x20 0x20    

   \              0x20 0x2A
   \        0x8   0x20 0x20          DC8 0x20, 0x20, 0x65, 0x20, 0x3A, 0x20, 0x45, 0x6E

   \              0x65 0x20    

   \              0x3A 0x20    

   \              0x45 0x6E
   \       0x10   0x61 0x62          DC8 0x61, 0x62, 0x6C, 0x65, 0x20, 0x44, 0x65, 0x62

   \              0x6C 0x65    

   \              0x20 0x44    

   \              0x65 0x62
   \       0x18   0x75 0x67          DC8 0x75, 0x67, 0x20, 0x53, 0x50, 0x49, 0x20, 0x20

   \              0x20 0x53    

   \              0x50 0x49    

   \              0x20 0x20
   \       0x20   0x20 0x20          DC8 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20

   \              0x20 0x20    

   \              0x20 0x20    

   \              0x20 0x20
   \       0x28   0x20 0x20          DC8 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20

   \              0x20 0x20    

   \              0x20 0x20    

   \              0x20 0x20
   \       0x30   0x20 0x20          DC8 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20

   \              0x20 0x20    

   \              0x20 0x20    

   \              0x20 0x20
   \       0x38   0x20 0x20          DC8 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20

   \              0x20 0x20    

   \              0x20 0x20    

   \              0x20 0x20
   \       0x40   0x20 0x20          DC8 0x20, 0x20, 0x20, 0x20, 0x2A, 0x0A, 0

   \              0x20 0x20    

   \              0x2A 0x0A    

   \              0x00
   \       0x47                      DS8 1

   \                                 In section .rodata, align 4
   \                     ?_28:
   \        0x0   0x20 0x20          DC8 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x2A

   \              0x20 0x20    

   \              0x20 0x20    

   \              0x20 0x2A
   \        0x8   0x20 0x20          DC8 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20

   \              0x20 0x20    

   \              0x20 0x20    

   \              0x20 0x20
   \       0x10   0x20 0x20          DC8 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20

   \              0x20 0x20    

   \              0x20 0x20    

   \              0x20 0x20
   \       0x18   0x20 0x20          DC8 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20

   \              0x20 0x20    

   \              0x20 0x20    

   \              0x20 0x20
   \       0x20   0x20 0x52          DC8 0x20, 0x52, 0x46, 0x20, 0x54, 0x65, 0x73, 0x74

   \              0x46 0x20    

   \              0x54 0x65    

   \              0x73 0x74
   \       0x28   0x2E 0x20          DC8 0x2E, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20

   \              0x20 0x20    

   \              0x20 0x20    

   \              0x20 0x20
   \       0x30   0x20 0x20          DC8 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20

   \              0x20 0x20    

   \              0x20 0x20    

   \              0x20 0x20
   \       0x38   0x20 0x20          DC8 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20

   \              0x20 0x20    

   \              0x20 0x20    

   \              0x20 0x20
   \       0x40   0x20 0x20          DC8 0x20, 0x20, 0x20, 0x20, 0x2A, 0x0A, 0

   \              0x20 0x20    

   \              0x2A 0x0A    

   \              0x00
   \       0x47                      DS8 1

   \                                 In section .rodata, align 4
   \                     ?_29:
   \        0x0   0x20 0x20          DC8 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x2A

   \              0x20 0x20    

   \              0x20 0x20    

   \              0x20 0x2A
   \        0x8   0x20 0x20          DC8 0x20, 0x20, 0x30, 0x20, 0x3A, 0x20, 0x52, 0x46

   \              0x30 0x20    

   \              0x3A 0x20    

   \              0x52 0x46
   \       0x10   0x2D 0x49          DC8 0x2D, 0x49, 0x43, 0x20, 0x49, 0x6E, 0x66, 0x6F

   \              0x43 0x20    

   \              0x49 0x6E    

   \              0x66 0x6F
   \       0x18   0x20 0x20          DC8 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20

   \              0x20 0x20    

   \              0x20 0x20    

   \              0x20 0x20
   \       0x20   0x20 0x20          DC8 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20

   \              0x20 0x20    

   \              0x20 0x20    

   \              0x20 0x20
   \       0x28   0x20 0x20          DC8 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20

   \              0x20 0x20    

   \              0x20 0x20    

   \              0x20 0x20
   \       0x30   0x20 0x20          DC8 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20

   \              0x20 0x20    

   \              0x20 0x20    

   \              0x20 0x20
   \       0x38   0x20 0x20          DC8 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20

   \              0x20 0x20    

   \              0x20 0x20    

   \              0x20 0x20
   \       0x40   0x20 0x20          DC8 0x20, 0x20, 0x20, 0x20, 0x2A, 0x0A, 0

   \              0x20 0x20    

   \              0x2A 0x0A    

   \              0x00
   \       0x47                      DS8 1

   \                                 In section .rodata, align 4
   \                     ?_30:
   \        0x0   0x20 0x20          DC8 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x2A

   \              0x20 0x20    

   \              0x20 0x20    

   \              0x20 0x2A
   \        0x8   0x20 0x20          DC8 0x20, 0x20, 0x31, 0x20, 0x3A, 0x20, 0x52, 0x46

   \              0x31 0x20    

   \              0x3A 0x20    

   \              0x52 0x46
   \       0x10   0x20 0x54          DC8 0x20, 0x54, 0x78, 0x2E, 0x20, 0x20, 0x20, 0x20

   \              0x78 0x2E    

   \              0x20 0x20    

   \              0x20 0x20
   \       0x18   0x20 0x20          DC8 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20

   \              0x20 0x20    

   \              0x20 0x20    

   \              0x20 0x20
   \       0x20   0x20 0x20          DC8 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20

   \              0x20 0x20    

   \              0x20 0x20    

   \              0x20 0x20
   \       0x28   0x20 0x20          DC8 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20

   \              0x20 0x20    

   \              0x20 0x20    

   \              0x20 0x20
   \       0x30   0x20 0x20          DC8 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20

   \              0x20 0x20    

   \              0x20 0x20    

   \              0x20 0x20
   \       0x38   0x20 0x20          DC8 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20

   \              0x20 0x20    

   \              0x20 0x20    

   \              0x20 0x20
   \       0x40   0x20 0x20          DC8 0x20, 0x20, 0x20, 0x20, 0x2A, 0x0A, 0

   \              0x20 0x20    

   \              0x2A 0x0A    

   \              0x00
   \       0x47                      DS8 1

   \                                 In section .rodata, align 4
   \                     ?_31:
   \        0x0   0x20 0x20          DC8 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x2A

   \              0x20 0x20    

   \              0x20 0x20    

   \              0x20 0x2A
   \        0x8   0x20 0x20          DC8 0x20, 0x20, 0x32, 0x20, 0x3A, 0x20, 0x52, 0x46

   \              0x32 0x20    

   \              0x3A 0x20    

   \              0x52 0x46
   \       0x10   0x20 0x52          DC8 0x20, 0x52, 0x78, 0x2E, 0x20, 0x20, 0x20, 0x20

   \              0x78 0x2E    

   \              0x20 0x20    

   \              0x20 0x20
   \       0x18   0x20 0x20          DC8 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20

   \              0x20 0x20    

   \              0x20 0x20    

   \              0x20 0x20
   \       0x20   0x20 0x20          DC8 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20

   \              0x20 0x20    

   \              0x20 0x20    

   \              0x20 0x20
   \       0x28   0x20 0x20          DC8 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20

   \              0x20 0x20    

   \              0x20 0x20    

   \              0x20 0x20
   \       0x30   0x20 0x20          DC8 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20

   \              0x20 0x20    

   \              0x20 0x20    

   \              0x20 0x20
   \       0x38   0x20 0x20          DC8 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20

   \              0x20 0x20    

   \              0x20 0x20    

   \              0x20 0x20
   \       0x40   0x20 0x20          DC8 0x20, 0x20, 0x20, 0x20, 0x2A, 0x0A, 0

   \              0x20 0x20    

   \              0x2A 0x0A    

   \              0x00
   \       0x47                      DS8 1

   \                                 In section .rodata, align 4
   \                     ?_32:
   \        0x0   0x20 0x20          DC8 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x2A

   \              0x20 0x20    

   \              0x20 0x20    

   \              0x20 0x2A
   \        0x8   0x20 0x20          DC8 0x20, 0x20, 0x33, 0x20, 0x3A, 0x20, 0x52, 0x46

   \              0x33 0x20    

   \              0x3A 0x20    

   \              0x52 0x46
   \       0x10   0x20 0x54          DC8 0x20, 0x54, 0x78, 0x2D, 0x3E, 0x52, 0x78, 0x20

   \              0x78 0x2D    

   \              0x3E 0x52    

   \              0x78 0x20
   \       0x18   0x4C 0x6F          DC8 0x4C, 0x6F, 0x6F, 0x70, 0x62, 0x61, 0x63, 0x6B

   \              0x6F 0x70    

   \              0x62 0x61    

   \              0x63 0x6B
   \       0x20   0x20 0x20          DC8 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20

   \              0x20 0x20    

   \              0x20 0x20    

   \              0x20 0x20
   \       0x28   0x20 0x20          DC8 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20

   \              0x20 0x20    

   \              0x20 0x20    

   \              0x20 0x20
   \       0x30   0x20 0x20          DC8 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20

   \              0x20 0x20    

   \              0x20 0x20    

   \              0x20 0x20
   \       0x38   0x20 0x20          DC8 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20

   \              0x20 0x20    

   \              0x20 0x20    

   \              0x20 0x20
   \       0x40   0x20 0x20          DC8 0x20, 0x20, 0x20, 0x20, 0x2A, 0x0A, 0

   \              0x20 0x20    

   \              0x2A 0x0A    

   \              0x00
   \       0x47                      DS8 1

   \                                 In section .rodata, align 4
   \                     ?_33:
   \        0x0   0x20 0x20          DC8 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x2A

   \              0x20 0x20    

   \              0x20 0x20    

   \              0x20 0x2A
   \        0x8   0x20 0x20          DC8 0x20, 0x20, 0x69, 0x20, 0x3A, 0x20, 0x52, 0x46

   \              0x69 0x20    

   \              0x3A 0x20    

   \              0x52 0x46
   \       0x10   0x2D 0x49          DC8 0x2D, 0x49, 0x6E, 0x69, 0x74, 0x20, 0x20, 0x20

   \              0x6E 0x69    

   \              0x74 0x20    

   \              0x20 0x20
   \       0x18   0x20 0x20          DC8 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20

   \              0x20 0x20    

   \              0x20 0x20    

   \              0x20 0x20
   \       0x20   0x20 0x20          DC8 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20

   \              0x20 0x20    

   \              0x20 0x20    

   \              0x20 0x20
   \       0x28   0x20 0x20          DC8 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20

   \              0x20 0x20    

   \              0x20 0x20    

   \              0x20 0x20
   \       0x30   0x20 0x20          DC8 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20

   \              0x20 0x20    

   \              0x20 0x20    

   \              0x20 0x20
   \       0x38   0x20 0x20          DC8 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20

   \              0x20 0x20    

   \              0x20 0x20    

   \              0x20 0x20
   \       0x40   0x20 0x20          DC8 0x20, 0x20, 0x20, 0x20, 0x2A, 0x0A, 0

   \              0x20 0x20    

   \              0x2A 0x0A    

   \              0x00
   \       0x47                      DS8 1

   \                                 In section .rodata, align 4
   \                     ?_34:
   \        0x0   0x20 0x20          DC8 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x2A

   \              0x20 0x20    

   \              0x20 0x20    

   \              0x20 0x2A
   \        0x8   0x20 0x20          DC8 0x20, 0x20, 0x76, 0x20, 0x3A, 0x20, 0x56, 0x65

   \              0x76 0x20    

   \              0x3A 0x20    

   \              0x56 0x65
   \       0x10   0x72 0x69          DC8 0x72, 0x69, 0x66, 0x79, 0x20, 0x52, 0x46, 0x2D

   \              0x66 0x79    

   \              0x20 0x52    

   \              0x46 0x2D
   \       0x18   0x49 0x6E          DC8 0x49, 0x6E, 0x69, 0x74, 0x20, 0x20, 0x20, 0x20

   \              0x69 0x74    

   \              0x20 0x20    

   \              0x20 0x20
   \       0x20   0x20 0x20          DC8 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20

   \              0x20 0x20    

   \              0x20 0x20    

   \              0x20 0x20
   \       0x28   0x20 0x20          DC8 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20

   \              0x20 0x20    

   \              0x20 0x20    

   \              0x20 0x20
   \       0x30   0x20 0x20          DC8 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20

   \              0x20 0x20    

   \              0x20 0x20    

   \              0x20 0x20
   \       0x38   0x20 0x20          DC8 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20

   \              0x20 0x20    

   \              0x20 0x20    

   \              0x20 0x20
   \       0x40   0x20 0x20          DC8 0x20, 0x20, 0x20, 0x20, 0x2A, 0x0A, 0

   \              0x20 0x20    

   \              0x2A 0x0A    

   \              0x00
   \       0x47                      DS8 1

   \                                 In section .rodata, align 4
   \                     ?_35:
   \        0x0   0x20 0x20          DC8 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x2A

   \              0x20 0x20    

   \              0x20 0x20    

   \              0x20 0x2A
   \        0x8   0x20 0x20          DC8 0x20, 0x20, 0x64, 0x20, 0x3A, 0x20, 0x45, 0x6E

   \              0x64 0x20    

   \              0x3A 0x20    

   \              0x45 0x6E
   \       0x10   0x61 0x62          DC8 0x61, 0x62, 0x6C, 0x65, 0x20, 0x44, 0x65, 0x62

   \              0x6C 0x65    

   \              0x20 0x44    

   \              0x65 0x62
   \       0x18   0x75 0x67          DC8 0x75, 0x67, 0x20, 0x53, 0x50, 0x49, 0x20, 0x20

   \              0x20 0x53    

   \              0x50 0x49    

   \              0x20 0x20
   \       0x20   0x20 0x20          DC8 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20

   \              0x20 0x20    

   \              0x20 0x20    

   \              0x20 0x20
   \       0x28   0x20 0x20          DC8 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20

   \              0x20 0x20    

   \              0x20 0x20    

   \              0x20 0x20
   \       0x30   0x20 0x20          DC8 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20

   \              0x20 0x20    

   \              0x20 0x20    

   \              0x20 0x20
   \       0x38   0x20 0x20          DC8 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20

   \              0x20 0x20    

   \              0x20 0x20    

   \              0x20 0x20
   \       0x40   0x20 0x20          DC8 0x20, 0x20, 0x20, 0x20, 0x2A, 0x0A, 0

   \              0x20 0x20    

   \              0x2A 0x0A    

   \              0x00
   \       0x47                      DS8 1

   \                                 In section .rodata, align 4
   \                     ?_36:
   \        0x0   0x25 0x73          DC8 "%s(%d)\012"

   \              0x28 0x25    

   \              0x64 0x29    

   \              0x0A 0x00

   \                                 In section .rodata, align 4
   \                     ?_37:
   \        0x0   0x73 0x70          DC8 "spi test\012"

   \              0x69 0x20    

   \              0x74 0x65    

   \              0x73 0x74    

   \              0x0A 0x00
   \        0xA                      DS8 2

   \                                 In section .rodata, align 4
   \                     ?_38:
   \        0x0   0x61 0x75          DC8 "audio tx sine.\012"

   \              0x64 0x69    

   \              0x6F 0x20    

   \              0x74 0x78    

   \              0x20 0x73    

   \              0x69 0x6E    

   \              0x65 0x2E    

   \              0x0A 0x00

   \                                 In section .rodata, align 4
   \                     ?_39:
   \        0x0   0x61 0x75          DC8 "audio tx null.\012"

   \              0x64 0x69    

   \              0x6F 0x20    

   \              0x74 0x78    

   \              0x20 0x6E    

   \              0x75 0x6C    

   \              0x6C 0x2E    

   \              0x0A 0x00

   \                                 In section .rodata, align 2
   \        0x0   0x5B 0x00          DC8 "["

   \                                 In section .rodata, align 4
   \                     ?_41:
   \        0x0   0x25 0x30          DC8 "%02X:"

   \              0x32 0x58    

   \              0x3A 0x00
   \        0x6                      DS8 2

   \                                 In section .rodata, align 4
   \                     ?_42:
   \        0x0   0x25 0x30          DC8 "%02X]\015\012"

   \              0x32 0x58    

   \              0x5D 0x0D    

   \              0x0A 0x00

   \                                 In section .rodata, align 4
   \                     ?_43:
   \        0x0   0x25 0x30          DC8 "%08p - %02x "

   \              0x38 0x70    

   \              0x20 0x2D    

   \              0x20 0x25    

   \              0x30 0x32    

   \              0x78 0x20    

   \              0x00
   \        0xD                      DS8 3

   \                                 In section .rodata, align 4
   \                     ?_44:
   \        0x0   0x25 0x30          DC8 "%08p - %04x "

   \              0x38 0x70    

   \              0x20 0x2D    

   \              0x20 0x25    

   \              0x30 0x34    

   \              0x78 0x20    

   \              0x00
   \        0xD                      DS8 3

   \                                 In section .rodata, align 4
   \                     ?_45:
   \        0x0   0x25 0x30          DC8 "%08p - %08x "

   \              0x38 0x70    

   \              0x20 0x2D    

   \              0x20 0x25    

   \              0x30 0x38    

   \              0x78 0x20    

   \              0x00
   \        0xD                      DS8 3

   \                                 In section .rodata, align 4
   \                     ?_46:
   \        0x0   0x63 0x75          DC8 "current debug level = 0x%x\012"

   \              0x72 0x72    

   \              0x65 0x6E    

   \              0x74 0x20    

   \              0x64 0x65    

   \              0x62 0x75    

   \              0x67 0x20    

   \              0x6C 0x65    

   \              0x76 0x65    

   \              0x6C 0x20    

   \              0x3D 0x20    

   \              0x30 0x78    

   \              0x25 0x78    

   \              0x0A 0x00

   \                                 In section .rodata, align 4
   \                     ?_47:
   \        0x0   0x64 0x65          DC8 "debug level = 0x%x\012"

   \              0x62 0x75    

   \              0x67 0x20    

   \              0x6C 0x65    

   \              0x76 0x65    

   \              0x6C 0x20    

   \              0x3D 0x20    

   \              0x30 0x78    

   \              0x25 0x78    

   \              0x0A 0x00

   \                                 In section .rodata, align 4
   \        0x0   0x2D 0x6C          DC8 "-l"

   \              0x00
   \        0x3                      DS8 1

   \                                 In section .rodata, align 4
   \                     ?_49:
   \        0x0   0x61 0x64          DC8 "addr 0x%08x, value 0x%02x\015"

   \              0x64 0x72    

   \              0x20 0x30    

   \              0x78 0x25    

   \              0x30 0x38    

   \              0x78 0x2C    

   \              0x20 0x76    

   \              0x61 0x6C    

   \              0x75 0x65    

   \              0x20 0x30    

   \              0x78 0x25    

   \              0x30 0x32    

   \              0x78 0x0D    

   \              0x00
   \       0x1B                      DS8 1

   \                                 In section .rodata, align 4
   \                     ?_50:
   \        0x0   0x61 0x64          DC8 "addr 0x%08x, value 0x%04x\015"

   \              0x64 0x72    

   \              0x20 0x30    

   \              0x78 0x25    

   \              0x30 0x38    

   \              0x78 0x2C    

   \              0x20 0x76    

   \              0x61 0x6C    

   \              0x75 0x65    

   \              0x20 0x30    

   \              0x78 0x25    

   \              0x30 0x34    

   \              0x78 0x0D    

   \              0x00
   \       0x1B                      DS8 1

   \                                 In section .rodata, align 4
   \                     ?_51:
   \        0x0   0x61 0x64          DC8 "addr 0x%08x, value 0x%08x\015"

   \              0x64 0x72    

   \              0x20 0x30    

   \              0x78 0x25    

   \              0x30 0x38    

   \              0x78 0x2C    

   \              0x20 0x76    

   \              0x61 0x6C    

   \              0x75 0x65    

   \              0x20 0x30    

   \              0x78 0x25    

   \              0x30 0x38    

   \              0x78 0x0D    

   \              0x00
   \       0x1B                      DS8 1

   \                                 In section .rodata, align 4
   \        0x0   0x25 0x78          DC8 "%x"

   \              0x00
   \        0x3                      DS8 1

   Maximum stack usage in bytes:

   .cstack Function
   ------- --------
       0   GetDbg
      16   cmd_debug
        16   -> a2hex
        16   -> printf
      16   cmd_diag
        16   -> SetCLIProc
        16   -> SetCLIPrompt
      16   cmd_diag_Audio
        16   -> SetCLIProc
        16   -> SetCLIPrompt
      16   cmd_diag_RF
        16   -> SetCLIProc
        16   -> SetCLIPrompt
      16   cmd_diag_proc
        16   -> SetCLIProc
        16   -> SetCLIPrompt
        16   -> cmd_diag_Audio
        16   -> cmd_diag_RF
      16   cmd_diag_proc_Audio
        16   -> cmd_diag
      16   cmd_diag_proc_RF
        16   -> cmd_diag
        16   -> cmd_rfwds_init
      16   cmd_do
        16   -> sscanf
      24   cmd_md
        24   -> a2hex
        24   -> dump
      16   cmd_mm
        16   -> a2hex
        16   -> memory_modify
      32   cmd_rd
        32   -> HAL_Delay
        32   -> a2hex
        32   -> input_check
        32   -> printf
        32   -> strcmp
      16   cmd_rfwds1
        16   -> printf
      16   cmd_rfwds2
        16   -> printf
      16   cmd_rfwds3
        16   -> printf
      16   cmd_rfwds_debug
        16   -> printf
      16   cmd_rfwds_info
        16   -> printf
        16   -> si446x_part_info
      16   cmd_rfwds_init
        16   -> printf
        16   -> vRadio_Init
      16   cmd_test
        16   -> printf
      16   cmd_test1
        16   -> AudioLoopback
        16   -> printf
      16   cmd_test2
        16   -> printf
        16   -> spi_test
      16   cmd_test3
        16   -> InitCodecXE3005
        16   -> printf
      16   cmd_test4
        16   -> AudioSine
        16   -> printf
      16   cmd_test5
        16   -> AudioTxStop
        16   -> printf
      32   cmd_wr
        32   -> HAL_Delay
        32   -> a2hex
        32   -> input_check
        32   -> printf
        32   -> strcmp
      16   display_diag_Audio
        16   -> printf
      16   display_diag_RF
        16   -> printf
      16   display_diag_menu
        16   -> printf
     168   memory_modify
       168   -> a2hex
       168   -> printf
       168   -> readline


   Section sizes:

   Bytes  Function/Label
   -----  --------------
       4  ??DataTable16
       4  ??DataTable22
       4  ??DataTable26
       4  ??DataTable26_1
       4  ??DataTable26_10
       4  ??DataTable26_11
       4  ??DataTable26_12
       4  ??DataTable26_13
       4  ??DataTable26_14
       4  ??DataTable26_15
       4  ??DataTable26_16
       4  ??DataTable26_17
       4  ??DataTable26_18
       4  ??DataTable26_19
       4  ??DataTable26_2
       4  ??DataTable26_20
       4  ??DataTable26_21
       4  ??DataTable26_22
       4  ??DataTable26_23
       4  ??DataTable26_24
       4  ??DataTable26_25
       4  ??DataTable26_26
       4  ??DataTable26_27
       4  ??DataTable26_28
       4  ??DataTable26_29
       4  ??DataTable26_3
       4  ??DataTable26_30
       4  ??DataTable26_31
       4  ??DataTable26_32
       4  ??DataTable26_33
       4  ??DataTable26_34
       4  ??DataTable26_35
       4  ??DataTable26_36
       4  ??DataTable26_37
       4  ??DataTable26_38
       4  ??DataTable26_39
       4  ??DataTable26_4
       4  ??DataTable26_40
       4  ??DataTable26_41
       4  ??DataTable26_42
       4  ??DataTable26_43
       4  ??DataTable26_44
       4  ??DataTable26_45
       4  ??DataTable26_46
       4  ??DataTable26_47
       4  ??DataTable26_48
       4  ??DataTable26_49
       4  ??DataTable26_5
       4  ??DataTable26_50
       4  ??DataTable26_51
       4  ??DataTable26_52
       4  ??DataTable26_53
       4  ??DataTable26_54
       4  ??DataTable26_55
       4  ??DataTable26_56
       4  ??DataTable26_57
       4  ??DataTable26_58
       4  ??DataTable26_59
       4  ??DataTable26_6
       4  ??DataTable26_60
       4  ??DataTable26_61
       4  ??DataTable26_62
       4  ??DataTable26_63
       4  ??DataTable26_64
       4  ??DataTable26_65
       4  ??DataTable26_66
       4  ??DataTable26_67
       4  ??DataTable26_68
       4  ??DataTable26_69
       4  ??DataTable26_7
       4  ??DataTable26_70
       4  ??DataTable26_71
       4  ??DataTable26_72
       4  ??DataTable26_73
       4  ??DataTable26_74
       4  ??DataTable26_75
       4  ??DataTable26_76
       4  ??DataTable26_8
       4  ??DataTable26_9
       4  ??DataTable4
       8  ?_0
       8  ?_1
      72  ?_10
      60  ?_11
      72  ?_12
      72  ?_13
      72  ?_14
      72  ?_15
      72  ?_16
      72  ?_17
      72  ?_18
      72  ?_19
       2  ?_2
      72  ?_20
      72  ?_21
      72  ?_22
      72  ?_23
      72  ?_24
      72  ?_25
      72  ?_26
      72  ?_27
      72  ?_28
      72  ?_29
      72  ?_3
      72  ?_30
      72  ?_31
      72  ?_32
      72  ?_33
      72  ?_34
      72  ?_35
       8  ?_36
      12  ?_37
      16  ?_38
      16  ?_39
      72  ?_4
       2  ?_40
       8  ?_41
       8  ?_42
      16  ?_43
      16  ?_44
      16  ?_45
      28  ?_46
      20  ?_47
       4  ?_48
      28  ?_49
      72  ?_5
      28  ?_50
      28  ?_51
       4  ?_52
      72  ?_6
      72  ?_7
      72  ?_8
      72  ?_9
       8  GetDbg
      44  cmd_debug
      26  cmd_diag
      26  cmd_diag_Audio
      26  cmd_diag_RF
      72  cmd_diag_proc
      34  cmd_diag_proc_Audio
      50  cmd_diag_proc_RF
      28  cmd_do
      74  cmd_md
      48  cmd_mm
     164  cmd_rd
      26  cmd_rfwds1
      26  cmd_rfwds2
      26  cmd_rfwds3
      26  cmd_rfwds_debug
      86  cmd_rfwds_info
      30  cmd_rfwds_init
      20  cmd_test
      30  cmd_test1
      38  cmd_test2
      30  cmd_test3
      38  cmd_test4
      38  cmd_test5
     148  cmd_wr
       4  debug_level
     212  display_diag_Audio
     148  display_diag_RF
     144  display_diag_menu
       4  dumpsize
       4  mem_addr
     216  memory_modify
     156  -- Other

 
     8 bytes in section .bss
     4 bytes in section .data
 2'796 bytes in section .rodata
 2'202 bytes in section .text
 
 2'202 bytes of CODE  memory
 2'796 bytes of CONST memory
    12 bytes of DATA  memory

Errors: none
Warnings: 25
